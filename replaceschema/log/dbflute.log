2016-07-05 21:33:34,284 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():520) - ...Creating a connection for additional user: root
2016-07-05 21:33:34,296 [main] INFO  (DfCreateSchemaProcess$1#dispatch():321) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2016-07-05 21:33:34,296 [main] INFO  (DfCreateSchemaProcess$1#dispatch():323) -  -> Can't create database 'maihamadb'; database exists
2016-07-05 21:33:34,296 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():433) - ...Reviving the user 'system' until the end of this SQL file
2016-07-05 21:33:34,297 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on maihamadb.*
  to maihamadb@localhost identified by 'maihamadb'
2016-07-05 21:33:34,299 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2016-07-05 21:33:34,302 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-07-05 21:33:34,303 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-10-basic.sql
2016-07-05 21:33:34,303 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():370) - ...Saying good-bye to the user 'system' again
2016-07-05 21:33:34,304 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():374) - ...Clearing revived users
2016-07-05 21:33:34,305 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():381) - ...Coming back to the main user from the user 'system'
2016-07-05 21:33:34,308 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER(
    MEMBER_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員ID: 会員を識別するID。連番として基本的に自動採番される。
（会員IDだけに限らず）採番方法はDBMSによって変わる。',
    MEMBER_NAME VARCHAR(160) NOT NULL COMMENT '会員名称: 会員のフルネームの名称。',
    MEMBER_ACCOUNT VARCHAR(50) NOT NULL COMMENT '会員アカウント: 会員がログイン時に利用するアカウントNO。',
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード',
    FORMALIZED_DATETIME DATETIME COMMENT '正式会員日時: 会員が正式に確定した日時。一度確定したら更新されない。
仮会員のときはnull。',
    BIRTHDATE DATE COMMENT '生年月日: 必須項目ではないので、このデータがない会員もいる。',
    REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時: レコードが登録された日時。共通カラムの一つ。',
    REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ: レコードを登録したユーザ。共通カラムの一つ。',
    UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時: レコードが（最後に）更新された日時。共通カラムの一つ。',
    UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ: レコードを更新したユーザ。',
    VERSION_NO BIGINT NOT NULL COMMENT 'バージョンNO: レコードのバージョンを示すNO。
更新回数と等しく、主に排他制御のために利用される。',
    PRIMARY KEY (MEMBER_ID),
    UNIQUE (MEMBER_ACCOUNT)
) COMMENT='会員: 会員登録時にデータが登録される。
基本的に物理削除はなく、退会したらステータスが退会会員になる。'
2016-07-05 21:33:34,334 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_ADDRESS(
    MEMBER_ADDRESS_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員住所ID: 会員住所を識別するID。
履歴分も含むテーブルなので、これ自体はFKではない。',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
履歴分を含むため、これだけではユニークにはならない。',
    VALID_BEGIN_DATE DATE NOT NULL COMMENT '有効開始日: 一つの有効期間の開始を示す日付。
前の有効終了日の次の日の値が格納される。',
    VALID_END_DATE DATE NOT NULL COMMENT '有効終了日: 有効期間の終了日。
次の有効開始日の一日前の値が格納される。
ただし、次の有効期間がない場合は 9999/12/31 となる。',
    ADDRESS VARCHAR(200) NOT NULL COMMENT '住所: まるごと住所',
    REGION_ID INTEGER NOT NULL COMMENT '地域ID: 地域を参照するID。
ここでは特に住所の内容と連動しているわけではない。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ADDRESS_ID),
    UNIQUE (MEMBER_ID, VALID_BEGIN_DATE)
) COMMENT='会員住所情報: 会員の住所に関する情報。
同時に有効期間ごとに履歴管理されている。'
2016-07-05 21:33:34,349 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_LOGIN(
    MEMBER_LOGIN_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員ログインID',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID',
    LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時: ログインした瞬間の日時。',
    MOBILE_LOGIN_FLG INTEGER NOT NULL COMMENT 'モバイルログインフラグ: モバイル機器からのログインか否か。',
    LOGIN_MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT 'ログイン会員ステータスコード: ログイン時の会員ステータス',
    PRIMARY KEY (MEMBER_LOGIN_ID),
    UNIQUE (MEMBER_ID, LOGIN_DATETIME)
) COMMENT='会員ログイン情報: ログインするたびに登録されるログイン履歴。'
2016-07-05 21:33:34,359 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SECURITY(
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: そのまま one-to-one を構成するためのFKとなる。',
    LOGIN_PASSWORD VARCHAR(50) NOT NULL COMMENT 'ログインパスワード: ログイン時に利用するパスワード。
本当は良くないが、Exampleなのでひとまず暗号化していない。',
    REMINDER_QUESTION VARCHAR(50) NOT NULL COMMENT 'リマインダ質問: パスワードを忘れた際のリマインダ機能における質問の内容。',
    REMINDER_ANSWER VARCHAR(50) NOT NULL COMMENT 'リマインダ回答: パスワードを忘れた際のリマインダ機能における質問の答え。',
    REMINDER_USE_COUNT INTEGER NOT NULL COMMENT 'リマインダ回数: 忘れっぽい人を分析するためのもの。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある'
2016-07-05 21:33:34,369 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SERVICE(
	MEMBER_SERVICE_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員サービスID: 代理キー。律儀にIDの役割を分ける',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。ユニークなので、会員とは one-to-one の関係に。',
    SERVICE_POINT_COUNT INTEGER NOT NULL COMMENT 'サービスポイント数: 会員が現在利用できるサービスポイントの数。
基本的に、購入時には増えてポイントを使ったら減る。',
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを参照するコード。
どんなランクがあるのかドキドキですね。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_SERVICE_ID),
    UNIQUE (MEMBER_ID)
) COMMENT='会員サービス: 会員のサービス情報（ポイントサービスなど）。'
2016-07-05 21:33:34,427 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_WITHDRAWAL(
    MEMBER_ID INTEGER NOT NULL,
    WITHDRAWAL_REASON_CODE CHAR(3) COMMENT '退会理由コード: 退会した定型理由を参照するコード。
何も言わずに退会する会員もいるので必須項目ではない。',
    WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト: 会員がフリーテキストで入力できる退会理由。
もう言いたいこと言ってもらう感じ。',
    WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT '退会日時: 退会した瞬間の日時。
正式会員日時と違い、こっちはone-to-oneの別テーブルで。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員退会情報: 退会会員の退会に関する詳細な情報。
退会会員のみデータが存在する。'
2016-07-05 21:33:34,436 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE(
    PURCHASE_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入ID: 連番',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
購入を識別する自然キー（複合ユニーク制約）の筆頭要素。',
    PRODUCT_ID INTEGER NOT NULL COMMENT '商品ID: 商品を参照するID。',
    PURCHASE_DATETIME DATETIME NOT NULL COMMENT '購入日時: 購入した瞬間の日時。',
    PURCHASE_COUNT INTEGER NOT NULL COMMENT '購入数量: 購入した商品の（一回の購入における）数量。',
    PURCHASE_PRICE INTEGER NOT NULL COMMENT '購入価格: 購入によって実際に会員が支払った（支払う予定の）価格。
基本は商品の定価に購入数量を掛けたものになるが、
ポイント利用や割引があったりと必ずしもそうはならない。',
    PAYMENT_COMPLETE_FLG INTEGER NOT NULL COMMENT '支払完了フラグ: この購入に関しての支払いが完了しているか否か。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PURCHASE_ID),
    UNIQUE (MEMBER_ID, PRODUCT_ID, PURCHASE_DATETIME),
    KEY (MEMBER_ID),
    KEY (PRODUCT_ID)
) COMMENT='購入: 一つの商品に対する一回の購入を表現する。
一回の購入で一つの商品を複数個買うこともある。'
2016-07-05 21:33:34,448 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE_PAYMENT(
    PURCHASE_PAYMENT_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入支払ID: 連番',
    PURCHASE_ID BIGINT NOT NULL COMMENT '購入ID: 支払い対象の購入へのID',
    PAYMENT_AMOUNT DECIMAL(10,2) NOT NULL COMMENT '支払金額: 支払った金額。さて、小数点なのはなぜでしょう？',
    PAYMENT_DATETIME DATETIME NOT NULL COMMENT '支払日時: 支払ったときの日時',
    PAYMENT_METHOD_CODE CHAR(3) NOT NULL COMMENT '支払方法コード: 手渡しや銀行振込など',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (PURCHASE_PAYMENT_ID)
) COMMENT='購入支払: 購入に対する支払。
分割払いもできるのでmanyとなり、会員からの孫テーブルのテストができてうれしい。'
2016-07-05 21:33:34,466 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT(
    PRODUCT_ID INTEGER AUTO_INCREMENT NOT NULL,
    PRODUCT_NAME VARCHAR(50) NOT NULL COMMENT '商品名称',
    PRODUCT_HANDLE_CODE VARCHAR(100) NOT NULL COMMENT '商品ハンドルコード: 商品を識別する業務上のコード。',
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL,
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL,
    REGULAR_PRICE INTEGER NOT NULL COMMENT '定価',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PRODUCT_ID),
    UNIQUE (PRODUCT_HANDLE_CODE)
) COMMENT='商品'
2016-07-05 21:33:34,478 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_CATEGORY(
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL COMMENT '商品カテゴリコード',
    PRODUCT_CATEGORY_NAME VARCHAR(50) NOT NULL COMMENT '商品カテゴリ名称',
    PARENT_CATEGORY_CODE CHAR(3) COMMENT '親カテゴリコード: 最上位の場合はデータなし。',
    PRIMARY KEY (PRODUCT_CATEGORY_CODE)
) COMMENT='商品カテゴリ: 商品のカテゴリを表現するマスタ。
自己参照の階層になっている。'
2016-07-05 21:33:34,486 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_STATUS(
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL COMMENT '商品ステータスコード',
    PRODUCT_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '商品ステータス名称',
    PRIMARY KEY (PRODUCT_STATUS_CODE)
) COMMENT='商品ステータス'
2016-07-05 21:33:34,516 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table REGION(
    REGION_ID INTEGER NOT NULL COMMENT '地域ID',
    REGION_NAME VARCHAR(50) NOT NULL COMMENT '地域名称',
    PRIMARY KEY (REGION_ID)
) COMMENT='地域: 主に会員の住所に対応する地域。
かなりざっくりした感じではある。'
2016-07-05 21:33:34,532 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table SERVICE_RANK(
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを識別するコード。',
    SERVICE_RANK_NAME VARCHAR(50) NOT NULL COMMENT 'サービスランク名称: サービスランクの名称。
（ゴールドとかプラチナとか基本的には威厳のある名前）',
    SERVICE_POINT_INCIDENCE NUMERIC(5, 3) NOT NULL COMMENT 'サービスポイント発生率: 購入ごとのサービスポイントの発生率。
購入価格にこの値をかけた数が発生ポイント。',
    NEW_ACCEPTABLE_FLG INTEGER NOT NULL COMMENT '新規受け入れ可能フラグ: このランクへの新規受け入れができるかどうか。',
    DESCRIPTION VARCHAR(200) NOT NULL,
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (SERVICE_RANK_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='サービスランク: 会員のサービスレベルを表現するランク。
（ゴールドとかプラチナとか）'
2016-07-05 21:33:34,572 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_STATUS(
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード: 会員ステータスを識別するコード。',
    MEMBER_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '会員ステータス名称',
    DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明: 会員ステータスそれぞれの説明。
気の利いた説明があるとディベロッパーがとても助かる。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順: UI上のステータスの表示順を示すNO。
並べるときは、このカラムに対して昇順のソート条件にする。',
    PRIMARY KEY (MEMBER_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='会員ステータス'
2016-07-05 21:33:34,586 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table WITHDRAWAL_REASON(
    WITHDRAWAL_REASON_CODE CHAR(3) NOT NULL COMMENT '退会理由コード',
    WITHDRAWAL_REASON_TEXT TEXT NOT NULL COMMENT '退会理由テキスト: 退会理由の内容。テキスト形式なので目いっぱい書けるが、
そうするとUI側できれいに見せるのが大変でしょうね。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順',
    PRIMARY KEY (WITHDRAWAL_REASON_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='退会理由: 会員に選ばせる定型的な退会理由のマスタ。'
2016-07-05 21:33:34,596 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER add constraint FK_MEMBER_MEMBER_STATUS 
    foreign key (MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-07-05 21:33:34,611 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-05 21:33:34,632 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_REGION 
    foreign key (REGION_ID) references REGION (REGION_ID)
2016-07-05 21:33:34,653 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER_STATUS 
    foreign key (LOGIN_MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-07-05 21:33:34,673 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-05 21:33:34,695 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-05 21:33:34,723 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_SERVICE_RANK_CODE 
    foreign key (SERVICE_RANK_CODE) references SERVICE_RANK (SERVICE_RANK_CODE)
2016-07-05 21:33:34,742 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SECURITY add constraint FK_MEMBER_SECURITY_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-05 21:33:34,762 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-05 21:33:34,784 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON 
    foreign key (WITHDRAWAL_REASON_CODE) references WITHDRAWAL_REASON (WITHDRAWAL_REASON_CODE)
2016-07-05 21:33:34,817 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-05 21:33:34,847 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_PRODUCT 
    foreign key (PRODUCT_ID) references PRODUCT (PRODUCT_ID)
2016-07-05 21:33:34,879 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE_PAYMENT add constraint FK_PURCHASE_PAYMENT_PURCHASE 
    foreign key (PURCHASE_ID) references PURCHASE (PURCHASE_ID)
2016-07-05 21:33:34,903 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_CATEGORY 
    foreign key (PRODUCT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-07-05 21:33:34,924 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_STATUS 
    foreign key (PRODUCT_STATUS_CODE) references PRODUCT_STATUS (PRODUCT_STATUS_CODE)
2016-07-05 21:33:34,947 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT_CATEGORY add constraint FK_PRODUCT_CATEGORY_PARENT 
    foreign key (PARENT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-07-05 21:33:34,975 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_MEMBER_NAME on MEMBER(MEMBER_NAME)
2016-07-05 21:33:34,997 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FORMALIZED_DATETIME on MEMBER(FORMALIZED_DATETIME)
2016-07-05 21:33:35,018 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_LOGIN_DATETIME on MEMBER_LOGIN(LOGIN_DATETIME)
2016-07-05 21:33:35,040 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_SERVICE_POINT_COUNT on MEMBER_SERVICE(SERVICE_POINT_COUNT)
2016-07-05 21:33:35,057 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRODUCT_DATETIME on PURCHASE(PRODUCT_ID, PURCHASE_DATETIME)
2016-07-05 21:33:35,077 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_DATETIME_MEMBER on PURCHASE(PURCHASE_DATETIME, MEMBER_ID)
2016-07-05 21:33:35,097 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRICE on PURCHASE(PURCHASE_PRICE)
2016-07-05 21:33:35,120 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PAYMENT_DATETIME on PURCHASE_PAYMENT(PAYMENT_DATETIME, PAYMENT_AMOUNT)
2016-07-05 21:33:35,139 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PRODUCT_PRODUCT_NAME on PRODUCT(PRODUCT_NAME)
2016-07-05 21:33:35,159 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=40 failure=0
2016-07-05 21:33:35,160 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-50-procedure.sql
2016-07-05 21:33:35,160 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_IN_OUT_PARAMETER(
	in v_in_varchar varchar(32)
	, out v_out_varchar varchar(32)
	, inout v_inout_varchar varchar(32)
)
begin
	set v_out_varchar = v_inout_varchar;
	set v_inout_varchar = v_in_varchar;
end;

2016-07-05 21:33:35,162 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_RETURN_RESULT_SET(in birthdateFrom DATE)
begin
  select MEMBER_NAME, BIRTHDATE, MEMBER_STATUS_CODE
    from MEMBER
   where BIRTHDATE >= birthdateFrom
   order by BIRTHDATE desc, MEMBER_ID asc;
  select MEMBER_STATUS_CODE, MEMBER_STATUS_NAME
    from MEMBER_STATUS
   order by DISPLAY_ORDER;
end;

2016-07-05 21:33:35,163 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-07-05 21:33:35,163 [main] INFO  (DfSqlFileFireMan#fire():89) - {Create Schema}: success=44 failure=0 (in 3 files)
2016-07-05 21:33:35,163 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():564) - ...Closing connections to change-users: [system]
2016-07-05 21:33:35,164 [main] INFO  (DfLoadDataProcess#execute():129) - 
2016-07-05 21:33:35,164 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2016-07-05 21:33:35,164 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2016-07-05 21:33:35,164 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2016-07-05 21:33:35,165 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2016-07-05 21:33:35,165 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2016-07-05 21:33:35,166 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-05 21:33:35,166 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/migration/previous/data/common/xls/10-master.xls)
2016-07-05 21:33:35,166 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-05 21:33:35,175 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-05 21:33:35,176 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-05 21:33:35,176 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-05 21:33:35,195 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{PRV, 仮会員, 入会直後のステータスで一部のサイトサービスが利用可能, 3}
2016-07-05 21:33:35,196 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{FML, 正式会員, 正式な会員としてサイトサービスが利用可能, 1}
2016-07-05 21:33:35,196 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{WDL, 退会会員, 退会が確定した会員でサイトサービスはダメ, 2}
2016-07-05 21:33:35,196 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():212) - ...Skipping the terminal garbage row
2016-07-05 21:33:35,199 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to MEMBER_STATUS
2016-07-05 21:33:35,200 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{1, アメリカ}
2016-07-05 21:33:35,201 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{2, カナダ}
2016-07-05 21:33:35,201 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{3, 中国}
2016-07-05 21:33:35,201 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{4, 千葉}
2016-07-05 21:33:35,206 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to REGION
2016-07-05 21:33:35,207 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLT, PLATINUM, 12.3, 1, platinum rank, 1}
2016-07-05 21:33:35,208 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{GLD, GOLD, 9.2, 1, gold rank, 2}
2016-07-05 21:33:35,209 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{SIL, SILVER, 6.74, 1, silver rank, 3}
2016-07-05 21:33:35,209 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{BRZ, BRONZE, 2, 1, bronze rank, 4}
2016-07-05 21:33:35,209 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLS, PLASTIC, 0.1, 0, plastic rank, 5}
2016-07-05 21:33:35,213 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to SERVICE_RANK
2016-07-05 21:33:35,214 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{SIT, サイトが使いにくいから, 1}
2016-07-05 21:33:35,214 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{OTH, その他理由, 4}
2016-07-05 21:33:35,214 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{FRT, フリテンだから, 3}
2016-07-05 21:33:35,215 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{PRD, 商品に魅力がないから, 2}
2016-07-05 21:33:35,218 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to WITHDRAWAL_REASON
2016-07-05 21:33:35,219 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MSC, 音楽, null}
2016-07-05 21:33:35,219 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{FOD, 食品, null}
2016-07-05 21:33:35,219 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MCD, 音楽CD, MSC}
2016-07-05 21:33:35,220 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{INS, 楽器, MSC}
2016-07-05 21:33:35,227 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{HEB, ハーブ, FOD}
2016-07-05 21:33:35,231 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to PRODUCT_CATEGORY
2016-07-05 21:33:35,232 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{ONS, 生産販売可能}
2016-07-05 21:33:35,232 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{PST, 生産中止}
2016-07-05 21:33:35,233 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{SST, 販売中止}
2016-07-05 21:33:35,236 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to PRODUCT_STATUS
2016-07-05 21:33:35,239 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-05 21:33:35,239 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/migration/previous/data/ut/xls/20-member.xls)
2016-07-05 21:33:35,240 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-05 21:33:35,288 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{1, Stojkovic, Pixy, FML, 2007/12/01 11:01:10, 1965/03/03, 2016-07-05 21:33:35.288, foo, 2016-07-05 21:33:35.288, foo, 0}
2016-07-05 21:33:35,291 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{2, Savicevic, Genius, PRV, null, 1966/09/15, 2016-07-05 21:33:35.291, foo, 2016-07-05 21:33:35.291, foo, 0}
2016-07-05 21:33:35,292 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{3, Mijatovic, Mijato, WDL, 2005/10/03 13:03:30, null, 2016-07-05 21:33:35.292, foo, 2016-07-05 21:33:35.292, foo, 0}
2016-07-05 21:33:35,292 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{4, Stankovic, Stanko, FML, 2006/09/04 14:04:40, 1978/09/11, 2016-07-05 21:33:35.292, foo, 2016-07-05 21:33:35.292, foo, 0}
2016-07-05 21:33:35,293 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{5, Milosevic, Milose, FML, 2007/08/05 15:05:50, null, 2016-07-05 21:33:35.293, foo, 2016-07-05 21:33:35.293, foo, 0}
2016-07-05 21:33:35,294 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{6, Mihajlovic, FreeKick, WDL, 2006/07/06 16:06:40, 1969/02/20, 2016-07-05 21:33:35.294, foo, 2016-07-05 21:33:35.294, foo, 0}
2016-07-05 21:33:35,294 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{7, アカギ, Akagi, FML, 2005/06/07 17:07:30, null, 2016-07-05 21:33:35.294, foo, 2016-07-05 21:33:35.294, foo, 0}
2016-07-05 21:33:35,295 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{8, Kezman, RedCard, FML, 2006/05/08 18:08:20, null, 2016-07-05 21:33:35.295, foo, 2016-07-05 21:33:35.295, foo, 0}
2016-07-05 21:33:35,295 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{9, Maslovar, JEFUnited, FML, 2007/12/31 00:00:00, 1967/02/20, 2016-07-05 21:33:35.295, foo, 2016-07-05 21:33:35.295, foo, 0}
2016-07-05 21:33:35,296 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{10, 諸葛亮孔明, ShokatsuGoGo, PRV, null, null, 2016-07-05 21:33:35.296, foo, 2016-07-05 21:33:35.296, foo, 0}
2016-07-05 21:33:35,296 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{11, Boban, Boban, FML, 2007/12/01 11:01:10, 1968/10/08, 2016-07-05 21:33:35.296, foo, 2016-07-05 21:33:35.296, foo, 0}
2016-07-05 21:33:35,311 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{12, Suker, Suker, PRV, null, 1968/01/01, 2016-07-05 21:33:35.311, foo, 2016-07-05 21:33:35.311, foo, 0}
2016-07-05 21:33:35,312 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{13, Jarni, Jarni, WDL, 2005/10/03 13:03:30, 1968/10/26, 2016-07-05 21:33:35.312, foo, 2016-07-05 21:33:35.312, foo, 0}
2016-07-05 21:33:35,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{14, Boksic, Boksic, FML, 2006/09/04 14:04:40, 1970/01/21, 2016-07-05 21:33:35.313, foo, 2016-07-05 21:33:35.313, foo, 0}
2016-07-05 21:33:35,314 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{15, Prosinecki, Prosinecki, FML, 2004/08/05 15:05:50, 1969/01/12, 2016-07-05 21:33:35.314, foo, 2016-07-05 21:33:35.314, foo, 0}
2016-07-05 21:33:35,315 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{16, RobeltKovac, RobeltKovac, WDL, 2006/07/06 16:06:40, null, 2016-07-05 21:33:35.315, foo, 2016-07-05 21:33:35.315, foo, 0}
2016-07-05 21:33:35,316 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{17, NikoKovac, NikoKovac, FML, 2005/06/07 17:07:30, null, 2016-07-05 21:33:35.316, foo, 2016-07-05 21:33:35.316, foo, 0}
2016-07-05 21:33:35,316 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{18, Jovanovic, Jovano, FML, 2006/05/08 18:08:20, 1981/04/18, 2016-07-05 21:33:35.316, foo, 2016-07-05 21:33:35.316, foo, 0}
2016-07-05 21:33:35,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{19, Milko, Milko, FML, 2005/12/31 12:34:56, 1974/09/10, 2016-07-05 21:33:35.317, foo, 2016-07-05 21:33:35.317, foo, 0}
2016-07-05 21:33:35,319 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{20, 諸葛瑾子瑜, ShokatsuKinKin, FML, 2001/12/31 23:59:59, null, 2016-07-05 21:33:35.319, foo, 2016-07-05 21:33:35.319, foo, 0}
2016-07-05 21:33:35,332 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER
2016-07-05 21:33:35,333 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{1, 1, 2007/03/24, 2015/12/31, Nagara, 4, 2016-07-05 21:33:35.333, foo, 2016-07-05 21:33:35.333, foo, 0}
2016-07-05 21:33:35,334 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{2, 1, 1949/01/01, 1997/03/31, New York, 1, 2016-07-05 21:33:35.334, foo, 2016-07-05 21:33:35.334, foo, 0}
2016-07-05 21:33:35,335 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{3, 1, 1997/04/01, 2000/09/30, Los Angels, 1, 2016-07-05 21:33:35.335, foo, 2016-07-05 21:33:35.335, foo, 0}
2016-07-05 21:33:35,336 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{4, 1, 2000/10/01, 2003/08/31, New York, 1, 2016-07-05 21:33:35.336, foo, 2016-07-05 21:33:35.336, foo, 0}
2016-07-05 21:33:35,337 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{5, 1, 2003/09/01, 2004/12/22, San Francisco Powell, 1, 2016-07-05 21:33:35.336, foo, 2016-07-05 21:33:35.336, foo, 0}
2016-07-05 21:33:35,337 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{6, 1, 2004/12/23, 2006/03/23, San Francisco Daly City, 1, 2016-07-05 21:33:35.337, foo, 2016-07-05 21:33:35.337, foo, 0}
2016-07-05 21:33:35,339 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{7, 1, 2016/01/01, 9999/12/31, Victoria, 2, 2016-07-05 21:33:35.339, foo, 2016-07-05 21:33:35.339, foo, 0}
2016-07-05 21:33:35,340 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{8, 2, 2004/12/24, 9999/12/31, Ichihara, 4, 2016-07-05 21:33:35.34, foo, 2016-07-05 21:33:35.34, foo, 0}
2016-07-05 21:33:35,341 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{9, 3, 2004/12/24, 2007/03/23, Mobara, 4, 2016-07-05 21:33:35.341, foo, 2016-07-05 21:33:35.341, foo, 0}
2016-07-05 21:33:35,342 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{10, 4, 2002/11/01, 9999/12/31, Sousa, 4, 2016-07-05 21:33:35.342, foo, 2016-07-05 21:33:35.342, foo, 0}
2016-07-05 21:33:35,343 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{11, 6, 2002/11/01, 9999/12/31, Yokoshiba, 4, 2016-07-05 21:33:35.343, foo, 2016-07-05 21:33:35.343, foo, 0}
2016-07-05 21:33:35,344 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{12, 9, 2010/11/01, 9999/12/31, Tateyama, 4, 2016-07-05 21:33:35.344, foo, 2016-07-05 21:33:35.344, foo, 0}
2016-07-05 21:33:35,345 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{13, 10, 1970/01/01, 9999/12/31, Shoku, 3, 2016-07-05 21:33:35.345, foo, 2016-07-05 21:33:35.345, foo, 0}
2016-07-05 21:33:35,347 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{14, 12, 2000/11/01, 2001/11/01, Oohara, 4, 2016-07-05 21:33:35.347, foo, 2016-07-05 21:33:35.347, foo, 0}
2016-07-05 21:33:35,348 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{15, 15, 2002/11/01, 2006/10/30, MinamiBousou, 4, 2016-07-05 21:33:35.348, foo, 2016-07-05 21:33:35.348, foo, 0}
2016-07-05 21:33:35,349 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{16, 15, 2007/11/01, 9999/12/31, Tomisato, 4, 2016-07-05 21:33:35.349, foo, 2016-07-05 21:33:35.349, foo, 0}
2016-07-05 21:33:35,350 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{17, 18, 2001/03/21, 2007/11/21, Katsuura, 4, 2016-07-05 21:33:35.35, foo, 2016-07-05 21:33:35.35, foo, 0}
2016-07-05 21:33:35,351 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{18, 18, 2007/11/22, 9999/12/31, Kamogawa, 4, 2016-07-05 21:33:35.351, foo, 2016-07-05 21:33:35.351, foo, 0}
2016-07-05 21:33:35,352 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{19, 19, 2000/11/01, 9999/12/31, Yotsukaido, 4, 2016-07-05 21:33:35.352, foo, 2016-07-05 21:33:35.352, foo, 0}
2016-07-05 21:33:35,353 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{20, 20, 1970/01/01, 9999/12/31, Go, 3, 2016-07-05 21:33:35.353, foo, 2016-07-05 21:33:35.353, foo, 0}
2016-07-05 21:33:35,366 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_ADDRESS
2016-07-05 21:33:35,366 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{1, 3, 2006/12/24 23:59:59, 0, FML}
2016-07-05 21:33:35,367 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{2, 6, 2007/11/11 16:16:16, 0, FML}
2016-07-05 21:33:35,368 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{3, 1, 2006/12/23 22:56:29, 0, FML}
2016-07-05 21:33:35,369 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{4, 6, 2007/11/01 02:13:00, 0, FML}
2016-07-05 21:33:35,369 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{5, 7, 2006/05/24 23:12:59, 0, FML}
2016-07-05 21:33:35,370 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{6, 6, 2005/11/11 16:32:01, 0, PRV}
2016-07-05 21:33:35,371 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{7, 6, 2006/01/28 23:59:59, 1, FML}
2016-07-05 21:33:35,372 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{8, 6, 2007/11/09 16:23:00, 0, FML}
2016-07-05 21:33:35,373 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{9, 8, 2006/12/22 23:59:59, 0, FML}
2016-07-05 21:33:35,374 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{10, 6, 2007/11/11 09:01:00, 0, FML}
2016-07-05 21:33:35,375 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{11, 1, 2006/12/23 23:59:59, 0, FML}
2016-07-05 21:33:35,376 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{12, 9, 2007/11/15 12:43:00, 0, FML}
2016-07-05 21:33:35,376 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{13, 10, 2006/12/24 23:59:59, 0, FML}
2016-07-05 21:33:35,377 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{14, 6, 2007/04/01 16:23:01, 0, FML}
2016-07-05 21:33:35,377 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{15, 7, 2006/12/24 23:59:20, 1, FML}
2016-07-05 21:33:35,378 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{16, 6, 2007/05/01 12:23:02, 0, FML}
2016-07-05 21:33:35,378 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{17, 7, 2006/12/24 23:59:21, 0, FML}
2016-07-05 21:33:35,379 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{18, 6, 2007/06/11 17:23:03, 0, FML}
2016-07-05 21:33:35,379 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{19, 4, 2006/12/24 23:59:22, 0, FML}
2016-07-05 21:33:35,380 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{20, 3, 2007/11/01 16:12:04, 0, FML}
2016-07-05 21:33:35,380 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{21, 11, 2006/12/24 23:59:23, 0, FML}
2016-07-05 21:33:35,381 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{22, 1, 2007/11/01 16:23:05, 0, PRV}
2016-07-05 21:33:35,381 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{23, 9, 2006/12/24 23:59:24, 1, FML}
2016-07-05 21:33:35,382 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{24, 8, 2007/11/01 16:23:06, 0, FML}
2016-07-05 21:33:35,390 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{25, 7, 2007/12/24 11:59:25, 1, FML}
2016-07-05 21:33:35,391 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{26, 6, 2007/06/21 01:23:57, 0, FML}
2016-07-05 21:33:35,391 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{27, 5, 2006/12/24 23:59:26, 0, FML}
2016-07-05 21:33:35,392 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{28, 3, 2007/11/01 16:23:08, 0, FML}
2016-07-05 21:33:35,392 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{29, 3, 2006/12/24 23:59:27, 0, FML}
2016-07-05 21:33:35,392 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{30, 10, 2007/11/01 16:23:09, 0, FML}
2016-07-05 21:33:35,393 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{31, 15, 2006/07/24 23:59:28, 0, FML}
2016-07-05 21:33:35,394 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{32, 14, 2007/11/01 17:23:10, 0, FML}
2016-07-05 21:33:35,394 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{33, 15, 2007/11/01 16:23:10, 0, FML}
2016-07-05 21:33:35,394 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{34, 18, 2006/07/24 23:59:29, 0, FML}
2016-07-05 21:33:35,395 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{35, 3, 2007/11/01 17:23:11, 0, PRV}
2016-07-05 21:33:35,395 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{36, 5, 2007/11/01 16:23:11, 1, FML}
2016-07-05 21:33:35,396 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{37, 11, 2006/07/24 23:59:30, 0, FML}
2016-07-05 21:33:35,396 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{38, 20, 2007/11/01 17:23:12, 1, FML}
2016-07-05 21:33:35,396 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{39, 19, 2007/11/01 16:23:12, 0, FML}
2016-07-05 21:33:35,397 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{40, 4, 2006/07/24 23:59:31, 0, FML}
2016-07-05 21:33:35,397 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{41, 4, 2007/11/01 17:23:13, 0, FML}
2016-07-05 21:33:35,397 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{42, 4, 2007/11/01 16:23:13, 0, FML}
2016-07-05 21:33:35,398 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{43, 4, 2006/07/24 23:52:32, 0, FML}
2016-07-05 21:33:35,398 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{44, 4, 2007/11/01 11:23:14, 0, FML}
2016-07-05 21:33:35,398 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{45, 4, 2007/11/21 06:23:14, 0, FML}
2016-07-05 21:33:35,399 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{46, 12, 2006/07/24 23:52:33, 0, PRV}
2016-07-05 21:33:35,399 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{47, 13, 2007/11/01 11:23:15, 1, FML}
2016-07-05 21:33:35,400 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{48, 14, 2007/11/21 06:23:15, 0, FML}
2016-07-05 21:33:35,401 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{49, 17, 2006/07/24 23:52:34, 1, FML}
2016-07-05 21:33:35,401 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{50, 18, 2007/11/01 11:23:16, 0, FML}
2016-07-05 21:33:35,402 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{51, 16, 2007/11/21 06:23:16, 0, FML}
2016-07-05 21:33:35,403 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{52, 4, 2006/07/24 23:52:35, 0, FML}
2016-07-05 21:33:35,404 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{53, 5, 2007/11/01 11:23:17, 0, FML}
2016-07-05 21:33:35,405 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{54, 5, 2007/11/21 06:23:17, 0, FML}
2016-07-05 21:33:35,406 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{55, 11, 2006/07/24 23:52:36, 0, FML}
2016-07-05 21:33:35,407 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{56, 12, 2007/11/01 11:23:18, 0, FML}
2016-07-05 21:33:35,454 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 56 rows are loaded to MEMBER_LOGIN
2016-07-05 21:33:35,455 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{1, aaa, 30符3飜は？, 自分で数えろ, 1, 2016-07-05 21:33:35.455, foo, 2016-07-05 21:33:35.455, foo, 0}
2016-07-05 21:33:35,456 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{2, bbb, 50符2飜は？, 自分で数えろ, 2, 2016-07-05 21:33:35.456, foo, 2016-07-05 21:33:35.456, foo, 0}
2016-07-05 21:33:35,457 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{3, ccc, 110符2飜は？, 自分で数えろ, 3, 2016-07-05 21:33:35.457, foo, 2016-07-05 21:33:35.457, foo, 0}
2016-07-05 21:33:35,457 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{4, ddd, タンヤオ？, そう, 4, 2016-07-05 21:33:35.457, foo, 2016-07-05 21:33:35.457, foo, 0}
2016-07-05 21:33:35,458 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{5, eee2, ピンフ？, そう, 5, 2016-07-05 21:33:35.458, foo, 2016-07-05 21:33:35.458, foo, 0}
2016-07-05 21:33:35,458 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{6, fff, サンアンコウ？, そう, 6, 2016-07-05 21:33:35.458, foo, 2016-07-05 21:33:35.458, foo, 0}
2016-07-05 21:33:35,459 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{7, ggg3, イーペーコウ？, そう, 7, 2016-07-05 21:33:35.459, foo, 2016-07-05 21:33:35.459, foo, 0}
2016-07-05 21:33:35,459 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{8, hhh555, リャンペーコウ？, そう, 8, 2016-07-05 21:33:35.459, foo, 2016-07-05 21:33:35.459, foo, 0}
2016-07-05 21:33:35,460 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{9, iii, サンペーコウはないよね？, 当たり前だ, 9, 2016-07-05 21:33:35.46, foo, 2016-07-05 21:33:35.46, foo, 0}
2016-07-05 21:33:35,460 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{10, jjj, 私はイカサマしません, 実はする, 10, 2016-07-05 21:33:35.46, foo, 2016-07-05 21:33:35.46, foo, 0}
2016-07-05 21:33:35,461 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{11, qwe, 70符3飜は？, 自分で数えろ, 11, 2016-07-05 21:33:35.461, foo, 2016-07-05 21:33:35.461, foo, 0}
2016-07-05 21:33:35,461 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{12, sdf, 20符4飜は？, 自分で数えろ, 12, 2016-07-05 21:33:35.461, foo, 2016-07-05 21:33:35.461, foo, 0}
2016-07-05 21:33:35,462 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{13, dfgsf, 大三元は？, 役満だよ, 13, 2016-07-05 21:33:35.462, foo, 2016-07-05 21:33:35.462, foo, 0}
2016-07-05 21:33:35,462 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{14, ert, タンヤオ？, そう, 14, 2016-07-05 21:33:35.462, foo, 2016-07-05 21:33:35.462, foo, 0}
2016-07-05 21:33:35,462 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{15, fhgf, ピンフ？, そう, 15, 2016-07-05 21:33:35.462, foo, 2016-07-05 21:33:35.462, foo, 0}
2016-07-05 21:33:35,463 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{16, ghj, サンアンコウ？, そう, 16, 2016-07-05 21:33:35.463, foo, 2016-07-05 21:33:35.463, foo, 0}
2016-07-05 21:33:35,463 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{17, tyuffff, サンレンコウ？, そう, 17, 2016-07-05 21:33:35.463, foo, 2016-07-05 21:33:35.463, foo, 0}
2016-07-05 21:33:35,464 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{18, jkl, イーペーコウ？, そう, 18, 2016-07-05 21:33:35.464, foo, 2016-07-05 21:33:35.464, foo, 0}
2016-07-05 21:33:35,464 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{19, ghjfff, 左ハイは？, 痛い, 19, 2016-07-05 21:33:35.464, foo, 2016-07-05 21:33:35.464, foo, 0}
2016-07-05 21:33:35,465 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{20, cvb, 孫権は？, 呉, 20, 2016-07-05 21:33:35.465, foo, 2016-07-05 21:33:35.465, foo, 0}
2016-07-05 21:33:35,484 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SECURITY
2016-07-05 21:33:35,485 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{1, 1, 1234, PLT, 2016-07-05 21:33:35.485, foo, 2016-07-05 21:33:35.485, foo, 0}
2016-07-05 21:33:35,486 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{2, 2, 2345, GLD, 2016-07-05 21:33:35.486, foo, 2016-07-05 21:33:35.486, foo, 0}
2016-07-05 21:33:35,487 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{3, 3, 3456, GLD, 2016-07-05 21:33:35.487, foo, 2016-07-05 21:33:35.487, foo, 0}
2016-07-05 21:33:35,487 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{4, 4, 875, BRZ, 2016-07-05 21:33:35.487, foo, 2016-07-05 21:33:35.487, foo, 0}
2016-07-05 21:33:35,488 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{5, 5, 1111, BRZ, 2016-07-05 21:33:35.487, foo, 2016-07-05 21:33:35.487, foo, 0}
2016-07-05 21:33:35,488 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{6, 6, 5422, SIL, 2016-07-05 21:33:35.488, foo, 2016-07-05 21:33:35.488, foo, 0}
2016-07-05 21:33:35,488 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{7, 7, 24678, SIL, 2016-07-05 21:33:35.488, foo, 2016-07-05 21:33:35.488, foo, 0}
2016-07-05 21:33:35,489 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{8, 8, 234, SIL, 2016-07-05 21:33:35.489, foo, 2016-07-05 21:33:35.489, foo, 0}
2016-07-05 21:33:35,489 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{9, 9, 3, SIL, 2016-07-05 21:33:35.489, foo, 2016-07-05 21:33:35.489, foo, 0}
2016-07-05 21:33:35,490 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{10, 10, 98765, PLT, 2016-07-05 21:33:35.489, foo, 2016-07-05 21:33:35.489, foo, 0}
2016-07-05 21:33:35,490 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{11, 11, 34, GLD, 2016-07-05 21:33:35.49, foo, 2016-07-05 21:33:35.49, foo, 0}
2016-07-05 21:33:35,509 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{12, 12, 532, PLT, 2016-07-05 21:33:35.509, foo, 2016-07-05 21:33:35.509, foo, 0}
2016-07-05 21:33:35,510 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{13, 13, 23678, GLD, 2016-07-05 21:33:35.51, foo, 2016-07-05 21:33:35.51, foo, 0}
2016-07-05 21:33:35,510 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{14, 14, 432, GLD, 2016-07-05 21:33:35.51, foo, 2016-07-05 21:33:35.51, foo, 0}
2016-07-05 21:33:35,511 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{15, 15, 543, BRZ, 2016-07-05 21:33:35.511, foo, 2016-07-05 21:33:35.511, foo, 0}
2016-07-05 21:33:35,511 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{16, 16, 23545, PLT, 2016-07-05 21:33:35.511, foo, 2016-07-05 21:33:35.511, foo, 0}
2016-07-05 21:33:35,511 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{17, 17, 2345, GLD, 2016-07-05 21:33:35.511, foo, 2016-07-05 21:33:35.511, foo, 0}
2016-07-05 21:33:35,512 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{18, 18, 8763, SIL, 2016-07-05 21:33:35.512, foo, 2016-07-05 21:33:35.512, foo, 0}
2016-07-05 21:33:35,512 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{19, 19, 34567, SIL, 2016-07-05 21:33:35.512, foo, 2016-07-05 21:33:35.512, foo, 0}
2016-07-05 21:33:35,512 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{20, 20, 43, GLD, 2016-07-05 21:33:35.512, foo, 2016-07-05 21:33:35.512, foo, 0}
2016-07-05 21:33:35,528 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SERVICE
2016-07-05 21:33:35,529 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{3, null, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123, 2016-07-05 21:33:35.529, foo, 2016-07-05 21:33:35.529, foo}
2016-07-05 21:33:35,530 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{6, SIT, null, 2007/11/11 16:00:00.456, 2016-07-05 21:33:35.53, foo, 2016-07-05 21:33:35.53, foo}
2016-07-05 21:33:35,531 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{13, PRD, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789, 2016-07-05 21:33:35.53, foo, 2016-07-05 21:33:35.53, foo}
2016-07-05 21:33:35,531 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{16, SIT, コバチが２人いるため, 2007/11/13 16:00:00.456, 2016-07-05 21:33:35.531, foo, 2016-07-05 21:33:35.531, foo}
2016-07-05 21:33:35,536 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to MEMBER_WITHDRAWAL
2016-07-05 21:33:35,536 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-05 21:33:35,536 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/migration/previous/data/ut/xls/30-product.xls)
2016-07-05 21:33:35,537 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-05 21:33:35,573 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{1, Cold Spring Harbor, BILLYJOEL-01, MCD, PST, 1100, 2016-07-05 21:33:35.573, foo, 2016-07-05 21:33:35.573, foo, 0}
2016-07-05 21:33:35,574 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{2, Piano Man, BILLYJOEL-02, MCD, ONS, 1200, 2016-07-05 21:33:35.574, foo, 2016-07-05 21:33:35.574, foo, 0}
2016-07-05 21:33:35,574 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{3, Streetlife Serenade, BILLYJOEL-03, MCD, ONS, 1300, 2016-07-05 21:33:35.574, foo, 2016-07-05 21:33:35.574, foo, 0}
2016-07-05 21:33:35,575 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{4, Turnstiles, BILLYJOEL-04, MCD, ONS, 1400, 2016-07-05 21:33:35.575, foo, 2016-07-05 21:33:35.575, foo, 0}
2016-07-05 21:33:35,575 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{5, The Stranger, BILLYJOEL-05, MCD, ONS, 1500, 2016-07-05 21:33:35.575, foo, 2016-07-05 21:33:35.575, foo, 0}
2016-07-05 21:33:35,576 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{6, 52nd Street, BILLYJOEL-06, MCD, ONS, 1600, 2016-07-05 21:33:35.576, foo, 2016-07-05 21:33:35.576, foo, 0}
2016-07-05 21:33:35,576 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{7, Glass House, BILLYJOEL-07, MCD, ONS, 1700, 2016-07-05 21:33:35.576, foo, 2016-07-05 21:33:35.576, foo, 0}
2016-07-05 21:33:35,577 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{8, Nylon Curtain, BILLYJOEL-08, MCD, ONS, 1800, 2016-07-05 21:33:35.577, foo, 2016-07-05 21:33:35.577, foo, 0}
2016-07-05 21:33:35,577 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{9, Bridge, BILLYJOEL-09, MCD, ONS, 1900, 2016-07-05 21:33:35.577, foo, 2016-07-05 21:33:35.577, foo, 0}
2016-07-05 21:33:35,577 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{10, Storm Front, BILLYJOEL-10, MCD, ONS, 2000, 2016-07-05 21:33:35.577, foo, 2016-07-05 21:33:35.577, foo, 0}
2016-07-05 21:33:35,578 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{11, River of Dreams, BILLYJOEL-11, MCD, ONS, 2100, 2016-07-05 21:33:35.578, foo, 2016-07-05 21:33:35.578, foo, 0}
2016-07-05 21:33:35,578 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{12, Grand Piano, PIANO-01, INS, ONS, 1400000, 2016-07-05 21:33:35.578, foo, 2016-07-05 21:33:35.578, foo, 0}
2016-07-05 21:33:35,579 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{13, Upright Piano, PIANO-02, INS, ONS, 1100000, 2016-07-05 21:33:35.579, foo, 2016-07-05 21:33:35.579, foo, 0}
2016-07-05 21:33:35,579 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{14, Low Price Flute, FLUTE-01, INS, ONS, 50000, 2016-07-05 21:33:35.579, foo, 2016-07-05 21:33:35.579, foo, 0}
2016-07-05 21:33:35,579 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{15, Silver Flute, FLUTE-02, INS, ONS, 500000, 2016-07-05 21:33:35.579, foo, 2016-07-05 21:33:35.579, foo, 0}
2016-07-05 21:33:35,580 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{16, Gold Flute, FLUTE-03, INS, ONS, 4000000, 2016-07-05 21:33:35.58, foo, 2016-07-05 21:33:35.58, foo, 0}
2016-07-05 21:33:35,580 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{17, Rosemary (100g), HARB-100-01, HEB, ONS, 400, 2016-07-05 21:33:35.58, foo, 2016-07-05 21:33:35.58, foo, 0}
2016-07-05 21:33:35,581 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{18, Lemon Grass (100g), HARB-100-02, HEB, ONS, 380, 2016-07-05 21:33:35.581, foo, 2016-07-05 21:33:35.581, foo, 0}
2016-07-05 21:33:35,581 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{19, Camomile (100g), HARB-100-03, HEB, ONS, 380, 2016-07-05 21:33:35.581, foo, 2016-07-05 21:33:35.581, foo, 0}
2016-07-05 21:33:35,582 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{20, Hatomugi (100g), HARB-100-04, HEB, ONS, 340, 2016-07-05 21:33:35.582, foo, 2016-07-05 21:33:35.582, foo, 0}
2016-07-05 21:33:35,599 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to PRODUCT
2016-07-05 21:33:35,600 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{1, 5, 3, 2006/12/24 23:59:59, 1, 1800, 1, 2016-07-05 21:33:35.6, foo, 2016-07-05 21:33:35.6, foo, 0}
2016-07-05 21:33:35,601 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{2, 15, 7, 2007/11/11 16:16:16, 1, 1700, 1, 2016-07-05 21:33:35.601, foo, 2016-07-05 21:33:35.601, foo, 0}
2016-07-05 21:33:35,602 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{3, 13, 3, 2006/12/23 22:56:29.235, 1, 1800, 1, 2016-07-05 21:33:35.602, foo, 2016-07-05 21:33:35.602, foo, 0}
2016-07-05 21:33:35,602 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{4, 2, 5, 2007/11/01 02:13:00, 2, 1700, 1, 2016-07-05 21:33:35.602, foo, 2016-07-05 21:33:35.602, foo, 0}
2016-07-05 21:33:35,603 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{5, 9, 11, 2008/01/04 23:12:59, 5, 1800, 1, 2016-07-05 21:33:35.603, foo, 2016-07-05 21:33:35.603, foo, 0}
2016-07-05 21:33:35,603 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{6, 20, 2, 2002/01/01 16:32:01, 1, 2000, 1, 2016-07-05 21:33:35.603, foo, 2016-07-05 21:33:35.603, foo, 0}
2016-07-05 21:33:35,604 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{7, 19, 9, 2006/01/28 23:59:59.999, 1, 1000, 0, 2016-07-05 21:33:35.604, foo, 2016-07-05 21:33:35.604, foo, 0}
2016-07-05 21:33:35,605 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{8, 4, 7, 2007/11/09 16:23:00, 1, 1535, 1, 2016-07-05 21:33:35.605, foo, 2016-07-05 21:33:35.605, foo, 0}
2016-07-05 21:33:35,606 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{9, 4, 10, 2006/12/22 23:59:59, 20, 1700, 1, 2016-07-05 21:33:35.606, foo, 2016-07-05 21:33:35.606, foo, 0}
2016-07-05 21:33:35,607 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{10, 2, 10, 2007/11/01 02:13:00.345, 1, 1700, 0, 2016-07-05 21:33:35.607, foo, 2016-07-05 21:33:35.607, foo, 0}
2016-07-05 21:33:35,607 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{11, 5, 2, 2007/11/09 16:23:01, 1, 1800, 1, 2016-07-05 21:33:35.607, foo, 2016-07-05 21:33:35.607, foo, 0}
2016-07-05 21:33:35,608 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{12, 15, 2, 2006/12/22 23:59:12, 1, 1700, 1, 2016-07-05 21:33:35.608, foo, 2016-07-05 21:33:35.608, foo, 0}
2016-07-05 21:33:35,611 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{13, 13, 8, 2007/11/01 02:13:00.346, 1, 1800, 1, 2016-07-05 21:33:35.61, foo, 2016-07-05 21:33:35.611, foo, 0}
2016-07-05 21:33:35,611 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{14, 2, 4, 2007/11/09 16:23:02, 2, 1700, 1, 2016-07-05 21:33:35.611, foo, 2016-07-05 21:33:35.611, foo, 0}
2016-07-05 21:33:35,612 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{15, 9, 11, 2006/12/22 23:59:32, 5, 1800, 1, 2016-07-05 21:33:35.612, foo, 2016-07-05 21:33:35.612, foo, 0}
2016-07-05 21:33:35,613 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{16, 20, 1, 2007/11/01 02:13:00.347, 1, 2000, 1, 2016-07-05 21:33:35.613, foo, 2016-07-05 21:33:35.613, foo, 0}
2016-07-05 21:33:35,613 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{17, 19, 11, 2006/12/22 23:59:33, 2, 1000, 0, 2016-07-05 21:33:35.613, foo, 2016-07-05 21:33:35.613, foo, 0}
2016-07-05 21:33:35,614 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{18, 4, 10, 2007/11/01 02:13:00.348, 1, 1535, 1, 2016-07-05 21:33:35.614, foo, 2016-07-05 21:33:35.614, foo, 0}
2016-07-05 21:33:35,621 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{19, 4, 11, 2007/11/01 02:13:00.348, 4, 1700, 1, 2016-07-05 21:33:35.621, foo, 2016-07-05 21:33:35.621, foo, 0}
2016-07-05 21:33:35,622 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{20, 2, 11, 2006/12/22 23:59:35, 1, 1700, 0, 2016-07-05 21:33:35.622, foo, 2016-07-05 21:33:35.622, foo, 0}
2016-07-05 21:33:35,623 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{21, 2, 15, 2006/12/22 23:59:35, 1, 400000, 0, 2016-07-05 21:33:35.623, foo, 2016-07-05 21:33:35.623, foo, 0}
2016-07-05 21:33:35,624 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{22, 3, 6, 2007/11/01 02:13:00.350, 4, 1800, 1, 2016-07-05 21:33:35.624, foo, 2016-07-05 21:33:35.624, foo, 0}
2016-07-05 21:33:35,625 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{23, 15, 7, 2006/12/22 23:59:36, 1, 1700, 1, 2016-07-05 21:33:35.625, foo, 2016-07-05 21:33:35.625, foo, 0}
2016-07-05 21:33:35,626 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{24, 13, 3, 2007/09/11 12:13:00.351, 1, 1800, 1, 2016-07-05 21:33:35.626, foo, 2016-07-05 21:33:35.626, foo, 0}
2016-07-05 21:33:35,626 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{25, 16, 2, 2006/12/22 23:59:37, 2, 1700, 1, 2016-07-05 21:33:35.626, foo, 2016-07-05 21:33:35.626, foo, 0}
2016-07-05 21:33:35,627 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{26, 3, 4, 2005/12/21 12:13:00.352, 1, 1800, 1, 2016-07-05 21:33:35.627, foo, 2016-07-05 21:33:35.627, foo, 0}
2016-07-05 21:33:35,628 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{27, 2, 8, 2006/12/22 23:59:38, 1, 2000, 1, 2016-07-05 21:33:35.628, foo, 2016-07-05 21:33:35.628, foo, 0}
2016-07-05 21:33:35,628 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{28, 6, 17, 2007/11/01 02:13:00.353, 2, 600, 0, 2016-07-05 21:33:35.628, foo, 2016-07-05 21:33:35.628, foo, 0}
2016-07-05 21:33:35,629 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{29, 4, 4, 2006/12/22 23:59:39, 1, 1535, 1, 2016-07-05 21:33:35.629, foo, 2016-07-05 21:33:35.629, foo, 0}
2016-07-05 21:33:35,630 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{30, 4, 3, 2007/11/01 02:13:00.354, 4, 1700, 1, 2016-07-05 21:33:35.63, foo, 2016-07-05 21:33:35.63, foo, 0}
2016-07-05 21:33:35,631 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{31, 4, 10, 2006/12/22 23:59:40, 1, 1700, 0, 2016-07-05 21:33:35.631, foo, 2016-07-05 21:33:35.631, foo, 0}
2016-07-05 21:33:35,631 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{32, 13, 3, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-07-05 21:33:35.631, foo, 2016-07-05 21:33:35.631, foo, 0}
2016-07-05 21:33:35,632 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{33, 16, 2, 2006/12/22 23:59:41, 2, 1700, 1, 2016-07-05 21:33:35.632, foo, 2016-07-05 21:33:35.632, foo, 0}
2016-07-05 21:33:35,633 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{34, 3, 4, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-07-05 21:33:35.633, foo, 2016-07-05 21:33:35.633, foo, 0}
2016-07-05 21:33:35,633 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{35, 2, 8, 2006/12/12 23:59:42, 1, 2000, 1, 2016-07-05 21:33:35.633, foo, 2016-07-05 21:33:35.633, foo, 0}
2016-07-05 21:33:35,634 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{36, 6, 3, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-07-05 21:33:35.634, foo, 2016-07-05 21:33:35.634, foo, 0}
2016-07-05 21:33:35,635 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{37, 4, 4, 2006/12/12 23:59:43, 1, 1535, 1, 2016-07-05 21:33:35.635, foo, 2016-07-05 21:33:35.635, foo, 0}
2016-07-05 21:33:35,637 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{38, 4, 3, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-07-05 21:33:35.636, foo, 2016-07-05 21:33:35.636, foo, 0}
2016-07-05 21:33:35,638 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{39, 4, 10, 2006/12/12 23:59:44, 1, 1700, 0, 2016-07-05 21:33:35.638, foo, 2016-07-05 21:33:35.638, foo, 0}
2016-07-05 21:33:35,639 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{40, 4, 10, 2007/05/01 12:13:00.359, 1, 1700, 0, 2016-07-05 21:33:35.639, foo, 2016-07-05 21:33:35.639, foo, 0}
2016-07-05 21:33:35,641 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{41, 4, 11, 2007/11/01 02:13:01.354, 4, 1700, 1, 2016-07-05 21:33:35.64, foo, 2016-07-05 21:33:35.64, foo, 0}
2016-07-05 21:33:35,642 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{42, 10, 16, 2006/12/22 23:59:40, 1, 2800000, 1, 2016-07-05 21:33:35.641, foo, 2016-07-05 21:33:35.641, foo, 0}
2016-07-05 21:33:35,642 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{43, 13, 17, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-07-05 21:33:35.642, foo, 2016-07-05 21:33:35.642, foo, 0}
2016-07-05 21:33:35,643 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{44, 16, 14, 2006/12/22 23:59:41, 2, 1700, 1, 2016-07-05 21:33:35.643, foo, 2016-07-05 21:33:35.643, foo, 0}
2016-07-05 21:33:35,644 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{45, 3, 18, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-07-05 21:33:35.644, foo, 2016-07-05 21:33:35.644, foo, 0}
2016-07-05 21:33:35,645 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{46, 2, 7, 2006/12/12 23:59:42, 1, 2000, 1, 2016-07-05 21:33:35.645, foo, 2016-07-05 21:33:35.645, foo, 0}
2016-07-05 21:33:35,646 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{47, 6, 14, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-07-05 21:33:35.646, foo, 2016-07-05 21:33:35.646, foo, 0}
2016-07-05 21:33:35,646 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{48, 16, 12, 2006/12/12 23:59:43, 1, 100000, 1, 2016-07-05 21:33:35.646, foo, 2016-07-05 21:33:35.646, foo, 0}
2016-07-05 21:33:35,647 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{49, 4, 20, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-07-05 21:33:35.647, foo, 2016-07-05 21:33:35.647, foo, 0}
2016-07-05 21:33:35,648 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{50, 4, 19, 2006/12/12 23:59:44, 1, 1700, 0, 2016-07-05 21:33:35.648, foo, 2016-07-05 21:33:35.648, foo, 0}
2016-07-05 21:33:35,649 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{51, 4, 11, 2007/11/21 02:13:00.354, 4, 1700, 1, 2016-07-05 21:33:35.649, foo, 2016-07-05 21:33:35.649, foo, 0}
2016-07-05 21:33:35,649 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{52, 20, 17, 2006/12/23 23:59:40, 1, 400, 0, 2016-07-05 21:33:35.649, foo, 2016-07-05 21:33:35.649, foo, 0}
2016-07-05 21:33:35,650 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{53, 13, 16, 2007/12/28 12:13:10.355, 1, 600000, 1, 2016-07-05 21:33:35.65, foo, 2016-07-05 21:33:35.65, foo, 0}
2016-07-05 21:33:35,651 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{54, 16, 14, 2006/02/22 23:59:41, 2, 1700, 1, 2016-07-05 21:33:35.651, foo, 2016-07-05 21:33:35.651, foo, 0}
2016-07-05 21:33:35,651 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{55, 3, 3, 2007/07/21 12:13:00.356, 1, 1800, 1, 2016-07-05 21:33:35.651, foo, 2016-07-05 21:33:35.651, foo, 0}
2016-07-05 21:33:35,656 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{56, 2, 8, 2006/12/22 23:59:42, 1, 2000, 1, 2016-07-05 21:33:35.656, foo, 2016-07-05 21:33:35.656, foo, 0}
2016-07-05 21:33:35,657 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{57, 6, 19, 2007/02/01 02:13:00.357, 2, 1000, 0, 2016-07-05 21:33:35.657, foo, 2016-07-05 21:33:35.657, foo, 0}
2016-07-05 21:33:35,659 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{58, 2, 12, 2006/12/12 23:59:43, 1, 4000000, 1, 2016-07-05 21:33:35.659, foo, 2016-07-05 21:33:35.659, foo, 0}
2016-07-05 21:33:35,659 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{59, 4, 18, 2007/05/01 02:03:00.358, 1, 380, 1, 2016-07-05 21:33:35.659, foo, 2016-07-05 21:33:35.659, foo, 0}
2016-07-05 21:33:35,660 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{60, 4, 20, 2006/12/12 23:59:44, 2, 680, 0, 2016-07-05 21:33:35.66, foo, 2016-07-05 21:33:35.66, foo, 0}
2016-07-05 21:33:35,661 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{61, 1, 16, 2008-03-03 06:34:56.000, 3, 12000000, 1, 2016-07-05 21:33:35.661, foo, 2016-07-05 21:33:35.661, foo, 0}
2016-07-05 21:33:35,661 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{62, 1, 2, 2009-06-04 06:34:56.000, 12, 20000, 1, 2016-07-05 21:33:35.661, foo, 2016-07-05 21:33:35.661, foo, 0}
2016-07-05 21:33:35,662 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{63, 1, 6, 2010-09-26 06:34:56.000, 2, 2000, 1, 2016-07-05 21:33:35.662, foo, 2016-07-05 21:33:35.662, foo, 0}
2016-07-05 21:33:35,663 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{64, 1, 8, 2011-03-03 09:45:29.000, 1, 50, 1, 2016-07-05 21:33:35.663, foo, 2016-07-05 21:33:35.663, foo, 0}
2016-07-05 21:33:35,663 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{65, 1, 13, 2012-06-04 09:45:29.000, 1, 1000000, 1, 2016-07-05 21:33:35.663, foo, 2016-07-05 21:33:35.663, foo, 0}
2016-07-05 21:33:35,664 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{66, 1, 13, 2013-09-26 09:45:29.000, 1, 900000, 1, 2016-07-05 21:33:35.664, foo, 2016-07-05 21:33:35.664, foo, 0}
2016-07-05 21:33:35,664 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{67, 1, 5, 2014-03-03 21:02:12.000, 2, 3000, 1, 2016-07-05 21:33:35.664, foo, 2016-07-05 21:33:35.664, foo, 0}
2016-07-05 21:33:35,665 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{68, 1, 17, 2015-06-04 21:02:12.000, 30, 3000, 1, 2016-07-05 21:33:35.665, foo, 2016-07-05 21:33:35.665, foo, 0}
2016-07-05 21:33:35,665 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{69, 1, 17, 2016-09-26 21:02:12.000, 1, 1000, 1, 2016-07-05 21:33:35.665, foo, 2016-07-05 21:33:35.665, foo, 0}
2016-07-05 21:33:35,666 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{70, 1, 17, 2017-03-03 01:11:00.000, 1, 1200, 1, 2016-07-05 21:33:35.666, foo, 2016-07-05 21:33:35.666, foo, 0}
2016-07-05 21:33:35,714 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 70 rows are loaded to PURCHASE
2016-07-05 21:33:35,715 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{1, 1, 1800, 2006/12/25 23:59:59, BAK, 2016-07-05 21:33:35.715, foo, 2016-07-05 21:33:35.715, foo}
2016-07-05 21:33:35,716 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{2, 2, 1700, 2007/11/13 16:16:16, BAK, 2016-07-05 21:33:35.716, foo, 2016-07-05 21:33:35.716, foo}
2016-07-05 21:33:35,717 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{3, 3, 900, 2006/12/23 23:56:29, CRC, 2016-07-05 21:33:35.717, foo, 2016-07-05 21:33:35.717, foo}
2016-07-05 21:33:35,717 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{4, 3, 900, 2006/12/23 23:56:30, HAN, 2016-07-05 21:33:35.717, foo, 2016-07-05 21:33:35.717, foo}
2016-07-05 21:33:35,718 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{5, 4, 1700, 2007/12/01 02:13:00, HAN, 2016-07-05 21:33:35.718, foo, 2016-07-05 21:33:35.718, foo}
2016-07-05 21:33:35,719 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{6, 5, 800.20, 2008/04/04 23:12:59, HAN, 2016-07-05 21:33:35.719, foo, 2016-07-05 21:33:35.719, foo}
2016-07-05 21:33:35,719 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{7, 5, 1000.90, 2008/05/04 23:12:59, CRC, 2016-07-05 21:33:35.719, foo, 2016-07-05 21:33:35.719, foo}
2016-07-05 21:33:35,720 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{8, 6, 1000, 2002/01/01 16:32:01, CRC, 2016-07-05 21:33:35.72, foo, 2016-07-05 21:33:35.72, foo}
2016-07-05 21:33:35,720 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{9, 6, 400.8, 2002/01/01 16:32:01, CRC, 2016-07-05 21:33:35.72, foo, 2016-07-05 21:33:35.72, foo}
2016-07-05 21:33:35,721 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{10, 6, 599.2, 2002/01/01 16:32:01, HAN, 2016-07-05 21:33:35.721, foo, 2016-07-05 21:33:35.721, foo}
2016-07-05 21:33:35,721 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{11, 7, 300, 2006/01/28 23:59:59, CRC, 2016-07-05 21:33:35.721, foo, 2016-07-05 21:33:35.721, foo}
2016-07-05 21:33:35,721 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{12, 8, 535.5, 2007/11/09 16:23:00, BAK, 2016-07-05 21:33:35.721, foo, 2016-07-05 21:33:35.721, foo}
2016-07-05 21:33:35,722 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{13, 8, 999.5, 2014/11/09 16:23:05, BAK, 2016-07-05 21:33:35.722, foo, 2016-07-05 21:33:35.722, foo}
2016-07-05 21:33:35,722 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{14, 9, 1700, 2006/12/22 23:59:59, BAK, 2016-07-05 21:33:35.722, foo, 2016-07-05 21:33:35.722, foo}
2016-07-05 21:33:35,723 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{15, 11, 1799.2, 2014/11/09 16:23:01, CRC, 2016-07-05 21:33:35.723, foo, 2016-07-05 21:33:35.723, foo}
2016-07-05 21:33:35,723 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{16, 11, 0.8, 2014/11/09 16:23:01, HAN, 2016-07-05 21:33:35.723, foo, 2016-07-05 21:33:35.723, foo}
2016-07-05 21:33:35,724 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{17, 12, 1690, 2011/12/22 23:59:12, HAN, 2016-07-05 21:33:35.724, foo, 2016-07-05 21:33:35.724, foo}
2016-07-05 21:33:35,724 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{18, 12, 10, 2011/12/22 23:59:12, CRC, 2016-07-05 21:33:35.724, foo, 2016-07-05 21:33:35.724, foo}
2016-07-05 21:33:35,725 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{19, 13, 1800.7, 2007/11/01 02:13:00, CRC, 2016-07-05 21:33:35.725, foo, 2016-07-05 21:33:35.725, foo}
2016-07-05 21:33:35,725 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{20, 14, 1700, 2008/11/09 16:23:02, BAK, 2016-07-05 21:33:35.725, foo, 2016-07-05 21:33:35.725, foo}
2016-07-05 21:33:35,726 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{21, 15, 300, 2006/12/22 23:59:32, HAN, 2016-07-05 21:33:35.726, foo, 2016-07-05 21:33:35.726, foo}
2016-07-05 21:33:35,726 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{22, 15, 600, 2007/12/22 23:59:32, BAK, 2016-07-05 21:33:35.726, foo, 2016-07-05 21:33:35.726, foo}
2016-07-05 21:33:35,727 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{23, 15, 900, 2008/12/22 23:59:32, HAN, 2016-07-05 21:33:35.727, foo, 2016-07-05 21:33:35.727, foo}
2016-07-05 21:33:35,727 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{24, 16, 2000, 2012/11/01 02:13:00, BAK, 2016-07-05 21:33:35.727, foo, 2016-07-05 21:33:35.727, foo}
2016-07-05 21:33:35,728 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{25, 18, 1535, 2013/11/01 02:13:00, HAN, 2016-07-05 21:33:35.728, foo, 2016-07-05 21:33:35.728, foo}
2016-07-05 21:33:35,728 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{26, 19, 1700, 2007/11/01 02:13:00, HAN, 2016-07-05 21:33:35.728, foo, 2016-07-05 21:33:35.728, foo}
2016-07-05 21:33:35,729 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{27, 20, 5, 2006/12/22 23:59:35, HAN, 2016-07-05 21:33:35.729, foo, 2016-07-05 21:33:35.729, foo}
2016-07-05 21:33:35,729 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{28, 21, 399999, 2006/12/22 23:59:35, BAK, 2016-07-05 21:33:35.729, foo, 2016-07-05 21:33:35.729, foo}
2016-07-05 21:33:35,730 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{29, 22, 1800, 2007/11/01 02:13:00, BAK, 2016-07-05 21:33:35.73, foo, 2016-07-05 21:33:35.73, foo}
2016-07-05 21:33:35,730 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{30, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-05 21:33:35.73, foo, 2016-07-05 21:33:35.73, foo}
2016-07-05 21:33:35,731 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{31, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-05 21:33:35.731, foo, 2016-07-05 21:33:35.731, foo}
2016-07-05 21:33:35,731 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{32, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-05 21:33:35.731, foo, 2016-07-05 21:33:35.731, foo}
2016-07-05 21:33:35,732 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{33, 24, 1000, 2012/09/11 12:13:00, BAK, 2016-07-05 21:33:35.732, foo, 2016-07-05 21:33:35.732, foo}
2016-07-05 21:33:35,732 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{34, 24, 800, 2015/09/11 12:13:00, BAK, 2016-07-05 21:33:35.732, foo, 2016-07-05 21:33:35.732, foo}
2016-07-05 21:33:35,733 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{35, 25, 1700, 2013/12/22 23:59:37, BAK, 2016-07-05 21:33:35.733, foo, 2016-07-05 21:33:35.733, foo}
2016-07-05 21:33:35,733 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{36, 26, 1800, 2005/12/21 12:13:00, BAK, 2016-07-05 21:33:35.733, foo, 2016-07-05 21:33:35.733, foo}
2016-07-05 21:33:35,734 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{37, 27, 2000, 2006/12/22 23:59:38, HAN, 2016-07-05 21:33:35.734, foo, 2016-07-05 21:33:35.734, foo}
2016-07-05 21:33:35,735 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{38, 28, 600, 2007/11/01 02:13:00, BAK, 2016-07-05 21:33:35.735, foo, 2016-07-05 21:33:35.735, foo}
2016-07-05 21:33:35,736 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{39, 29, 1535, 2006/12/22 23:59:39, BAK, 2016-07-05 21:33:35.736, foo, 2016-07-05 21:33:35.736, foo}
2016-07-05 21:33:35,736 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{40, 30, 100, 2010/09/01 02:13:00, HAN, 2016-07-05 21:33:35.736, foo, 2016-07-05 21:33:35.736, foo}
2016-07-05 21:33:35,737 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{41, 30, 200, 2011/10/31 02:13:00, CRC, 2016-07-05 21:33:35.737, foo, 2016-07-05 21:33:35.737, foo}
2016-07-05 21:33:35,738 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{42, 30, 300.75, 2012/11/01 02:13:00, CRC, 2016-07-05 21:33:35.738, foo, 2016-07-05 21:33:35.738, foo}
2016-07-05 21:33:35,738 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{43, 30, 400.25, 2013/12/01 02:13:00, HAN, 2016-07-05 21:33:35.738, foo, 2016-07-05 21:33:35.738, foo}
2016-07-05 21:33:35,739 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{44, 30, 300, 2014/09/01 02:13:00, HAN, 2016-07-05 21:33:35.739, foo, 2016-07-05 21:33:35.739, foo}
2016-07-05 21:33:35,740 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{45, 30, 700, 2014/10/01 02:13:00, HAN, 2016-07-05 21:33:35.74, foo, 2016-07-05 21:33:35.74, foo}
2016-07-05 21:33:35,741 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{46, 31, 1700.85, 2006/12/22 23:59:40, HAN, 2016-07-05 21:33:35.741, foo, 2016-07-05 21:33:35.741, foo}
2016-07-05 21:33:35,741 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{47, 32, 1800, 2009/12/28 12:13:10, HAN, 2016-07-05 21:33:35.741, foo, 2016-07-05 21:33:35.741, foo}
2016-07-05 21:33:35,742 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{48, 33, 1700, 2006/12/22 23:59:41, CRC, 2016-07-05 21:33:35.742, foo, 2016-07-05 21:33:35.742, foo}
2016-07-05 21:33:35,743 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{49, 34, 1800, 2007/05/21 12:13:00, BAK, 2016-07-05 21:33:35.743, foo, 2016-07-05 21:33:35.743, foo}
2016-07-05 21:33:35,743 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{50, 35, 2000, 2006/12/12 23:59:42, CRC, 2016-07-05 21:33:35.743, foo, 2016-07-05 21:33:35.743, foo}
2016-07-05 21:33:35,744 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{51, 36, 300.1, 2012/05/01 02:13:00, CRC, 2016-07-05 21:33:35.744, foo, 2016-07-05 21:33:35.744, foo}
2016-07-05 21:33:35,745 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{52, 36, 300.8, 2013/05/01 02:13:00, HAN, 2016-07-05 21:33:35.745, foo, 2016-07-05 21:33:35.745, foo}
2016-07-05 21:33:35,746 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{53, 36, 300.25, 2014/05/01 02:13:00, HAN, 2016-07-05 21:33:35.746, foo, 2016-07-05 21:33:35.746, foo}
2016-07-05 21:33:35,746 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{54, 37, 1535, 2006/12/12 23:59:43, HAN, 2016-07-05 21:33:35.746, foo, 2016-07-05 21:33:35.746, foo}
2016-07-05 21:33:35,747 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{55, 38, 1700, 2007/05/01 02:03:00, HAN, 2016-07-05 21:33:35.747, foo, 2016-07-05 21:33:35.747, foo}
2016-07-05 21:33:35,748 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{56, 40, 128, 2007/05/01 12:13:00, BAK, 2016-07-05 21:33:35.748, foo, 2016-07-05 21:33:35.748, foo}
2016-07-05 21:33:35,748 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{57, 40, 256, 2013/05/01 12:13:00, BAK, 2016-07-05 21:33:35.748, foo, 2016-07-05 21:33:35.748, foo}
2016-07-05 21:33:35,749 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{58, 40, 512, 2009/05/01 12:13:00, CRC, 2016-07-05 21:33:35.749, foo, 2016-07-05 21:33:35.749, foo}
2016-07-05 21:33:35,750 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{59, 41, 1700, 2007/11/01 02:13:00, HAN, 2016-07-05 21:33:35.75, foo, 2016-07-05 21:33:35.75, foo}
2016-07-05 21:33:35,750 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{60, 42, 30000000, 2014/03/22 21:59:40, HAN, 2016-07-05 21:33:35.75, foo, 2016-07-05 21:33:35.75, foo}
2016-07-05 21:33:35,757 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{61, 43, 1800, 2006/12/28 12:13:10, BAK, 2016-07-05 21:33:35.757, foo, 2016-07-05 21:33:35.757, foo}
2016-07-05 21:33:35,757 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{62, 44, 1700, 2006/12/22 23:59:41, BAK, 2016-07-05 21:33:35.757, foo, 2016-07-05 21:33:35.757, foo}
2016-07-05 21:33:35,758 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{63, 45, 1800, 2007/05/21 12:13:00, CRC, 2016-07-05 21:33:35.758, foo, 2016-07-05 21:33:35.758, foo}
2016-07-05 21:33:35,759 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{64, 46, 2000, 2010/12/12 23:59:42, BAK, 2016-07-05 21:33:35.759, foo, 2016-07-05 21:33:35.759, foo}
2016-07-05 21:33:35,759 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{65, 48, 90000, 2006/12/12 23:59:43, HAN, 2016-07-05 21:33:35.759, foo, 2016-07-05 21:33:35.759, foo}
2016-07-05 21:33:35,760 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{66, 48, 10000, 2006/12/12 23:59:43, BAK, 2016-07-05 21:33:35.76, foo, 2016-07-05 21:33:35.76, foo}
2016-07-05 21:33:35,761 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{67, 49, 1700.66, 2007/05/01 02:03:00, HAN, 2016-07-05 21:33:35.761, foo, 2016-07-05 21:33:35.761, foo}
2016-07-05 21:33:35,762 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{68, 51, 1700, 2007/11/21 02:13:00, BAK, 2016-07-05 21:33:35.762, foo, 2016-07-05 21:33:35.762, foo}
2016-07-05 21:33:35,762 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{69, 52, 100, 2006/12/23 23:59:40, BAK, 2016-07-05 21:33:35.762, foo, 2016-07-05 21:33:35.762, foo}
2016-07-05 21:33:35,763 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{70, 52, 40, 2007/12/23 23:59:40, HAN, 2016-07-05 21:33:35.763, foo, 2016-07-05 21:33:35.763, foo}
2016-07-05 21:33:35,764 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{71, 52, 40, 2008/12/23 23:59:40, HAN, 2016-07-05 21:33:35.764, foo, 2016-07-05 21:33:35.764, foo}
2016-07-05 21:33:35,764 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{72, 52, 40, 2009/12/23 23:59:40, HAN, 2016-07-05 21:33:35.764, foo, 2016-07-05 21:33:35.764, foo}
2016-07-05 21:33:35,765 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{73, 52, 40, 2010/12/23 23:59:40, BAK, 2016-07-05 21:33:35.765, foo, 2016-07-05 21:33:35.765, foo}
2016-07-05 21:33:35,766 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{74, 52, 40, 2011/12/23 23:59:40, CRC, 2016-07-05 21:33:35.766, foo, 2016-07-05 21:33:35.766, foo}
2016-07-05 21:33:35,766 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{75, 52, 40, 2012/12/23 23:59:40, BAK, 2016-07-05 21:33:35.766, foo, 2016-07-05 21:33:35.766, foo}
2016-07-05 21:33:35,767 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{76, 52, 40, 2013/12/23 23:59:40, HAN, 2016-07-05 21:33:35.767, foo, 2016-07-05 21:33:35.767, foo}
2016-07-05 21:33:35,768 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{77, 52, 40, 2014/12/23 23:59:40, HAN, 2016-07-05 21:33:35.767, foo, 2016-07-05 21:33:35.767, foo}
2016-07-05 21:33:35,768 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{78, 52, 40, 2015/12/23 23:59:40, HAN, 2016-07-05 21:33:35.768, foo, 2016-07-05 21:33:35.768, foo}
2016-07-05 21:33:35,769 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{79, 53, 600000, 2007/12/28 12:13:10, BAK, 2016-07-05 21:33:35.769, foo, 2016-07-05 21:33:35.769, foo}
2016-07-05 21:33:35,770 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{80, 54, 1700.42, 2008/02/22 23:59:41, CRC, 2016-07-05 21:33:35.77, foo, 2016-07-05 21:33:35.77, foo}
2016-07-05 21:33:35,772 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{81, 55, 1600, 2012/07/21 12:13:00, HAN, 2016-07-05 21:33:35.772, foo, 2016-07-05 21:33:35.772, foo}
2016-07-05 21:33:35,773 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{82, 55, 200, 2008/07/21 12:13:00, CRC, 2016-07-05 21:33:35.773, foo, 2016-07-05 21:33:35.773, foo}
2016-07-05 21:33:35,774 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{83, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-05 21:33:35.774, foo, 2016-07-05 21:33:35.774, foo}
2016-07-05 21:33:35,775 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{84, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-05 21:33:35.775, foo, 2016-07-05 21:33:35.775, foo}
2016-07-05 21:33:35,776 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{85, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-05 21:33:35.776, foo, 2016-07-05 21:33:35.776, foo}
2016-07-05 21:33:35,777 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{86, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-05 21:33:35.777, foo, 2016-07-05 21:33:35.777, foo}
2016-07-05 21:33:35,778 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{87, 57, 999, 2014/02/01 02:13:00, HAN, 2016-07-05 21:33:35.778, foo, 2016-07-05 21:33:35.778, foo}
2016-07-05 21:33:35,779 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{88, 58, 4000000, 2006/12/12 23:59:43, HAN, 2016-07-05 21:33:35.779, foo, 2016-07-05 21:33:35.779, foo}
2016-07-05 21:33:35,779 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{89, 59, 380.77, 2013/05/01 02:03:00, CRC, 2016-07-05 21:33:35.779, foo, 2016-07-05 21:33:35.779, foo}
2016-07-05 21:33:35,780 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{90, 60, 675.88, 2006/12/12 23:59:44, BAK, 2016-07-05 21:33:35.78, foo, 2016-07-05 21:33:35.78, foo}
2016-07-05 21:33:35,781 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{91, 61, 12000000, 2008/03/03 06:34:56, HAN, 2016-07-05 21:33:35.781, foo, 2016-07-05 21:33:35.781, foo}
2016-07-05 21:33:35,782 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{92, 62, 20000, 2009/06/04 06:34:56, HAN, 2016-07-05 21:33:35.782, foo, 2016-07-05 21:33:35.782, foo}
2016-07-05 21:33:35,783 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{93, 63, 2000, 2010/09/26 06:34:56, HAN, 2016-07-05 21:33:35.782, foo, 2016-07-05 21:33:35.782, foo}
2016-07-05 21:33:35,783 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{94, 64, 50, 2011/03/03 09:45:29, BAK, 2016-07-05 21:33:35.783, foo, 2016-07-05 21:33:35.783, foo}
2016-07-05 21:33:35,784 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{95, 65, 1000000, 2012/06/04 09:45:29, BAK, 2016-07-05 21:33:35.784, foo, 2016-07-05 21:33:35.784, foo}
2016-07-05 21:33:35,785 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{96, 66, 900000, 2013/09/26 09:45:29, BAK, 2016-07-05 21:33:35.784, foo, 2016-07-05 21:33:35.784, foo}
2016-07-05 21:33:35,785 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{97, 67, 3000, 2014/03/03 21:02:12, CRC, 2016-07-05 21:33:35.785, foo, 2016-07-05 21:33:35.785, foo}
2016-07-05 21:33:35,792 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{98, 68, 3000, 2015/06/04 21:02:12, CRC, 2016-07-05 21:33:35.792, foo, 2016-07-05 21:33:35.792, foo}
2016-07-05 21:33:35,792 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{99, 69, 1000, 2016/09/26 21:02:12, CRC, 2016-07-05 21:33:35.792, foo, 2016-07-05 21:33:35.792, foo}
2016-07-05 21:33:35,793 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{100, 70, 1200, 2017/03/03 01:11:00, HAN, 2016-07-05 21:33:35.793, foo, 2016-07-05 21:33:35.793, foo}
2016-07-05 21:33:35,848 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 100 rows are loaded to PURCHASE_PAYMENT
2016-07-05 21:33:35,849 [main] INFO  (DfTakeFinallyProcess#takeFinally():219) - 
2016-07-05 21:33:35,849 [main] INFO  (DfTakeFinallyProcess#takeFinally():220) - * * * * * * * **
2016-07-05 21:33:35,849 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - *              *
2016-07-05 21:33:35,850 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * Take Finally *
2016-07-05 21:33:35,850 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2016-07-05 21:33:35,850 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * * * * * * * **
2016-07-05 21:33:35,850 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: take-finally.sql
2016-07-05 21:33:35,851 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Member addresses should be only one at any time.
-- - - - - - - - - - -/
select adr.MEMBER_ADDRESS_ID, adr.MEMBER_ID
     , adr.VALID_BEGIN_DATE, adr.VALID_END_DATE
     , adr.ADDRESS
  from MEMBER_ADDRESS adr
 where exists (select subadr.MEMBER_ADDRESS_ID
                 from MEMBER_ADDRESS subadr
                where subadr.MEMBER_ID = adr.MEMBER_ID
                  and subadr.VALID_BEGIN_DATE > adr.VALID_BEGIN_DATE
                  -- 有効期間が一日だけ重複しているパターンも検出
                  and subadr.VALID_BEGIN_DATE <= adr.VALID_END_DATE
       )
2016-07-05 21:33:35,853 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 正式会員日時を持ってる仮会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'PRV'
   and mem.FORMALIZED_DATETIME is not NULL
2016-07-05 21:33:35,855 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- まだ生まれていない会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.BIRTHDATE > now()
2016-07-05 21:33:35,856 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 退会会員が退会情報を持っていることをアサート
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'WDL'
   and not exists (select wdl.MEMBER_ID
                     from MEMBER_WITHDRAWAL wdl
                    where wdl.MEMBER_ID = mem.MEMBER_ID
       )
2016-07-05 21:33:35,857 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=4 failure=0
2016-07-05 21:33:35,858 [main] INFO  (DfSqlFileFireMan#fire():89) - {Take Finally}: success=4 failure=0 (in 1 files)
2016-07-05 21:33:35,859 [main] INFO  (DfAlterCheckProcess#deleteExtractedPreviousResource():289) - ...Deleting the extracted previous resources
2016-07-05 21:33:35,861 [main] INFO  (DfAlterCheckProcess#alterSchema():592) - 
2016-07-05 21:33:35,861 [main] INFO  (DfAlterCheckProcess#alterSchema():593) - +------------------+
2016-07-05 21:33:35,861 [main] INFO  (DfAlterCheckProcess#alterSchema():594) - |                  |
2016-07-05 21:33:35,862 [main] INFO  (DfAlterCheckProcess#alterSchema():595) - |   Alter Schema   |
2016-07-05 21:33:35,862 [main] INFO  (DfAlterCheckProcess#alterSchema():596) - |                  |
2016-07-05 21:33:35,862 [main] INFO  (DfAlterCheckProcess#alterSchema():597) - +------------------+
2016-07-05 21:33:35,867 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: alter-schema.sql
2016-07-05 21:33:35,868 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- add column for display order
alter table PRODUCT_STATUS add DISPLAY_ORDER INTEGER NOT NULL after PRODUCT_STATUS_NAME
2016-07-05 21:33:35,920 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - update PRODUCT_STATUS set DISPLAY_ORDER = 1 where PRODUCT_STATUS_CODE= 'ONS'
2016-07-05 21:33:35,921 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - update PRODUCT_STATUS set DISPLAY_ORDER = 2 where PRODUCT_STATUS_CODE= 'PST'
2016-07-05 21:33:35,922 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - update PRODUCT_STATUS set DISPLAY_ORDER = 3 where PRODUCT_STATUS_CODE= 'SST'
2016-07-05 21:33:35,923 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - alter table PRODUCT_STATUS add constraint unique(DISPLAY_ORDER)
2016-07-05 21:33:35,940 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- create table MEMBER_FOLLOWING
create table MEMBER_FOLLOWING(
    MEMBER_FOLLOWING_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員フォローイングID: 連番',
    MY_MEMBER_ID INTEGER NOT NULL COMMENT 'わたし: 気になった人がいて...勇気を振り絞った会員のID。',
    YOUR_MEMBER_ID INTEGER NOT NULL COMMENT 'あなた: いきなりのアクションに...ちょっと心揺らいだ会員のID。',
    FOLLOW_DATETIME DATETIME NOT NULL COMMENT 'その瞬間: ふりかえるとちょっと恥ずかしい気持ちになる日時',
    PRIMARY KEY (MEMBER_FOLLOWING_ID),
    UNIQUE (MY_MEMBER_ID, YOUR_MEMBER_ID)
) COMMENT='会員フォローイング: とある会員が他の会員をフォローできる。すると、フォローした会員の購入履歴が閲覧できる。'
2016-07-05 21:33:35,958 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_MY_MEMBER 
    foreign key (MY_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-05 21:33:35,979 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_YOUR_MEMBER 
    foreign key (YOUR_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-05 21:33:36,003 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_UNIQUE_REVERSE on MEMBER_FOLLOWING(YOUR_MEMBER_ID, MY_MEMBER_ID)
2016-07-05 21:33:36,019 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_FOLLOW_DATETIME on MEMBER_FOLLOWING(FOLLOW_DATETIME)
2016-07-05 21:33:36,037 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=10 failure=0
2016-07-05 21:33:36,037 [main] INFO  (DfSqlFileFireMan#fire():89) - {Alter Schema}: success=10 failure=0 (in 1 files)
2016-07-05 21:33:36,038 [main] INFO  (DfTakeFinallyProcess#takeFinally():219) - 
2016-07-05 21:33:36,038 [main] INFO  (DfTakeFinallyProcess#takeFinally():220) - * * * * * * * **
2016-07-05 21:33:36,039 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - *              *
2016-07-05 21:33:36,039 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * Take Finally *
2016-07-05 21:33:36,039 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2016-07-05 21:33:36,039 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * * * * * * * **
2016-07-05 21:33:36,039 [main] INFO  (DfSqlFileFireMan#fire():89) - {Take Finally}: success=0 failure=0 (in 0 files)
2016-07-05 21:33:36,040 [main] INFO  (DfSchemaXmlSerializer#serialize():285) - 
2016-07-05 21:33:36,040 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - ...Starting to process JDBC to SchemaXML
2016-07-05 21:33:36,040 [main] INFO  (DfSchemaXmlSerializer#generateXML():359) - ...Getting DB connection
2016-07-05 21:33:36,040 [main] INFO  (DfSchemaXmlSerializer#generateXML():362) - ...Getting DB meta data
2016-07-05 21:33:36,041 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-05 21:33:36,041 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-05 21:33:36,041 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-05 21:33:36,044 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'maihamadb' order by table_name asc
2016-07-05 21:33:36,046 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'maihamadb' order by table_name asc, column_name asc
2016-07-05 21:33:36,070 [main] INFO  (DfSchemaXmlSerializer#processTable():419) - 
2016-07-05 21:33:36,071 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2016-07-05 21:33:36,071 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ [Table List]
2016-07-05 21:33:36,072 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member(TABLE) // 会員: 会員登録時にデータが登録される。...
2016-07-05 21:33:36,083 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_address(TABLE) // 会員住所情報: 会員の住所に関する情報。...
2016-07-05 21:33:36,101 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_following(TABLE) // 会員フォローイング: とある会員が他の会員をフォローできる。すると、フォローした会員の購入履歴が閲覧できる。
2016-07-05 21:33:36,109 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_login(TABLE) // 会員ログイン情報: ログインするたびに登録されるログイン履歴。
2016-07-05 21:33:36,121 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_security(TABLE) // 会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある
2016-07-05 21:33:36,137 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_service(TABLE) // 会員サービス: 会員のサービス情報（ポイントサービスなど）。
2016-07-05 21:33:36,147 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_status(TABLE) // 会員ステータス
2016-07-05 21:33:36,156 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_withdrawal(TABLE) // 会員退会情報: 退会会員の退会に関する詳細な情報。...
2016-07-05 21:33:36,166 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product(TABLE) // 商品
2016-07-05 21:33:36,179 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product_category(TABLE) // 商品カテゴリ: 商品のカテゴリを表現するマスタ。...
2016-07-05 21:33:36,189 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product_status(TABLE) // 商品ステータス
2016-07-05 21:33:36,196 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.purchase(TABLE) // 購入: 一つの商品に対する一回の購入を表現する。...
2016-07-05 21:33:36,210 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.purchase_payment(TABLE) // 購入支払: 購入に対する支払。...
2016-07-05 21:33:36,221 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.region(TABLE) // 地域: 主に会員の住所に対応する地域。...
2016-07-05 21:33:36,230 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.service_rank(TABLE) // サービスランク: 会員のサービスレベルを表現するランク。...
2016-07-05 21:33:36,242 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.withdrawal_reason(TABLE) // 退会理由: 会員に選ばせる定型的な退会理由のマスタ。
2016-07-05 21:33:36,250 [main] INFO  (DfSchemaXmlSerializer#processTable():433) - $ 
2016-07-05 21:33:36,251 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ [Table Count]
2016-07-05 21:33:36,251 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 16
2016-07-05 21:33:36,251 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ = = = = = = = = = =/
2016-07-05 21:33:36,251 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - 
2016-07-05 21:33:36,252 [main] INFO  (DfSchemaXmlSerializer#processSequence():796) - ...Getting sequences
2016-07-05 21:33:36,252 [main] INFO  (DfSchemaXmlSerializer#serialize():300) - ...Serializing XML:
2016-07-05 21:33:36,252 [main] INFO  (DfSchemaXmlSerializer#serialize():301) -   filePath = playsql/migration/schema/migration-previous-schema.xml
2016-07-05 21:33:36,252 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   encoding = UTF-8
2016-07-05 21:33:36,260 [main] INFO  (DfAlterCheckProcess#deleteFile():1285) - ...Deleting the AlterCheck diffmap file: playsql/migration/schema/migration-alter-check.diffmap
2016-07-05 21:33:36,261 [main] INFO  (DfAlterCheckProcess#deleteFile():1285) - ...Deleting the AlterCheck result file: playsql/migration/schema/alter-check-result.html
2016-07-05 21:33:36,261 [main] INFO  (DfAlterCheckProcess#schemaDiff():896) - 
2016-07-05 21:33:36,261 [main] INFO  (DfAlterCheckProcess#schemaDiff():897) - +-----------------+
2016-07-05 21:33:36,288 [main] INFO  (DfAlterCheckProcess#schemaDiff():898) - |                 |
2016-07-05 21:33:36,288 [main] INFO  (DfAlterCheckProcess#schemaDiff():899) - |   Schema Diff   |
2016-07-05 21:33:36,288 [main] INFO  (DfAlterCheckProcess#schemaDiff():900) - |                 |
2016-07-05 21:33:36,288 [main] INFO  (DfAlterCheckProcess#schemaDiff():901) - +-----------------|
2016-07-05 21:33:36,307 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-05 21:33:36,409 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-05 21:33:36,495 [main] INFO  (DfAlterCheckProcess#processSuccess():988) - 
2016-07-05 21:33:36,495 [main] INFO  (DfAlterCheckProcess#processSuccess():989) - +-------------------+
2016-07-05 21:33:36,495 [main] INFO  (DfAlterCheckProcess#processSuccess():990) - |                   |
2016-07-05 21:33:36,495 [main] INFO  (DfAlterCheckProcess#processSuccess():991) - |   Success Story   |
2016-07-05 21:33:36,496 [main] INFO  (DfAlterCheckProcess#processSuccess():992) - |                   |
2016-07-05 21:33:36,496 [main] INFO  (DfAlterCheckProcess#processSuccess():993) - +-------------------+
2016-07-05 21:33:36,501 [main] INFO  (DfAlterCheckProcess#compressCheckedAlterZip():1070) - ...Saving the history to playsql/migration/history/201607/20160705_2133/checked-alter-to-20160705-2058.zip
2016-07-05 21:33:36,508 [main] INFO  (DfAlterCheckProcess$7#accept():1075) -   playsql/migration/alter/alter-schema.sql
2016-07-05 21:33:36,513 [main] INFO  (DfAlterCheckProcess#deleteFile():1285) - ...Deleting the executed alterSqlFile: playsql/migration/alter/alter-schema.sql
2016-07-05 21:33:36,514 [main] INFO  (DfAlterCheckProcess#deleteFile():1285) - ...Deleting the SchemaXml file for previous schema: playsql/migration/schema/migration-previous-schema.xml
2016-07-05 21:33:36,514 [main] INFO  (DfAlterCheckProcess#deleteFile():1285) - ...Deleting the SchemaXml file for next schema: playsql/migration/schema/migration-next-schema.xml
2016-07-05 21:33:36,532 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-05 21:33:36,548 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-05 21:33:36,551 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m11s603ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=44 failure=0 (in 3 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql
  o replace-schema-50-procedure.sql

 {Load Data}: loaded-files=3
  (common)
  o 10-master.xls
  (ut)
  o 20-member.xls
  o 30-product.xls

 {Take Finally}: success=4 failure=0 (in 1 files)
  o take-finally.sql

 {Alter Schema}: success=10 failure=0 (in 1 files)
  o alter-schema.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2016-07-05 21:33:58,497 [main] INFO  (DfReplaceSchemaTask#begin():91) - +------------------------------------------+
2016-07-05 21:33:58,500 [main] INFO  (DfReplaceSchemaTask#begin():92) - |                                          |
2016-07-05 21:33:58,501 [main] INFO  (DfReplaceSchemaTask#begin():93) - |              ReplaceSchema               |
2016-07-05 21:33:58,506 [main] INFO  (DfReplaceSchemaTask#begin():101) - |                                          |
2016-07-05 21:33:58,506 [main] INFO  (DfReplaceSchemaTask#begin():102) - +------------------------------------------+
2016-07-05 21:33:58,508 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():342) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2016-07-05 21:34:00,025 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-05 21:34:00,025 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-05 21:34:00,026 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-05 21:34:00,026 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-05 21:34:00,035 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-05 21:34:00,458 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-05 21:34:00,459 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-05 21:34:00,491 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2016-07-05 21:34:00,491 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2016-07-05 21:34:00,492 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2016-07-05 21:34:00,495 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2016-07-05 21:34:00,496 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2016-07-05 21:34:00,497 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2016-07-05 21:34:00,520 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-05 21:34:00,520 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-05 21:34:00,521 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-05 21:34:00,564 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_address
2016-07-05 21:34:00,571 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_following
2016-07-05 21:34:00,584 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_login
2016-07-05 21:34:00,590 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_security
2016-07-05 21:34:00,601 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_service
2016-07-05 21:34:00,609 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_withdrawal
2016-07-05 21:34:00,631 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table purchase_payment
2016-07-05 21:34:00,657 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member drop foreign key FK_MEMBER_MEMBER_STATUS
2016-07-05 21:34:00,676 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_address drop foreign key FK_MEMBER_ADDRESS_MEMBER
2016-07-05 21:34:00,691 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_address drop foreign key FK_MEMBER_ADDRESS_REGION
2016-07-05 21:34:00,715 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_following drop foreign key FK_MEMBER_FOLLOWING_MY_MEMBER
2016-07-05 21:34:00,733 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_following drop foreign key FK_MEMBER_FOLLOWING_YOUR_MEMBER
2016-07-05 21:34:00,755 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_login drop foreign key FK_MEMBER_LOGIN_MEMBER_STATUS
2016-07-05 21:34:00,771 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_login drop foreign key FK_MEMBER_LOGIN_MEMBER
2016-07-05 21:34:00,793 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_security drop foreign key FK_MEMBER_SECURITY_MEMBER
2016-07-05 21:34:00,816 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_service drop foreign key FK_MEMBER_SERVICE_MEMBER
2016-07-05 21:34:00,831 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_service drop foreign key FK_MEMBER_SERVICE_SERVICE_RANK_CODE
2016-07-05 21:34:00,855 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_withdrawal drop foreign key FK_MEMBER_WITHDRAWAL_MEMBER
2016-07-05 21:34:00,871 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_withdrawal drop foreign key FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON
2016-07-05 21:34:00,886 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table product drop foreign key FK_PRODUCT_PRODUCT_CATEGORY
2016-07-05 21:34:00,902 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table product drop foreign key FK_PRODUCT_PRODUCT_STATUS
2016-07-05 21:34:00,923 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table product_category drop foreign key FK_PRODUCT_CATEGORY_PARENT
2016-07-05 21:34:00,945 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table purchase drop foreign key FK_PURCHASE_MEMBER
2016-07-05 21:34:00,961 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table purchase drop foreign key FK_PURCHASE_PRODUCT
2016-07-05 21:34:00,985 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table purchase_payment drop foreign key FK_PURCHASE_PAYMENT_PURCHASE
2016-07-05 21:34:01,006 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member
2016-07-05 21:34:01,010 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_address
2016-07-05 21:34:01,013 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_following
2016-07-05 21:34:01,017 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_login
2016-07-05 21:34:01,022 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_security
2016-07-05 21:34:01,025 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_service
2016-07-05 21:34:01,030 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_status
2016-07-05 21:34:01,034 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_withdrawal
2016-07-05 21:34:01,038 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table product
2016-07-05 21:34:01,041 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table product_category
2016-07-05 21:34:01,045 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table product_status
2016-07-05 21:34:01,048 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table purchase
2016-07-05 21:34:01,053 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table purchase_payment
2016-07-05 21:34:01,057 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table region
2016-07-05 21:34:01,061 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table service_rank
2016-07-05 21:34:01,065 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table withdrawal_reason
2016-07-05 21:34:01,190 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop procedure SP_IN_OUT_PARAMETER
2016-07-05 21:34:01,195 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop procedure SP_RETURN_RESULT_SET
2016-07-05 21:34:01,198 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2016-07-05 21:34:01,198 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2016-07-05 21:34:01,199 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2016-07-05 21:34:01,199 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2016-07-05 21:34:01,199 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2016-07-05 21:34:01,200 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2016-07-05 21:34:01,207 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-00-system.sql
2016-07-05 21:34:01,213 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2016-07-05 21:34:01,215 [main] INFO  (DfCreateSchemaProcess$1#dispatch():295) - ...Creating a connection to system
2016-07-05 21:34:01,217 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():520) - ...Creating a connection for additional user: root
2016-07-05 21:34:01,232 [main] INFO  (DfCreateSchemaProcess$1#dispatch():321) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2016-07-05 21:34:01,233 [main] INFO  (DfCreateSchemaProcess$1#dispatch():323) -  -> Can't create database 'maihamadb'; database exists
2016-07-05 21:34:01,236 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():433) - ...Reviving the user 'system' until the end of this SQL file
2016-07-05 21:34:01,237 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on maihamadb.*
  to maihamadb@localhost identified by 'maihamadb'
2016-07-05 21:34:01,242 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2016-07-05 21:34:01,246 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-07-05 21:34:01,247 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-10-basic.sql
2016-07-05 21:34:01,247 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():370) - ...Saying good-bye to the user 'system' again
2016-07-05 21:34:01,247 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():374) - ...Clearing revived users
2016-07-05 21:34:01,247 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():381) - ...Coming back to the main user from the user 'system'
2016-07-05 21:34:01,253 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER(
    MEMBER_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員ID: 会員を識別するID。連番として基本的に自動採番される。
（会員IDだけに限らず）採番方法はDBMSによって変わる。',
    MEMBER_NAME VARCHAR(160) NOT NULL COMMENT '会員名称: 会員のフルネームの名称。',
    MEMBER_ACCOUNT VARCHAR(50) NOT NULL COMMENT '会員アカウント: 会員がログイン時に利用するアカウントNO。',
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード',
    FORMALIZED_DATETIME DATETIME COMMENT '正式会員日時: 会員が正式に確定した日時。一度確定したら更新されない。
仮会員のときはnull。',
    BIRTHDATE DATE COMMENT '生年月日: 必須項目ではないので、このデータがない会員もいる。',
    REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時: レコードが登録された日時。共通カラムの一つ。',
    REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ: レコードを登録したユーザ。共通カラムの一つ。',
    UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時: レコードが（最後に）更新された日時。共通カラムの一つ。',
    UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ: レコードを更新したユーザ。',
    VERSION_NO BIGINT NOT NULL COMMENT 'バージョンNO: レコードのバージョンを示すNO。
更新回数と等しく、主に排他制御のために利用される。',
    PRIMARY KEY (MEMBER_ID),
    UNIQUE (MEMBER_ACCOUNT)
) COMMENT='会員: 会員登録時にデータが登録される。
基本的に物理削除はなく、退会したらステータスが退会会員になる。'
2016-07-05 21:34:01,274 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_ADDRESS(
    MEMBER_ADDRESS_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員住所ID: 会員住所を識別するID。
履歴分も含むテーブルなので、これ自体はFKではない。',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
履歴分を含むため、これだけではユニークにはならない。',
    VALID_BEGIN_DATE DATE NOT NULL COMMENT '有効開始日: 一つの有効期間の開始を示す日付。
前の有効終了日の次の日の値が格納される。',
    VALID_END_DATE DATE NOT NULL COMMENT '有効終了日: 有効期間の終了日。
次の有効開始日の一日前の値が格納される。
ただし、次の有効期間がない場合は 9999/12/31 となる。',
    ADDRESS VARCHAR(200) NOT NULL COMMENT '住所: まるごと住所',
    REGION_ID INTEGER NOT NULL COMMENT '地域ID: 地域を参照するID。
ここでは特に住所の内容と連動しているわけではない。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ADDRESS_ID),
    UNIQUE (MEMBER_ID, VALID_BEGIN_DATE)
) COMMENT='会員住所情報: 会員の住所に関する情報。
同時に有効期間ごとに履歴管理されている。'
2016-07-05 21:34:01,287 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_LOGIN(
    MEMBER_LOGIN_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員ログインID',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID',
    LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時: ログインした瞬間の日時。',
    MOBILE_LOGIN_FLG INTEGER NOT NULL COMMENT 'モバイルログインフラグ: モバイル機器からのログインか否か。',
    LOGIN_MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT 'ログイン会員ステータスコード: ログイン時の会員ステータス',
    PRIMARY KEY (MEMBER_LOGIN_ID),
    UNIQUE (MEMBER_ID, LOGIN_DATETIME)
) COMMENT='会員ログイン情報: ログインするたびに登録されるログイン履歴。'
2016-07-05 21:34:01,348 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SECURITY(
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: そのまま one-to-one を構成するためのFKとなる。',
    LOGIN_PASSWORD VARCHAR(50) NOT NULL COMMENT 'ログインパスワード: ログイン時に利用するパスワード。
本当は良くないが、Exampleなのでひとまず暗号化していない。',
    REMINDER_QUESTION VARCHAR(50) NOT NULL COMMENT 'リマインダ質問: パスワードを忘れた際のリマインダ機能における質問の内容。',
    REMINDER_ANSWER VARCHAR(50) NOT NULL COMMENT 'リマインダ回答: パスワードを忘れた際のリマインダ機能における質問の答え。',
    REMINDER_USE_COUNT INTEGER NOT NULL COMMENT 'リマインダ回数: 忘れっぽい人を分析するためのもの。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある'
2016-07-05 21:34:01,421 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SERVICE(
	MEMBER_SERVICE_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員サービスID: 代理キー。律儀にIDの役割を分ける',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。ユニークなので、会員とは one-to-one の関係に。',
    SERVICE_POINT_COUNT INTEGER NOT NULL COMMENT 'サービスポイント数: 会員が現在利用できるサービスポイントの数。
基本的に、購入時には増えてポイントを使ったら減る。',
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを参照するコード。
どんなランクがあるのかドキドキですね。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_SERVICE_ID),
    UNIQUE (MEMBER_ID)
) COMMENT='会員サービス: 会員のサービス情報（ポイントサービスなど）。'
2016-07-05 21:34:01,493 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_WITHDRAWAL(
    MEMBER_ID INTEGER NOT NULL,
    WITHDRAWAL_REASON_CODE CHAR(3) COMMENT '退会理由コード: 退会した定型理由を参照するコード。
何も言わずに退会する会員もいるので必須項目ではない。',
    WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト: 会員がフリーテキストで入力できる退会理由。
もう言いたいこと言ってもらう感じ。',
    WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT '退会日時: 退会した瞬間の日時。
正式会員日時と違い、こっちはone-to-oneの別テーブルで。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員退会情報: 退会会員の退会に関する詳細な情報。
退会会員のみデータが存在する。'
2016-07-05 21:34:01,569 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE(
    PURCHASE_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入ID: 連番',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
購入を識別する自然キー（複合ユニーク制約）の筆頭要素。',
    PRODUCT_ID INTEGER NOT NULL COMMENT '商品ID: 商品を参照するID。',
    PURCHASE_DATETIME DATETIME NOT NULL COMMENT '購入日時: 購入した瞬間の日時。',
    PURCHASE_COUNT INTEGER NOT NULL COMMENT '購入数量: 購入した商品の（一回の購入における）数量。',
    PURCHASE_PRICE INTEGER NOT NULL COMMENT '購入価格: 購入によって実際に会員が支払った（支払う予定の）価格。
基本は商品の定価に購入数量を掛けたものになるが、
ポイント利用や割引があったりと必ずしもそうはならない。',
    PAYMENT_COMPLETE_FLG INTEGER NOT NULL COMMENT '支払完了フラグ: この購入に関しての支払いが完了しているか否か。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PURCHASE_ID),
    UNIQUE (MEMBER_ID, PRODUCT_ID, PURCHASE_DATETIME),
    KEY (MEMBER_ID),
    KEY (PRODUCT_ID)
) COMMENT='購入: 一つの商品に対する一回の購入を表現する。
一回の購入で一つの商品を複数個買うこともある。'
2016-07-05 21:34:01,635 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE_PAYMENT(
    PURCHASE_PAYMENT_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入支払ID: 連番',
    PURCHASE_ID BIGINT NOT NULL COMMENT '購入ID: 支払い対象の購入へのID',
    PAYMENT_AMOUNT DECIMAL(10,2) NOT NULL COMMENT '支払金額: 支払った金額。さて、小数点なのはなぜでしょう？',
    PAYMENT_DATETIME DATETIME NOT NULL COMMENT '支払日時: 支払ったときの日時',
    PAYMENT_METHOD_CODE CHAR(3) NOT NULL COMMENT '支払方法コード: 手渡しや銀行振込など',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (PURCHASE_PAYMENT_ID)
) COMMENT='購入支払: 購入に対する支払。
分割払いもできるのでmanyとなり、会員からの孫テーブルのテストができてうれしい。'
2016-07-05 21:34:01,705 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT(
    PRODUCT_ID INTEGER AUTO_INCREMENT NOT NULL,
    PRODUCT_NAME VARCHAR(50) NOT NULL COMMENT '商品名称',
    PRODUCT_HANDLE_CODE VARCHAR(100) NOT NULL COMMENT '商品ハンドルコード: 商品を識別する業務上のコード。',
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL,
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL,
    REGULAR_PRICE INTEGER NOT NULL COMMENT '定価',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PRODUCT_ID),
    UNIQUE (PRODUCT_HANDLE_CODE)
) COMMENT='商品'
2016-07-05 21:34:01,777 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_CATEGORY(
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL COMMENT '商品カテゴリコード',
    PRODUCT_CATEGORY_NAME VARCHAR(50) NOT NULL COMMENT '商品カテゴリ名称',
    PARENT_CATEGORY_CODE CHAR(3) COMMENT '親カテゴリコード: 最上位の場合はデータなし。',
    PRIMARY KEY (PRODUCT_CATEGORY_CODE)
) COMMENT='商品カテゴリ: 商品のカテゴリを表現するマスタ。
自己参照の階層になっている。'
2016-07-05 21:34:01,789 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_STATUS(
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL COMMENT '商品ステータスコード',
    PRODUCT_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '商品ステータス名称',
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (PRODUCT_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='商品ステータス'
2016-07-05 21:34:01,843 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table REGION(
    REGION_ID INTEGER NOT NULL COMMENT '地域ID',
    REGION_NAME VARCHAR(50) NOT NULL COMMENT '地域名称',
    PRIMARY KEY (REGION_ID)
) COMMENT='地域: 主に会員の住所に対応する地域。
かなりざっくりした感じではある。'
2016-07-05 21:34:01,854 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table SERVICE_RANK(
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを識別するコード。',
    SERVICE_RANK_NAME VARCHAR(50) NOT NULL COMMENT 'サービスランク名称: サービスランクの名称。
（ゴールドとかプラチナとか基本的には威厳のある名前）',
    SERVICE_POINT_INCIDENCE NUMERIC(5, 3) NOT NULL COMMENT 'サービスポイント発生率: 購入ごとのサービスポイントの発生率。
購入価格にこの値をかけた数が発生ポイント。',
    NEW_ACCEPTABLE_FLG INTEGER NOT NULL COMMENT '新規受け入れ可能フラグ: このランクへの新規受け入れができるかどうか。',
    DESCRIPTION VARCHAR(200) NOT NULL,
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (SERVICE_RANK_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='サービスランク: 会員のサービスレベルを表現するランク。
（ゴールドとかプラチナとか）'
2016-07-05 21:34:01,898 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_STATUS(
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード: 会員ステータスを識別するコード。',
    MEMBER_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '会員ステータス名称',
    DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明: 会員ステータスそれぞれの説明。
気の利いた説明があるとディベロッパーがとても助かる。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順: UI上のステータスの表示順を示すNO。
並べるときは、このカラムに対して昇順のソート条件にする。',
    PRIMARY KEY (MEMBER_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='会員ステータス'
2016-07-05 21:34:01,939 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table WITHDRAWAL_REASON(
    WITHDRAWAL_REASON_CODE CHAR(3) NOT NULL COMMENT '退会理由コード',
    WITHDRAWAL_REASON_TEXT TEXT NOT NULL COMMENT '退会理由テキスト: 退会理由の内容。テキスト形式なので目いっぱい書けるが、
そうするとUI側できれいに見せるのが大変でしょうね。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順',
    PRIMARY KEY (WITHDRAWAL_REASON_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='退会理由: 会員に選ばせる定型的な退会理由のマスタ。'
2016-07-05 21:34:01,948 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_FOLLOWING(
    MEMBER_FOLLOWING_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員フォローイングID: 連番',
    MY_MEMBER_ID INTEGER NOT NULL COMMENT 'わたし: 気になった人がいて...勇気を振り絞った会員のID。',
    YOUR_MEMBER_ID INTEGER NOT NULL COMMENT 'あなた: いきなりのアクションに...ちょっと心揺らいだ会員のID。',
    FOLLOW_DATETIME DATETIME NOT NULL COMMENT 'その瞬間: ふりかえるとちょっと恥ずかしい気持ちになる日時',
    PRIMARY KEY (MEMBER_FOLLOWING_ID),
    UNIQUE (MY_MEMBER_ID, YOUR_MEMBER_ID)
) COMMENT='会員フォローイング: とある会員が他の会員をフォローできる。すると、フォローした会員の購入履歴が閲覧できる。'
2016-07-05 21:34:01,985 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER add constraint FK_MEMBER_MEMBER_STATUS 
    foreign key (MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-07-05 21:34:02,001 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-05 21:34:02,021 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_REGION 
    foreign key (REGION_ID) references REGION (REGION_ID)
2016-07-05 21:34:02,042 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER_STATUS 
    foreign key (LOGIN_MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-07-05 21:34:02,065 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-05 21:34:02,082 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-05 21:34:02,101 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_SERVICE_RANK_CODE 
    foreign key (SERVICE_RANK_CODE) references SERVICE_RANK (SERVICE_RANK_CODE)
2016-07-05 21:34:02,122 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SECURITY add constraint FK_MEMBER_SECURITY_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-05 21:34:02,143 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-05 21:34:02,162 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON 
    foreign key (WITHDRAWAL_REASON_CODE) references WITHDRAWAL_REASON (WITHDRAWAL_REASON_CODE)
2016-07-05 21:34:02,181 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-05 21:34:02,204 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_PRODUCT 
    foreign key (PRODUCT_ID) references PRODUCT (PRODUCT_ID)
2016-07-05 21:34:02,228 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE_PAYMENT add constraint FK_PURCHASE_PAYMENT_PURCHASE 
    foreign key (PURCHASE_ID) references PURCHASE (PURCHASE_ID)
2016-07-05 21:34:02,256 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_CATEGORY 
    foreign key (PRODUCT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-07-05 21:34:02,286 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_STATUS 
    foreign key (PRODUCT_STATUS_CODE) references PRODUCT_STATUS (PRODUCT_STATUS_CODE)
2016-07-05 21:34:02,314 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT_CATEGORY add constraint FK_PRODUCT_CATEGORY_PARENT 
    foreign key (PARENT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-07-05 21:34:02,336 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_MY_MEMBER 
    foreign key (MY_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-05 21:34:02,362 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_YOUR_MEMBER 
    foreign key (YOUR_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-05 21:34:02,383 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_UNIQUE_REVERSE on MEMBER_FOLLOWING(YOUR_MEMBER_ID, MY_MEMBER_ID)
2016-07-05 21:34:02,398 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_FOLLOW_DATETIME on MEMBER_FOLLOWING(FOLLOW_DATETIME)
2016-07-05 21:34:02,420 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_MEMBER_NAME on MEMBER(MEMBER_NAME)
2016-07-05 21:34:02,438 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FORMALIZED_DATETIME on MEMBER(FORMALIZED_DATETIME)
2016-07-05 21:34:02,457 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_LOGIN_DATETIME on MEMBER_LOGIN(LOGIN_DATETIME)
2016-07-05 21:34:02,477 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_SERVICE_POINT_COUNT on MEMBER_SERVICE(SERVICE_POINT_COUNT)
2016-07-05 21:34:02,497 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRODUCT_DATETIME on PURCHASE(PRODUCT_ID, PURCHASE_DATETIME)
2016-07-05 21:34:02,517 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_DATETIME_MEMBER on PURCHASE(PURCHASE_DATETIME, MEMBER_ID)
2016-07-05 21:34:02,538 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRICE on PURCHASE(PURCHASE_PRICE)
2016-07-05 21:34:02,556 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PAYMENT_DATETIME on PURCHASE_PAYMENT(PAYMENT_DATETIME, PAYMENT_AMOUNT)
2016-07-05 21:34:02,578 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PRODUCT_PRODUCT_NAME on PRODUCT(PRODUCT_NAME)
2016-07-05 21:34:02,597 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=45 failure=0
2016-07-05 21:34:02,598 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-50-procedure.sql
2016-07-05 21:34:02,599 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_IN_OUT_PARAMETER(
	in v_in_varchar varchar(32)
	, out v_out_varchar varchar(32)
	, inout v_inout_varchar varchar(32)
)
begin
	set v_out_varchar = v_inout_varchar;
	set v_inout_varchar = v_in_varchar;
end;

2016-07-05 21:34:02,602 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_RETURN_RESULT_SET(in birthdateFrom DATE)
begin
  select MEMBER_NAME, BIRTHDATE, MEMBER_STATUS_CODE
    from MEMBER
   where BIRTHDATE >= birthdateFrom
   order by BIRTHDATE desc, MEMBER_ID asc;
  select MEMBER_STATUS_CODE, MEMBER_STATUS_NAME
    from MEMBER_STATUS
   order by DISPLAY_ORDER;
end;

2016-07-05 21:34:02,605 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-07-05 21:34:02,606 [main] INFO  (DfSqlFileFireMan#fire():89) - {Create Schema}: success=49 failure=0 (in 3 files)
2016-07-05 21:34:02,606 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():564) - ...Closing connections to change-users: [system]
2016-07-05 21:34:02,724 [main] INFO  (DfLoadDataProcess#execute():129) - 
2016-07-05 21:34:02,724 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2016-07-05 21:34:02,725 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2016-07-05 21:34:02,725 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2016-07-05 21:34:02,725 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2016-07-05 21:34:02,725 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2016-07-05 21:34:02,755 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-05 21:34:02,756 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/common/xls/10-master.xls)
2016-07-05 21:34:02,756 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-05 21:34:03,035 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-05 21:34:03,035 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-05 21:34:03,036 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-05 21:34:03,082 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{PRV, 仮会員, 入会直後のステータスで一部のサイトサービスが利用可能, 3}
2016-07-05 21:34:03,130 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{FML, 正式会員, 正式な会員としてサイトサービスが利用可能, 1}
2016-07-05 21:34:03,131 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{WDL, 退会会員, 退会が確定した会員でサイトサービスはダメ, 2}
2016-07-05 21:34:03,131 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():212) - ...Skipping the terminal garbage row
2016-07-05 21:34:03,137 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to MEMBER_STATUS
2016-07-05 21:34:03,140 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{1, アメリカ}
2016-07-05 21:34:03,141 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{2, カナダ}
2016-07-05 21:34:03,141 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{3, 中国}
2016-07-05 21:34:03,142 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{4, 千葉}
2016-07-05 21:34:03,146 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to REGION
2016-07-05 21:34:03,147 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLT, PLATINUM, 12.3, 1, platinum rank, 1}
2016-07-05 21:34:03,148 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{GLD, GOLD, 9.2, 1, gold rank, 2}
2016-07-05 21:34:03,149 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{SIL, SILVER, 6.74, 1, silver rank, 3}
2016-07-05 21:34:03,149 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{BRZ, BRONZE, 2, 1, bronze rank, 4}
2016-07-05 21:34:03,149 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLS, PLASTIC, 0.1, 0, plastic rank, 5}
2016-07-05 21:34:03,155 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to SERVICE_RANK
2016-07-05 21:34:03,155 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{SIT, サイトが使いにくいから, 1}
2016-07-05 21:34:03,156 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{OTH, その他理由, 4}
2016-07-05 21:34:03,156 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{FRT, フリテンだから, 3}
2016-07-05 21:34:03,157 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{PRD, 商品に魅力がないから, 2}
2016-07-05 21:34:03,164 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to WITHDRAWAL_REASON
2016-07-05 21:34:03,165 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MSC, 音楽, null}
2016-07-05 21:34:03,165 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{FOD, 食品, null}
2016-07-05 21:34:03,166 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MCD, 音楽CD, MSC}
2016-07-05 21:34:03,166 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{INS, 楽器, MSC}
2016-07-05 21:34:03,166 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{HEB, ハーブ, FOD}
2016-07-05 21:34:03,171 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to PRODUCT_CATEGORY
2016-07-05 21:34:03,171 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{ONS, 生産販売可能, 1}
2016-07-05 21:34:03,172 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{PST, 生産中止, 2}
2016-07-05 21:34:03,173 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{SST, 販売中止, 3}
2016-07-05 21:34:03,177 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to PRODUCT_STATUS
2016-07-05 21:34:03,179 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-05 21:34:03,180 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/20-member.xls)
2016-07-05 21:34:03,180 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-05 21:34:03,293 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{1, Stojkovic, Pixy, FML, 2007/12/01 11:01:10, 1965/03/03, 2016-07-05 21:34:03.292, foo, 2016-07-05 21:34:03.292, foo, 0}
2016-07-05 21:34:03,300 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{2, Savicevic, Genius, PRV, null, 1966/09/15, 2016-07-05 21:34:03.299, foo, 2016-07-05 21:34:03.299, foo, 0}
2016-07-05 21:34:03,302 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{3, Mijatovic, Mijato, WDL, 2005/10/03 13:03:30, null, 2016-07-05 21:34:03.302, foo, 2016-07-05 21:34:03.302, foo, 0}
2016-07-05 21:34:03,307 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{4, Stankovic, Stanko, FML, 2006/09/04 14:04:40, 1978/09/11, 2016-07-05 21:34:03.306, foo, 2016-07-05 21:34:03.306, foo, 0}
2016-07-05 21:34:03,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{5, Milosevic, Milose, FML, 2007/08/05 15:05:50, null, 2016-07-05 21:34:03.313, foo, 2016-07-05 21:34:03.313, foo, 0}
2016-07-05 21:34:03,315 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{6, Mihajlovic, FreeKick, WDL, 2006/07/06 16:06:40, 1969/02/20, 2016-07-05 21:34:03.315, foo, 2016-07-05 21:34:03.315, foo, 0}
2016-07-05 21:34:03,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{7, アカギ, Akagi, FML, 2005/06/07 17:07:30, null, 2016-07-05 21:34:03.317, foo, 2016-07-05 21:34:03.317, foo, 0}
2016-07-05 21:34:03,319 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{8, Kezman, RedCard, FML, 2006/05/08 18:08:20, null, 2016-07-05 21:34:03.319, foo, 2016-07-05 21:34:03.319, foo, 0}
2016-07-05 21:34:03,321 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{9, Maslovar, JEFUnited, FML, 2007/12/31 00:00:00, 1967/02/20, 2016-07-05 21:34:03.321, foo, 2016-07-05 21:34:03.321, foo, 0}
2016-07-05 21:34:03,324 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{10, 諸葛亮孔明, ShokatsuGoGo, PRV, null, null, 2016-07-05 21:34:03.323, foo, 2016-07-05 21:34:03.323, foo, 0}
2016-07-05 21:34:03,325 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{11, Boban, Boban, FML, 2007/12/01 11:01:10, 1968/10/08, 2016-07-05 21:34:03.325, foo, 2016-07-05 21:34:03.325, foo, 0}
2016-07-05 21:34:03,327 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{12, Suker, Suker, PRV, null, 1968/01/01, 2016-07-05 21:34:03.327, foo, 2016-07-05 21:34:03.327, foo, 0}
2016-07-05 21:34:03,332 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{13, Jarni, Jarni, WDL, 2005/10/03 13:03:30, 1968/10/26, 2016-07-05 21:34:03.332, foo, 2016-07-05 21:34:03.332, foo, 0}
2016-07-05 21:34:03,338 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{14, Boksic, Boksic, FML, 2006/09/04 14:04:40, 1970/01/21, 2016-07-05 21:34:03.337, foo, 2016-07-05 21:34:03.337, foo, 0}
2016-07-05 21:34:03,341 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{15, Prosinecki, Prosinecki, FML, 2004/08/05 15:05:50, 1969/01/12, 2016-07-05 21:34:03.341, foo, 2016-07-05 21:34:03.341, foo, 0}
2016-07-05 21:34:03,343 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{16, RobeltKovac, RobeltKovac, WDL, 2006/07/06 16:06:40, null, 2016-07-05 21:34:03.343, foo, 2016-07-05 21:34:03.343, foo, 0}
2016-07-05 21:34:03,347 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{17, NikoKovac, NikoKovac, FML, 2005/06/07 17:07:30, null, 2016-07-05 21:34:03.347, foo, 2016-07-05 21:34:03.347, foo, 0}
2016-07-05 21:34:03,350 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{18, Jovanovic, Jovano, FML, 2006/05/08 18:08:20, 1981/04/18, 2016-07-05 21:34:03.35, foo, 2016-07-05 21:34:03.35, foo, 0}
2016-07-05 21:34:03,353 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{19, Milko, Milko, FML, 2005/12/31 12:34:56, 1974/09/10, 2016-07-05 21:34:03.352, foo, 2016-07-05 21:34:03.352, foo, 0}
2016-07-05 21:34:03,355 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{20, 諸葛瑾子瑜, ShokatsuKinKin, FML, 2001/12/31 23:59:59, null, 2016-07-05 21:34:03.355, foo, 2016-07-05 21:34:03.355, foo, 0}
2016-07-05 21:34:03,372 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER
2016-07-05 21:34:03,373 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{1, 1, 2007/03/24, 2015/12/31, Nagara, 4, 2016-07-05 21:34:03.373, foo, 2016-07-05 21:34:03.373, foo, 0}
2016-07-05 21:34:03,375 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{2, 1, 1949/01/01, 1997/03/31, New York, 1, 2016-07-05 21:34:03.375, foo, 2016-07-05 21:34:03.375, foo, 0}
2016-07-05 21:34:03,377 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{3, 1, 1997/04/01, 2000/09/30, Los Angels, 1, 2016-07-05 21:34:03.377, foo, 2016-07-05 21:34:03.377, foo, 0}
2016-07-05 21:34:03,379 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{4, 1, 2000/10/01, 2003/08/31, New York, 1, 2016-07-05 21:34:03.379, foo, 2016-07-05 21:34:03.379, foo, 0}
2016-07-05 21:34:03,381 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{5, 1, 2003/09/01, 2004/12/22, San Francisco Powell, 1, 2016-07-05 21:34:03.381, foo, 2016-07-05 21:34:03.381, foo, 0}
2016-07-05 21:34:03,384 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{6, 1, 2004/12/23, 2006/03/23, San Francisco Daly City, 1, 2016-07-05 21:34:03.383, foo, 2016-07-05 21:34:03.383, foo, 0}
2016-07-05 21:34:03,386 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{7, 1, 2016/01/01, 9999/12/31, Victoria, 2, 2016-07-05 21:34:03.386, foo, 2016-07-05 21:34:03.386, foo, 0}
2016-07-05 21:34:03,389 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{8, 2, 2004/12/24, 9999/12/31, Ichihara, 4, 2016-07-05 21:34:03.389, foo, 2016-07-05 21:34:03.389, foo, 0}
2016-07-05 21:34:03,391 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{9, 3, 2004/12/24, 2007/03/23, Mobara, 4, 2016-07-05 21:34:03.391, foo, 2016-07-05 21:34:03.391, foo, 0}
2016-07-05 21:34:03,392 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{10, 4, 2002/11/01, 9999/12/31, Sousa, 4, 2016-07-05 21:34:03.392, foo, 2016-07-05 21:34:03.392, foo, 0}
2016-07-05 21:34:03,394 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{11, 6, 2002/11/01, 9999/12/31, Yokoshiba, 4, 2016-07-05 21:34:03.394, foo, 2016-07-05 21:34:03.394, foo, 0}
2016-07-05 21:34:03,396 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{12, 9, 2010/11/01, 9999/12/31, Tateyama, 4, 2016-07-05 21:34:03.396, foo, 2016-07-05 21:34:03.396, foo, 0}
2016-07-05 21:34:03,398 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{13, 10, 1970/01/01, 9999/12/31, Shoku, 3, 2016-07-05 21:34:03.398, foo, 2016-07-05 21:34:03.398, foo, 0}
2016-07-05 21:34:03,400 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{14, 12, 2000/11/01, 2001/11/01, Oohara, 4, 2016-07-05 21:34:03.4, foo, 2016-07-05 21:34:03.4, foo, 0}
2016-07-05 21:34:03,403 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{15, 15, 2002/11/01, 2006/10/30, MinamiBousou, 4, 2016-07-05 21:34:03.403, foo, 2016-07-05 21:34:03.403, foo, 0}
2016-07-05 21:34:03,406 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{16, 15, 2007/11/01, 9999/12/31, Tomisato, 4, 2016-07-05 21:34:03.406, foo, 2016-07-05 21:34:03.406, foo, 0}
2016-07-05 21:34:03,408 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{17, 18, 2001/03/21, 2007/11/21, Katsuura, 4, 2016-07-05 21:34:03.408, foo, 2016-07-05 21:34:03.408, foo, 0}
2016-07-05 21:34:03,410 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{18, 18, 2007/11/22, 9999/12/31, Kamogawa, 4, 2016-07-05 21:34:03.41, foo, 2016-07-05 21:34:03.41, foo, 0}
2016-07-05 21:34:03,414 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{19, 19, 2000/11/01, 9999/12/31, Yotsukaido, 4, 2016-07-05 21:34:03.414, foo, 2016-07-05 21:34:03.414, foo, 0}
2016-07-05 21:34:03,416 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{20, 20, 1970/01/01, 9999/12/31, Go, 3, 2016-07-05 21:34:03.416, foo, 2016-07-05 21:34:03.416, foo, 0}
2016-07-05 21:34:03,440 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_ADDRESS
2016-07-05 21:34:03,442 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{1, 3, 2006/12/24 23:59:59, 0, FML}
2016-07-05 21:34:03,444 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{2, 6, 2007/11/11 16:16:16, 0, FML}
2016-07-05 21:34:03,445 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{3, 1, 2006/12/23 22:56:29, 0, FML}
2016-07-05 21:34:03,446 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{4, 6, 2007/11/01 02:13:00, 0, FML}
2016-07-05 21:34:03,447 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{5, 7, 2006/05/24 23:12:59, 0, FML}
2016-07-05 21:34:03,451 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{6, 6, 2005/11/11 16:32:01, 0, PRV}
2016-07-05 21:34:03,452 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{7, 6, 2006/01/28 23:59:59, 1, FML}
2016-07-05 21:34:03,454 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{8, 6, 2007/11/09 16:23:00, 0, FML}
2016-07-05 21:34:03,455 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{9, 8, 2006/12/22 23:59:59, 0, FML}
2016-07-05 21:34:03,456 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{10, 6, 2007/11/11 09:01:00, 0, FML}
2016-07-05 21:34:03,457 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{11, 1, 2006/12/23 23:59:59, 0, FML}
2016-07-05 21:34:03,457 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{12, 9, 2007/11/15 12:43:00, 0, FML}
2016-07-05 21:34:03,458 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{13, 10, 2006/12/24 23:59:59, 0, FML}
2016-07-05 21:34:03,459 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{14, 6, 2007/04/01 16:23:01, 0, FML}
2016-07-05 21:34:03,460 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{15, 7, 2006/12/24 23:59:20, 1, FML}
2016-07-05 21:34:03,460 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{16, 6, 2007/05/01 12:23:02, 0, FML}
2016-07-05 21:34:03,461 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{17, 7, 2006/12/24 23:59:21, 0, FML}
2016-07-05 21:34:03,462 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{18, 6, 2007/06/11 17:23:03, 0, FML}
2016-07-05 21:34:03,462 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{19, 4, 2006/12/24 23:59:22, 0, FML}
2016-07-05 21:34:03,463 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{20, 3, 2007/11/01 16:12:04, 0, FML}
2016-07-05 21:34:03,464 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{21, 11, 2006/12/24 23:59:23, 0, FML}
2016-07-05 21:34:03,465 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{22, 1, 2007/11/01 16:23:05, 0, PRV}
2016-07-05 21:34:03,466 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{23, 9, 2006/12/24 23:59:24, 1, FML}
2016-07-05 21:34:03,467 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{24, 8, 2007/11/01 16:23:06, 0, FML}
2016-07-05 21:34:03,468 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{25, 7, 2007/12/24 11:59:25, 1, FML}
2016-07-05 21:34:03,469 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{26, 6, 2007/06/21 01:23:57, 0, FML}
2016-07-05 21:34:03,471 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{27, 5, 2006/12/24 23:59:26, 0, FML}
2016-07-05 21:34:03,472 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{28, 3, 2007/11/01 16:23:08, 0, FML}
2016-07-05 21:34:03,473 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{29, 3, 2006/12/24 23:59:27, 0, FML}
2016-07-05 21:34:03,474 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{30, 10, 2007/11/01 16:23:09, 0, FML}
2016-07-05 21:34:03,475 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{31, 15, 2006/07/24 23:59:28, 0, FML}
2016-07-05 21:34:03,476 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{32, 14, 2007/11/01 17:23:10, 0, FML}
2016-07-05 21:34:03,477 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{33, 15, 2007/11/01 16:23:10, 0, FML}
2016-07-05 21:34:03,477 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{34, 18, 2006/07/24 23:59:29, 0, FML}
2016-07-05 21:34:03,478 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{35, 3, 2007/11/01 17:23:11, 0, PRV}
2016-07-05 21:34:03,479 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{36, 5, 2007/11/01 16:23:11, 1, FML}
2016-07-05 21:34:03,480 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{37, 11, 2006/07/24 23:59:30, 0, FML}
2016-07-05 21:34:03,481 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{38, 20, 2007/11/01 17:23:12, 1, FML}
2016-07-05 21:34:03,481 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{39, 19, 2007/11/01 16:23:12, 0, FML}
2016-07-05 21:34:03,482 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{40, 4, 2006/07/24 23:59:31, 0, FML}
2016-07-05 21:34:03,483 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{41, 4, 2007/11/01 17:23:13, 0, FML}
2016-07-05 21:34:03,484 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{42, 4, 2007/11/01 16:23:13, 0, FML}
2016-07-05 21:34:03,485 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{43, 4, 2006/07/24 23:52:32, 0, FML}
2016-07-05 21:34:03,486 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{44, 4, 2007/11/01 11:23:14, 0, FML}
2016-07-05 21:34:03,489 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{45, 4, 2007/11/21 06:23:14, 0, FML}
2016-07-05 21:34:03,490 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{46, 12, 2006/07/24 23:52:33, 0, PRV}
2016-07-05 21:34:03,491 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{47, 13, 2007/11/01 11:23:15, 1, FML}
2016-07-05 21:34:03,491 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{48, 14, 2007/11/21 06:23:15, 0, FML}
2016-07-05 21:34:03,492 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{49, 17, 2006/07/24 23:52:34, 1, FML}
2016-07-05 21:34:03,493 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{50, 18, 2007/11/01 11:23:16, 0, FML}
2016-07-05 21:34:03,494 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{51, 16, 2007/11/21 06:23:16, 0, FML}
2016-07-05 21:34:03,495 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{52, 4, 2006/07/24 23:52:35, 0, FML}
2016-07-05 21:34:03,496 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{53, 5, 2007/11/01 11:23:17, 0, FML}
2016-07-05 21:34:03,498 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{54, 5, 2007/11/21 06:23:17, 0, FML}
2016-07-05 21:34:03,499 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{55, 11, 2006/07/24 23:52:36, 0, FML}
2016-07-05 21:34:03,500 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{56, 12, 2007/11/01 11:23:18, 0, FML}
2016-07-05 21:34:03,546 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 56 rows are loaded to MEMBER_LOGIN
2016-07-05 21:34:03,547 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{1, aaa, 30符3飜は？, 自分で数えろ, 1, 2016-07-05 21:34:03.547, foo, 2016-07-05 21:34:03.547, foo, 0}
2016-07-05 21:34:03,549 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{2, bbb, 50符2飜は？, 自分で数えろ, 2, 2016-07-05 21:34:03.549, foo, 2016-07-05 21:34:03.549, foo, 0}
2016-07-05 21:34:03,550 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{3, ccc, 110符2飜は？, 自分で数えろ, 3, 2016-07-05 21:34:03.55, foo, 2016-07-05 21:34:03.55, foo, 0}
2016-07-05 21:34:03,550 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{4, ddd, タンヤオ？, そう, 4, 2016-07-05 21:34:03.55, foo, 2016-07-05 21:34:03.55, foo, 0}
2016-07-05 21:34:03,551 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{5, eee2, ピンフ？, そう, 5, 2016-07-05 21:34:03.551, foo, 2016-07-05 21:34:03.551, foo, 0}
2016-07-05 21:34:03,552 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{6, fff, サンアンコウ？, そう, 6, 2016-07-05 21:34:03.552, foo, 2016-07-05 21:34:03.552, foo, 0}
2016-07-05 21:34:03,552 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{7, ggg3, イーペーコウ？, そう, 7, 2016-07-05 21:34:03.552, foo, 2016-07-05 21:34:03.552, foo, 0}
2016-07-05 21:34:03,553 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{8, hhh555, リャンペーコウ？, そう, 8, 2016-07-05 21:34:03.553, foo, 2016-07-05 21:34:03.553, foo, 0}
2016-07-05 21:34:03,554 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{9, iii, サンペーコウはないよね？, 当たり前だ, 9, 2016-07-05 21:34:03.554, foo, 2016-07-05 21:34:03.554, foo, 0}
2016-07-05 21:34:03,555 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{10, jjj, 私はイカサマしません, 実はする, 10, 2016-07-05 21:34:03.555, foo, 2016-07-05 21:34:03.555, foo, 0}
2016-07-05 21:34:03,556 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{11, qwe, 70符3飜は？, 自分で数えろ, 11, 2016-07-05 21:34:03.556, foo, 2016-07-05 21:34:03.556, foo, 0}
2016-07-05 21:34:03,557 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{12, sdf, 20符4飜は？, 自分で数えろ, 12, 2016-07-05 21:34:03.557, foo, 2016-07-05 21:34:03.557, foo, 0}
2016-07-05 21:34:03,558 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{13, dfgsf, 大三元は？, 役満だよ, 13, 2016-07-05 21:34:03.558, foo, 2016-07-05 21:34:03.558, foo, 0}
2016-07-05 21:34:03,559 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{14, ert, タンヤオ？, そう, 14, 2016-07-05 21:34:03.559, foo, 2016-07-05 21:34:03.559, foo, 0}
2016-07-05 21:34:03,560 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{15, fhgf, ピンフ？, そう, 15, 2016-07-05 21:34:03.56, foo, 2016-07-05 21:34:03.56, foo, 0}
2016-07-05 21:34:03,560 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{16, ghj, サンアンコウ？, そう, 16, 2016-07-05 21:34:03.56, foo, 2016-07-05 21:34:03.56, foo, 0}
2016-07-05 21:34:03,561 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{17, tyuffff, サンレンコウ？, そう, 17, 2016-07-05 21:34:03.561, foo, 2016-07-05 21:34:03.561, foo, 0}
2016-07-05 21:34:03,562 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{18, jkl, イーペーコウ？, そう, 18, 2016-07-05 21:34:03.562, foo, 2016-07-05 21:34:03.562, foo, 0}
2016-07-05 21:34:03,563 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{19, ghjfff, 左ハイは？, 痛い, 19, 2016-07-05 21:34:03.563, foo, 2016-07-05 21:34:03.563, foo, 0}
2016-07-05 21:34:03,564 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{20, cvb, 孫権は？, 呉, 20, 2016-07-05 21:34:03.564, foo, 2016-07-05 21:34:03.564, foo, 0}
2016-07-05 21:34:03,580 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SECURITY
2016-07-05 21:34:03,581 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{1, 1, 1234, PLT, 2016-07-05 21:34:03.581, foo, 2016-07-05 21:34:03.581, foo, 0}
2016-07-05 21:34:03,582 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{2, 2, 2345, GLD, 2016-07-05 21:34:03.582, foo, 2016-07-05 21:34:03.582, foo, 0}
2016-07-05 21:34:03,583 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{3, 3, 3456, GLD, 2016-07-05 21:34:03.583, foo, 2016-07-05 21:34:03.583, foo, 0}
2016-07-05 21:34:03,584 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{4, 4, 875, BRZ, 2016-07-05 21:34:03.584, foo, 2016-07-05 21:34:03.584, foo, 0}
2016-07-05 21:34:03,585 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{5, 5, 1111, BRZ, 2016-07-05 21:34:03.585, foo, 2016-07-05 21:34:03.585, foo, 0}
2016-07-05 21:34:03,586 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{6, 6, 5422, SIL, 2016-07-05 21:34:03.586, foo, 2016-07-05 21:34:03.586, foo, 0}
2016-07-05 21:34:03,587 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{7, 7, 24678, SIL, 2016-07-05 21:34:03.586, foo, 2016-07-05 21:34:03.586, foo, 0}
2016-07-05 21:34:03,587 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{8, 8, 234, SIL, 2016-07-05 21:34:03.587, foo, 2016-07-05 21:34:03.587, foo, 0}
2016-07-05 21:34:03,588 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{9, 9, 3, SIL, 2016-07-05 21:34:03.588, foo, 2016-07-05 21:34:03.588, foo, 0}
2016-07-05 21:34:03,590 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{10, 10, 98765, PLT, 2016-07-05 21:34:03.59, foo, 2016-07-05 21:34:03.59, foo, 0}
2016-07-05 21:34:03,613 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{11, 11, 34, GLD, 2016-07-05 21:34:03.613, foo, 2016-07-05 21:34:03.613, foo, 0}
2016-07-05 21:34:03,614 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{12, 12, 532, PLT, 2016-07-05 21:34:03.614, foo, 2016-07-05 21:34:03.614, foo, 0}
2016-07-05 21:34:03,615 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{13, 13, 23678, GLD, 2016-07-05 21:34:03.615, foo, 2016-07-05 21:34:03.615, foo, 0}
2016-07-05 21:34:03,616 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{14, 14, 432, GLD, 2016-07-05 21:34:03.616, foo, 2016-07-05 21:34:03.616, foo, 0}
2016-07-05 21:34:03,617 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{15, 15, 543, BRZ, 2016-07-05 21:34:03.617, foo, 2016-07-05 21:34:03.617, foo, 0}
2016-07-05 21:34:03,618 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{16, 16, 23545, PLT, 2016-07-05 21:34:03.618, foo, 2016-07-05 21:34:03.618, foo, 0}
2016-07-05 21:34:03,619 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{17, 17, 2345, GLD, 2016-07-05 21:34:03.619, foo, 2016-07-05 21:34:03.619, foo, 0}
2016-07-05 21:34:03,621 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{18, 18, 8763, SIL, 2016-07-05 21:34:03.62, foo, 2016-07-05 21:34:03.621, foo, 0}
2016-07-05 21:34:03,622 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{19, 19, 34567, SIL, 2016-07-05 21:34:03.621, foo, 2016-07-05 21:34:03.621, foo, 0}
2016-07-05 21:34:03,623 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{20, 20, 43, GLD, 2016-07-05 21:34:03.622, foo, 2016-07-05 21:34:03.622, foo, 0}
2016-07-05 21:34:03,638 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SERVICE
2016-07-05 21:34:03,639 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{3, null, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123, 2016-07-05 21:34:03.639, foo, 2016-07-05 21:34:03.639, foo}
2016-07-05 21:34:03,642 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{6, SIT, null, 2007/11/11 16:00:00.456, 2016-07-05 21:34:03.642, foo, 2016-07-05 21:34:03.642, foo}
2016-07-05 21:34:03,643 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{13, PRD, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789, 2016-07-05 21:34:03.643, foo, 2016-07-05 21:34:03.643, foo}
2016-07-05 21:34:03,645 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{16, SIT, コバチが２人いるため, 2007/11/13 16:00:00.456, 2016-07-05 21:34:03.645, foo, 2016-07-05 21:34:03.645, foo}
2016-07-05 21:34:03,657 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to MEMBER_WITHDRAWAL
2016-07-05 21:34:03,658 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{1, 1, 2, 2006/12/24 23:59:59}
2016-07-05 21:34:03,659 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{2, 1, 3, 2007/11/11 16:16:16}
2016-07-05 21:34:03,660 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{3, 1, 4, 2006/12/23 22:56:29}
2016-07-05 21:34:03,661 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{4, 1, 5, 2007/11/01 02:13:00}
2016-07-05 21:34:03,662 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{5, 1, 6, 2012/05/24 23:12:59}
2016-07-05 21:34:03,663 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{6, 1, 9, 2005/11/11 16:32:01}
2016-07-05 21:34:03,664 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{7, 1, 15, 2006/01/28 23:59:59}
2016-07-05 21:34:03,666 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{8, 1, 18, 2007/11/09 16:23:00}
2016-07-05 21:34:03,667 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{9, 2, 1, 2009/12/22 23:59:59}
2016-07-05 21:34:03,668 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{10, 2, 3, 2007/11/11 09:01:00}
2016-07-05 21:34:03,669 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{11, 2, 4, 2006/11/23 23:59:59}
2016-07-05 21:34:03,669 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{12, 2, 9, 2012/11/15 12:43:00}
2016-07-05 21:34:03,679 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{13, 2, 14, 2006/12/24 23:59:59}
2016-07-05 21:34:03,680 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{14, 2, 19, 2011/04/01 16:23:01}
2016-07-05 21:34:03,682 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{15, 3, 1, 2006/12/24 23:59:20}
2016-07-05 21:34:03,683 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{16, 3, 2, 2008/05/01 12:23:02}
2016-07-05 21:34:03,684 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{17, 3, 4, 2006/12/24 23:59:21}
2016-07-05 21:34:03,685 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{18, 3, 6, 2009/06/11 17:23:03}
2016-07-05 21:34:03,687 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{19, 3, 9, 2010/12/24 23:59:22}
2016-07-05 21:34:03,688 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{20, 3, 10, 2007/11/01 16:12:04}
2016-07-05 21:34:03,691 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{21, 4, 1, 2006/12/24 23:59:23}
2016-07-05 21:34:03,692 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{22, 4, 2, 2007/11/01 16:23:05}
2016-07-05 21:34:03,693 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{23, 4, 3, 2011/12/24 23:59:24}
2016-07-05 21:34:03,694 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{24, 4, 4, 2007/11/01 16:23:06}
2016-07-05 21:34:03,695 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{25, 4, 5, 2013/05/24 11:59:25}
2016-07-05 21:34:03,716 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{26, 4, 6, 2007/06/21 01:23:57}
2016-07-05 21:34:03,718 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{27, 4, 9, 2006/12/24 23:59:26}
2016-07-05 21:34:03,719 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{28, 4, 11, 2007/11/01 16:23:08}
2016-07-05 21:34:03,721 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{29, 4, 12, 2013/02/24 23:59:27}
2016-07-05 21:34:03,723 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{30, 4, 13, 2012/11/01 16:23:03}
2016-07-05 21:34:03,724 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{31, 4, 14, 2006/07/24 23:59:28}
2016-07-05 21:34:03,728 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{32, 4, 15, 2007/11/01 17:23:10}
2016-07-05 21:34:03,729 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{33, 4, 16, 2007/11/01 16:23:10}
2016-07-05 21:34:03,730 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{34, 4, 17, 2006/07/24 23:59:29}
2016-07-05 21:34:03,730 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{35, 4, 18, 2011/11/01 17:23:11}
2016-07-05 21:34:03,735 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{36, 4, 19, 2007/11/01 16:23:11}
2016-07-05 21:34:03,736 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{37, 5, 1, 2008/07/24 23:59:30}
2016-07-05 21:34:03,738 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{38, 5, 3, 2007/11/01 17:23:12}
2016-07-05 21:34:03,739 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{39, 5, 6, 2007/11/01 16:23:12}
2016-07-05 21:34:03,742 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{40, 6, 1, 2006/07/24 23:59:31}
2016-07-05 21:34:03,743 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{41, 6, 2, 2007/11/01 17:23:13}
2016-07-05 21:34:03,746 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{42, 6, 3, 2007/11/01 16:23:13}
2016-07-05 21:34:03,747 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{43, 6, 4, 2006/07/24 23:52:32}
2016-07-05 21:34:03,748 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{44, 6, 5, 2007/11/01 11:23:14}
2016-07-05 21:34:03,758 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{45, 6, 6, 2007/11/21 06:23:14}
2016-07-05 21:34:03,759 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{46, 8, 1, 2011/07/24 23:52:33}
2016-07-05 21:34:03,760 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{47, 8, 2, 2007/11/01 11:23:15}
2016-07-05 21:34:03,761 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{48, 8, 3, 2007/11/21 06:23:15}
2016-07-05 21:34:03,762 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{49, 9, 1, 2006/07/24 23:52:34}
2016-07-05 21:34:03,764 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{50, 9, 2, 208/11/01 11:23:16}
2016-07-05 21:34:03,767 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{51, 9, 3, 2007/11/21 06:23:16}
2016-07-05 21:34:03,768 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{52, 9, 10, 2006/07/24 23:52:35}
2016-07-05 21:34:03,770 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{53, 9, 20, 2009/11/01 11:23:17}
2016-07-05 21:34:03,772 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{54, 10, 1, 2007/11/21 06:23:17}
2016-07-05 21:34:03,774 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{55, 10, 2, 2006/07/24 23:52:36}
2016-07-05 21:34:03,776 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{56, 10, 3, 2010/11/01 11:23:18}
2016-07-05 21:34:03,777 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{57, 10, 4, 2006/12/21 23:59:59}
2016-07-05 21:34:03,777 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{58, 10, 5, 2007/11/1 16:16:16}
2016-07-05 21:34:03,779 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{59, 10, 6, 2006/08/23 22:56:29}
2016-07-05 21:34:03,780 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{60, 10, 9, 2007/11/01 02:11:00}
2016-07-05 21:34:03,780 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{61, 10, 11, 2012/05/24 23:12:59}
2016-07-05 21:34:03,781 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{62, 10, 12, 2005/11/10 16:32:01}
2016-07-05 21:34:03,782 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{63, 10, 13, 2006/01/28 23:59:59}
2016-07-05 21:34:03,782 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{64, 10, 14, 2007/10/09 16:23:00}
2016-07-05 21:34:03,783 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{65, 10, 15, 2009/12/22 23:59:59}
2016-07-05 21:34:03,784 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{66, 10, 16, 2007/11/01 09:01:00}
2016-07-05 21:34:03,785 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{67, 10, 17, 2006/11/23 23:59:59}
2016-07-05 21:34:03,786 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{68, 10, 18, 2011/11/15 12:43:00}
2016-07-05 21:34:03,786 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{69, 10, 19, 2006/07/24 23:59:59}
2016-07-05 21:34:03,791 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{70, 10, 20, 2011/08/01 16:23:01}
2016-07-05 21:34:03,792 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{71, 11, 12, 2006/09/24 23:59:20}
2016-07-05 21:34:03,792 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{72, 11, 13, 2008/01/01 12:23:02}
2016-07-05 21:34:03,793 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{73, 11, 14, 2006/12/24 23:59:21}
2016-07-05 21:34:03,794 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{74, 11, 15, 2009/02/11 17:23:03}
2016-07-05 21:34:03,795 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{75, 11, 16, 2010/03/24 23:59:22}
2016-07-05 21:34:03,796 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{76, 11, 17, 2007/09/01 16:12:04}
2016-07-05 21:34:03,796 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{77, 11, 19, 2006/12/24 23:59:23}
2016-07-05 21:34:03,797 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{78, 12, 1, 2007/11/01 16:23:05}
2016-07-05 21:34:03,798 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{79, 12, 11, 2011/05/24 23:59:24}
2016-07-05 21:34:03,799 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{80, 12, 13, 2007/11/01 16:23:06}
2016-07-05 21:34:03,800 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{81, 12, 14, 2013/06/24 11:59:25}
2016-07-05 21:34:03,801 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{82, 12, 15, 2007/06/21 01:23:57}
2016-07-05 21:34:03,802 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{83, 12, 19, 2006/12/24 23:59:26}
2016-07-05 21:34:03,802 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{84, 13, 11, 2007/08/01 16:23:08}
2016-07-05 21:34:03,804 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{85, 13, 12, 2013/02/24 23:59:27}
2016-07-05 21:34:03,805 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{86, 13, 14, 2012/11/01 16:23:03}
2016-07-05 21:34:03,807 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{87, 14, 1, 2006/07/24 23:59:28}
2016-07-05 21:34:03,809 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{88, 14, 10, 2012/05/24 23:12:59}
2016-07-05 21:34:03,811 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{89, 14, 11, 2005/11/10 16:32:01}
2016-07-05 21:34:03,812 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{90, 14, 20, 2006/01/28 23:59:59}
2016-07-05 21:34:03,813 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{91, 16, 17, 2007/10/09 16:23:00}
2016-07-05 21:34:03,814 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{92, 17, 16, 2009/12/22 23:59:59}
2016-07-05 21:34:03,814 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{93, 18, 1, 2007/11/01 09:01:00}
2016-07-05 21:34:03,815 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{94, 18, 2, 2006/11/23 23:59:59}
2016-07-05 21:34:03,815 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{95, 18, 3, 2011/11/15 12:43:00}
2016-07-05 21:34:03,815 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{96, 18, 4, 2006/07/24 23:59:59}
2016-07-05 21:34:03,816 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{97, 18, 5, 2011/08/01 16:23:01}
2016-07-05 21:34:03,816 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{98, 18, 6, 2006/09/24 23:59:20}
2016-07-05 21:34:03,817 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{99, 18, 9, 2008/01/01 12:23:02}
2016-07-05 21:34:03,817 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{100, 18, 11, 2006/12/24 23:59:21}
2016-07-05 21:34:03,818 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{101, 18, 12, 2009/02/11 17:23:03}
2016-07-05 21:34:03,824 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{102, 18, 13, 2010/03/24 23:59:22}
2016-07-05 21:34:03,824 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{103, 18, 14, 2007/09/01 16:12:04}
2016-07-05 21:34:03,825 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{104, 18, 15, 2006/12/24 23:59:23}
2016-07-05 21:34:03,825 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{105, 19, 1, 2007/11/01 16:23:05}
2016-07-05 21:34:03,826 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{106, 19, 10, 2011/05/24 23:59:24}
2016-07-05 21:34:03,826 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{107, 19, 11, 2007/11/01 16:23:06}
2016-07-05 21:34:03,827 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{108, 19, 12, 2013/06/24 11:59:25}
2016-07-05 21:34:03,827 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{109, 19, 20, 2013/06/24 11:59:25}
2016-07-05 21:34:03,828 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{110, 20, 10, 2013/06/24 11:59:25}
2016-07-05 21:34:03,828 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{111, 20, 19, 2013/06/24 11:59:25}
2016-07-05 21:34:03,901 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 111 rows are loaded to MEMBER_FOLLOWING
2016-07-05 21:34:03,902 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-05 21:34:03,902 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/30-product.xls)
2016-07-05 21:34:03,902 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-05 21:34:03,962 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{1, Cold Spring Harbor, BILLYJOEL-01, MCD, PST, 1100, 2016-07-05 21:34:03.962, foo, 2016-07-05 21:34:03.962, foo, 0}
2016-07-05 21:34:03,964 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{2, Piano Man, BILLYJOEL-02, MCD, ONS, 1200, 2016-07-05 21:34:03.964, foo, 2016-07-05 21:34:03.964, foo, 0}
2016-07-05 21:34:03,965 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{3, Streetlife Serenade, BILLYJOEL-03, MCD, ONS, 1300, 2016-07-05 21:34:03.965, foo, 2016-07-05 21:34:03.965, foo, 0}
2016-07-05 21:34:03,966 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{4, Turnstiles, BILLYJOEL-04, MCD, ONS, 1400, 2016-07-05 21:34:03.966, foo, 2016-07-05 21:34:03.966, foo, 0}
2016-07-05 21:34:03,967 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{5, The Stranger, BILLYJOEL-05, MCD, ONS, 1500, 2016-07-05 21:34:03.967, foo, 2016-07-05 21:34:03.967, foo, 0}
2016-07-05 21:34:03,968 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{6, 52nd Street, BILLYJOEL-06, MCD, ONS, 1600, 2016-07-05 21:34:03.968, foo, 2016-07-05 21:34:03.968, foo, 0}
2016-07-05 21:34:03,969 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{7, Glass House, BILLYJOEL-07, MCD, ONS, 1700, 2016-07-05 21:34:03.969, foo, 2016-07-05 21:34:03.969, foo, 0}
2016-07-05 21:34:03,970 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{8, Nylon Curtain, BILLYJOEL-08, MCD, ONS, 1800, 2016-07-05 21:34:03.97, foo, 2016-07-05 21:34:03.97, foo, 0}
2016-07-05 21:34:03,971 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{9, Bridge, BILLYJOEL-09, MCD, ONS, 1900, 2016-07-05 21:34:03.971, foo, 2016-07-05 21:34:03.971, foo, 0}
2016-07-05 21:34:03,972 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{10, Storm Front, BILLYJOEL-10, MCD, ONS, 2000, 2016-07-05 21:34:03.972, foo, 2016-07-05 21:34:03.972, foo, 0}
2016-07-05 21:34:03,973 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{11, River of Dreams, BILLYJOEL-11, MCD, ONS, 2100, 2016-07-05 21:34:03.973, foo, 2016-07-05 21:34:03.973, foo, 0}
2016-07-05 21:34:03,975 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{12, Grand Piano, PIANO-01, INS, ONS, 1400000, 2016-07-05 21:34:03.975, foo, 2016-07-05 21:34:03.975, foo, 0}
2016-07-05 21:34:03,975 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{13, Upright Piano, PIANO-02, INS, ONS, 1100000, 2016-07-05 21:34:03.975, foo, 2016-07-05 21:34:03.975, foo, 0}
2016-07-05 21:34:03,976 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{14, Low Price Flute, FLUTE-01, INS, ONS, 50000, 2016-07-05 21:34:03.976, foo, 2016-07-05 21:34:03.976, foo, 0}
2016-07-05 21:34:03,977 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{15, Silver Flute, FLUTE-02, INS, ONS, 500000, 2016-07-05 21:34:03.977, foo, 2016-07-05 21:34:03.977, foo, 0}
2016-07-05 21:34:03,978 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{16, Gold Flute, FLUTE-03, INS, ONS, 4000000, 2016-07-05 21:34:03.978, foo, 2016-07-05 21:34:03.978, foo, 0}
2016-07-05 21:34:03,979 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{17, Rosemary (100g), HARB-100-01, HEB, ONS, 400, 2016-07-05 21:34:03.979, foo, 2016-07-05 21:34:03.979, foo, 0}
2016-07-05 21:34:03,980 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{18, Lemon Grass (100g), HARB-100-02, HEB, ONS, 380, 2016-07-05 21:34:03.98, foo, 2016-07-05 21:34:03.98, foo, 0}
2016-07-05 21:34:03,981 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{19, Camomile (100g), HARB-100-03, HEB, ONS, 380, 2016-07-05 21:34:03.981, foo, 2016-07-05 21:34:03.981, foo, 0}
2016-07-05 21:34:03,982 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{20, Hatomugi (100g), HARB-100-04, HEB, ONS, 340, 2016-07-05 21:34:03.981, foo, 2016-07-05 21:34:03.981, foo, 0}
2016-07-05 21:34:03,998 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to PRODUCT
2016-07-05 21:34:03,999 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{1, 5, 3, 2006/12/24 23:59:59, 1, 1800, 1, 2016-07-05 21:34:03.999, foo, 2016-07-05 21:34:03.999, foo, 0}
2016-07-05 21:34:04,002 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{2, 15, 7, 2007/11/11 16:16:16, 1, 1700, 1, 2016-07-05 21:34:04.002, foo, 2016-07-05 21:34:04.002, foo, 0}
2016-07-05 21:34:04,004 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{3, 13, 3, 2006/12/23 22:56:29.235, 1, 1800, 1, 2016-07-05 21:34:04.003, foo, 2016-07-05 21:34:04.003, foo, 0}
2016-07-05 21:34:04,005 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{4, 2, 5, 2007/11/01 02:13:00, 2, 1700, 1, 2016-07-05 21:34:04.005, foo, 2016-07-05 21:34:04.005, foo, 0}
2016-07-05 21:34:04,008 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{5, 9, 11, 2008/01/04 23:12:59, 5, 1800, 1, 2016-07-05 21:34:04.007, foo, 2016-07-05 21:34:04.007, foo, 0}
2016-07-05 21:34:04,009 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{6, 20, 2, 2002/01/01 16:32:01, 1, 2000, 1, 2016-07-05 21:34:04.009, foo, 2016-07-05 21:34:04.009, foo, 0}
2016-07-05 21:34:04,011 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{7, 19, 9, 2006/01/28 23:59:59.999, 1, 1000, 0, 2016-07-05 21:34:04.01, foo, 2016-07-05 21:34:04.01, foo, 0}
2016-07-05 21:34:04,012 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{8, 4, 7, 2007/11/09 16:23:00, 1, 1535, 1, 2016-07-05 21:34:04.012, foo, 2016-07-05 21:34:04.012, foo, 0}
2016-07-05 21:34:04,013 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{9, 4, 10, 2006/12/22 23:59:59, 20, 1700, 1, 2016-07-05 21:34:04.013, foo, 2016-07-05 21:34:04.013, foo, 0}
2016-07-05 21:34:04,014 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{10, 2, 10, 2007/11/01 02:13:00.345, 1, 1700, 0, 2016-07-05 21:34:04.014, foo, 2016-07-05 21:34:04.014, foo, 0}
2016-07-05 21:34:04,015 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{11, 5, 2, 2007/11/09 16:23:01, 1, 1800, 1, 2016-07-05 21:34:04.015, foo, 2016-07-05 21:34:04.015, foo, 0}
2016-07-05 21:34:04,016 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{12, 15, 2, 2006/12/22 23:59:12, 1, 1700, 1, 2016-07-05 21:34:04.016, foo, 2016-07-05 21:34:04.016, foo, 0}
2016-07-05 21:34:04,016 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{13, 13, 8, 2007/11/01 02:13:00.346, 1, 1800, 1, 2016-07-05 21:34:04.016, foo, 2016-07-05 21:34:04.016, foo, 0}
2016-07-05 21:34:04,017 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{14, 2, 4, 2007/11/09 16:23:02, 2, 1700, 1, 2016-07-05 21:34:04.017, foo, 2016-07-05 21:34:04.017, foo, 0}
2016-07-05 21:34:04,018 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{15, 9, 11, 2006/12/22 23:59:32, 5, 1800, 1, 2016-07-05 21:34:04.018, foo, 2016-07-05 21:34:04.018, foo, 0}
2016-07-05 21:34:04,026 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{16, 20, 1, 2007/11/01 02:13:00.347, 1, 2000, 1, 2016-07-05 21:34:04.026, foo, 2016-07-05 21:34:04.026, foo, 0}
2016-07-05 21:34:04,028 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{17, 19, 11, 2006/12/22 23:59:33, 2, 1000, 0, 2016-07-05 21:34:04.028, foo, 2016-07-05 21:34:04.028, foo, 0}
2016-07-05 21:34:04,029 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{18, 4, 10, 2007/11/01 02:13:00.348, 1, 1535, 1, 2016-07-05 21:34:04.029, foo, 2016-07-05 21:34:04.029, foo, 0}
2016-07-05 21:34:04,037 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{19, 4, 11, 2007/11/01 02:13:00.348, 4, 1700, 1, 2016-07-05 21:34:04.037, foo, 2016-07-05 21:34:04.037, foo, 0}
2016-07-05 21:34:04,039 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{20, 2, 11, 2006/12/22 23:59:35, 1, 1700, 0, 2016-07-05 21:34:04.039, foo, 2016-07-05 21:34:04.039, foo, 0}
2016-07-05 21:34:04,041 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{21, 2, 15, 2006/12/22 23:59:35, 1, 400000, 0, 2016-07-05 21:34:04.041, foo, 2016-07-05 21:34:04.041, foo, 0}
2016-07-05 21:34:04,056 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{22, 3, 6, 2007/11/01 02:13:00.350, 4, 1800, 1, 2016-07-05 21:34:04.054, foo, 2016-07-05 21:34:04.054, foo, 0}
2016-07-05 21:34:04,059 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{23, 15, 7, 2006/12/22 23:59:36, 1, 1700, 1, 2016-07-05 21:34:04.059, foo, 2016-07-05 21:34:04.059, foo, 0}
2016-07-05 21:34:04,060 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{24, 13, 3, 2007/09/11 12:13:00.351, 1, 1800, 1, 2016-07-05 21:34:04.06, foo, 2016-07-05 21:34:04.06, foo, 0}
2016-07-05 21:34:04,061 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{25, 16, 2, 2006/12/22 23:59:37, 2, 1700, 1, 2016-07-05 21:34:04.06, foo, 2016-07-05 21:34:04.06, foo, 0}
2016-07-05 21:34:04,061 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{26, 3, 4, 2005/12/21 12:13:00.352, 1, 1800, 1, 2016-07-05 21:34:04.061, foo, 2016-07-05 21:34:04.061, foo, 0}
2016-07-05 21:34:04,062 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{27, 2, 8, 2006/12/22 23:59:38, 1, 2000, 1, 2016-07-05 21:34:04.062, foo, 2016-07-05 21:34:04.062, foo, 0}
2016-07-05 21:34:04,063 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{28, 6, 17, 2007/11/01 02:13:00.353, 2, 600, 0, 2016-07-05 21:34:04.063, foo, 2016-07-05 21:34:04.063, foo, 0}
2016-07-05 21:34:04,064 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{29, 4, 4, 2006/12/22 23:59:39, 1, 1535, 1, 2016-07-05 21:34:04.064, foo, 2016-07-05 21:34:04.064, foo, 0}
2016-07-05 21:34:04,065 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{30, 4, 3, 2007/11/01 02:13:00.354, 4, 1700, 1, 2016-07-05 21:34:04.065, foo, 2016-07-05 21:34:04.065, foo, 0}
2016-07-05 21:34:04,066 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{31, 4, 10, 2006/12/22 23:59:40, 1, 1700, 0, 2016-07-05 21:34:04.066, foo, 2016-07-05 21:34:04.066, foo, 0}
2016-07-05 21:34:04,068 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{32, 13, 3, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-07-05 21:34:04.067, foo, 2016-07-05 21:34:04.067, foo, 0}
2016-07-05 21:34:04,069 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{33, 16, 2, 2006/12/22 23:59:41, 2, 1700, 1, 2016-07-05 21:34:04.069, foo, 2016-07-05 21:34:04.069, foo, 0}
2016-07-05 21:34:04,071 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{34, 3, 4, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-07-05 21:34:04.071, foo, 2016-07-05 21:34:04.071, foo, 0}
2016-07-05 21:34:04,074 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{35, 2, 8, 2006/12/12 23:59:42, 1, 2000, 1, 2016-07-05 21:34:04.073, foo, 2016-07-05 21:34:04.073, foo, 0}
2016-07-05 21:34:04,076 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{36, 6, 3, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-07-05 21:34:04.076, foo, 2016-07-05 21:34:04.076, foo, 0}
2016-07-05 21:34:04,077 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{37, 4, 4, 2006/12/12 23:59:43, 1, 1535, 1, 2016-07-05 21:34:04.077, foo, 2016-07-05 21:34:04.077, foo, 0}
2016-07-05 21:34:04,078 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{38, 4, 3, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-07-05 21:34:04.078, foo, 2016-07-05 21:34:04.078, foo, 0}
2016-07-05 21:34:04,079 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{39, 4, 10, 2006/12/12 23:59:44, 1, 1700, 0, 2016-07-05 21:34:04.079, foo, 2016-07-05 21:34:04.079, foo, 0}
2016-07-05 21:34:04,080 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{40, 4, 10, 2007/05/01 12:13:00.359, 1, 1700, 0, 2016-07-05 21:34:04.08, foo, 2016-07-05 21:34:04.08, foo, 0}
2016-07-05 21:34:04,081 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{41, 4, 11, 2007/11/01 02:13:01.354, 4, 1700, 1, 2016-07-05 21:34:04.081, foo, 2016-07-05 21:34:04.081, foo, 0}
2016-07-05 21:34:04,082 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{42, 10, 16, 2006/12/22 23:59:40, 1, 2800000, 1, 2016-07-05 21:34:04.082, foo, 2016-07-05 21:34:04.082, foo, 0}
2016-07-05 21:34:04,084 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{43, 13, 17, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-07-05 21:34:04.084, foo, 2016-07-05 21:34:04.084, foo, 0}
2016-07-05 21:34:04,086 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{44, 16, 14, 2006/12/22 23:59:41, 2, 1700, 1, 2016-07-05 21:34:04.086, foo, 2016-07-05 21:34:04.086, foo, 0}
2016-07-05 21:34:04,087 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{45, 3, 18, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-07-05 21:34:04.087, foo, 2016-07-05 21:34:04.087, foo, 0}
2016-07-05 21:34:04,091 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{46, 2, 7, 2006/12/12 23:59:42, 1, 2000, 1, 2016-07-05 21:34:04.091, foo, 2016-07-05 21:34:04.091, foo, 0}
2016-07-05 21:34:04,092 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{47, 6, 14, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-07-05 21:34:04.092, foo, 2016-07-05 21:34:04.092, foo, 0}
2016-07-05 21:34:04,093 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{48, 16, 12, 2006/12/12 23:59:43, 1, 100000, 1, 2016-07-05 21:34:04.093, foo, 2016-07-05 21:34:04.093, foo, 0}
2016-07-05 21:34:04,094 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{49, 4, 20, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-07-05 21:34:04.094, foo, 2016-07-05 21:34:04.094, foo, 0}
2016-07-05 21:34:04,095 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{50, 4, 19, 2006/12/12 23:59:44, 1, 1700, 0, 2016-07-05 21:34:04.095, foo, 2016-07-05 21:34:04.095, foo, 0}
2016-07-05 21:34:04,096 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{51, 4, 11, 2007/11/21 02:13:00.354, 4, 1700, 1, 2016-07-05 21:34:04.096, foo, 2016-07-05 21:34:04.096, foo, 0}
2016-07-05 21:34:04,097 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{52, 20, 17, 2006/12/23 23:59:40, 1, 400, 0, 2016-07-05 21:34:04.097, foo, 2016-07-05 21:34:04.097, foo, 0}
2016-07-05 21:34:04,098 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{53, 13, 16, 2007/12/28 12:13:10.355, 1, 600000, 1, 2016-07-05 21:34:04.098, foo, 2016-07-05 21:34:04.098, foo, 0}
2016-07-05 21:34:04,098 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{54, 16, 14, 2006/02/22 23:59:41, 2, 1700, 1, 2016-07-05 21:34:04.098, foo, 2016-07-05 21:34:04.098, foo, 0}
2016-07-05 21:34:04,099 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{55, 3, 3, 2007/07/21 12:13:00.356, 1, 1800, 1, 2016-07-05 21:34:04.099, foo, 2016-07-05 21:34:04.099, foo, 0}
2016-07-05 21:34:04,100 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{56, 2, 8, 2006/12/22 23:59:42, 1, 2000, 1, 2016-07-05 21:34:04.1, foo, 2016-07-05 21:34:04.1, foo, 0}
2016-07-05 21:34:04,101 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{57, 6, 19, 2007/02/01 02:13:00.357, 2, 1000, 0, 2016-07-05 21:34:04.101, foo, 2016-07-05 21:34:04.101, foo, 0}
2016-07-05 21:34:04,102 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{58, 2, 12, 2006/12/12 23:59:43, 1, 4000000, 1, 2016-07-05 21:34:04.102, foo, 2016-07-05 21:34:04.102, foo, 0}
2016-07-05 21:34:04,103 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{59, 4, 18, 2007/05/01 02:03:00.358, 1, 380, 1, 2016-07-05 21:34:04.103, foo, 2016-07-05 21:34:04.103, foo, 0}
2016-07-05 21:34:04,105 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{60, 4, 20, 2006/12/12 23:59:44, 2, 680, 0, 2016-07-05 21:34:04.105, foo, 2016-07-05 21:34:04.105, foo, 0}
2016-07-05 21:34:04,106 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{61, 1, 16, 2008-03-03 06:34:56.000, 3, 12000000, 1, 2016-07-05 21:34:04.106, foo, 2016-07-05 21:34:04.106, foo, 0}
2016-07-05 21:34:04,108 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{62, 1, 2, 2009-06-04 06:34:56.000, 12, 20000, 1, 2016-07-05 21:34:04.108, foo, 2016-07-05 21:34:04.108, foo, 0}
2016-07-05 21:34:04,110 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{63, 1, 6, 2010-09-26 06:34:56.000, 2, 2000, 1, 2016-07-05 21:34:04.11, foo, 2016-07-05 21:34:04.11, foo, 0}
2016-07-05 21:34:04,111 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{64, 1, 8, 2011-03-03 09:45:29.000, 1, 50, 1, 2016-07-05 21:34:04.111, foo, 2016-07-05 21:34:04.111, foo, 0}
2016-07-05 21:34:04,113 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{65, 1, 13, 2012-06-04 09:45:29.000, 1, 1000000, 1, 2016-07-05 21:34:04.113, foo, 2016-07-05 21:34:04.113, foo, 0}
2016-07-05 21:34:04,114 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{66, 1, 13, 2013-09-26 09:45:29.000, 1, 900000, 1, 2016-07-05 21:34:04.114, foo, 2016-07-05 21:34:04.114, foo, 0}
2016-07-05 21:34:04,115 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{67, 1, 5, 2014-03-03 21:02:12.000, 2, 3000, 1, 2016-07-05 21:34:04.115, foo, 2016-07-05 21:34:04.115, foo, 0}
2016-07-05 21:34:04,115 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{68, 1, 17, 2015-06-04 21:02:12.000, 30, 3000, 1, 2016-07-05 21:34:04.115, foo, 2016-07-05 21:34:04.115, foo, 0}
2016-07-05 21:34:04,116 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{69, 1, 17, 2016-09-26 21:02:12.000, 1, 1000, 1, 2016-07-05 21:34:04.116, foo, 2016-07-05 21:34:04.116, foo, 0}
2016-07-05 21:34:04,117 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{70, 1, 17, 2017-03-03 01:11:00.000, 1, 1200, 1, 2016-07-05 21:34:04.117, foo, 2016-07-05 21:34:04.117, foo, 0}
2016-07-05 21:34:04,161 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 70 rows are loaded to PURCHASE
2016-07-05 21:34:04,162 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{1, 1, 1800, 2006/12/25 23:59:59, BAK, 2016-07-05 21:34:04.162, foo, 2016-07-05 21:34:04.162, foo}
2016-07-05 21:34:04,163 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{2, 2, 1700, 2007/11/13 16:16:16, BAK, 2016-07-05 21:34:04.163, foo, 2016-07-05 21:34:04.163, foo}
2016-07-05 21:34:04,164 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{3, 3, 900, 2006/12/23 23:56:29, CRC, 2016-07-05 21:34:04.164, foo, 2016-07-05 21:34:04.164, foo}
2016-07-05 21:34:04,165 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{4, 3, 900, 2006/12/23 23:56:30, HAN, 2016-07-05 21:34:04.165, foo, 2016-07-05 21:34:04.165, foo}
2016-07-05 21:34:04,167 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{5, 4, 1700, 2007/12/01 02:13:00, HAN, 2016-07-05 21:34:04.166, foo, 2016-07-05 21:34:04.166, foo}
2016-07-05 21:34:04,168 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{6, 5, 800.20, 2008/04/04 23:12:59, HAN, 2016-07-05 21:34:04.168, foo, 2016-07-05 21:34:04.168, foo}
2016-07-05 21:34:04,169 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{7, 5, 1000.90, 2008/05/04 23:12:59, CRC, 2016-07-05 21:34:04.169, foo, 2016-07-05 21:34:04.169, foo}
2016-07-05 21:34:04,170 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{8, 6, 1000, 2002/01/01 16:32:01, CRC, 2016-07-05 21:34:04.17, foo, 2016-07-05 21:34:04.17, foo}
2016-07-05 21:34:04,172 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{9, 6, 400.8, 2002/01/01 16:32:01, CRC, 2016-07-05 21:34:04.172, foo, 2016-07-05 21:34:04.172, foo}
2016-07-05 21:34:04,174 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{10, 6, 599.2, 2002/01/01 16:32:01, HAN, 2016-07-05 21:34:04.174, foo, 2016-07-05 21:34:04.174, foo}
2016-07-05 21:34:04,176 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{11, 7, 300, 2006/01/28 23:59:59, CRC, 2016-07-05 21:34:04.176, foo, 2016-07-05 21:34:04.176, foo}
2016-07-05 21:34:04,177 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{12, 8, 535.5, 2007/11/09 16:23:00, BAK, 2016-07-05 21:34:04.177, foo, 2016-07-05 21:34:04.177, foo}
2016-07-05 21:34:04,178 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{13, 8, 999.5, 2014/11/09 16:23:05, BAK, 2016-07-05 21:34:04.178, foo, 2016-07-05 21:34:04.178, foo}
2016-07-05 21:34:04,179 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{14, 9, 1700, 2006/12/22 23:59:59, BAK, 2016-07-05 21:34:04.179, foo, 2016-07-05 21:34:04.179, foo}
2016-07-05 21:34:04,180 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{15, 11, 1799.2, 2014/11/09 16:23:01, CRC, 2016-07-05 21:34:04.18, foo, 2016-07-05 21:34:04.18, foo}
2016-07-05 21:34:04,181 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{16, 11, 0.8, 2014/11/09 16:23:01, HAN, 2016-07-05 21:34:04.18, foo, 2016-07-05 21:34:04.18, foo}
2016-07-05 21:34:04,181 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{17, 12, 1690, 2011/12/22 23:59:12, HAN, 2016-07-05 21:34:04.181, foo, 2016-07-05 21:34:04.181, foo}
2016-07-05 21:34:04,184 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{18, 12, 10, 2011/12/22 23:59:12, CRC, 2016-07-05 21:34:04.184, foo, 2016-07-05 21:34:04.184, foo}
2016-07-05 21:34:04,185 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{19, 13, 1800.7, 2007/11/01 02:13:00, CRC, 2016-07-05 21:34:04.185, foo, 2016-07-05 21:34:04.185, foo}
2016-07-05 21:34:04,186 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{20, 14, 1700, 2008/11/09 16:23:02, BAK, 2016-07-05 21:34:04.186, foo, 2016-07-05 21:34:04.186, foo}
2016-07-05 21:34:04,187 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{21, 15, 300, 2006/12/22 23:59:32, HAN, 2016-07-05 21:34:04.187, foo, 2016-07-05 21:34:04.187, foo}
2016-07-05 21:34:04,194 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{22, 15, 600, 2007/12/22 23:59:32, BAK, 2016-07-05 21:34:04.193, foo, 2016-07-05 21:34:04.193, foo}
2016-07-05 21:34:04,194 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{23, 15, 900, 2008/12/22 23:59:32, HAN, 2016-07-05 21:34:04.194, foo, 2016-07-05 21:34:04.194, foo}
2016-07-05 21:34:04,195 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{24, 16, 2000, 2012/11/01 02:13:00, BAK, 2016-07-05 21:34:04.195, foo, 2016-07-05 21:34:04.195, foo}
2016-07-05 21:34:04,196 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{25, 18, 1535, 2013/11/01 02:13:00, HAN, 2016-07-05 21:34:04.196, foo, 2016-07-05 21:34:04.196, foo}
2016-07-05 21:34:04,196 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{26, 19, 1700, 2007/11/01 02:13:00, HAN, 2016-07-05 21:34:04.196, foo, 2016-07-05 21:34:04.196, foo}
2016-07-05 21:34:04,197 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{27, 20, 5, 2006/12/22 23:59:35, HAN, 2016-07-05 21:34:04.197, foo, 2016-07-05 21:34:04.197, foo}
2016-07-05 21:34:04,197 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{28, 21, 399999, 2006/12/22 23:59:35, BAK, 2016-07-05 21:34:04.197, foo, 2016-07-05 21:34:04.197, foo}
2016-07-05 21:34:04,198 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{29, 22, 1800, 2007/11/01 02:13:00, BAK, 2016-07-05 21:34:04.198, foo, 2016-07-05 21:34:04.198, foo}
2016-07-05 21:34:04,199 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{30, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-05 21:34:04.199, foo, 2016-07-05 21:34:04.199, foo}
2016-07-05 21:34:04,200 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{31, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-05 21:34:04.2, foo, 2016-07-05 21:34:04.2, foo}
2016-07-05 21:34:04,201 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{32, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-05 21:34:04.201, foo, 2016-07-05 21:34:04.201, foo}
2016-07-05 21:34:04,203 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{33, 24, 1000, 2012/09/11 12:13:00, BAK, 2016-07-05 21:34:04.203, foo, 2016-07-05 21:34:04.203, foo}
2016-07-05 21:34:04,205 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{34, 24, 800, 2015/09/11 12:13:00, BAK, 2016-07-05 21:34:04.204, foo, 2016-07-05 21:34:04.204, foo}
2016-07-05 21:34:04,206 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{35, 25, 1700, 2013/12/22 23:59:37, BAK, 2016-07-05 21:34:04.206, foo, 2016-07-05 21:34:04.206, foo}
2016-07-05 21:34:04,208 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{36, 26, 1800, 2005/12/21 12:13:00, BAK, 2016-07-05 21:34:04.208, foo, 2016-07-05 21:34:04.208, foo}
2016-07-05 21:34:04,210 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{37, 27, 2000, 2006/12/22 23:59:38, HAN, 2016-07-05 21:34:04.21, foo, 2016-07-05 21:34:04.21, foo}
2016-07-05 21:34:04,211 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{38, 28, 600, 2007/11/01 02:13:00, BAK, 2016-07-05 21:34:04.211, foo, 2016-07-05 21:34:04.211, foo}
2016-07-05 21:34:04,212 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{39, 29, 1535, 2006/12/22 23:59:39, BAK, 2016-07-05 21:34:04.212, foo, 2016-07-05 21:34:04.212, foo}
2016-07-05 21:34:04,213 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{40, 30, 100, 2010/09/01 02:13:00, HAN, 2016-07-05 21:34:04.213, foo, 2016-07-05 21:34:04.213, foo}
2016-07-05 21:34:04,214 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{41, 30, 200, 2011/10/31 02:13:00, CRC, 2016-07-05 21:34:04.214, foo, 2016-07-05 21:34:04.214, foo}
2016-07-05 21:34:04,214 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{42, 30, 300.75, 2012/11/01 02:13:00, CRC, 2016-07-05 21:34:04.214, foo, 2016-07-05 21:34:04.214, foo}
2016-07-05 21:34:04,215 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{43, 30, 400.25, 2013/12/01 02:13:00, HAN, 2016-07-05 21:34:04.215, foo, 2016-07-05 21:34:04.215, foo}
2016-07-05 21:34:04,216 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{44, 30, 300, 2014/09/01 02:13:00, HAN, 2016-07-05 21:34:04.216, foo, 2016-07-05 21:34:04.216, foo}
2016-07-05 21:34:04,217 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{45, 30, 700, 2014/10/01 02:13:00, HAN, 2016-07-05 21:34:04.216, foo, 2016-07-05 21:34:04.216, foo}
2016-07-05 21:34:04,217 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{46, 31, 1700.85, 2006/12/22 23:59:40, HAN, 2016-07-05 21:34:04.217, foo, 2016-07-05 21:34:04.217, foo}
2016-07-05 21:34:04,223 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{47, 32, 1800, 2009/12/28 12:13:10, HAN, 2016-07-05 21:34:04.223, foo, 2016-07-05 21:34:04.223, foo}
2016-07-05 21:34:04,224 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{48, 33, 1700, 2006/12/22 23:59:41, CRC, 2016-07-05 21:34:04.224, foo, 2016-07-05 21:34:04.224, foo}
2016-07-05 21:34:04,225 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{49, 34, 1800, 2007/05/21 12:13:00, BAK, 2016-07-05 21:34:04.224, foo, 2016-07-05 21:34:04.224, foo}
2016-07-05 21:34:04,225 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{50, 35, 2000, 2006/12/12 23:59:42, CRC, 2016-07-05 21:34:04.225, foo, 2016-07-05 21:34:04.225, foo}
2016-07-05 21:34:04,226 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{51, 36, 300.1, 2012/05/01 02:13:00, CRC, 2016-07-05 21:34:04.225, foo, 2016-07-05 21:34:04.225, foo}
2016-07-05 21:34:04,226 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{52, 36, 300.8, 2013/05/01 02:13:00, HAN, 2016-07-05 21:34:04.226, foo, 2016-07-05 21:34:04.226, foo}
2016-07-05 21:34:04,227 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{53, 36, 300.25, 2014/05/01 02:13:00, HAN, 2016-07-05 21:34:04.227, foo, 2016-07-05 21:34:04.227, foo}
2016-07-05 21:34:04,227 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{54, 37, 1535, 2006/12/12 23:59:43, HAN, 2016-07-05 21:34:04.227, foo, 2016-07-05 21:34:04.227, foo}
2016-07-05 21:34:04,228 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{55, 38, 1700, 2007/05/01 02:03:00, HAN, 2016-07-05 21:34:04.228, foo, 2016-07-05 21:34:04.228, foo}
2016-07-05 21:34:04,228 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{56, 40, 128, 2007/05/01 12:13:00, BAK, 2016-07-05 21:34:04.228, foo, 2016-07-05 21:34:04.228, foo}
2016-07-05 21:34:04,229 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{57, 40, 256, 2013/05/01 12:13:00, BAK, 2016-07-05 21:34:04.229, foo, 2016-07-05 21:34:04.229, foo}
2016-07-05 21:34:04,230 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{58, 40, 512, 2009/05/01 12:13:00, CRC, 2016-07-05 21:34:04.23, foo, 2016-07-05 21:34:04.23, foo}
2016-07-05 21:34:04,230 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{59, 41, 1700, 2007/11/01 02:13:00, HAN, 2016-07-05 21:34:04.23, foo, 2016-07-05 21:34:04.23, foo}
2016-07-05 21:34:04,231 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{60, 42, 30000000, 2014/03/22 21:59:40, HAN, 2016-07-05 21:34:04.231, foo, 2016-07-05 21:34:04.231, foo}
2016-07-05 21:34:04,232 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{61, 43, 1800, 2006/12/28 12:13:10, BAK, 2016-07-05 21:34:04.231, foo, 2016-07-05 21:34:04.231, foo}
2016-07-05 21:34:04,232 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{62, 44, 1700, 2006/12/22 23:59:41, BAK, 2016-07-05 21:34:04.232, foo, 2016-07-05 21:34:04.232, foo}
2016-07-05 21:34:04,233 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{63, 45, 1800, 2007/05/21 12:13:00, CRC, 2016-07-05 21:34:04.233, foo, 2016-07-05 21:34:04.233, foo}
2016-07-05 21:34:04,233 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{64, 46, 2000, 2010/12/12 23:59:42, BAK, 2016-07-05 21:34:04.233, foo, 2016-07-05 21:34:04.233, foo}
2016-07-05 21:34:04,234 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{65, 48, 90000, 2006/12/12 23:59:43, HAN, 2016-07-05 21:34:04.234, foo, 2016-07-05 21:34:04.234, foo}
2016-07-05 21:34:04,235 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{66, 48, 10000, 2006/12/12 23:59:43, BAK, 2016-07-05 21:34:04.235, foo, 2016-07-05 21:34:04.235, foo}
2016-07-05 21:34:04,236 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{67, 49, 1700.66, 2007/05/01 02:03:00, HAN, 2016-07-05 21:34:04.236, foo, 2016-07-05 21:34:04.236, foo}
2016-07-05 21:34:04,237 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{68, 51, 1700, 2007/11/21 02:13:00, BAK, 2016-07-05 21:34:04.236, foo, 2016-07-05 21:34:04.236, foo}
2016-07-05 21:34:04,238 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{69, 52, 100, 2006/12/23 23:59:40, BAK, 2016-07-05 21:34:04.238, foo, 2016-07-05 21:34:04.238, foo}
2016-07-05 21:34:04,239 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{70, 52, 40, 2007/12/23 23:59:40, HAN, 2016-07-05 21:34:04.239, foo, 2016-07-05 21:34:04.239, foo}
2016-07-05 21:34:04,240 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{71, 52, 40, 2008/12/23 23:59:40, HAN, 2016-07-05 21:34:04.24, foo, 2016-07-05 21:34:04.24, foo}
2016-07-05 21:34:04,242 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{72, 52, 40, 2009/12/23 23:59:40, HAN, 2016-07-05 21:34:04.242, foo, 2016-07-05 21:34:04.242, foo}
2016-07-05 21:34:04,243 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{73, 52, 40, 2010/12/23 23:59:40, BAK, 2016-07-05 21:34:04.243, foo, 2016-07-05 21:34:04.243, foo}
2016-07-05 21:34:04,244 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{74, 52, 40, 2011/12/23 23:59:40, CRC, 2016-07-05 21:34:04.244, foo, 2016-07-05 21:34:04.244, foo}
2016-07-05 21:34:04,245 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{75, 52, 40, 2012/12/23 23:59:40, BAK, 2016-07-05 21:34:04.245, foo, 2016-07-05 21:34:04.245, foo}
2016-07-05 21:34:04,245 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{76, 52, 40, 2013/12/23 23:59:40, HAN, 2016-07-05 21:34:04.245, foo, 2016-07-05 21:34:04.245, foo}
2016-07-05 21:34:04,246 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{77, 52, 40, 2014/12/23 23:59:40, HAN, 2016-07-05 21:34:04.246, foo, 2016-07-05 21:34:04.246, foo}
2016-07-05 21:34:04,247 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{78, 52, 40, 2015/12/23 23:59:40, HAN, 2016-07-05 21:34:04.247, foo, 2016-07-05 21:34:04.247, foo}
2016-07-05 21:34:04,248 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{79, 53, 600000, 2007/12/28 12:13:10, BAK, 2016-07-05 21:34:04.248, foo, 2016-07-05 21:34:04.248, foo}
2016-07-05 21:34:04,249 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{80, 54, 1700.42, 2008/02/22 23:59:41, CRC, 2016-07-05 21:34:04.249, foo, 2016-07-05 21:34:04.249, foo}
2016-07-05 21:34:04,250 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{81, 55, 1600, 2012/07/21 12:13:00, HAN, 2016-07-05 21:34:04.249, foo, 2016-07-05 21:34:04.249, foo}
2016-07-05 21:34:04,251 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{82, 55, 200, 2008/07/21 12:13:00, CRC, 2016-07-05 21:34:04.251, foo, 2016-07-05 21:34:04.251, foo}
2016-07-05 21:34:04,251 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{83, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-05 21:34:04.251, foo, 2016-07-05 21:34:04.251, foo}
2016-07-05 21:34:04,256 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{84, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-05 21:34:04.256, foo, 2016-07-05 21:34:04.256, foo}
2016-07-05 21:34:04,256 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{85, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-05 21:34:04.256, foo, 2016-07-05 21:34:04.256, foo}
2016-07-05 21:34:04,257 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{86, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-05 21:34:04.257, foo, 2016-07-05 21:34:04.257, foo}
2016-07-05 21:34:04,257 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{87, 57, 999, 2014/02/01 02:13:00, HAN, 2016-07-05 21:34:04.257, foo, 2016-07-05 21:34:04.257, foo}
2016-07-05 21:34:04,258 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{88, 58, 4000000, 2006/12/12 23:59:43, HAN, 2016-07-05 21:34:04.258, foo, 2016-07-05 21:34:04.258, foo}
2016-07-05 21:34:04,259 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{89, 59, 380.77, 2013/05/01 02:03:00, CRC, 2016-07-05 21:34:04.258, foo, 2016-07-05 21:34:04.258, foo}
2016-07-05 21:34:04,259 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{90, 60, 675.88, 2006/12/12 23:59:44, BAK, 2016-07-05 21:34:04.259, foo, 2016-07-05 21:34:04.259, foo}
2016-07-05 21:34:04,260 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{91, 61, 12000000, 2008/03/03 06:34:56, HAN, 2016-07-05 21:34:04.26, foo, 2016-07-05 21:34:04.26, foo}
2016-07-05 21:34:04,260 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{92, 62, 20000, 2009/06/04 06:34:56, HAN, 2016-07-05 21:34:04.26, foo, 2016-07-05 21:34:04.26, foo}
2016-07-05 21:34:04,261 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{93, 63, 2000, 2010/09/26 06:34:56, HAN, 2016-07-05 21:34:04.261, foo, 2016-07-05 21:34:04.261, foo}
2016-07-05 21:34:04,261 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{94, 64, 50, 2011/03/03 09:45:29, BAK, 2016-07-05 21:34:04.261, foo, 2016-07-05 21:34:04.261, foo}
2016-07-05 21:34:04,262 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{95, 65, 1000000, 2012/06/04 09:45:29, BAK, 2016-07-05 21:34:04.262, foo, 2016-07-05 21:34:04.262, foo}
2016-07-05 21:34:04,262 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{96, 66, 900000, 2013/09/26 09:45:29, BAK, 2016-07-05 21:34:04.262, foo, 2016-07-05 21:34:04.262, foo}
2016-07-05 21:34:04,263 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{97, 67, 3000, 2014/03/03 21:02:12, CRC, 2016-07-05 21:34:04.263, foo, 2016-07-05 21:34:04.263, foo}
2016-07-05 21:34:04,263 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{98, 68, 3000, 2015/06/04 21:02:12, CRC, 2016-07-05 21:34:04.263, foo, 2016-07-05 21:34:04.263, foo}
2016-07-05 21:34:04,264 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{99, 69, 1000, 2016/09/26 21:02:12, CRC, 2016-07-05 21:34:04.264, foo, 2016-07-05 21:34:04.264, foo}
2016-07-05 21:34:04,265 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{100, 70, 1200, 2017/03/03 01:11:00, HAN, 2016-07-05 21:34:04.265, foo, 2016-07-05 21:34:04.265, foo}
2016-07-05 21:34:04,324 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 100 rows are loaded to PURCHASE_PAYMENT
2016-07-05 21:34:04,325 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():378) - ...Checking implicit set of classification
2016-07-05 21:34:04,343 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-05 21:34:04,354 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-05 21:34:04,367 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-05 21:34:04,371 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-05 21:34:04,377 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-05 21:34:04,381 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-05 21:34:04,384 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-05 21:34:04,395 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-07-05 21:34:04,398 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-07-05 21:34:04,401 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct MOBILE_LOGIN_FLG from MEMBER_LOGIN where MOBILE_LOGIN_FLG not in (1, 0)
2016-07-05 21:34:04,405 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_COMPLETE_FLG from PURCHASE where PAYMENT_COMPLETE_FLG not in (1, 0)
2016-07-05 21:34:04,410 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_METHOD_CODE from PURCHASE_PAYMENT where PAYMENT_METHOD_CODE not in ('HAN', 'BAK', 'CRC')
2016-07-05 21:34:04,416 [main] INFO  (DfTakeFinallyProcess#takeFinally():219) - 
2016-07-05 21:34:04,416 [main] INFO  (DfTakeFinallyProcess#takeFinally():220) - * * * * * * * **
2016-07-05 21:34:04,417 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - *              *
2016-07-05 21:34:04,417 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * Take Finally *
2016-07-05 21:34:04,417 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2016-07-05 21:34:04,417 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * * * * * * * **
2016-07-05 21:34:04,425 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: take-finally.sql
2016-07-05 21:34:04,426 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Member addresses should be only one at any time.
-- - - - - - - - - - -/
select adr.MEMBER_ADDRESS_ID, adr.MEMBER_ID
     , adr.VALID_BEGIN_DATE, adr.VALID_END_DATE
     , adr.ADDRESS
  from MEMBER_ADDRESS adr
 where exists (select subadr.MEMBER_ADDRESS_ID
                 from MEMBER_ADDRESS subadr
                where subadr.MEMBER_ID = adr.MEMBER_ID
                  and subadr.VALID_BEGIN_DATE > adr.VALID_BEGIN_DATE
                  -- 有効期間が一日だけ重複しているパターンも検出
                  and subadr.VALID_BEGIN_DATE <= adr.VALID_END_DATE
       )
2016-07-05 21:34:04,429 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 正式会員日時を持ってる仮会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'PRV'
   and mem.FORMALIZED_DATETIME is not NULL
2016-07-05 21:34:04,431 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- まだ生まれていない会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.BIRTHDATE > now()
2016-07-05 21:34:04,432 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 退会会員が退会情報を持っていることをアサート
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'WDL'
   and not exists (select wdl.MEMBER_ID
                     from MEMBER_WITHDRAWAL wdl
                    where wdl.MEMBER_ID = mem.MEMBER_ID
       )
2016-07-05 21:34:04,434 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=4 failure=0
2016-07-05 21:34:04,434 [main] INFO  (DfSqlFileFireMan#fire():89) - {Take Finally}: success=4 failure=0 (in 1 files)
2016-07-05 21:34:04,436 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-05 21:34:04,443 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m05s970ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=49 failure=0 (in 3 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql
  o replace-schema-50-procedure.sql

 {Load Data}: loaded-files=3
  (common)
  o 10-master.xls
  (ut)
  o 20-member.xls
  o 30-product.xls

 {Take Finally}: success=4 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2016-07-05 21:34:05,563 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2016-07-05 21:34:05,567 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2016-07-05 21:34:05,567 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2016-07-05 21:34:05,568 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2016-07-05 21:34:05,568 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2016-07-05 21:34:05,608 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-05 21:34:05,609 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-05 21:34:05,609 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-05 21:34:05,610 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-05 21:34:05,668 [main] INFO  (DfSchemaXmlSerializer#serialize():285) - 
2016-07-05 21:34:05,668 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - ...Starting to process JDBC to SchemaXML
2016-07-05 21:34:05,669 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1460) - ...Loading previous schema (schema diff process)
2016-07-05 21:34:05,686 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-05 21:34:05,860 [main] INFO  (DfSchemaXmlSerializer#generateXML():359) - ...Getting DB connection
2016-07-05 21:34:05,866 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-05 21:34:06,391 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-05 21:34:06,392 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-05 21:34:06,394 [main] INFO  (DfSchemaXmlSerializer#generateXML():362) - ...Getting DB meta data
2016-07-05 21:34:06,396 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-05 21:34:06,397 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-05 21:34:06,397 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-05 21:34:06,413 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'maihamadb' order by table_name asc
2016-07-05 21:34:06,417 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'maihamadb' order by table_name asc, column_name asc
2016-07-05 21:34:06,442 [main] INFO  (DfSchemaXmlSerializer#processTable():419) - 
2016-07-05 21:34:06,442 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2016-07-05 21:34:06,442 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ [Table List]
2016-07-05 21:34:06,443 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member(TABLE) // 会員: 会員登録時にデータが登録される。...
2016-07-05 21:34:06,506 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_address(TABLE) // 会員住所情報: 会員の住所に関する情報。...
2016-07-05 21:34:06,527 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_following(TABLE) // 会員フォローイング: とある会員が他の会員をフォローできる。すると、フォローした会員の購入履歴が閲覧できる。
2016-07-05 21:34:06,543 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_login(TABLE) // 会員ログイン情報: ログインするたびに登録されるログイン履歴。
2016-07-05 21:34:06,564 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_security(TABLE) // 会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある
2016-07-05 21:34:06,580 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_service(TABLE) // 会員サービス: 会員のサービス情報（ポイントサービスなど）。
2016-07-05 21:34:06,592 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_status(TABLE) // 会員ステータス
2016-07-05 21:34:06,603 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_withdrawal(TABLE) // 会員退会情報: 退会会員の退会に関する詳細な情報。...
2016-07-05 21:34:06,618 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product(TABLE) // 商品
2016-07-05 21:34:06,632 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product_category(TABLE) // 商品カテゴリ: 商品のカテゴリを表現するマスタ。...
2016-07-05 21:34:06,642 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product_status(TABLE) // 商品ステータス
2016-07-05 21:34:06,650 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.purchase(TABLE) // 購入: 一つの商品に対する一回の購入を表現する。...
2016-07-05 21:34:06,663 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.purchase_payment(TABLE) // 購入支払: 購入に対する支払。...
2016-07-05 21:34:06,675 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.region(TABLE) // 地域: 主に会員の住所に対応する地域。...
2016-07-05 21:34:06,684 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.service_rank(TABLE) // サービスランク: 会員のサービスレベルを表現するランク。...
2016-07-05 21:34:06,694 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.withdrawal_reason(TABLE) // 退会理由: 会員に選ばせる定型的な退会理由のマスタ。
2016-07-05 21:34:06,703 [main] INFO  (DfSchemaXmlSerializer#processTable():433) - $ 
2016-07-05 21:34:06,703 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ [Table Count]
2016-07-05 21:34:06,703 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 16
2016-07-05 21:34:06,704 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ = = = = = = = = = =/
2016-07-05 21:34:06,704 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - 
2016-07-05 21:34:06,705 [main] INFO  (DfSchemaXmlSerializer#processSequence():796) - ...Getting sequences
2016-07-05 21:34:06,713 [main] INFO  (DfSchemaXmlSerializer#serialize():300) - ...Serializing XML:
2016-07-05 21:34:06,713 [main] INFO  (DfSchemaXmlSerializer#serialize():301) -   filePath = ./schema/project-schema-maihamadb.xml
2016-07-05 21:34:06,714 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   encoding = UTF-8
2016-07-05 21:34:06,756 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1478) - ...Loading next schema (schema diff process)
2016-07-05 21:34:06,758 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-05 21:34:06,855 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1483) -  -> different from previous (schema diff)
2016-07-05 21:34:06,860 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1485) - ...Serializing schema-diff:
2016-07-05 21:34:06,861 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1486) -   filePath = ./schema/project-history-maihamadb.diffmap
2016-07-05 21:34:06,866 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-05 21:34:06,876 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s334ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2016-07-05 21:34:07,752 [main] INFO  (TorqueDocumentationTask#begin():175) - +------------------------------------------+
2016-07-05 21:34:07,754 [main] INFO  (TorqueDocumentationTask#begin():176) - |                                          |
2016-07-05 21:34:07,755 [main] INFO  (TorqueDocumentationTask#begin():177) - |                   Doc                    |
2016-07-05 21:34:07,755 [main] INFO  (TorqueDocumentationTask#begin():185) - |                                          |
2016-07-05 21:34:07,755 [main] INFO  (TorqueDocumentationTask#begin():186) - +------------------------------------------+
2016-07-05 21:34:07,787 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-05 21:34:07,787 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-05 21:34:07,788 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-05 21:34:07,788 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-05 21:34:07,792 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - 
2016-07-05 21:34:07,792 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2016-07-05 21:34:07,793 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():248) - *                   *
2016-07-05 21:34:07,793 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():249) - *    Schema HTML    *
2016-07-05 21:34:07,794 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():250) - *                   *
2016-07-05 21:34:07,794 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():251) - * * * * * * * * * * *
2016-07-05 21:34:07,848 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-05 21:34:07,967 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2016-07-05 21:34:08,147 [main] INFO  (Database#doEnableDocumentOutputDirectory():1179) - ...Setting up documentOutputDirectory: ./output/doc
2016-07-05 21:34:08,155 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2016-07-05 21:34:08,156 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2016-07-05 21:34:08,157 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2016-07-05 21:34:08,159 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2016-07-05 21:34:08,160 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2016-07-05 21:34:08,161 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2016-07-05 21:34:08,164 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2016-07-05 21:34:08,164 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2016-07-05 21:34:08,167 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_ADDRESS_VALID
2016-07-05 21:34:08,173 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-05 21:34:08,174 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_ADDRESS.[MEMBER_ID]
2016-07-05 21:34:08,174 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.VALID_BEGIN_DATE <= /*targetDate(Date)*/null\n     and $$foreignAlias$$.VALID_END_DATE >= /*targetDate(Date)*/null
2016-07-05 21:34:08,175 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_LOGIN_LATEST
2016-07-05 21:34:08,176 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-05 21:34:08,176 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_LOGIN.[MEMBER_ID]
2016-07-05 21:34:08,176 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.LOGIN_DATETIME = ($$sqbegin$$\nselect max(login.LOGIN_DATETIME)\n  from MEMBER_LOGIN login\n where login.MEMBER_ID = $$foreignAlias$$.MEMBER_ID\n)$$sqend$$
2016-07-05 21:34:08,177 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2016-07-05 21:34:08,192 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-05 21:34:08,534 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-05 21:34:08,538 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-05 21:34:08,542 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-05 21:34:08,546 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-05 21:34:08,552 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-05 21:34:08,556 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-05 21:34:08,569 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():157) - ...Loading schema history
2016-07-05 21:34:08,610 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():161) -  -> found history: count=4
2016-07-05 21:34:09,104 [main] INFO  (Database#getAvailableProcedureList():2823) -  
2016-07-05 21:34:09,105 [main] INFO  (Database#getAvailableProcedureList():2824) - ...Setting up procedures for documents
2016-07-05 21:34:09,112 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-05 21:34:09,131 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-05 21:34:09,132 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-05 21:34:09,213 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'maihamadb' order by ROUTINE_NAME
2016-07-05 21:34:09,218 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=maihamadb
2016-07-05 21:34:09,219 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_IN_OUT_PARAMETER:{4, 84, cb677351}
2016-07-05 21:34:09,220 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_RETURN_RESULT_SET:{9, 254, 4b86b61f}
2016-07-05 21:34:09,221 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=2
2016-07-05 21:34:09,222 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=2
2016-07-05 21:34:09,274 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-05 21:34:09,289 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-05 21:34:09,294 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s556ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2016-07-05 21:34:12,300 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2016-07-05 21:34:12,302 [main] INFO  (TorqueDataModelTask#begin():110) - |                                          |
2016-07-05 21:34:12,302 [main] INFO  (TorqueDataModelTask#begin():111) - |                 Generate                 |
2016-07-05 21:34:12,303 [main] INFO  (TorqueDataModelTask#begin():112) - |                                          |
2016-07-05 21:34:12,303 [main] INFO  (TorqueDataModelTask#begin():113) - +------------------------------------------+
2016-07-05 21:34:12,326 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-05 21:34:12,327 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-05 21:34:12,327 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-05 21:34:12,328 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-05 21:34:12,349 [main] INFO  (TorqueDataModelTask#setupControlTemplate():164) - 
2016-07-05 21:34:12,349 [main] INFO  (TorqueDataModelTask#setupControlTemplate():165) - ...Using Java control: om/ControlGenerateJava.vm
2016-07-05 21:34:12,383 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-05 21:34:12,461 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2016-07-05 21:34:12,679 [main] INFO  (Database#doEnableGenerateOutputDirectory():1147) - ...Setting up generateOutputDirectory: ../src/main/java
2016-07-05 21:34:12,683 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2016-07-05 21:34:12,684 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2016-07-05 21:34:12,685 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2016-07-05 21:34:12,686 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2016-07-05 21:34:12,687 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2016-07-05 21:34:12,688 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2016-07-05 21:34:12,691 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2016-07-05 21:34:12,691 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2016-07-05 21:34:12,694 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_ADDRESS_VALID
2016-07-05 21:34:12,703 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-05 21:34:12,703 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_ADDRESS.[MEMBER_ID]
2016-07-05 21:34:12,704 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.VALID_BEGIN_DATE <= /*targetDate(Date)*/null\n     and $$foreignAlias$$.VALID_END_DATE >= /*targetDate(Date)*/null
2016-07-05 21:34:12,704 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_LOGIN_LATEST
2016-07-05 21:34:12,705 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-05 21:34:12,705 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_LOGIN.[MEMBER_ID]
2016-07-05 21:34:12,705 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.LOGIN_DATETIME = ($$sqbegin$$\nselect max(login.LOGIN_DATETIME)\n  from MEMBER_LOGIN login\n where login.MEMBER_ID = $$foreignAlias$$.MEMBER_ID\n)$$sqend$$
2016-07-05 21:34:12,705 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2016-07-05 21:34:12,718 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-05 21:34:13,039 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-05 21:34:13,042 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-05 21:34:13,045 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-05 21:34:13,050 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-05 21:34:13,056 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-05 21:34:13,060 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-05 21:34:13,072 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2016-07-05 21:34:13,072 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2016-07-05 21:34:13,073 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2016-07-05 21:34:13,073 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2016-07-05 21:34:13,073 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2016-07-05 21:34:13,074 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2016-07-05 21:34:13,074 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2016-07-05 21:34:13,074 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2016-07-05 21:34:13,075 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2016-07-05 21:34:13,075 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2016-07-05 21:34:13,090 [main] INFO  (Database#info():2711) - public void parseAllCommon() {
2016-07-05 21:34:13,092 [main] INFO  (Database#info():2711) -     parse('CDef');
2016-07-05 21:34:13,163 [main] INFO  (Database#info():2711) -     parse('DBCurrent');
2016-07-05 21:34:13,166 [main] INFO  (Database#info():2711) -     parse('DBFluteConfig');
2016-07-05 21:34:13,209 [main] INFO  (Database#info():2711) -     parse('DBFluteInitializer');
2016-07-05 21:34:13,215 [main] INFO  (Database#info():2711) -     parse('DBMetaInstanceHandler');
2016-07-05 21:34:13,234 [main] INFO  (Database#info():2711) -     parse('EntityDefinedCommonColumn');
2016-07-05 21:34:13,261 [main] INFO  (Database#info():2711) -     parse('ImplementedBehaviorSelector');
2016-07-05 21:34:13,267 [main] INFO  (Database#info():2711) -     parse('ImplementedCommonColumnAutoSetupper');
2016-07-05 21:34:13,289 [main] INFO  (Database#info():2711) -     parse('ImplementedInvokerAssistant');
2016-07-05 21:34:13,295 [main] INFO  (Database#info():2711) -     parse('ImplementedSqlClauseCreator');
2016-07-05 21:34:13,299 [main] INFO  (Database#info():2711) - }
2016-07-05 21:34:13,300 [main] INFO  (Database#info():2711) - public void parseContainerConfig() {
2016-07-05 21:34:13,301 [main] INFO  (Database#info():2711) -     parse('../resources/dbflute.xml')
2016-07-05 21:34:13,328 [main] INFO  (Database#info():2711) - }
2016-07-05 21:34:13,336 [main] INFO  (DfOldClassHandler#info():1033) - public void deleteOldTableClass() {
2016-07-05 21:34:13,391 [main] INFO  (DfOldClassHandler#info():1033) - }
2016-07-05 21:34:13,392 [main] INFO  (Database#info():2711) - public void parseTableClass() {
2016-07-05 21:34:13,392 [main] INFO  (Database#info():2711) -     parse('member');
2016-07-05 21:34:14,020 [main] INFO  (Database#info():2711) -     parse('member_address');
2016-07-05 21:34:14,297 [main] INFO  (Database#info():2711) -     parse('member_following');
2016-07-05 21:34:14,511 [main] INFO  (Database#info():2711) -     parse('member_login');
2016-07-05 21:34:14,723 [main] INFO  (Database#info():2711) -     parse('member_security');
2016-07-05 21:34:14,891 [main] INFO  (Database#info():2711) -     parse('member_service');
2016-07-05 21:34:15,084 [main] INFO  (Database#info():2711) -     parse('member_status');
2016-07-05 21:34:15,261 [main] INFO  (Database#info():2711) -     parse('member_withdrawal');
2016-07-05 21:34:15,433 [main] INFO  (Database#info():2711) -     parse('product');
2016-07-05 21:34:15,623 [main] INFO  (Database#info():2711) -     parse('product_category');
2016-07-05 21:34:15,809 [main] INFO  (Database#info():2711) -     parse('product_status');
2016-07-05 21:34:15,950 [main] INFO  (Database#info():2711) -     parse('purchase');
2016-07-05 21:34:16,155 [main] INFO  (Database#info():2711) -     parse('purchase_payment');
2016-07-05 21:34:16,308 [main] INFO  (Database#info():2711) -     parse('region');
2016-07-05 21:34:16,430 [main] INFO  (Database#info():2711) -     parse('service_rank');
2016-07-05 21:34:16,606 [main] INFO  (Database#info():2711) -     parse('withdrawal_reason');
2016-07-05 21:34:16,728 [main] INFO  (Database#info():2711) - }
2016-07-05 21:34:16,729 [main] INFO  (Database#info():2711) -  
2016-07-05 21:34:16,795 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-05 21:34:16,806 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s519ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2016-07-05 21:34:18,565 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2016-07-05 21:34:18,569 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2016-07-05 21:34:18,570 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2016-07-05 21:34:18,570 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2016-07-05 21:34:18,570 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2016-07-05 21:34:18,621 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-05 21:34:18,629 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-05 21:34:18,630 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-05 21:34:18,630 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-05 21:34:18,720 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectOutsideMember.sql
2016-07-05 21:34:18,729 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-05 21:34:19,530 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-05 21:34:19,531 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-05 21:34:19,604 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 初めての外だしSQL

 [df:description]
  会員ID、会員名称、生年月日、会員ステータス名称、サービスポイント数を取得
  会員IDの等値、会員名称の前方一致、会員ステータスの等値を and で連結
  それぞれ条件値がない場合は条件自体が無効になるように
  全ての条件値がない場合は全件検索になるように
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , mb.MEMBER_STATUS_CODE
     , stat.MEMBER_STATUS_NAME
     , serv.SERVICE_POINT_COUNT
  from MEMBER mb
    left outer join MEMBER_STATUS stat
      on mb.MEMBER_STATUS_CODE = stat.MEMBER_STATUS_CODE
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
 /*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- //会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'S%' -- //会員名称 (Null Allowed)
       /*END*/
       /*IF pmb.memberStatusCode != null*/
   and mb.MEMBER_STATUS_CODE = /*pmb.memberStatusCode:ref(MEMBER)*/'FML' -- //会員ステータス名称 (Null Allowed)
       /*END*/
/*END*/
2016-07-05 21:34:19,619 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-05 21:34:19,619 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectPartOfMember.sql
2016-07-05 21:34:19,628 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 ページング検索

 [df:description]
 (Manual)ページング検索すること
 o 基本は "初めての外だしSQL" のSQLと同じで...
 o 会員ステータスの等値条件は要らない
 o 会員サービスのサービスポイント数の大なり条件を追加
 o 結合に関して、カウント検索のパフォーマンスを最大限考慮すること (会員サービスの結合とか)
 そのとき、IFコメントに記述する条件が複雑にならないように (代理判定メソッドを使う)
*/

-- #df:entity#

-- !df:pmb extends ManualPaging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , serv.SERVICE_POINT_COUNT
-- ELSE select count(*) 
/*END*/
  from MEMBER mb
    /*IF pmb.needsJoinService()*/
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
    /*END*/
/*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- 会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'%S%' -- //会員名称 (Null Allowed)
       /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
   and serv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // サービスポイント数の下限値 (Null Allowed)
      /*END*/
/*END*/
/*IF pmb.isPaging()*/
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
/*END*/
2016-07-05 21:34:19,681 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-05 21:34:19,681 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthCursor.sql
2016-07-05 21:34:19,683 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 外だしSQLでカーソル検索ってみる

 [df:description]
 "さらに外だし" と同じ仕様(ページングは不要)
 カーソル検索として作成すること
 明らかにおかしいカラム名のカラムはデータ取得してはいけない (後は何を取ってもOKですが、これだけはっ)
*/

-- #df:entity#
-- +cursor+

-- !df:pmb!
-- !!AutoDetect!!

select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                           
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  from PURCHASE pch
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
2016-07-05 21:34:19,764 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-05 21:34:19,765 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthSummary.sql
2016-07-05 21:34:19,768 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 さらに外だし

 [df:description]
 "会員と購入月" ごとの購入の平均購入価格、合計購入数量を検索する
 会員ID、会員名称、購入月、平均購入価格、合計購入数量という形で検索
 "支払済みの購入だけ" という条件が指定できるようにする
 会員名称の曖昧検索(部分一致)という条件が指定ができるようにする
 会員のサービスポイント数の大なり条件が指定できるようにする
 会員IDの昇順、購入月の降順で並べる
*/

-- #df:entity#

-- !df:pmb extends Paging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                               
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  -- ELSE select count(*) from (select mem.MEMBER_ID
/*END*/ 
  from PURCHASE pch
  /*IF pmb.needsJoinMember()*/
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
  /*IF pmb.needsJoinService()*/
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
/*IF pmb.isPaging()*/
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
  -- ELSE ) as count
/*END*/
2016-07-05 21:34:19,841 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-05 21:34:19,842 [main] INFO  (DfSqlFileFireMan#fire():89) - {Fired SQL}: success=4 failure=0 (in 4 files)
2016-07-05 21:34:19,842 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-05 21:34:19,852 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s328ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o MemberBhv_selectOutsideMember.sql
  o MemberBhv_selectPartOfMember.sql
  o PurchaseBhv_selectPurchaseMonthCursor.sql
  o PurchaseBhv_selectPurchaseMonthSummary.sql

   o: OK (4)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2016-07-05 21:34:20,962 [main] INFO  (DfSql2EntityTask#begin():105) - +------------------------------------------+
2016-07-05 21:34:20,964 [main] INFO  (DfSql2EntityTask#begin():106) - |                                          |
2016-07-05 21:34:20,964 [main] INFO  (DfSql2EntityTask#begin():107) - |                Sql2Entity                |
2016-07-05 21:34:20,964 [main] INFO  (DfSql2EntityTask#begin():108) - |                                          |
2016-07-05 21:34:20,965 [main] INFO  (DfSql2EntityTask#begin():109) - +------------------------------------------+
2016-07-05 21:34:20,986 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-05 21:34:20,986 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-05 21:34:20,986 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-05 21:34:20,986 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-05 21:34:21,005 [main] INFO  (DfSql2EntityTask#setupControlTemplate():175) - 
2016-07-05 21:34:21,006 [main] INFO  (DfSql2EntityTask#setupControlTemplate():176) - ...Using Java control: om/ControlSql2EntityJava.vm
2016-07-05 21:34:21,015 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-05 21:34:21,142 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectOutsideMember.sql
2016-07-05 21:34:21,150 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-05 21:34:21,474 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-05 21:34:21,474 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-05 21:34:21,477 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 初めての外だしSQL

 [df:description]
  会員ID、会員名称、生年月日、会員ステータス名称、サービスポイント数を取得
  会員IDの等値、会員名称の前方一致、会員ステータスの等値を and で連結
  それぞれ条件値がない場合は条件自体が無効になるように
  全ての条件値がない場合は全件検索になるように
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , mb.MEMBER_STATUS_CODE
     , stat.MEMBER_STATUS_NAME
     , serv.SERVICE_POINT_COUNT
  from MEMBER mb
    left outer join MEMBER_STATUS stat
      on mb.MEMBER_STATUS_CODE = stat.MEMBER_STATUS_CODE
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
 /*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- //会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'S%' -- //会員名称 (Null Allowed)
       /*END*/
       /*IF pmb.memberStatusCode != null*/
   and mb.MEMBER_STATUS_CODE = /*pmb.memberStatusCode:ref(MEMBER)*/'FML' -- //会員ステータス名称 (Null Allowed)
       /*END*/
/*END*/
2016-07-05 21:34:21,534 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-05 21:34:21,535 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectPartOfMember.sql
2016-07-05 21:34:21,535 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 ページング検索

 [df:description]
 (Manual)ページング検索すること
 o 基本は "初めての外だしSQL" のSQLと同じで...
 o 会員ステータスの等値条件は要らない
 o 会員サービスのサービスポイント数の大なり条件を追加
 o 結合に関して、カウント検索のパフォーマンスを最大限考慮すること (会員サービスの結合とか)
 そのとき、IFコメントに記述する条件が複雑にならないように (代理判定メソッドを使う)
*/

-- #df:entity#

-- !df:pmb extends ManualPaging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , serv.SERVICE_POINT_COUNT
-- ELSE select count(*) 
/*END*/
  from MEMBER mb
    /*IF pmb.needsJoinService()*/
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
    /*END*/
/*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- 会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'%S%' -- //会員名称 (Null Allowed)
       /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
   and serv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // サービスポイント数の下限値 (Null Allowed)
      /*END*/
/*END*/
/*IF pmb.isPaging()*/
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
/*END*/
2016-07-05 21:34:21,545 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-05 21:34:21,546 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthCursor.sql
2016-07-05 21:34:21,548 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 外だしSQLでカーソル検索ってみる

 [df:description]
 "さらに外だし" と同じ仕様(ページングは不要)
 カーソル検索として作成すること
 明らかにおかしいカラム名のカラムはデータ取得してはいけない (後は何を取ってもOKですが、これだけはっ)
*/

-- #df:entity#
-- +cursor+

-- !df:pmb!
-- !!AutoDetect!!

select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                           
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  from PURCHASE pch
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
2016-07-05 21:34:21,576 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-05 21:34:21,577 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthSummary.sql
2016-07-05 21:34:21,579 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 さらに外だし

 [df:description]
 "会員と購入月" ごとの購入の平均購入価格、合計購入数量を検索する
 会員ID、会員名称、購入月、平均購入価格、合計購入数量という形で検索
 "支払済みの購入だけ" という条件が指定できるようにする
 会員名称の曖昧検索(部分一致)という条件が指定ができるようにする
 会員のサービスポイント数の大なり条件が指定できるようにする
 会員IDの昇順、購入月の降順で並べる
*/

-- #df:entity#

-- !df:pmb extends Paging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                               
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  -- ELSE select count(*) from (select mem.MEMBER_ID
/*END*/ 
  from PURCHASE pch
  /*IF pmb.needsJoinMember()*/
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
  /*IF pmb.needsJoinService()*/
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
/*IF pmb.isPaging()*/
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
  -- ELSE ) as count
/*END*/
2016-07-05 21:34:21,617 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-05 21:34:21,618 [main] INFO  (DfSqlFileFireMan#fire():89) - {Fired SQL}: success=4 failure=0 (in 4 files)
2016-07-05 21:34:21,623 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2016-07-05 21:34:21,624 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2016-07-05 21:34:21,675 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'maihamadb' order by ROUTINE_NAME
2016-07-05 21:34:21,681 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=maihamadb
2016-07-05 21:34:21,682 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_IN_OUT_PARAMETER:{4, 84, cb677351}
2016-07-05 21:34:21,683 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_RETURN_RESULT_SET:{9, 254, 4b86b61f}
2016-07-05 21:34:21,683 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=2
2016-07-05 21:34:21,683 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=2
2016-07-05 21:34:21,705 [main] INFO  (DfProcedureExecutionMetaExtractor#doExtractExecutionMetaData():109) - ...Calling: {call SP_IN_OUT_PARAMETER(?, ?, ?)}
2016-07-05 21:34:21,729 [main] INFO  (DfProcedureExecutionMetaExtractor#doExtractExecutionMetaData():109) - ...Calling: {call SP_RETURN_RESULT_SET(?)}
2016-07-05 21:34:21,738 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2016-07-05 21:34:21,738 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2016-07-05 21:34:21,739 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():107) - [SpInOutParameterPmb]: maihamadb.SP_IN_OUT_PARAMETER // procedureNoResult
2016-07-05 21:34:21,740 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     String VInVarchar; // procedureColumnIn(12, VARCHAR)
2016-07-05 21:34:21,740 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     String VOutVarchar; // procedureColumnOut(12, VARCHAR)
2016-07-05 21:34:21,741 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     String VInoutVarchar; // procedureColumnInOut(12, VARCHAR)
2016-07-05 21:34:21,741 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():107) - [SpReturnResultSetPmb]: maihamadb.SP_RETURN_RESULT_SET // procedureNoResult
2016-07-05 21:34:21,741 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     java.time.LocalDate birthdateFrom; // procedureColumnIn(91, DATE)
2016-07-05 21:34:21,742 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():171) -     List<SpReturnResultSetNotParamResult1> notParamResult1; // procedureColumnResult
2016-07-05 21:34:21,743 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():171) -     List<SpReturnResultSetNotParamResult2> notParamResult2; // procedureColumnResult
2016-07-05 21:34:21,744 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2016-07-05 21:34:21,744 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2016-07-05 21:34:21,774 [main] INFO  (DfSql2EntityTask#initControlContext():306) - 
2016-07-05 21:34:21,774 [main] INFO  (DfSql2EntityTask#initControlContext():307) - ...Preparing generation of customize-entities and parameter-beans
2016-07-05 21:34:21,774 [main] INFO  (DfSql2EntityTask#initControlContext():308) - * * * * * * * * * *
2016-07-05 21:34:21,775 [main] INFO  (DfSql2EntityTask#initControlContext():309) - * CustomizeEntity *
2016-07-05 21:34:21,775 [main] INFO  (DfSql2EntityTask#initControlContext():310) - * * * * * * * * * *
2016-07-05 21:34:21,792 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():922) - 
OutsideMember
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  BIRTHDATE DATE(10) related to member.BIRTHDATE
  MEMBER_STATUS_CODE CHAR(3) related to member.MEMBER_STATUS_CODE
  MEMBER_STATUS_NAME VARCHAR(50) related to member_status.MEMBER_STATUS_NAME
  SERVICE_POINT_COUNT INT(11) related to member_service.SERVICE_POINT_COUNT

PartOfMember
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  BIRTHDATE DATE(10) related to member.BIRTHDATE
  SERVICE_POINT_COUNT INT(11) related to member_service.SERVICE_POINT_COUNT

PurchaseMonthCursor (cursor)
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  購入月 INT(2)
  平均購入価格 DECIMAL(14, 4)
  合計購入量 DECIMAL(32)

PurchaseMonthSummary
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  購入月 INT(2)
  平均購入価格 DECIMAL(14, 4)
  合計購入量 DECIMAL(32)

SpReturnResultSetNotParamResult1 (procedure)
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  BIRTHDATE DATE(10) related to member.BIRTHDATE
  MEMBER_STATUS_CODE CHAR(3) related to member.MEMBER_STATUS_CODE

SpReturnResultSetNotParamResult2 (procedure)
  MEMBER_STATUS_CODE CHAR(3) related to member_status.MEMBER_STATUS_CODE
  MEMBER_STATUS_NAME VARCHAR(50) related to member_status.MEMBER_STATUS_NAME
2016-07-05 21:34:21,793 [main] INFO  (DfSql2EntityTask#showParameterBean():927) - * * * * * * * * *
2016-07-05 21:34:21,793 [main] INFO  (DfSql2EntityTask#showParameterBean():928) - * ParameterBean *
2016-07-05 21:34:21,793 [main] INFO  (DfSql2EntityTask#showParameterBean():929) - * * * * * * * * *
2016-07-05 21:34:21,794 [main] INFO  (DfSql2EntityTask#showParameterBean():971) - 
OutsideMemberPmb (typed to list, entity)
  Integer memberId:comment(会員ID (Null Allowed))
  String memberName:likePrefix|comment(会員名称 (Null Allowed))
  String memberStatusCode:ref(MEMBER)|comment(会員ステータス名称 (Null Allowed))

PartOfMemberPmb extends SimplePagingBean (typed to entity, manual-paging)
  Integer memberId
  String memberName:likeContain|comment(会員名称 (Null Allowed))
  Integer SERVICE_POINT_COUNT:comment(サービスポイント数の下限値 (Null Allowed))

PurchaseMonthCursorPmb (typed to cursor)
  String memberName:likeContain|comment(会員IDで部分一致(Null Allowed))
  Integer SERVICE_POINT_COUNT:comment(指定されたポイント以上かどうか(Null Allowed))

PurchaseMonthSummaryPmb extends SimplePagingBean (typed to entity, manual-paging)
  String memberName:likeContain|comment(会員IDで部分一致(Null Allowed))
  Integer SERVICE_POINT_COUNT:comment(指定されたポイント以上かどうか(Null Allowed))

SpInOutParameterPmb (procedure)
  v_in_varchar
  v_out_varchar
  v_inout_varchar

SpReturnResultSetPmb (procedure with customize-entity)
  birthdateFrom
2016-07-05 21:34:21,797 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2016-07-05 21:34:21,987 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-05 21:34:21,995 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-05 21:34:21,999 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-05 21:34:22,001 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-05 21:34:22,003 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-05 21:34:22,005 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-05 21:34:22,008 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-05 21:34:22,023 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1163) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2016-07-05 21:34:22,026 [main] INFO  (DfOldClassHandler#info():1033) - public void deleteOldCustomizeClass() {
2016-07-05 21:34:22,047 [main] INFO  (DfOldClassHandler#info():1033) - }
2016-07-05 21:34:22,047 [main] INFO  (Database#info():2711) - public void parseCustomizeEntity() {
2016-07-05 21:34:22,183 [main] INFO  (Database#info():2711) -     parse('OutsideMember')
2016-07-05 21:34:22,241 [main] INFO  (Database#info():2711) -     parse('PartOfMember')
2016-07-05 21:34:22,259 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthCursorCursor')
2016-07-05 21:34:22,317 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthCursor')
2016-07-05 21:34:22,376 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthSummary')
2016-07-05 21:34:22,424 [main] INFO  (Database#info():2711) -     parse('SpReturnResultSetNotParamResult1')
2016-07-05 21:34:22,480 [main] INFO  (Database#info():2711) -     parse('SpReturnResultSetNotParamResult2')
2016-07-05 21:34:22,481 [main] INFO  (Database#info():2711) - }
2016-07-05 21:34:22,482 [main] INFO  (Database#info():2711) - public void parseParameterBean() {
2016-07-05 21:34:22,487 [main] INFO  (Database#info():2711) -     parse('OutsideMemberPmb');
2016-07-05 21:34:22,525 [main] INFO  (Database#info():2711) -     parse('PartOfMemberPmb');
2016-07-05 21:34:22,552 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthCursorPmb');
2016-07-05 21:34:22,572 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthSummaryPmb');
2016-07-05 21:34:22,590 [main] INFO  (Database#info():2711) -     parse('SpInOutParameterPmb');
2016-07-05 21:34:22,609 [main] INFO  (Database#info():2711) -     parse('SpReturnResultSetPmb');
2016-07-05 21:34:22,626 [main] INFO  (Database#info():2711) - }
2016-07-05 21:34:22,665 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():298) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 4

  MemberBhv_selectOutsideMember.sql
  MemberBhv_selectPartOfMember.sql
  PurchaseBhv_selectPurchaseMonthCursor.sql
  PurchaseBhv_selectPurchaseMonthSummary.sql
- - - - - - - - - -/
2016-07-05 21:34:22,676 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-05 21:34:22,681 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-05 21:34:22,697 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s737ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2016-07-05 21:34:29,044 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2016-07-05 21:34:29,048 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2016-07-05 21:34:29,048 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2016-07-05 21:34:29,049 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2016-07-05 21:34:29,049 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2016-07-05 21:34:29,088 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-05 21:34:29,089 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-05 21:34:29,089 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-05 21:34:29,090 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-05 21:34:29,137 [main] INFO  (DfSchemaXmlSerializer#serialize():285) - 
2016-07-05 21:34:29,137 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - ...Starting to process JDBC to SchemaXML
2016-07-05 21:34:29,138 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1460) - ...Loading previous schema (schema diff process)
2016-07-05 21:34:29,154 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-05 21:34:29,318 [main] INFO  (DfSchemaXmlSerializer#generateXML():359) - ...Getting DB connection
2016-07-05 21:34:29,325 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-05 21:34:29,860 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-05 21:34:29,863 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-05 21:34:29,865 [main] INFO  (DfSchemaXmlSerializer#generateXML():362) - ...Getting DB meta data
2016-07-05 21:34:29,868 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-05 21:34:29,868 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-05 21:34:29,869 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-05 21:34:29,895 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'maihamadb' order by table_name asc
2016-07-05 21:34:29,900 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'maihamadb' order by table_name asc, column_name asc
2016-07-05 21:34:29,927 [main] INFO  (DfSchemaXmlSerializer#processTable():419) - 
2016-07-05 21:34:29,928 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2016-07-05 21:34:29,929 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ [Table List]
2016-07-05 21:34:29,930 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member(TABLE) // 会員: 会員登録時にデータが登録される。...
2016-07-05 21:34:30,002 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_address(TABLE) // 会員住所情報: 会員の住所に関する情報。...
2016-07-05 21:34:30,033 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_following(TABLE) // 会員フォローイング: とある会員が他の会員をフォローできる。すると、フォローした会員の購入履歴が閲覧できる。
2016-07-05 21:34:30,062 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_login(TABLE) // 会員ログイン情報: ログインするたびに登録されるログイン履歴。
2016-07-05 21:34:30,082 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_security(TABLE) // 会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある
2016-07-05 21:34:30,098 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_service(TABLE) // 会員サービス: 会員のサービス情報（ポイントサービスなど）。
2016-07-05 21:34:30,114 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_status(TABLE) // 会員ステータス
2016-07-05 21:34:30,127 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_withdrawal(TABLE) // 会員退会情報: 退会会員の退会に関する詳細な情報。...
2016-07-05 21:34:30,141 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product(TABLE) // 商品
2016-07-05 21:34:30,167 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product_category(TABLE) // 商品カテゴリ: 商品のカテゴリを表現するマスタ。...
2016-07-05 21:34:30,183 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product_status(TABLE) // 商品ステータス
2016-07-05 21:34:30,194 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.purchase(TABLE) // 購入: 一つの商品に対する一回の購入を表現する。...
2016-07-05 21:34:30,211 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.purchase_payment(TABLE) // 購入支払: 購入に対する支払。...
2016-07-05 21:34:30,224 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.region(TABLE) // 地域: 主に会員の住所に対応する地域。...
2016-07-05 21:34:30,234 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.service_rank(TABLE) // サービスランク: 会員のサービスレベルを表現するランク。...
2016-07-05 21:34:30,248 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.withdrawal_reason(TABLE) // 退会理由: 会員に選ばせる定型的な退会理由のマスタ。
2016-07-05 21:34:30,259 [main] INFO  (DfSchemaXmlSerializer#processTable():433) - $ 
2016-07-05 21:34:30,260 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ [Table Count]
2016-07-05 21:34:30,260 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 16
2016-07-05 21:34:30,260 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ = = = = = = = = = =/
2016-07-05 21:34:30,261 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - 
2016-07-05 21:34:30,263 [main] INFO  (DfSchemaXmlSerializer#processSequence():796) - ...Getting sequences
2016-07-05 21:34:30,270 [main] INFO  (DfSchemaXmlSerializer#serialize():300) - ...Serializing XML:
2016-07-05 21:34:30,270 [main] INFO  (DfSchemaXmlSerializer#serialize():301) -   filePath = ./schema/project-schema-maihamadb.xml
2016-07-05 21:34:30,271 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   encoding = UTF-8
2016-07-05 21:34:30,326 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1478) - ...Loading next schema (schema diff process)
2016-07-05 21:34:30,331 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-05 21:34:30,433 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1493) -  -> same as previous (schema diff)
2016-07-05 21:34:30,435 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-05 21:34:30,449 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s420ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2016-07-05 21:34:31,491 [main] INFO  (TorqueDocumentationTask#begin():175) - +------------------------------------------+
2016-07-05 21:34:31,494 [main] INFO  (TorqueDocumentationTask#begin():176) - |                                          |
2016-07-05 21:34:31,494 [main] INFO  (TorqueDocumentationTask#begin():177) - |                   Doc                    |
2016-07-05 21:34:31,495 [main] INFO  (TorqueDocumentationTask#begin():185) - |                                          |
2016-07-05 21:34:31,495 [main] INFO  (TorqueDocumentationTask#begin():186) - +------------------------------------------+
2016-07-05 21:34:31,529 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-05 21:34:31,529 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-05 21:34:31,529 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-05 21:34:31,530 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-05 21:34:31,533 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - 
2016-07-05 21:34:31,533 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2016-07-05 21:34:31,534 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():248) - *                   *
2016-07-05 21:34:31,535 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():249) - *    Schema HTML    *
2016-07-05 21:34:31,535 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():250) - *                   *
2016-07-05 21:34:31,536 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():251) - * * * * * * * * * * *
2016-07-05 21:34:31,586 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-05 21:34:31,689 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2016-07-05 21:34:31,851 [main] INFO  (Database#doEnableDocumentOutputDirectory():1179) - ...Setting up documentOutputDirectory: ./output/doc
2016-07-05 21:34:31,858 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2016-07-05 21:34:31,859 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2016-07-05 21:34:31,860 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2016-07-05 21:34:31,862 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2016-07-05 21:34:31,863 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2016-07-05 21:34:31,864 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2016-07-05 21:34:31,866 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2016-07-05 21:34:31,867 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2016-07-05 21:34:31,869 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_ADDRESS_VALID
2016-07-05 21:34:31,875 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-05 21:34:31,876 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_ADDRESS.[MEMBER_ID]
2016-07-05 21:34:31,877 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.VALID_BEGIN_DATE <= /*targetDate(Date)*/null\n     and $$foreignAlias$$.VALID_END_DATE >= /*targetDate(Date)*/null
2016-07-05 21:34:31,877 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_LOGIN_LATEST
2016-07-05 21:34:31,878 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-05 21:34:31,878 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_LOGIN.[MEMBER_ID]
2016-07-05 21:34:31,879 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.LOGIN_DATETIME = ($$sqbegin$$\nselect max(login.LOGIN_DATETIME)\n  from MEMBER_LOGIN login\n where login.MEMBER_ID = $$foreignAlias$$.MEMBER_ID\n)$$sqend$$
2016-07-05 21:34:31,879 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2016-07-05 21:34:31,889 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-05 21:34:32,246 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-05 21:34:32,255 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-05 21:34:32,258 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-05 21:34:32,262 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-05 21:34:32,267 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-05 21:34:32,270 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-05 21:34:32,280 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():157) - ...Loading schema history
2016-07-05 21:34:32,317 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():161) -  -> found history: count=4
2016-07-05 21:34:32,832 [main] INFO  (Database#getAvailableProcedureList():2823) -  
2016-07-05 21:34:32,832 [main] INFO  (Database#getAvailableProcedureList():2824) - ...Setting up procedures for documents
2016-07-05 21:34:32,839 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-05 21:34:32,860 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-05 21:34:32,860 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-05 21:34:32,930 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'maihamadb' order by ROUTINE_NAME
2016-07-05 21:34:32,936 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=maihamadb
2016-07-05 21:34:32,937 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_IN_OUT_PARAMETER:{4, 84, cb677351}
2016-07-05 21:34:32,938 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_RETURN_RESULT_SET:{9, 254, 4b86b61f}
2016-07-05 21:34:32,938 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=2
2016-07-05 21:34:32,939 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=2
2016-07-05 21:34:32,989 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-05 21:34:33,007 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-05 21:34:33,012 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s540ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2016-07-05 21:34:35,786 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2016-07-05 21:34:35,789 [main] INFO  (TorqueDataModelTask#begin():110) - |                                          |
2016-07-05 21:34:35,790 [main] INFO  (TorqueDataModelTask#begin():111) - |                 Generate                 |
2016-07-05 21:34:35,790 [main] INFO  (TorqueDataModelTask#begin():112) - |                                          |
2016-07-05 21:34:35,791 [main] INFO  (TorqueDataModelTask#begin():113) - +------------------------------------------+
2016-07-05 21:34:35,826 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-05 21:34:35,827 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-05 21:34:35,827 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-05 21:34:35,828 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-05 21:34:35,856 [main] INFO  (TorqueDataModelTask#setupControlTemplate():164) - 
2016-07-05 21:34:35,856 [main] INFO  (TorqueDataModelTask#setupControlTemplate():165) - ...Using Java control: om/ControlGenerateJava.vm
2016-07-05 21:34:35,917 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-05 21:34:36,015 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2016-07-05 21:34:36,312 [main] INFO  (Database#doEnableGenerateOutputDirectory():1147) - ...Setting up generateOutputDirectory: ../src/main/java
2016-07-05 21:34:36,317 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2016-07-05 21:34:36,317 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2016-07-05 21:34:36,319 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2016-07-05 21:34:36,321 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2016-07-05 21:34:36,321 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2016-07-05 21:34:36,323 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2016-07-05 21:34:36,327 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2016-07-05 21:34:36,327 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2016-07-05 21:34:36,331 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_ADDRESS_VALID
2016-07-05 21:34:36,350 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-05 21:34:36,351 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_ADDRESS.[MEMBER_ID]
2016-07-05 21:34:36,351 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.VALID_BEGIN_DATE <= /*targetDate(Date)*/null\n     and $$foreignAlias$$.VALID_END_DATE >= /*targetDate(Date)*/null
2016-07-05 21:34:36,351 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_LOGIN_LATEST
2016-07-05 21:34:36,352 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-05 21:34:36,352 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_LOGIN.[MEMBER_ID]
2016-07-05 21:34:36,353 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.LOGIN_DATETIME = ($$sqbegin$$\nselect max(login.LOGIN_DATETIME)\n  from MEMBER_LOGIN login\n where login.MEMBER_ID = $$foreignAlias$$.MEMBER_ID\n)$$sqend$$
2016-07-05 21:34:36,353 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2016-07-05 21:34:36,366 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-05 21:34:36,712 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-05 21:34:36,716 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-05 21:34:36,718 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-05 21:34:36,721 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-05 21:34:36,724 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-05 21:34:36,728 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-05 21:34:36,742 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2016-07-05 21:34:36,742 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2016-07-05 21:34:36,743 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2016-07-05 21:34:36,743 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2016-07-05 21:34:36,743 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2016-07-05 21:34:36,744 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2016-07-05 21:34:36,744 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2016-07-05 21:34:36,744 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2016-07-05 21:34:36,744 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2016-07-05 21:34:36,745 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2016-07-05 21:34:36,760 [main] INFO  (Database#info():2711) - public void parseAllCommon() {
2016-07-05 21:34:36,762 [main] INFO  (Database#info():2711) -     parse('CDef');
2016-07-05 21:34:36,818 [main] INFO  (Database#info():2711) -     parse('DBCurrent');
2016-07-05 21:34:36,822 [main] INFO  (Database#info():2711) -     parse('DBFluteConfig');
2016-07-05 21:34:36,840 [main] INFO  (Database#info():2711) -     parse('DBFluteInitializer');
2016-07-05 21:34:36,846 [main] INFO  (Database#info():2711) -     parse('DBMetaInstanceHandler');
2016-07-05 21:34:36,871 [main] INFO  (Database#info():2711) -     parse('EntityDefinedCommonColumn');
2016-07-05 21:34:36,896 [main] INFO  (Database#info():2711) -     parse('ImplementedBehaviorSelector');
2016-07-05 21:34:36,903 [main] INFO  (Database#info():2711) -     parse('ImplementedCommonColumnAutoSetupper');
2016-07-05 21:34:36,917 [main] INFO  (Database#info():2711) -     parse('ImplementedInvokerAssistant');
2016-07-05 21:34:36,929 [main] INFO  (Database#info():2711) -     parse('ImplementedSqlClauseCreator');
2016-07-05 21:34:36,934 [main] INFO  (Database#info():2711) - }
2016-07-05 21:34:36,935 [main] INFO  (Database#info():2711) - public void parseContainerConfig() {
2016-07-05 21:34:36,937 [main] INFO  (Database#info():2711) -     parse('../resources/dbflute.xml')
2016-07-05 21:34:36,958 [main] INFO  (Database#info():2711) - }
2016-07-05 21:34:36,966 [main] INFO  (DfOldClassHandler#info():1033) - public void deleteOldTableClass() {
2016-07-05 21:34:37,016 [main] INFO  (DfOldClassHandler#info():1033) - }
2016-07-05 21:34:37,017 [main] INFO  (Database#info():2711) - public void parseTableClass() {
2016-07-05 21:34:37,018 [main] INFO  (Database#info():2711) -     parse('member');
2016-07-05 21:34:37,581 [main] INFO  (Database#info():2711) -     parse('member_address');
2016-07-05 21:34:37,849 [main] INFO  (Database#info():2711) -     parse('member_following');
2016-07-05 21:34:38,034 [main] INFO  (Database#info():2711) -     parse('member_login');
2016-07-05 21:34:38,226 [main] INFO  (Database#info():2711) -     parse('member_security');
2016-07-05 21:34:38,406 [main] INFO  (Database#info():2711) -     parse('member_service');
2016-07-05 21:34:38,605 [main] INFO  (Database#info():2711) -     parse('member_status');
2016-07-05 21:34:38,779 [main] INFO  (Database#info():2711) -     parse('member_withdrawal');
2016-07-05 21:34:38,942 [main] INFO  (Database#info():2711) -     parse('product');
2016-07-05 21:34:39,150 [main] INFO  (Database#info():2711) -     parse('product_category');
2016-07-05 21:34:39,296 [main] INFO  (Database#info():2711) -     parse('product_status');
2016-07-05 21:34:39,429 [main] INFO  (Database#info():2711) -     parse('purchase');
2016-07-05 21:34:39,620 [main] INFO  (Database#info():2711) -     parse('purchase_payment');
2016-07-05 21:34:39,751 [main] INFO  (Database#info():2711) -     parse('region');
2016-07-05 21:34:39,861 [main] INFO  (Database#info():2711) -     parse('service_rank');
2016-07-05 21:34:40,005 [main] INFO  (Database#info():2711) -     parse('withdrawal_reason');
2016-07-05 21:34:40,242 [main] INFO  (Database#info():2711) - }
2016-07-05 21:34:40,243 [main] INFO  (Database#info():2711) -  
2016-07-05 21:34:40,323 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-05 21:34:40,591 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s832ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2016-07-05 21:34:41,848 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2016-07-05 21:34:41,851 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2016-07-05 21:34:41,852 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2016-07-05 21:34:41,853 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2016-07-05 21:34:41,853 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2016-07-05 21:34:41,879 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-05 21:34:41,879 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-05 21:34:41,880 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-05 21:34:41,880 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-05 21:34:41,920 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectOutsideMember.sql
2016-07-05 21:34:41,929 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-05 21:34:42,277 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-05 21:34:42,278 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-05 21:34:42,310 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 初めての外だしSQL

 [df:description]
  会員ID、会員名称、生年月日、会員ステータス名称、サービスポイント数を取得
  会員IDの等値、会員名称の前方一致、会員ステータスの等値を and で連結
  それぞれ条件値がない場合は条件自体が無効になるように
  全ての条件値がない場合は全件検索になるように
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , mb.MEMBER_STATUS_CODE
     , stat.MEMBER_STATUS_NAME
     , serv.SERVICE_POINT_COUNT
  from MEMBER mb
    left outer join MEMBER_STATUS stat
      on mb.MEMBER_STATUS_CODE = stat.MEMBER_STATUS_CODE
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
 /*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- //会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'S%' -- //会員名称 (Null Allowed)
       /*END*/
       /*IF pmb.memberStatusCode != null*/
   and mb.MEMBER_STATUS_CODE = /*pmb.memberStatusCode:ref(MEMBER)*/'FML' -- //会員ステータス名称 (Null Allowed)
       /*END*/
/*END*/
2016-07-05 21:34:42,321 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-05 21:34:42,322 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectPartOfMember.sql
2016-07-05 21:34:42,326 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 ページング検索

 [df:description]
 (Manual)ページング検索すること
 o 基本は "初めての外だしSQL" のSQLと同じで...
 o 会員ステータスの等値条件は要らない
 o 会員サービスのサービスポイント数の大なり条件を追加
 o 結合に関して、カウント検索のパフォーマンスを最大限考慮すること (会員サービスの結合とか)
 そのとき、IFコメントに記述する条件が複雑にならないように (代理判定メソッドを使う)
*/

-- #df:entity#

-- !df:pmb extends ManualPaging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , serv.SERVICE_POINT_COUNT
-- ELSE select count(*) 
/*END*/
  from MEMBER mb
    /*IF pmb.needsJoinService()*/
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
    /*END*/
/*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- 会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'%S%' -- //会員名称 (Null Allowed)
       /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
   and serv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // サービスポイント数の下限値 (Null Allowed)
      /*END*/
/*END*/
/*IF pmb.isPaging()*/
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
/*END*/
2016-07-05 21:34:42,332 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-05 21:34:42,333 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthCursor.sql
2016-07-05 21:34:42,336 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 外だしSQLでカーソル検索ってみる

 [df:description]
 "さらに外だし" と同じ仕様(ページングは不要)
 カーソル検索として作成すること
 明らかにおかしいカラム名のカラムはデータ取得してはいけない (後は何を取ってもOKですが、これだけはっ)
*/

-- #df:entity#
-- +cursor+

-- !df:pmb!
-- !!AutoDetect!!

select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                           
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  from PURCHASE pch
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
2016-07-05 21:34:42,342 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-05 21:34:42,343 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthSummary.sql
2016-07-05 21:34:42,345 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 さらに外だし

 [df:description]
 "会員と購入月" ごとの購入の平均購入価格、合計購入数量を検索する
 会員ID、会員名称、購入月、平均購入価格、合計購入数量という形で検索
 "支払済みの購入だけ" という条件が指定できるようにする
 会員名称の曖昧検索(部分一致)という条件が指定ができるようにする
 会員のサービスポイント数の大なり条件が指定できるようにする
 会員IDの昇順、購入月の降順で並べる
*/

-- #df:entity#

-- !df:pmb extends Paging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                               
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  -- ELSE select count(*) from (select mem.MEMBER_ID
/*END*/ 
  from PURCHASE pch
  /*IF pmb.needsJoinMember()*/
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
  /*IF pmb.needsJoinService()*/
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
/*IF pmb.isPaging()*/
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
  -- ELSE ) as count
/*END*/
2016-07-05 21:34:42,373 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-05 21:34:42,374 [main] INFO  (DfSqlFileFireMan#fire():89) - {Fired SQL}: success=4 failure=0 (in 4 files)
2016-07-05 21:34:42,375 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-05 21:34:42,387 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s550ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o MemberBhv_selectOutsideMember.sql
  o MemberBhv_selectPartOfMember.sql
  o PurchaseBhv_selectPurchaseMonthCursor.sql
  o PurchaseBhv_selectPurchaseMonthSummary.sql

   o: OK (4)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2016-07-05 21:34:43,152 [main] INFO  (DfSql2EntityTask#begin():105) - +------------------------------------------+
2016-07-05 21:34:43,154 [main] INFO  (DfSql2EntityTask#begin():106) - |                                          |
2016-07-05 21:34:43,155 [main] INFO  (DfSql2EntityTask#begin():107) - |                Sql2Entity                |
2016-07-05 21:34:43,155 [main] INFO  (DfSql2EntityTask#begin():108) - |                                          |
2016-07-05 21:34:43,155 [main] INFO  (DfSql2EntityTask#begin():109) - +------------------------------------------+
2016-07-05 21:34:43,177 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-05 21:34:43,177 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-05 21:34:43,177 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-05 21:34:43,178 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-05 21:34:43,190 [main] INFO  (DfSql2EntityTask#setupControlTemplate():175) - 
2016-07-05 21:34:43,191 [main] INFO  (DfSql2EntityTask#setupControlTemplate():176) - ...Using Java control: om/ControlSql2EntityJava.vm
2016-07-05 21:34:43,201 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-05 21:34:43,291 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectOutsideMember.sql
2016-07-05 21:34:43,297 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-05 21:34:43,611 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-05 21:34:43,611 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-05 21:34:43,614 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 初めての外だしSQL

 [df:description]
  会員ID、会員名称、生年月日、会員ステータス名称、サービスポイント数を取得
  会員IDの等値、会員名称の前方一致、会員ステータスの等値を and で連結
  それぞれ条件値がない場合は条件自体が無効になるように
  全ての条件値がない場合は全件検索になるように
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , mb.MEMBER_STATUS_CODE
     , stat.MEMBER_STATUS_NAME
     , serv.SERVICE_POINT_COUNT
  from MEMBER mb
    left outer join MEMBER_STATUS stat
      on mb.MEMBER_STATUS_CODE = stat.MEMBER_STATUS_CODE
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
 /*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- //会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'S%' -- //会員名称 (Null Allowed)
       /*END*/
       /*IF pmb.memberStatusCode != null*/
   and mb.MEMBER_STATUS_CODE = /*pmb.memberStatusCode:ref(MEMBER)*/'FML' -- //会員ステータス名称 (Null Allowed)
       /*END*/
/*END*/
2016-07-05 21:34:43,667 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-05 21:34:43,667 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectPartOfMember.sql
2016-07-05 21:34:43,668 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 ページング検索

 [df:description]
 (Manual)ページング検索すること
 o 基本は "初めての外だしSQL" のSQLと同じで...
 o 会員ステータスの等値条件は要らない
 o 会員サービスのサービスポイント数の大なり条件を追加
 o 結合に関して、カウント検索のパフォーマンスを最大限考慮すること (会員サービスの結合とか)
 そのとき、IFコメントに記述する条件が複雑にならないように (代理判定メソッドを使う)
*/

-- #df:entity#

-- !df:pmb extends ManualPaging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , serv.SERVICE_POINT_COUNT
-- ELSE select count(*) 
/*END*/
  from MEMBER mb
    /*IF pmb.needsJoinService()*/
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
    /*END*/
/*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- 会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'%S%' -- //会員名称 (Null Allowed)
       /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
   and serv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // サービスポイント数の下限値 (Null Allowed)
      /*END*/
/*END*/
/*IF pmb.isPaging()*/
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
/*END*/
2016-07-05 21:34:43,679 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-05 21:34:43,679 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthCursor.sql
2016-07-05 21:34:43,682 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 外だしSQLでカーソル検索ってみる

 [df:description]
 "さらに外だし" と同じ仕様(ページングは不要)
 カーソル検索として作成すること
 明らかにおかしいカラム名のカラムはデータ取得してはいけない (後は何を取ってもOKですが、これだけはっ)
*/

-- #df:entity#
-- +cursor+

-- !df:pmb!
-- !!AutoDetect!!

select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                           
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  from PURCHASE pch
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
2016-07-05 21:34:43,713 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-05 21:34:43,713 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthSummary.sql
2016-07-05 21:34:43,715 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 さらに外だし

 [df:description]
 "会員と購入月" ごとの購入の平均購入価格、合計購入数量を検索する
 会員ID、会員名称、購入月、平均購入価格、合計購入数量という形で検索
 "支払済みの購入だけ" という条件が指定できるようにする
 会員名称の曖昧検索(部分一致)という条件が指定ができるようにする
 会員のサービスポイント数の大なり条件が指定できるようにする
 会員IDの昇順、購入月の降順で並べる
*/

-- #df:entity#

-- !df:pmb extends Paging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                               
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  -- ELSE select count(*) from (select mem.MEMBER_ID
/*END*/ 
  from PURCHASE pch
  /*IF pmb.needsJoinMember()*/
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
  /*IF pmb.needsJoinService()*/
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
/*IF pmb.isPaging()*/
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
  -- ELSE ) as count
/*END*/
2016-07-05 21:34:43,747 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-05 21:34:43,748 [main] INFO  (DfSqlFileFireMan#fire():89) - {Fired SQL}: success=4 failure=0 (in 4 files)
2016-07-05 21:34:43,755 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2016-07-05 21:34:43,756 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2016-07-05 21:34:43,815 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'maihamadb' order by ROUTINE_NAME
2016-07-05 21:34:43,820 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=maihamadb
2016-07-05 21:34:43,821 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_IN_OUT_PARAMETER:{4, 84, cb677351}
2016-07-05 21:34:43,821 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_RETURN_RESULT_SET:{9, 254, 4b86b61f}
2016-07-05 21:34:43,821 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=2
2016-07-05 21:34:43,822 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=2
2016-07-05 21:34:43,849 [main] INFO  (DfProcedureExecutionMetaExtractor#doExtractExecutionMetaData():109) - ...Calling: {call SP_IN_OUT_PARAMETER(?, ?, ?)}
2016-07-05 21:34:43,872 [main] INFO  (DfProcedureExecutionMetaExtractor#doExtractExecutionMetaData():109) - ...Calling: {call SP_RETURN_RESULT_SET(?)}
2016-07-05 21:34:43,885 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2016-07-05 21:34:43,885 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2016-07-05 21:34:43,886 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():107) - [SpInOutParameterPmb]: maihamadb.SP_IN_OUT_PARAMETER // procedureNoResult
2016-07-05 21:34:43,887 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     String VInVarchar; // procedureColumnIn(12, VARCHAR)
2016-07-05 21:34:43,887 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     String VOutVarchar; // procedureColumnOut(12, VARCHAR)
2016-07-05 21:34:43,887 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     String VInoutVarchar; // procedureColumnInOut(12, VARCHAR)
2016-07-05 21:34:43,888 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():107) - [SpReturnResultSetPmb]: maihamadb.SP_RETURN_RESULT_SET // procedureNoResult
2016-07-05 21:34:43,888 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     java.time.LocalDate birthdateFrom; // procedureColumnIn(91, DATE)
2016-07-05 21:34:43,889 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():171) -     List<SpReturnResultSetNotParamResult1> notParamResult1; // procedureColumnResult
2016-07-05 21:34:43,889 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():171) -     List<SpReturnResultSetNotParamResult2> notParamResult2; // procedureColumnResult
2016-07-05 21:34:43,890 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2016-07-05 21:34:43,890 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2016-07-05 21:34:43,923 [main] INFO  (DfSql2EntityTask#initControlContext():306) - 
2016-07-05 21:34:43,924 [main] INFO  (DfSql2EntityTask#initControlContext():307) - ...Preparing generation of customize-entities and parameter-beans
2016-07-05 21:34:43,924 [main] INFO  (DfSql2EntityTask#initControlContext():308) - * * * * * * * * * *
2016-07-05 21:34:43,924 [main] INFO  (DfSql2EntityTask#initControlContext():309) - * CustomizeEntity *
2016-07-05 21:34:43,925 [main] INFO  (DfSql2EntityTask#initControlContext():310) - * * * * * * * * * *
2016-07-05 21:34:43,940 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():922) - 
OutsideMember
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  BIRTHDATE DATE(10) related to member.BIRTHDATE
  MEMBER_STATUS_CODE CHAR(3) related to member.MEMBER_STATUS_CODE
  MEMBER_STATUS_NAME VARCHAR(50) related to member_status.MEMBER_STATUS_NAME
  SERVICE_POINT_COUNT INT(11) related to member_service.SERVICE_POINT_COUNT

PartOfMember
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  BIRTHDATE DATE(10) related to member.BIRTHDATE
  SERVICE_POINT_COUNT INT(11) related to member_service.SERVICE_POINT_COUNT

PurchaseMonthCursor (cursor)
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  購入月 INT(2)
  平均購入価格 DECIMAL(14, 4)
  合計購入量 DECIMAL(32)

PurchaseMonthSummary
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  購入月 INT(2)
  平均購入価格 DECIMAL(14, 4)
  合計購入量 DECIMAL(32)

SpReturnResultSetNotParamResult1 (procedure)
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  BIRTHDATE DATE(10) related to member.BIRTHDATE
  MEMBER_STATUS_CODE CHAR(3) related to member.MEMBER_STATUS_CODE

SpReturnResultSetNotParamResult2 (procedure)
  MEMBER_STATUS_CODE CHAR(3) related to member_status.MEMBER_STATUS_CODE
  MEMBER_STATUS_NAME VARCHAR(50) related to member_status.MEMBER_STATUS_NAME
2016-07-05 21:34:43,951 [main] INFO  (DfSql2EntityTask#showParameterBean():927) - * * * * * * * * *
2016-07-05 21:34:43,951 [main] INFO  (DfSql2EntityTask#showParameterBean():928) - * ParameterBean *
2016-07-05 21:34:43,951 [main] INFO  (DfSql2EntityTask#showParameterBean():929) - * * * * * * * * *
2016-07-05 21:34:43,952 [main] INFO  (DfSql2EntityTask#showParameterBean():971) - 
OutsideMemberPmb (typed to list, entity)
  Integer memberId:comment(会員ID (Null Allowed))
  String memberName:likePrefix|comment(会員名称 (Null Allowed))
  String memberStatusCode:ref(MEMBER)|comment(会員ステータス名称 (Null Allowed))

PartOfMemberPmb extends SimplePagingBean (typed to entity, manual-paging)
  Integer memberId
  String memberName:likeContain|comment(会員名称 (Null Allowed))
  Integer SERVICE_POINT_COUNT:comment(サービスポイント数の下限値 (Null Allowed))

PurchaseMonthCursorPmb (typed to cursor)
  String memberName:likeContain|comment(会員IDで部分一致(Null Allowed))
  Integer SERVICE_POINT_COUNT:comment(指定されたポイント以上かどうか(Null Allowed))

PurchaseMonthSummaryPmb extends SimplePagingBean (typed to entity, manual-paging)
  String memberName:likeContain|comment(会員IDで部分一致(Null Allowed))
  Integer SERVICE_POINT_COUNT:comment(指定されたポイント以上かどうか(Null Allowed))

SpInOutParameterPmb (procedure)
  v_in_varchar
  v_out_varchar
  v_inout_varchar

SpReturnResultSetPmb (procedure with customize-entity)
  birthdateFrom
2016-07-05 21:34:43,955 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2016-07-05 21:34:44,131 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-05 21:34:44,139 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-05 21:34:44,143 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-05 21:34:44,145 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-05 21:34:44,148 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-05 21:34:44,150 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-05 21:34:44,153 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-05 21:34:44,166 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1163) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2016-07-05 21:34:44,169 [main] INFO  (DfOldClassHandler#info():1033) - public void deleteOldCustomizeClass() {
2016-07-05 21:34:44,191 [main] INFO  (DfOldClassHandler#info():1033) - }
2016-07-05 21:34:44,192 [main] INFO  (Database#info():2711) - public void parseCustomizeEntity() {
2016-07-05 21:34:44,326 [main] INFO  (Database#info():2711) -     parse('OutsideMember')
2016-07-05 21:34:44,391 [main] INFO  (Database#info():2711) -     parse('PartOfMember')
2016-07-05 21:34:44,403 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthCursorCursor')
2016-07-05 21:34:44,457 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthCursor')
2016-07-05 21:34:44,531 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthSummary')
2016-07-05 21:34:44,581 [main] INFO  (Database#info():2711) -     parse('SpReturnResultSetNotParamResult1')
2016-07-05 21:34:44,620 [main] INFO  (Database#info():2711) -     parse('SpReturnResultSetNotParamResult2')
2016-07-05 21:34:44,621 [main] INFO  (Database#info():2711) - }
2016-07-05 21:34:44,623 [main] INFO  (Database#info():2711) - public void parseParameterBean() {
2016-07-05 21:34:44,629 [main] INFO  (Database#info():2711) -     parse('OutsideMemberPmb');
2016-07-05 21:34:44,666 [main] INFO  (Database#info():2711) -     parse('PartOfMemberPmb');
2016-07-05 21:34:44,696 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthCursorPmb');
2016-07-05 21:34:44,714 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthSummaryPmb');
2016-07-05 21:34:44,730 [main] INFO  (Database#info():2711) -     parse('SpInOutParameterPmb');
2016-07-05 21:34:44,750 [main] INFO  (Database#info():2711) -     parse('SpReturnResultSetPmb');
2016-07-05 21:34:44,768 [main] INFO  (Database#info():2711) - }
2016-07-05 21:34:44,810 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():298) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 4

  MemberBhv_selectOutsideMember.sql
  MemberBhv_selectPartOfMember.sql
  PurchaseBhv_selectPurchaseMonthCursor.sql
  PurchaseBhv_selectPurchaseMonthSummary.sql
- - - - - - - - - -/
2016-07-05 21:34:44,820 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-05 21:34:44,824 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-05 21:34:44,830 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s688ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2016-07-12 22:01:58,915 [main] INFO  (DfReplaceSchemaTask#begin():91) - +------------------------------------------+
2016-07-12 22:01:58,919 [main] INFO  (DfReplaceSchemaTask#begin():92) - |                                          |
2016-07-12 22:01:58,919 [main] INFO  (DfReplaceSchemaTask#begin():93) - |              ReplaceSchema               |
2016-07-12 22:01:58,925 [main] INFO  (DfReplaceSchemaTask#begin():101) - |                                          |
2016-07-12 22:01:58,925 [main] INFO  (DfReplaceSchemaTask#begin():102) - +------------------------------------------+
2016-07-12 22:01:58,927 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():342) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2016-07-12 22:02:00,100 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-12 22:02:00,101 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-12 22:02:00,101 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-12 22:02:00,102 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-12 22:02:00,113 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-12 22:02:00,569 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-12 22:02:00,570 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-12 22:02:00,589 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2016-07-12 22:02:00,590 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2016-07-12 22:02:00,590 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2016-07-12 22:02:00,592 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2016-07-12 22:02:00,592 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2016-07-12 22:02:00,593 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2016-07-12 22:02:00,618 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-12 22:02:00,619 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-12 22:02:00,620 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-12 22:02:00,672 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_address
2016-07-12 22:02:00,678 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_following
2016-07-12 22:02:00,685 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_login
2016-07-12 22:02:00,690 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_security
2016-07-12 22:02:00,703 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_service
2016-07-12 22:02:00,713 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_withdrawal
2016-07-12 22:02:00,739 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table purchase_payment
2016-07-12 22:02:00,766 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member drop foreign key FK_MEMBER_MEMBER_STATUS
2016-07-12 22:02:00,790 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_address drop foreign key FK_MEMBER_ADDRESS_MEMBER
2016-07-12 22:02:00,804 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_address drop foreign key FK_MEMBER_ADDRESS_REGION
2016-07-12 22:02:00,829 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_following drop foreign key FK_MEMBER_FOLLOWING_MY_MEMBER
2016-07-12 22:02:00,845 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_following drop foreign key FK_MEMBER_FOLLOWING_YOUR_MEMBER
2016-07-12 22:02:00,863 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_login drop foreign key FK_MEMBER_LOGIN_MEMBER_STATUS
2016-07-12 22:02:00,873 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_login drop foreign key FK_MEMBER_LOGIN_MEMBER
2016-07-12 22:02:00,896 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_security drop foreign key FK_MEMBER_SECURITY_MEMBER
2016-07-12 22:02:00,916 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_service drop foreign key FK_MEMBER_SERVICE_MEMBER
2016-07-12 22:02:00,934 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_service drop foreign key FK_MEMBER_SERVICE_SERVICE_RANK_CODE
2016-07-12 22:02:00,948 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_withdrawal drop foreign key FK_MEMBER_WITHDRAWAL_MEMBER
2016-07-12 22:02:00,964 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_withdrawal drop foreign key FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON
2016-07-12 22:02:00,975 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table product drop foreign key FK_PRODUCT_PRODUCT_CATEGORY
2016-07-12 22:02:00,994 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table product drop foreign key FK_PRODUCT_PRODUCT_STATUS
2016-07-12 22:02:01,006 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table product_category drop foreign key FK_PRODUCT_CATEGORY_PARENT
2016-07-12 22:02:01,029 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table purchase drop foreign key FK_PURCHASE_MEMBER
2016-07-12 22:02:01,044 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table purchase drop foreign key FK_PURCHASE_PRODUCT
2016-07-12 22:02:01,066 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table purchase_payment drop foreign key FK_PURCHASE_PAYMENT_PURCHASE
2016-07-12 22:02:01,089 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member
2016-07-12 22:02:01,095 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_address
2016-07-12 22:02:01,099 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_following
2016-07-12 22:02:01,103 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_login
2016-07-12 22:02:01,108 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_security
2016-07-12 22:02:01,112 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_service
2016-07-12 22:02:01,115 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_status
2016-07-12 22:02:01,120 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_withdrawal
2016-07-12 22:02:01,124 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table product
2016-07-12 22:02:01,129 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table product_category
2016-07-12 22:02:01,134 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table product_status
2016-07-12 22:02:01,138 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table purchase
2016-07-12 22:02:01,144 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table purchase_payment
2016-07-12 22:02:01,147 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table region
2016-07-12 22:02:01,151 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table service_rank
2016-07-12 22:02:01,156 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table withdrawal_reason
2016-07-12 22:02:01,220 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop procedure SP_IN_OUT_PARAMETER
2016-07-12 22:02:01,228 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop procedure SP_RETURN_RESULT_SET
2016-07-12 22:02:01,231 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2016-07-12 22:02:01,231 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2016-07-12 22:02:01,231 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2016-07-12 22:02:01,232 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2016-07-12 22:02:01,232 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2016-07-12 22:02:01,232 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2016-07-12 22:02:01,238 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-00-system.sql
2016-07-12 22:02:01,242 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2016-07-12 22:02:01,242 [main] INFO  (DfCreateSchemaProcess$1#dispatch():295) - ...Creating a connection to system
2016-07-12 22:02:01,244 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():520) - ...Creating a connection for additional user: root
2016-07-12 22:02:01,258 [main] INFO  (DfCreateSchemaProcess$1#dispatch():321) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2016-07-12 22:02:01,259 [main] INFO  (DfCreateSchemaProcess$1#dispatch():323) -  -> Can't create database 'maihamadb'; database exists
2016-07-12 22:02:01,261 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():433) - ...Reviving the user 'system' until the end of this SQL file
2016-07-12 22:02:01,261 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on maihamadb.*
  to maihamadb@localhost identified by 'maihamadb'
2016-07-12 22:02:01,269 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2016-07-12 22:02:01,277 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-07-12 22:02:01,278 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-10-basic.sql
2016-07-12 22:02:01,278 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():370) - ...Saying good-bye to the user 'system' again
2016-07-12 22:02:01,278 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():374) - ...Clearing revived users
2016-07-12 22:02:01,279 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():381) - ...Coming back to the main user from the user 'system'
2016-07-12 22:02:01,284 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER(
    MEMBER_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員ID: 会員を識別するID。連番として基本的に自動採番される。
（会員IDだけに限らず）採番方法はDBMSによって変わる。',
    MEMBER_NAME VARCHAR(160) NOT NULL COMMENT '会員名称: 会員のフルネームの名称。',
    MEMBER_ACCOUNT VARCHAR(50) NOT NULL COMMENT '会員アカウント: 会員がログイン時に利用するアカウントNO。',
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード',
    FORMALIZED_DATETIME DATETIME COMMENT '正式会員日時: 会員が正式に確定した日時。一度確定したら更新されない。
仮会員のときはnull。',
    BIRTHDATE DATE COMMENT '生年月日: 必須項目ではないので、このデータがない会員もいる。',
    REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時: レコードが登録された日時。共通カラムの一つ。',
    REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ: レコードを登録したユーザ。共通カラムの一つ。',
    UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時: レコードが（最後に）更新された日時。共通カラムの一つ。',
    UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ: レコードを更新したユーザ。',
    VERSION_NO BIGINT NOT NULL COMMENT 'バージョンNO: レコードのバージョンを示すNO。
更新回数と等しく、主に排他制御のために利用される。',
    PRIMARY KEY (MEMBER_ID),
    UNIQUE (MEMBER_ACCOUNT)
) COMMENT='会員: 会員登録時にデータが登録される。
基本的に物理削除はなく、退会したらステータスが退会会員になる。'
2016-07-12 22:02:01,309 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_ADDRESS(
    MEMBER_ADDRESS_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員住所ID: 会員住所を識別するID。
履歴分も含むテーブルなので、これ自体はFKではない。',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
履歴分を含むため、これだけではユニークにはならない。',
    VALID_BEGIN_DATE DATE NOT NULL COMMENT '有効開始日: 一つの有効期間の開始を示す日付。
前の有効終了日の次の日の値が格納される。',
    VALID_END_DATE DATE NOT NULL COMMENT '有効終了日: 有効期間の終了日。
次の有効開始日の一日前の値が格納される。
ただし、次の有効期間がない場合は 9999/12/31 となる。',
    ADDRESS VARCHAR(200) NOT NULL COMMENT '住所: まるごと住所',
    REGION_ID INTEGER NOT NULL COMMENT '地域ID: 地域を参照するID。
ここでは特に住所の内容と連動しているわけではない。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ADDRESS_ID),
    UNIQUE (MEMBER_ID, VALID_BEGIN_DATE)
) COMMENT='会員住所情報: 会員の住所に関する情報。
同時に有効期間ごとに履歴管理されている。'
2016-07-12 22:02:01,361 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_LOGIN(
    MEMBER_LOGIN_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員ログインID',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID',
    LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時: ログインした瞬間の日時。',
    MOBILE_LOGIN_FLG INTEGER NOT NULL COMMENT 'モバイルログインフラグ: モバイル機器からのログインか否か。',
    LOGIN_MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT 'ログイン会員ステータスコード: ログイン時の会員ステータス',
    PRIMARY KEY (MEMBER_LOGIN_ID),
    UNIQUE (MEMBER_ID, LOGIN_DATETIME)
) COMMENT='会員ログイン情報: ログインするたびに登録されるログイン履歴。'
2016-07-12 22:02:01,371 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SECURITY(
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: そのまま one-to-one を構成するためのFKとなる。',
    LOGIN_PASSWORD VARCHAR(50) NOT NULL COMMENT 'ログインパスワード: ログイン時に利用するパスワード。
本当は良くないが、Exampleなのでひとまず暗号化していない。',
    REMINDER_QUESTION VARCHAR(50) NOT NULL COMMENT 'リマインダ質問: パスワードを忘れた際のリマインダ機能における質問の内容。',
    REMINDER_ANSWER VARCHAR(50) NOT NULL COMMENT 'リマインダ回答: パスワードを忘れた際のリマインダ機能における質問の答え。',
    REMINDER_USE_COUNT INTEGER NOT NULL COMMENT 'リマインダ回数: 忘れっぽい人を分析するためのもの。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある'
2016-07-12 22:02:01,440 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SERVICE(
	MEMBER_SERVICE_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員サービスID: 代理キー。律儀にIDの役割を分ける',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。ユニークなので、会員とは one-to-one の関係に。',
    SERVICE_POINT_COUNT INTEGER NOT NULL COMMENT 'サービスポイント数: 会員が現在利用できるサービスポイントの数。
基本的に、購入時には増えてポイントを使ったら減る。',
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを参照するコード。
どんなランクがあるのかドキドキですね。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_SERVICE_ID),
    UNIQUE (MEMBER_ID)
) COMMENT='会員サービス: 会員のサービス情報（ポイントサービスなど）。'
2016-07-12 22:02:01,451 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_WITHDRAWAL(
    MEMBER_ID INTEGER NOT NULL,
    WITHDRAWAL_REASON_CODE CHAR(3) COMMENT '退会理由コード: 退会した定型理由を参照するコード。
何も言わずに退会する会員もいるので必須項目ではない。',
    WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト: 会員がフリーテキストで入力できる退会理由。
もう言いたいこと言ってもらう感じ。',
    WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT '退会日時: 退会した瞬間の日時。
正式会員日時と違い、こっちはone-to-oneの別テーブルで。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員退会情報: 退会会員の退会に関する詳細な情報。
退会会員のみデータが存在する。'
2016-07-12 22:02:01,523 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE(
    PURCHASE_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入ID: 連番',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
購入を識別する自然キー（複合ユニーク制約）の筆頭要素。',
    PRODUCT_ID INTEGER NOT NULL COMMENT '商品ID: 商品を参照するID。',
    PURCHASE_DATETIME DATETIME NOT NULL COMMENT '購入日時: 購入した瞬間の日時。',
    PURCHASE_COUNT INTEGER NOT NULL COMMENT '購入数量: 購入した商品の（一回の購入における）数量。',
    PURCHASE_PRICE INTEGER NOT NULL COMMENT '購入価格: 購入によって実際に会員が支払った（支払う予定の）価格。
基本は商品の定価に購入数量を掛けたものになるが、
ポイント利用や割引があったりと必ずしもそうはならない。',
    PAYMENT_COMPLETE_FLG INTEGER NOT NULL COMMENT '支払完了フラグ: この購入に関しての支払いが完了しているか否か。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PURCHASE_ID),
    UNIQUE (MEMBER_ID, PRODUCT_ID, PURCHASE_DATETIME),
    KEY (MEMBER_ID),
    KEY (PRODUCT_ID)
) COMMENT='購入: 一つの商品に対する一回の購入を表現する。
一回の購入で一つの商品を複数個買うこともある。'
2016-07-12 22:02:01,597 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE_PAYMENT(
    PURCHASE_PAYMENT_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入支払ID: 連番',
    PURCHASE_ID BIGINT NOT NULL COMMENT '購入ID: 支払い対象の購入へのID',
    PAYMENT_AMOUNT DECIMAL(10,2) NOT NULL COMMENT '支払金額: 支払った金額。さて、小数点なのはなぜでしょう？',
    PAYMENT_DATETIME DATETIME NOT NULL COMMENT '支払日時: 支払ったときの日時',
    PAYMENT_METHOD_CODE CHAR(3) NOT NULL COMMENT '支払方法コード: 手渡しや銀行振込など',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (PURCHASE_PAYMENT_ID)
) COMMENT='購入支払: 購入に対する支払。
分割払いもできるのでmanyとなり、会員からの孫テーブルのテストができてうれしい。'
2016-07-12 22:02:01,660 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT(
    PRODUCT_ID INTEGER AUTO_INCREMENT NOT NULL,
    PRODUCT_NAME VARCHAR(50) NOT NULL COMMENT '商品名称',
    PRODUCT_HANDLE_CODE VARCHAR(100) NOT NULL COMMENT '商品ハンドルコード: 商品を識別する業務上のコード。',
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL,
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL,
    REGULAR_PRICE INTEGER NOT NULL COMMENT '定価',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PRODUCT_ID),
    UNIQUE (PRODUCT_HANDLE_CODE)
) COMMENT='商品'
2016-07-12 22:02:01,671 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_CATEGORY(
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL COMMENT '商品カテゴリコード',
    PRODUCT_CATEGORY_NAME VARCHAR(50) NOT NULL COMMENT '商品カテゴリ名称',
    PARENT_CATEGORY_CODE CHAR(3) COMMENT '親カテゴリコード: 最上位の場合はデータなし。',
    PRIMARY KEY (PRODUCT_CATEGORY_CODE)
) COMMENT='商品カテゴリ: 商品のカテゴリを表現するマスタ。
自己参照の階層になっている。'
2016-07-12 22:02:01,727 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_STATUS(
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL COMMENT '商品ステータスコード',
    PRODUCT_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '商品ステータス名称',
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (PRODUCT_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='商品ステータス'
2016-07-12 22:02:01,738 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table REGION(
    REGION_ID INTEGER NOT NULL COMMENT '地域ID',
    REGION_NAME VARCHAR(50) NOT NULL COMMENT '地域名称',
    PRIMARY KEY (REGION_ID)
) COMMENT='地域: 主に会員の住所に対応する地域。
かなりざっくりした感じではある。'
2016-07-12 22:02:01,749 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table SERVICE_RANK(
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを識別するコード。',
    SERVICE_RANK_NAME VARCHAR(50) NOT NULL COMMENT 'サービスランク名称: サービスランクの名称。
（ゴールドとかプラチナとか基本的には威厳のある名前）',
    SERVICE_POINT_INCIDENCE NUMERIC(5, 3) NOT NULL COMMENT 'サービスポイント発生率: 購入ごとのサービスポイントの発生率。
購入価格にこの値をかけた数が発生ポイント。',
    NEW_ACCEPTABLE_FLG INTEGER NOT NULL COMMENT '新規受け入れ可能フラグ: このランクへの新規受け入れができるかどうか。',
    DESCRIPTION VARCHAR(200) NOT NULL,
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (SERVICE_RANK_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='サービスランク: 会員のサービスレベルを表現するランク。
（ゴールドとかプラチナとか）'
2016-07-12 22:02:01,795 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_STATUS(
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード: 会員ステータスを識別するコード。',
    MEMBER_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '会員ステータス名称',
    DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明: 会員ステータスそれぞれの説明。
気の利いた説明があるとディベロッパーがとても助かる。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順: UI上のステータスの表示順を示すNO。
並べるときは、このカラムに対して昇順のソート条件にする。',
    PRIMARY KEY (MEMBER_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='会員ステータス'
2016-07-12 22:02:01,806 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table WITHDRAWAL_REASON(
    WITHDRAWAL_REASON_CODE CHAR(3) NOT NULL COMMENT '退会理由コード',
    WITHDRAWAL_REASON_TEXT TEXT NOT NULL COMMENT '退会理由テキスト: 退会理由の内容。テキスト形式なので目いっぱい書けるが、
そうするとUI側できれいに見せるのが大変でしょうね。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順',
    PRIMARY KEY (WITHDRAWAL_REASON_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='退会理由: 会員に選ばせる定型的な退会理由のマスタ。'
2016-07-12 22:02:01,844 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_FOLLOWING(
    MEMBER_FOLLOWING_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員フォローイングID: 連番',
    MY_MEMBER_ID INTEGER NOT NULL COMMENT 'わたし: 気になった人がいて...勇気を振り絞った会員のID。',
    YOUR_MEMBER_ID INTEGER NOT NULL COMMENT 'あなた: いきなりのアクションに...ちょっと心揺らいだ会員のID。',
    FOLLOW_DATETIME DATETIME NOT NULL COMMENT 'その瞬間: ふりかえるとちょっと恥ずかしい気持ちになる日時',
    PRIMARY KEY (MEMBER_FOLLOWING_ID),
    UNIQUE (MY_MEMBER_ID, YOUR_MEMBER_ID)
) COMMENT='会員フォローイング: とある会員が他の会員をフォローできる。すると、フォローした会員の購入履歴が閲覧できる。'
2016-07-12 22:02:01,855 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER add constraint FK_MEMBER_MEMBER_STATUS 
    foreign key (MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-07-12 22:02:01,871 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-12 22:02:01,894 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_REGION 
    foreign key (REGION_ID) references REGION (REGION_ID)
2016-07-12 22:02:01,915 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER_STATUS 
    foreign key (LOGIN_MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-07-12 22:02:01,934 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-12 22:02:01,955 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-12 22:02:01,973 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_SERVICE_RANK_CODE 
    foreign key (SERVICE_RANK_CODE) references SERVICE_RANK (SERVICE_RANK_CODE)
2016-07-12 22:02:01,995 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SECURITY add constraint FK_MEMBER_SECURITY_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-12 22:02:02,015 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-12 22:02:02,034 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON 
    foreign key (WITHDRAWAL_REASON_CODE) references WITHDRAWAL_REASON (WITHDRAWAL_REASON_CODE)
2016-07-12 22:02:02,056 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-12 22:02:02,080 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_PRODUCT 
    foreign key (PRODUCT_ID) references PRODUCT (PRODUCT_ID)
2016-07-12 22:02:02,109 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE_PAYMENT add constraint FK_PURCHASE_PAYMENT_PURCHASE 
    foreign key (PURCHASE_ID) references PURCHASE (PURCHASE_ID)
2016-07-12 22:02:02,134 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_CATEGORY 
    foreign key (PRODUCT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-07-12 22:02:02,160 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_STATUS 
    foreign key (PRODUCT_STATUS_CODE) references PRODUCT_STATUS (PRODUCT_STATUS_CODE)
2016-07-12 22:02:02,187 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT_CATEGORY add constraint FK_PRODUCT_CATEGORY_PARENT 
    foreign key (PARENT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-07-12 22:02:02,215 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_MY_MEMBER 
    foreign key (MY_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-12 22:02:02,235 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_YOUR_MEMBER 
    foreign key (YOUR_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-12 22:02:02,258 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_UNIQUE_REVERSE on MEMBER_FOLLOWING(YOUR_MEMBER_ID, MY_MEMBER_ID)
2016-07-12 22:02:02,280 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_FOLLOW_DATETIME on MEMBER_FOLLOWING(FOLLOW_DATETIME)
2016-07-12 22:02:02,299 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_MEMBER_NAME on MEMBER(MEMBER_NAME)
2016-07-12 22:02:02,323 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FORMALIZED_DATETIME on MEMBER(FORMALIZED_DATETIME)
2016-07-12 22:02:02,339 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_LOGIN_DATETIME on MEMBER_LOGIN(LOGIN_DATETIME)
2016-07-12 22:02:02,359 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_SERVICE_POINT_COUNT on MEMBER_SERVICE(SERVICE_POINT_COUNT)
2016-07-12 22:02:02,378 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRODUCT_DATETIME on PURCHASE(PRODUCT_ID, PURCHASE_DATETIME)
2016-07-12 22:02:02,399 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_DATETIME_MEMBER on PURCHASE(PURCHASE_DATETIME, MEMBER_ID)
2016-07-12 22:02:02,421 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRICE on PURCHASE(PURCHASE_PRICE)
2016-07-12 22:02:02,440 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PAYMENT_DATETIME on PURCHASE_PAYMENT(PAYMENT_DATETIME, PAYMENT_AMOUNT)
2016-07-12 22:02:02,459 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PRODUCT_PRODUCT_NAME on PRODUCT(PRODUCT_NAME)
2016-07-12 22:02:02,478 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=45 failure=0
2016-07-12 22:02:02,479 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-50-procedure.sql
2016-07-12 22:02:02,480 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_IN_OUT_PARAMETER(
	in v_in_varchar varchar(32)
	, out v_out_varchar varchar(32)
	, inout v_inout_varchar varchar(32)
)
begin
	set v_out_varchar = v_inout_varchar;
	set v_inout_varchar = v_in_varchar;
end;

2016-07-12 22:02:02,483 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_RETURN_RESULT_SET(in birthdateFrom DATE)
begin
  select MEMBER_NAME, BIRTHDATE, MEMBER_STATUS_CODE
    from MEMBER
   where BIRTHDATE >= birthdateFrom
   order by BIRTHDATE desc, MEMBER_ID asc;
  select MEMBER_STATUS_CODE, MEMBER_STATUS_NAME
    from MEMBER_STATUS
   order by DISPLAY_ORDER;
end;

2016-07-12 22:02:02,486 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-07-12 22:02:02,486 [main] INFO  (DfSqlFileFireMan#fire():89) - {Create Schema}: success=49 failure=0 (in 3 files)
2016-07-12 22:02:02,487 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():564) - ...Closing connections to change-users: [system]
2016-07-12 22:02:02,614 [main] INFO  (DfLoadDataProcess#execute():129) - 
2016-07-12 22:02:02,615 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2016-07-12 22:02:02,615 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2016-07-12 22:02:02,615 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2016-07-12 22:02:02,615 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2016-07-12 22:02:02,616 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2016-07-12 22:02:02,657 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-12 22:02:02,658 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/common/xls/10-master.xls)
2016-07-12 22:02:02,658 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-12 22:02:02,973 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-12 22:02:02,973 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-12 22:02:02,973 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-12 22:02:03,010 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{PRV, 仮会員, 入会直後のステータスで一部のサイトサービスが利用可能, 3}
2016-07-12 22:02:03,122 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{FML, 正式会員, 正式な会員としてサイトサービスが利用可能, 1}
2016-07-12 22:02:03,123 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{WDL, 退会会員, 退会が確定した会員でサイトサービスはダメ, 2}
2016-07-12 22:02:03,123 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():212) - ...Skipping the terminal garbage row
2016-07-12 22:02:03,131 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to MEMBER_STATUS
2016-07-12 22:02:03,133 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{1, アメリカ}
2016-07-12 22:02:03,134 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{2, カナダ}
2016-07-12 22:02:03,134 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{3, 中国}
2016-07-12 22:02:03,134 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{4, 千葉}
2016-07-12 22:02:03,139 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to REGION
2016-07-12 22:02:03,140 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLT, PLATINUM, 12.3, 1, platinum rank, 1}
2016-07-12 22:02:03,141 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{GLD, GOLD, 9.2, 1, gold rank, 2}
2016-07-12 22:02:03,141 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{SIL, SILVER, 6.74, 1, silver rank, 3}
2016-07-12 22:02:03,142 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{BRZ, BRONZE, 2, 1, bronze rank, 4}
2016-07-12 22:02:03,142 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLS, PLASTIC, 0.1, 0, plastic rank, 5}
2016-07-12 22:02:03,147 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to SERVICE_RANK
2016-07-12 22:02:03,149 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{SIT, サイトが使いにくいから, 1}
2016-07-12 22:02:03,150 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{OTH, その他理由, 4}
2016-07-12 22:02:03,150 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{FRT, フリテンだから, 3}
2016-07-12 22:02:03,150 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{PRD, 商品に魅力がないから, 2}
2016-07-12 22:02:03,156 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to WITHDRAWAL_REASON
2016-07-12 22:02:03,157 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MSC, 音楽, null}
2016-07-12 22:02:03,158 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{FOD, 食品, null}
2016-07-12 22:02:03,159 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MCD, 音楽CD, MSC}
2016-07-12 22:02:03,160 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{INS, 楽器, MSC}
2016-07-12 22:02:03,160 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{HEB, ハーブ, FOD}
2016-07-12 22:02:03,165 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to PRODUCT_CATEGORY
2016-07-12 22:02:03,166 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{ONS, 生産販売可能, 1}
2016-07-12 22:02:03,166 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{PST, 生産中止, 2}
2016-07-12 22:02:03,167 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{SST, 販売中止, 3}
2016-07-12 22:02:03,171 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to PRODUCT_STATUS
2016-07-12 22:02:03,173 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-12 22:02:03,173 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/20-member.xls)
2016-07-12 22:02:03,173 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-12 22:02:03,283 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{1, Stojkovic, Pixy, FML, 2007/12/01 11:01:10, 1965/03/03, 2016-07-12 22:02:03.282, foo, 2016-07-12 22:02:03.282, foo, 0}
2016-07-12 22:02:03,289 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{2, Savicevic, Genius, PRV, null, 1966/09/15, 2016-07-12 22:02:03.289, foo, 2016-07-12 22:02:03.289, foo, 0}
2016-07-12 22:02:03,291 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{3, Mijatovic, Mijato, WDL, 2005/10/03 13:03:30, null, 2016-07-12 22:02:03.291, foo, 2016-07-12 22:02:03.291, foo, 0}
2016-07-12 22:02:03,301 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{4, Stankovic, Stanko, FML, 2006/09/04 14:04:40, 1978/09/11, 2016-07-12 22:02:03.3, foo, 2016-07-12 22:02:03.301, foo, 0}
2016-07-12 22:02:03,304 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{5, Milosevic, Milose, FML, 2007/08/05 15:05:50, null, 2016-07-12 22:02:03.304, foo, 2016-07-12 22:02:03.304, foo, 0}
2016-07-12 22:02:03,307 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{6, Mihajlovic, FreeKick, WDL, 2006/07/06 16:06:40, 1969/02/20, 2016-07-12 22:02:03.306, foo, 2016-07-12 22:02:03.306, foo, 0}
2016-07-12 22:02:03,311 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{7, アカギ, Akagi, FML, 2005/06/07 17:07:30, null, 2016-07-12 22:02:03.311, foo, 2016-07-12 22:02:03.311, foo, 0}
2016-07-12 22:02:03,312 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{8, Kezman, RedCard, FML, 2006/05/08 18:08:20, null, 2016-07-12 22:02:03.312, foo, 2016-07-12 22:02:03.312, foo, 0}
2016-07-12 22:02:03,315 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{9, Maslovar, JEFUnited, FML, 2007/12/31 00:00:00, 1967/02/20, 2016-07-12 22:02:03.315, foo, 2016-07-12 22:02:03.315, foo, 0}
2016-07-12 22:02:03,319 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{10, 諸葛亮孔明, ShokatsuGoGo, PRV, null, null, 2016-07-12 22:02:03.319, foo, 2016-07-12 22:02:03.319, foo, 0}
2016-07-12 22:02:03,321 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{11, Boban, Boban, FML, 2007/12/01 11:01:10, 1968/10/08, 2016-07-12 22:02:03.32, foo, 2016-07-12 22:02:03.321, foo, 0}
2016-07-12 22:02:03,323 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{12, Suker, Suker, PRV, null, 1968/01/01, 2016-07-12 22:02:03.323, foo, 2016-07-12 22:02:03.323, foo, 0}
2016-07-12 22:02:03,332 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{13, Jarni, Jarni, WDL, 2005/10/03 13:03:30, 1968/10/26, 2016-07-12 22:02:03.332, foo, 2016-07-12 22:02:03.332, foo, 0}
2016-07-12 22:02:03,335 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{14, Boksic, Boksic, FML, 2006/09/04 14:04:40, 1970/01/21, 2016-07-12 22:02:03.335, foo, 2016-07-12 22:02:03.335, foo, 0}
2016-07-12 22:02:03,338 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{15, Prosinecki, Prosinecki, FML, 2004/08/05 15:05:50, 1969/01/12, 2016-07-12 22:02:03.338, foo, 2016-07-12 22:02:03.338, foo, 0}
2016-07-12 22:02:03,343 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{16, RobeltKovac, RobeltKovac, WDL, 2006/07/06 16:06:40, null, 2016-07-12 22:02:03.342, foo, 2016-07-12 22:02:03.342, foo, 0}
2016-07-12 22:02:03,345 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{17, NikoKovac, NikoKovac, FML, 2005/06/07 17:07:30, null, 2016-07-12 22:02:03.345, foo, 2016-07-12 22:02:03.345, foo, 0}
2016-07-12 22:02:03,346 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{18, Jovanovic, Jovano, FML, 2006/05/08 18:08:20, 1981/04/18, 2016-07-12 22:02:03.346, foo, 2016-07-12 22:02:03.346, foo, 0}
2016-07-12 22:02:03,350 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{19, Milko, Milko, FML, 2005/12/31 12:34:56, 1974/09/10, 2016-07-12 22:02:03.349, foo, 2016-07-12 22:02:03.349, foo, 0}
2016-07-12 22:02:03,352 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{20, 諸葛瑾子瑜, ShokatsuKinKin, FML, 2001/12/31 23:59:59, null, 2016-07-12 22:02:03.352, foo, 2016-07-12 22:02:03.352, foo, 0}
2016-07-12 22:02:03,381 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER
2016-07-12 22:02:03,383 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{1, 1, 2007/03/24, 2015/12/31, Nagara, 4, 2016-07-12 22:02:03.383, foo, 2016-07-12 22:02:03.383, foo, 0}
2016-07-12 22:02:03,394 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{2, 1, 1949/01/01, 1997/03/31, New York, 1, 2016-07-12 22:02:03.393, foo, 2016-07-12 22:02:03.393, foo, 0}
2016-07-12 22:02:03,396 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{3, 1, 1997/04/01, 2000/09/30, Los Angels, 1, 2016-07-12 22:02:03.396, foo, 2016-07-12 22:02:03.396, foo, 0}
2016-07-12 22:02:03,403 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{4, 1, 2000/10/01, 2003/08/31, New York, 1, 2016-07-12 22:02:03.403, foo, 2016-07-12 22:02:03.403, foo, 0}
2016-07-12 22:02:03,410 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{5, 1, 2003/09/01, 2004/12/22, San Francisco Powell, 1, 2016-07-12 22:02:03.409, foo, 2016-07-12 22:02:03.409, foo, 0}
2016-07-12 22:02:03,414 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{6, 1, 2004/12/23, 2006/03/23, San Francisco Daly City, 1, 2016-07-12 22:02:03.414, foo, 2016-07-12 22:02:03.414, foo, 0}
2016-07-12 22:02:03,416 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{7, 1, 2016/01/01, 9999/12/31, Victoria, 2, 2016-07-12 22:02:03.416, foo, 2016-07-12 22:02:03.416, foo, 0}
2016-07-12 22:02:03,421 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{8, 2, 2004/12/24, 9999/12/31, Ichihara, 4, 2016-07-12 22:02:03.42, foo, 2016-07-12 22:02:03.42, foo, 0}
2016-07-12 22:02:03,424 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{9, 3, 2004/12/24, 2007/03/23, Mobara, 4, 2016-07-12 22:02:03.424, foo, 2016-07-12 22:02:03.424, foo, 0}
2016-07-12 22:02:03,427 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{10, 4, 2002/11/01, 9999/12/31, Sousa, 4, 2016-07-12 22:02:03.427, foo, 2016-07-12 22:02:03.427, foo, 0}
2016-07-12 22:02:03,430 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{11, 6, 2002/11/01, 9999/12/31, Yokoshiba, 4, 2016-07-12 22:02:03.43, foo, 2016-07-12 22:02:03.43, foo, 0}
2016-07-12 22:02:03,433 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{12, 9, 2010/11/01, 9999/12/31, Tateyama, 4, 2016-07-12 22:02:03.433, foo, 2016-07-12 22:02:03.433, foo, 0}
2016-07-12 22:02:03,435 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{13, 10, 1970/01/01, 9999/12/31, Shoku, 3, 2016-07-12 22:02:03.435, foo, 2016-07-12 22:02:03.435, foo, 0}
2016-07-12 22:02:03,440 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{14, 12, 2000/11/01, 2001/11/01, Oohara, 4, 2016-07-12 22:02:03.44, foo, 2016-07-12 22:02:03.44, foo, 0}
2016-07-12 22:02:03,444 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{15, 15, 2002/11/01, 2006/10/30, MinamiBousou, 4, 2016-07-12 22:02:03.444, foo, 2016-07-12 22:02:03.444, foo, 0}
2016-07-12 22:02:03,447 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{16, 15, 2007/11/01, 9999/12/31, Tomisato, 4, 2016-07-12 22:02:03.447, foo, 2016-07-12 22:02:03.447, foo, 0}
2016-07-12 22:02:03,449 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{17, 18, 2001/03/21, 2007/11/21, Katsuura, 4, 2016-07-12 22:02:03.449, foo, 2016-07-12 22:02:03.449, foo, 0}
2016-07-12 22:02:03,452 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{18, 18, 2007/11/22, 9999/12/31, Kamogawa, 4, 2016-07-12 22:02:03.452, foo, 2016-07-12 22:02:03.452, foo, 0}
2016-07-12 22:02:03,454 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{19, 19, 2000/11/01, 9999/12/31, Yotsukaido, 4, 2016-07-12 22:02:03.454, foo, 2016-07-12 22:02:03.454, foo, 0}
2016-07-12 22:02:03,456 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{20, 20, 1970/01/01, 9999/12/31, Go, 3, 2016-07-12 22:02:03.456, foo, 2016-07-12 22:02:03.456, foo, 0}
2016-07-12 22:02:03,480 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_ADDRESS
2016-07-12 22:02:03,482 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{1, 3, 2006/12/24 23:59:59, 0, FML}
2016-07-12 22:02:03,483 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{2, 6, 2007/11/11 16:16:16, 0, FML}
2016-07-12 22:02:03,484 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{3, 1, 2006/12/23 22:56:29, 0, FML}
2016-07-12 22:02:03,485 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{4, 6, 2007/11/01 02:13:00, 0, FML}
2016-07-12 22:02:03,486 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{5, 7, 2006/05/24 23:12:59, 0, FML}
2016-07-12 22:02:03,488 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{6, 6, 2005/11/11 16:32:01, 0, PRV}
2016-07-12 22:02:03,490 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{7, 6, 2006/01/28 23:59:59, 1, FML}
2016-07-12 22:02:03,492 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{8, 6, 2007/11/09 16:23:00, 0, FML}
2016-07-12 22:02:03,494 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{9, 8, 2006/12/22 23:59:59, 0, FML}
2016-07-12 22:02:03,495 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{10, 6, 2007/11/11 09:01:00, 0, FML}
2016-07-12 22:02:03,496 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{11, 1, 2006/12/23 23:59:59, 0, FML}
2016-07-12 22:02:03,497 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{12, 9, 2007/11/15 12:43:00, 0, FML}
2016-07-12 22:02:03,498 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{13, 10, 2006/12/24 23:59:59, 0, FML}
2016-07-12 22:02:03,499 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{14, 6, 2007/04/01 16:23:01, 0, FML}
2016-07-12 22:02:03,500 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{15, 7, 2006/12/24 23:59:20, 1, FML}
2016-07-12 22:02:03,501 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{16, 6, 2007/05/01 12:23:02, 0, FML}
2016-07-12 22:02:03,502 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{17, 7, 2006/12/24 23:59:21, 0, FML}
2016-07-12 22:02:03,503 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{18, 6, 2007/06/11 17:23:03, 0, FML}
2016-07-12 22:02:03,504 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{19, 4, 2006/12/24 23:59:22, 0, FML}
2016-07-12 22:02:03,505 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{20, 3, 2007/11/01 16:12:04, 0, FML}
2016-07-12 22:02:03,505 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{21, 11, 2006/12/24 23:59:23, 0, FML}
2016-07-12 22:02:03,506 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{22, 1, 2007/11/01 16:23:05, 0, PRV}
2016-07-12 22:02:03,507 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{23, 9, 2006/12/24 23:59:24, 1, FML}
2016-07-12 22:02:03,508 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{24, 8, 2007/11/01 16:23:06, 0, FML}
2016-07-12 22:02:03,509 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{25, 7, 2007/12/24 11:59:25, 1, FML}
2016-07-12 22:02:03,510 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{26, 6, 2007/06/21 01:23:57, 0, FML}
2016-07-12 22:02:03,511 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{27, 5, 2006/12/24 23:59:26, 0, FML}
2016-07-12 22:02:03,512 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{28, 3, 2007/11/01 16:23:08, 0, FML}
2016-07-12 22:02:03,512 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{29, 3, 2006/12/24 23:59:27, 0, FML}
2016-07-12 22:02:03,513 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{30, 10, 2007/11/01 16:23:09, 0, FML}
2016-07-12 22:02:03,514 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{31, 15, 2006/07/24 23:59:28, 0, FML}
2016-07-12 22:02:03,516 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{32, 14, 2007/11/01 17:23:10, 0, FML}
2016-07-12 22:02:03,517 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{33, 15, 2007/11/01 16:23:10, 0, FML}
2016-07-12 22:02:03,518 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{34, 18, 2006/07/24 23:59:29, 0, FML}
2016-07-12 22:02:03,519 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{35, 3, 2007/11/01 17:23:11, 0, PRV}
2016-07-12 22:02:03,521 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{36, 5, 2007/11/01 16:23:11, 1, FML}
2016-07-12 22:02:03,523 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{37, 11, 2006/07/24 23:59:30, 0, FML}
2016-07-12 22:02:03,524 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{38, 20, 2007/11/01 17:23:12, 1, FML}
2016-07-12 22:02:03,526 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{39, 19, 2007/11/01 16:23:12, 0, FML}
2016-07-12 22:02:03,527 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{40, 4, 2006/07/24 23:59:31, 0, FML}
2016-07-12 22:02:03,528 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{41, 4, 2007/11/01 17:23:13, 0, FML}
2016-07-12 22:02:03,528 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{42, 4, 2007/11/01 16:23:13, 0, FML}
2016-07-12 22:02:03,529 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{43, 4, 2006/07/24 23:52:32, 0, FML}
2016-07-12 22:02:03,530 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{44, 4, 2007/11/01 11:23:14, 0, FML}
2016-07-12 22:02:03,531 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{45, 4, 2007/11/21 06:23:14, 0, FML}
2016-07-12 22:02:03,532 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{46, 12, 2006/07/24 23:52:33, 0, PRV}
2016-07-12 22:02:03,532 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{47, 13, 2007/11/01 11:23:15, 1, FML}
2016-07-12 22:02:03,533 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{48, 14, 2007/11/21 06:23:15, 0, FML}
2016-07-12 22:02:03,533 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{49, 17, 2006/07/24 23:52:34, 1, FML}
2016-07-12 22:02:03,534 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{50, 18, 2007/11/01 11:23:16, 0, FML}
2016-07-12 22:02:03,535 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{51, 16, 2007/11/21 06:23:16, 0, FML}
2016-07-12 22:02:03,535 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{52, 4, 2006/07/24 23:52:35, 0, FML}
2016-07-12 22:02:03,536 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{53, 5, 2007/11/01 11:23:17, 0, FML}
2016-07-12 22:02:03,536 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{54, 5, 2007/11/21 06:23:17, 0, FML}
2016-07-12 22:02:03,537 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{55, 11, 2006/07/24 23:52:36, 0, FML}
2016-07-12 22:02:03,542 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{56, 12, 2007/11/01 11:23:18, 0, FML}
2016-07-12 22:02:03,594 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 56 rows are loaded to MEMBER_LOGIN
2016-07-12 22:02:03,595 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{1, aaa, 30符3飜は？, 自分で数えろ, 1, 2016-07-12 22:02:03.595, foo, 2016-07-12 22:02:03.595, foo, 0}
2016-07-12 22:02:03,597 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{2, bbb, 50符2飜は？, 自分で数えろ, 2, 2016-07-12 22:02:03.597, foo, 2016-07-12 22:02:03.597, foo, 0}
2016-07-12 22:02:03,598 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{3, ccc, 110符2飜は？, 自分で数えろ, 3, 2016-07-12 22:02:03.597, foo, 2016-07-12 22:02:03.597, foo, 0}
2016-07-12 22:02:03,598 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{4, ddd, タンヤオ？, そう, 4, 2016-07-12 22:02:03.598, foo, 2016-07-12 22:02:03.598, foo, 0}
2016-07-12 22:02:03,599 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{5, eee2, ピンフ？, そう, 5, 2016-07-12 22:02:03.599, foo, 2016-07-12 22:02:03.599, foo, 0}
2016-07-12 22:02:03,600 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{6, fff, サンアンコウ？, そう, 6, 2016-07-12 22:02:03.599, foo, 2016-07-12 22:02:03.599, foo, 0}
2016-07-12 22:02:03,601 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{7, ggg3, イーペーコウ？, そう, 7, 2016-07-12 22:02:03.6, foo, 2016-07-12 22:02:03.6, foo, 0}
2016-07-12 22:02:03,601 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{8, hhh555, リャンペーコウ？, そう, 8, 2016-07-12 22:02:03.601, foo, 2016-07-12 22:02:03.601, foo, 0}
2016-07-12 22:02:03,602 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{9, iii, サンペーコウはないよね？, 当たり前だ, 9, 2016-07-12 22:02:03.602, foo, 2016-07-12 22:02:03.602, foo, 0}
2016-07-12 22:02:03,603 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{10, jjj, 私はイカサマしません, 実はする, 10, 2016-07-12 22:02:03.603, foo, 2016-07-12 22:02:03.603, foo, 0}
2016-07-12 22:02:03,604 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{11, qwe, 70符3飜は？, 自分で数えろ, 11, 2016-07-12 22:02:03.604, foo, 2016-07-12 22:02:03.604, foo, 0}
2016-07-12 22:02:03,605 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{12, sdf, 20符4飜は？, 自分で数えろ, 12, 2016-07-12 22:02:03.605, foo, 2016-07-12 22:02:03.605, foo, 0}
2016-07-12 22:02:03,606 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{13, dfgsf, 大三元は？, 役満だよ, 13, 2016-07-12 22:02:03.606, foo, 2016-07-12 22:02:03.606, foo, 0}
2016-07-12 22:02:03,606 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{14, ert, タンヤオ？, そう, 14, 2016-07-12 22:02:03.606, foo, 2016-07-12 22:02:03.606, foo, 0}
2016-07-12 22:02:03,607 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{15, fhgf, ピンフ？, そう, 15, 2016-07-12 22:02:03.607, foo, 2016-07-12 22:02:03.607, foo, 0}
2016-07-12 22:02:03,608 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{16, ghj, サンアンコウ？, そう, 16, 2016-07-12 22:02:03.608, foo, 2016-07-12 22:02:03.608, foo, 0}
2016-07-12 22:02:03,610 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{17, tyuffff, サンレンコウ？, そう, 17, 2016-07-12 22:02:03.609, foo, 2016-07-12 22:02:03.609, foo, 0}
2016-07-12 22:02:03,611 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{18, jkl, イーペーコウ？, そう, 18, 2016-07-12 22:02:03.611, foo, 2016-07-12 22:02:03.611, foo, 0}
2016-07-12 22:02:03,612 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{19, ghjfff, 左ハイは？, 痛い, 19, 2016-07-12 22:02:03.612, foo, 2016-07-12 22:02:03.612, foo, 0}
2016-07-12 22:02:03,612 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{20, cvb, 孫権は？, 呉, 20, 2016-07-12 22:02:03.612, foo, 2016-07-12 22:02:03.612, foo, 0}
2016-07-12 22:02:03,630 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SECURITY
2016-07-12 22:02:03,632 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{1, 1, 1234, PLT, 2016-07-12 22:02:03.631, foo, 2016-07-12 22:02:03.632, foo, 0}
2016-07-12 22:02:03,633 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{2, 2, 2345, GLD, 2016-07-12 22:02:03.633, foo, 2016-07-12 22:02:03.633, foo, 0}
2016-07-12 22:02:03,634 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{3, 3, 3456, GLD, 2016-07-12 22:02:03.634, foo, 2016-07-12 22:02:03.634, foo, 0}
2016-07-12 22:02:03,635 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{4, 4, 875, BRZ, 2016-07-12 22:02:03.635, foo, 2016-07-12 22:02:03.635, foo, 0}
2016-07-12 22:02:03,636 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{5, 5, 1111, BRZ, 2016-07-12 22:02:03.635, foo, 2016-07-12 22:02:03.635, foo, 0}
2016-07-12 22:02:03,636 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{6, 6, 5422, SIL, 2016-07-12 22:02:03.636, foo, 2016-07-12 22:02:03.636, foo, 0}
2016-07-12 22:02:03,637 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{7, 7, 24678, SIL, 2016-07-12 22:02:03.636, foo, 2016-07-12 22:02:03.636, foo, 0}
2016-07-12 22:02:03,637 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{8, 8, 234, SIL, 2016-07-12 22:02:03.637, foo, 2016-07-12 22:02:03.637, foo, 0}
2016-07-12 22:02:03,637 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{9, 9, 3, SIL, 2016-07-12 22:02:03.637, foo, 2016-07-12 22:02:03.637, foo, 0}
2016-07-12 22:02:03,638 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{10, 10, 98765, PLT, 2016-07-12 22:02:03.638, foo, 2016-07-12 22:02:03.638, foo, 0}
2016-07-12 22:02:03,663 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{11, 11, 34, GLD, 2016-07-12 22:02:03.663, foo, 2016-07-12 22:02:03.663, foo, 0}
2016-07-12 22:02:03,664 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{12, 12, 532, PLT, 2016-07-12 22:02:03.663, foo, 2016-07-12 22:02:03.663, foo, 0}
2016-07-12 22:02:03,664 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{13, 13, 23678, GLD, 2016-07-12 22:02:03.664, foo, 2016-07-12 22:02:03.664, foo, 0}
2016-07-12 22:02:03,665 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{14, 14, 432, GLD, 2016-07-12 22:02:03.665, foo, 2016-07-12 22:02:03.665, foo, 0}
2016-07-12 22:02:03,666 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{15, 15, 543, BRZ, 2016-07-12 22:02:03.666, foo, 2016-07-12 22:02:03.666, foo, 0}
2016-07-12 22:02:03,667 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{16, 16, 23545, PLT, 2016-07-12 22:02:03.667, foo, 2016-07-12 22:02:03.667, foo, 0}
2016-07-12 22:02:03,668 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{17, 17, 2345, GLD, 2016-07-12 22:02:03.668, foo, 2016-07-12 22:02:03.668, foo, 0}
2016-07-12 22:02:03,669 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{18, 18, 8763, SIL, 2016-07-12 22:02:03.669, foo, 2016-07-12 22:02:03.669, foo, 0}
2016-07-12 22:02:03,670 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{19, 19, 34567, SIL, 2016-07-12 22:02:03.67, foo, 2016-07-12 22:02:03.67, foo, 0}
2016-07-12 22:02:03,671 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{20, 20, 43, GLD, 2016-07-12 22:02:03.671, foo, 2016-07-12 22:02:03.671, foo, 0}
2016-07-12 22:02:03,689 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SERVICE
2016-07-12 22:02:03,691 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{3, null, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123, 2016-07-12 22:02:03.691, foo, 2016-07-12 22:02:03.691, foo}
2016-07-12 22:02:03,707 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{6, SIT, null, 2007/11/11 16:00:00.456, 2016-07-12 22:02:03.707, foo, 2016-07-12 22:02:03.707, foo}
2016-07-12 22:02:03,708 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{13, PRD, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789, 2016-07-12 22:02:03.708, foo, 2016-07-12 22:02:03.708, foo}
2016-07-12 22:02:03,709 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{16, SIT, コバチが２人いるため, 2007/11/13 16:00:00.456, 2016-07-12 22:02:03.709, foo, 2016-07-12 22:02:03.709, foo}
2016-07-12 22:02:03,716 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to MEMBER_WITHDRAWAL
2016-07-12 22:02:03,717 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{1, 1, 2, 2006/12/24 23:59:59}
2016-07-12 22:02:03,718 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{2, 1, 3, 2007/11/11 16:16:16}
2016-07-12 22:02:03,719 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{3, 1, 4, 2006/12/23 22:56:29}
2016-07-12 22:02:03,720 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{4, 1, 5, 2007/11/01 02:13:00}
2016-07-12 22:02:03,722 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{5, 1, 6, 2012/05/24 23:12:59}
2016-07-12 22:02:03,726 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{6, 1, 9, 2005/11/11 16:32:01}
2016-07-12 22:02:03,728 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{7, 1, 15, 2006/01/28 23:59:59}
2016-07-12 22:02:03,729 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{8, 1, 18, 2007/11/09 16:23:00}
2016-07-12 22:02:03,730 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{9, 2, 1, 2009/12/22 23:59:59}
2016-07-12 22:02:03,730 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{10, 2, 3, 2007/11/11 09:01:00}
2016-07-12 22:02:03,731 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{11, 2, 4, 2006/11/23 23:59:59}
2016-07-12 22:02:03,755 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{12, 2, 9, 2012/11/15 12:43:00}
2016-07-12 22:02:03,757 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{13, 2, 14, 2006/12/24 23:59:59}
2016-07-12 22:02:03,758 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{14, 2, 19, 2011/04/01 16:23:01}
2016-07-12 22:02:03,776 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{15, 3, 1, 2006/12/24 23:59:20}
2016-07-12 22:02:03,779 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{16, 3, 2, 2008/05/01 12:23:02}
2016-07-12 22:02:03,780 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{17, 3, 4, 2006/12/24 23:59:21}
2016-07-12 22:02:03,780 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{18, 3, 6, 2009/06/11 17:23:03}
2016-07-12 22:02:03,781 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{19, 3, 9, 2010/12/24 23:59:22}
2016-07-12 22:02:03,782 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{20, 3, 10, 2007/11/01 16:12:04}
2016-07-12 22:02:03,783 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{21, 4, 1, 2006/12/24 23:59:23}
2016-07-12 22:02:03,783 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{22, 4, 2, 2007/11/01 16:23:05}
2016-07-12 22:02:03,784 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{23, 4, 3, 2011/12/24 23:59:24}
2016-07-12 22:02:03,784 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{24, 4, 4, 2007/11/01 16:23:06}
2016-07-12 22:02:03,785 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{25, 4, 5, 2013/05/24 11:59:25}
2016-07-12 22:02:03,786 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{26, 4, 6, 2007/06/21 01:23:57}
2016-07-12 22:02:03,803 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{27, 4, 9, 2006/12/24 23:59:26}
2016-07-12 22:02:03,807 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{28, 4, 11, 2007/11/01 16:23:08}
2016-07-12 22:02:03,813 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{29, 4, 12, 2013/02/24 23:59:27}
2016-07-12 22:02:03,814 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{30, 4, 13, 2012/11/01 16:23:03}
2016-07-12 22:02:03,815 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{31, 4, 14, 2006/07/24 23:59:28}
2016-07-12 22:02:03,817 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{32, 4, 15, 2007/11/01 17:23:10}
2016-07-12 22:02:03,818 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{33, 4, 16, 2007/11/01 16:23:10}
2016-07-12 22:02:03,823 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{34, 4, 17, 2006/07/24 23:59:29}
2016-07-12 22:02:03,824 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{35, 4, 18, 2011/11/01 17:23:11}
2016-07-12 22:02:03,825 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{36, 4, 19, 2007/11/01 16:23:11}
2016-07-12 22:02:03,825 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{37, 5, 1, 2008/07/24 23:59:30}
2016-07-12 22:02:03,826 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{38, 5, 3, 2007/11/01 17:23:12}
2016-07-12 22:02:03,827 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{39, 5, 6, 2007/11/01 16:23:12}
2016-07-12 22:02:03,830 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{40, 6, 1, 2006/07/24 23:59:31}
2016-07-12 22:02:03,831 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{41, 6, 2, 2007/11/01 17:23:13}
2016-07-12 22:02:03,832 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{42, 6, 3, 2007/11/01 16:23:13}
2016-07-12 22:02:03,833 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{43, 6, 4, 2006/07/24 23:52:32}
2016-07-12 22:02:03,833 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{44, 6, 5, 2007/11/01 11:23:14}
2016-07-12 22:02:03,834 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{45, 6, 6, 2007/11/21 06:23:14}
2016-07-12 22:02:03,835 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{46, 8, 1, 2011/07/24 23:52:33}
2016-07-12 22:02:03,836 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{47, 8, 2, 2007/11/01 11:23:15}
2016-07-12 22:02:03,838 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{48, 8, 3, 2007/11/21 06:23:15}
2016-07-12 22:02:03,845 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{49, 9, 1, 2006/07/24 23:52:34}
2016-07-12 22:02:03,846 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{50, 9, 2, 208/11/01 11:23:16}
2016-07-12 22:02:03,847 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{51, 9, 3, 2007/11/21 06:23:16}
2016-07-12 22:02:03,848 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{52, 9, 10, 2006/07/24 23:52:35}
2016-07-12 22:02:03,849 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{53, 9, 20, 2009/11/01 11:23:17}
2016-07-12 22:02:03,849 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{54, 10, 1, 2007/11/21 06:23:17}
2016-07-12 22:02:03,853 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{55, 10, 2, 2006/07/24 23:52:36}
2016-07-12 22:02:03,853 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{56, 10, 3, 2010/11/01 11:23:18}
2016-07-12 22:02:03,855 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{57, 10, 4, 2006/12/21 23:59:59}
2016-07-12 22:02:03,856 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{58, 10, 5, 2007/11/1 16:16:16}
2016-07-12 22:02:03,857 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{59, 10, 6, 2006/08/23 22:56:29}
2016-07-12 22:02:03,858 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{60, 10, 9, 2007/11/01 02:11:00}
2016-07-12 22:02:03,859 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{61, 10, 11, 2012/05/24 23:12:59}
2016-07-12 22:02:03,861 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{62, 10, 12, 2005/11/10 16:32:01}
2016-07-12 22:02:03,861 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{63, 10, 13, 2006/01/28 23:59:59}
2016-07-12 22:02:03,862 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{64, 10, 14, 2007/10/09 16:23:00}
2016-07-12 22:02:03,863 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{65, 10, 15, 2009/12/22 23:59:59}
2016-07-12 22:02:03,864 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{66, 10, 16, 2007/11/01 09:01:00}
2016-07-12 22:02:03,865 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{67, 10, 17, 2006/11/23 23:59:59}
2016-07-12 22:02:03,866 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{68, 10, 18, 2011/11/15 12:43:00}
2016-07-12 22:02:03,867 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{69, 10, 19, 2006/07/24 23:59:59}
2016-07-12 22:02:03,875 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{70, 10, 20, 2011/08/01 16:23:01}
2016-07-12 22:02:03,877 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{71, 11, 12, 2006/09/24 23:59:20}
2016-07-12 22:02:03,879 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{72, 11, 13, 2008/01/01 12:23:02}
2016-07-12 22:02:03,880 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{73, 11, 14, 2006/12/24 23:59:21}
2016-07-12 22:02:03,880 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{74, 11, 15, 2009/02/11 17:23:03}
2016-07-12 22:02:03,881 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{75, 11, 16, 2010/03/24 23:59:22}
2016-07-12 22:02:03,882 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{76, 11, 17, 2007/09/01 16:12:04}
2016-07-12 22:02:03,883 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{77, 11, 19, 2006/12/24 23:59:23}
2016-07-12 22:02:03,884 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{78, 12, 1, 2007/11/01 16:23:05}
2016-07-12 22:02:03,884 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{79, 12, 11, 2011/05/24 23:59:24}
2016-07-12 22:02:03,885 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{80, 12, 13, 2007/11/01 16:23:06}
2016-07-12 22:02:03,887 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{81, 12, 14, 2013/06/24 11:59:25}
2016-07-12 22:02:03,888 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{82, 12, 15, 2007/06/21 01:23:57}
2016-07-12 22:02:03,890 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{83, 12, 19, 2006/12/24 23:59:26}
2016-07-12 22:02:03,891 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{84, 13, 11, 2007/08/01 16:23:08}
2016-07-12 22:02:03,894 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{85, 13, 12, 2013/02/24 23:59:27}
2016-07-12 22:02:03,895 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{86, 13, 14, 2012/11/01 16:23:03}
2016-07-12 22:02:03,898 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{87, 14, 1, 2006/07/24 23:59:28}
2016-07-12 22:02:03,899 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{88, 14, 10, 2012/05/24 23:12:59}
2016-07-12 22:02:03,900 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{89, 14, 11, 2005/11/10 16:32:01}
2016-07-12 22:02:03,901 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{90, 14, 20, 2006/01/28 23:59:59}
2016-07-12 22:02:03,901 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{91, 16, 17, 2007/10/09 16:23:00}
2016-07-12 22:02:03,902 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{92, 17, 16, 2009/12/22 23:59:59}
2016-07-12 22:02:03,903 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{93, 18, 1, 2007/11/01 09:01:00}
2016-07-12 22:02:03,903 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{94, 18, 2, 2006/11/23 23:59:59}
2016-07-12 22:02:03,904 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{95, 18, 3, 2011/11/15 12:43:00}
2016-07-12 22:02:03,905 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{96, 18, 4, 2006/07/24 23:59:59}
2016-07-12 22:02:03,905 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{97, 18, 5, 2011/08/01 16:23:01}
2016-07-12 22:02:03,906 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{98, 18, 6, 2006/09/24 23:59:20}
2016-07-12 22:02:03,911 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{99, 18, 9, 2008/01/01 12:23:02}
2016-07-12 22:02:03,912 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{100, 18, 11, 2006/12/24 23:59:21}
2016-07-12 22:02:03,913 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{101, 18, 12, 2009/02/11 17:23:03}
2016-07-12 22:02:03,915 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{102, 18, 13, 2010/03/24 23:59:22}
2016-07-12 22:02:03,916 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{103, 18, 14, 2007/09/01 16:12:04}
2016-07-12 22:02:03,917 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{104, 18, 15, 2006/12/24 23:59:23}
2016-07-12 22:02:03,917 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{105, 19, 1, 2007/11/01 16:23:05}
2016-07-12 22:02:03,918 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{106, 19, 10, 2011/05/24 23:59:24}
2016-07-12 22:02:03,919 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{107, 19, 11, 2007/11/01 16:23:06}
2016-07-12 22:02:03,920 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{108, 19, 12, 2013/06/24 11:59:25}
2016-07-12 22:02:03,921 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{109, 19, 20, 2013/06/24 11:59:25}
2016-07-12 22:02:03,922 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{110, 20, 10, 2013/06/24 11:59:25}
2016-07-12 22:02:03,923 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{111, 20, 19, 2013/06/24 11:59:25}
2016-07-12 22:02:04,053 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 111 rows are loaded to MEMBER_FOLLOWING
2016-07-12 22:02:04,054 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-12 22:02:04,054 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/30-product.xls)
2016-07-12 22:02:04,055 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-12 22:02:04,121 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{1, Cold Spring Harbor, BILLYJOEL-01, MCD, PST, 1100, 2016-07-12 22:02:04.121, foo, 2016-07-12 22:02:04.121, foo, 0}
2016-07-12 22:02:04,123 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{2, Piano Man, BILLYJOEL-02, MCD, ONS, 1200, 2016-07-12 22:02:04.123, foo, 2016-07-12 22:02:04.123, foo, 0}
2016-07-12 22:02:04,124 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{3, Streetlife Serenade, BILLYJOEL-03, MCD, ONS, 1300, 2016-07-12 22:02:04.124, foo, 2016-07-12 22:02:04.124, foo, 0}
2016-07-12 22:02:04,125 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{4, Turnstiles, BILLYJOEL-04, MCD, ONS, 1400, 2016-07-12 22:02:04.125, foo, 2016-07-12 22:02:04.125, foo, 0}
2016-07-12 22:02:04,126 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{5, The Stranger, BILLYJOEL-05, MCD, ONS, 1500, 2016-07-12 22:02:04.125, foo, 2016-07-12 22:02:04.125, foo, 0}
2016-07-12 22:02:04,127 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{6, 52nd Street, BILLYJOEL-06, MCD, ONS, 1600, 2016-07-12 22:02:04.127, foo, 2016-07-12 22:02:04.127, foo, 0}
2016-07-12 22:02:04,128 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{7, Glass House, BILLYJOEL-07, MCD, ONS, 1700, 2016-07-12 22:02:04.128, foo, 2016-07-12 22:02:04.128, foo, 0}
2016-07-12 22:02:04,130 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{8, Nylon Curtain, BILLYJOEL-08, MCD, ONS, 1800, 2016-07-12 22:02:04.13, foo, 2016-07-12 22:02:04.13, foo, 0}
2016-07-12 22:02:04,131 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{9, Bridge, BILLYJOEL-09, MCD, ONS, 1900, 2016-07-12 22:02:04.131, foo, 2016-07-12 22:02:04.131, foo, 0}
2016-07-12 22:02:04,133 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{10, Storm Front, BILLYJOEL-10, MCD, ONS, 2000, 2016-07-12 22:02:04.133, foo, 2016-07-12 22:02:04.133, foo, 0}
2016-07-12 22:02:04,134 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{11, River of Dreams, BILLYJOEL-11, MCD, ONS, 2100, 2016-07-12 22:02:04.134, foo, 2016-07-12 22:02:04.134, foo, 0}
2016-07-12 22:02:04,135 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{12, Grand Piano, PIANO-01, INS, ONS, 1400000, 2016-07-12 22:02:04.135, foo, 2016-07-12 22:02:04.135, foo, 0}
2016-07-12 22:02:04,135 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{13, Upright Piano, PIANO-02, INS, ONS, 1100000, 2016-07-12 22:02:04.135, foo, 2016-07-12 22:02:04.135, foo, 0}
2016-07-12 22:02:04,136 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{14, Low Price Flute, FLUTE-01, INS, ONS, 50000, 2016-07-12 22:02:04.136, foo, 2016-07-12 22:02:04.136, foo, 0}
2016-07-12 22:02:04,137 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{15, Silver Flute, FLUTE-02, INS, ONS, 500000, 2016-07-12 22:02:04.137, foo, 2016-07-12 22:02:04.137, foo, 0}
2016-07-12 22:02:04,143 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{16, Gold Flute, FLUTE-03, INS, ONS, 4000000, 2016-07-12 22:02:04.143, foo, 2016-07-12 22:02:04.143, foo, 0}
2016-07-12 22:02:04,143 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{17, Rosemary (100g), HARB-100-01, HEB, ONS, 400, 2016-07-12 22:02:04.143, foo, 2016-07-12 22:02:04.143, foo, 0}
2016-07-12 22:02:04,144 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{18, Lemon Grass (100g), HARB-100-02, HEB, ONS, 380, 2016-07-12 22:02:04.144, foo, 2016-07-12 22:02:04.144, foo, 0}
2016-07-12 22:02:04,144 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{19, Camomile (100g), HARB-100-03, HEB, ONS, 380, 2016-07-12 22:02:04.144, foo, 2016-07-12 22:02:04.144, foo, 0}
2016-07-12 22:02:04,145 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{20, Hatomugi (100g), HARB-100-04, HEB, ONS, 340, 2016-07-12 22:02:04.145, foo, 2016-07-12 22:02:04.145, foo, 0}
2016-07-12 22:02:04,170 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to PRODUCT
2016-07-12 22:02:04,172 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{1, 5, 3, 2006/12/24 23:59:59, 1, 1800, 1, 2016-07-12 22:02:04.171, foo, 2016-07-12 22:02:04.171, foo, 0}
2016-07-12 22:02:04,174 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{2, 15, 7, 2007/11/11 16:16:16, 1, 1700, 1, 2016-07-12 22:02:04.173, foo, 2016-07-12 22:02:04.173, foo, 0}
2016-07-12 22:02:04,177 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{3, 13, 3, 2006/12/23 22:56:29.235, 1, 1800, 1, 2016-07-12 22:02:04.177, foo, 2016-07-12 22:02:04.177, foo, 0}
2016-07-12 22:02:04,178 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{4, 2, 5, 2007/11/01 02:13:00, 2, 1700, 1, 2016-07-12 22:02:04.178, foo, 2016-07-12 22:02:04.178, foo, 0}
2016-07-12 22:02:04,179 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{5, 9, 11, 2008/01/04 23:12:59, 5, 1800, 1, 2016-07-12 22:02:04.179, foo, 2016-07-12 22:02:04.179, foo, 0}
2016-07-12 22:02:04,181 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{6, 20, 2, 2002/01/01 16:32:01, 1, 2000, 1, 2016-07-12 22:02:04.18, foo, 2016-07-12 22:02:04.18, foo, 0}
2016-07-12 22:02:04,182 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{7, 19, 9, 2006/01/28 23:59:59.999, 1, 1000, 0, 2016-07-12 22:02:04.182, foo, 2016-07-12 22:02:04.182, foo, 0}
2016-07-12 22:02:04,183 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{8, 4, 7, 2007/11/09 16:23:00, 1, 1535, 1, 2016-07-12 22:02:04.183, foo, 2016-07-12 22:02:04.183, foo, 0}
2016-07-12 22:02:04,185 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{9, 4, 10, 2006/12/22 23:59:59, 20, 1700, 1, 2016-07-12 22:02:04.184, foo, 2016-07-12 22:02:04.184, foo, 0}
2016-07-12 22:02:04,185 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{10, 2, 10, 2007/11/01 02:13:00.345, 1, 1700, 0, 2016-07-12 22:02:04.185, foo, 2016-07-12 22:02:04.185, foo, 0}
2016-07-12 22:02:04,186 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{11, 5, 2, 2007/11/09 16:23:01, 1, 1800, 1, 2016-07-12 22:02:04.186, foo, 2016-07-12 22:02:04.186, foo, 0}
2016-07-12 22:02:04,188 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{12, 15, 2, 2006/12/22 23:59:12, 1, 1700, 1, 2016-07-12 22:02:04.188, foo, 2016-07-12 22:02:04.188, foo, 0}
2016-07-12 22:02:04,190 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{13, 13, 8, 2007/11/01 02:13:00.346, 1, 1800, 1, 2016-07-12 22:02:04.19, foo, 2016-07-12 22:02:04.19, foo, 0}
2016-07-12 22:02:04,191 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{14, 2, 4, 2007/11/09 16:23:02, 2, 1700, 1, 2016-07-12 22:02:04.191, foo, 2016-07-12 22:02:04.191, foo, 0}
2016-07-12 22:02:04,193 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{15, 9, 11, 2006/12/22 23:59:32, 5, 1800, 1, 2016-07-12 22:02:04.193, foo, 2016-07-12 22:02:04.193, foo, 0}
2016-07-12 22:02:04,195 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{16, 20, 1, 2007/11/01 02:13:00.347, 1, 2000, 1, 2016-07-12 22:02:04.195, foo, 2016-07-12 22:02:04.195, foo, 0}
2016-07-12 22:02:04,197 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{17, 19, 11, 2006/12/22 23:59:33, 2, 1000, 0, 2016-07-12 22:02:04.197, foo, 2016-07-12 22:02:04.197, foo, 0}
2016-07-12 22:02:04,198 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{18, 4, 10, 2007/11/01 02:13:00.348, 1, 1535, 1, 2016-07-12 22:02:04.198, foo, 2016-07-12 22:02:04.198, foo, 0}
2016-07-12 22:02:04,199 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{19, 4, 11, 2007/11/01 02:13:00.348, 4, 1700, 1, 2016-07-12 22:02:04.199, foo, 2016-07-12 22:02:04.199, foo, 0}
2016-07-12 22:02:04,200 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{20, 2, 11, 2006/12/22 23:59:35, 1, 1700, 0, 2016-07-12 22:02:04.2, foo, 2016-07-12 22:02:04.2, foo, 0}
2016-07-12 22:02:04,201 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{21, 2, 15, 2006/12/22 23:59:35, 1, 400000, 0, 2016-07-12 22:02:04.201, foo, 2016-07-12 22:02:04.201, foo, 0}
2016-07-12 22:02:04,202 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{22, 3, 6, 2007/11/01 02:13:00.350, 4, 1800, 1, 2016-07-12 22:02:04.202, foo, 2016-07-12 22:02:04.202, foo, 0}
2016-07-12 22:02:04,203 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{23, 15, 7, 2006/12/22 23:59:36, 1, 1700, 1, 2016-07-12 22:02:04.203, foo, 2016-07-12 22:02:04.203, foo, 0}
2016-07-12 22:02:04,204 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{24, 13, 3, 2007/09/11 12:13:00.351, 1, 1800, 1, 2016-07-12 22:02:04.204, foo, 2016-07-12 22:02:04.204, foo, 0}
2016-07-12 22:02:04,205 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{25, 16, 2, 2006/12/22 23:59:37, 2, 1700, 1, 2016-07-12 22:02:04.205, foo, 2016-07-12 22:02:04.205, foo, 0}
2016-07-12 22:02:04,205 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{26, 3, 4, 2005/12/21 12:13:00.352, 1, 1800, 1, 2016-07-12 22:02:04.205, foo, 2016-07-12 22:02:04.205, foo, 0}
2016-07-12 22:02:04,210 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{27, 2, 8, 2006/12/22 23:59:38, 1, 2000, 1, 2016-07-12 22:02:04.21, foo, 2016-07-12 22:02:04.21, foo, 0}
2016-07-12 22:02:04,211 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{28, 6, 17, 2007/11/01 02:13:00.353, 2, 600, 0, 2016-07-12 22:02:04.211, foo, 2016-07-12 22:02:04.211, foo, 0}
2016-07-12 22:02:04,212 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{29, 4, 4, 2006/12/22 23:59:39, 1, 1535, 1, 2016-07-12 22:02:04.212, foo, 2016-07-12 22:02:04.212, foo, 0}
2016-07-12 22:02:04,213 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{30, 4, 3, 2007/11/01 02:13:00.354, 4, 1700, 1, 2016-07-12 22:02:04.213, foo, 2016-07-12 22:02:04.213, foo, 0}
2016-07-12 22:02:04,215 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{31, 4, 10, 2006/12/22 23:59:40, 1, 1700, 0, 2016-07-12 22:02:04.215, foo, 2016-07-12 22:02:04.215, foo, 0}
2016-07-12 22:02:04,216 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{32, 13, 3, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-07-12 22:02:04.216, foo, 2016-07-12 22:02:04.216, foo, 0}
2016-07-12 22:02:04,217 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{33, 16, 2, 2006/12/22 23:59:41, 2, 1700, 1, 2016-07-12 22:02:04.217, foo, 2016-07-12 22:02:04.217, foo, 0}
2016-07-12 22:02:04,218 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{34, 3, 4, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-07-12 22:02:04.217, foo, 2016-07-12 22:02:04.217, foo, 0}
2016-07-12 22:02:04,218 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{35, 2, 8, 2006/12/12 23:59:42, 1, 2000, 1, 2016-07-12 22:02:04.218, foo, 2016-07-12 22:02:04.218, foo, 0}
2016-07-12 22:02:04,219 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{36, 6, 3, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-07-12 22:02:04.219, foo, 2016-07-12 22:02:04.219, foo, 0}
2016-07-12 22:02:04,220 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{37, 4, 4, 2006/12/12 23:59:43, 1, 1535, 1, 2016-07-12 22:02:04.219, foo, 2016-07-12 22:02:04.219, foo, 0}
2016-07-12 22:02:04,220 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{38, 4, 3, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-07-12 22:02:04.22, foo, 2016-07-12 22:02:04.22, foo, 0}
2016-07-12 22:02:04,221 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{39, 4, 10, 2006/12/12 23:59:44, 1, 1700, 0, 2016-07-12 22:02:04.221, foo, 2016-07-12 22:02:04.221, foo, 0}
2016-07-12 22:02:04,222 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{40, 4, 10, 2007/05/01 12:13:00.359, 1, 1700, 0, 2016-07-12 22:02:04.222, foo, 2016-07-12 22:02:04.222, foo, 0}
2016-07-12 22:02:04,223 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{41, 4, 11, 2007/11/01 02:13:01.354, 4, 1700, 1, 2016-07-12 22:02:04.223, foo, 2016-07-12 22:02:04.223, foo, 0}
2016-07-12 22:02:04,225 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{42, 10, 16, 2006/12/22 23:59:40, 1, 2800000, 1, 2016-07-12 22:02:04.225, foo, 2016-07-12 22:02:04.225, foo, 0}
2016-07-12 22:02:04,226 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{43, 13, 17, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-07-12 22:02:04.226, foo, 2016-07-12 22:02:04.226, foo, 0}
2016-07-12 22:02:04,228 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{44, 16, 14, 2006/12/22 23:59:41, 2, 1700, 1, 2016-07-12 22:02:04.227, foo, 2016-07-12 22:02:04.227, foo, 0}
2016-07-12 22:02:04,229 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{45, 3, 18, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-07-12 22:02:04.229, foo, 2016-07-12 22:02:04.229, foo, 0}
2016-07-12 22:02:04,230 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{46, 2, 7, 2006/12/12 23:59:42, 1, 2000, 1, 2016-07-12 22:02:04.23, foo, 2016-07-12 22:02:04.23, foo, 0}
2016-07-12 22:02:04,231 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{47, 6, 14, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-07-12 22:02:04.231, foo, 2016-07-12 22:02:04.231, foo, 0}
2016-07-12 22:02:04,232 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{48, 16, 12, 2006/12/12 23:59:43, 1, 100000, 1, 2016-07-12 22:02:04.232, foo, 2016-07-12 22:02:04.232, foo, 0}
2016-07-12 22:02:04,233 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{49, 4, 20, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-07-12 22:02:04.233, foo, 2016-07-12 22:02:04.233, foo, 0}
2016-07-12 22:02:04,234 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{50, 4, 19, 2006/12/12 23:59:44, 1, 1700, 0, 2016-07-12 22:02:04.234, foo, 2016-07-12 22:02:04.234, foo, 0}
2016-07-12 22:02:04,235 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{51, 4, 11, 2007/11/21 02:13:00.354, 4, 1700, 1, 2016-07-12 22:02:04.235, foo, 2016-07-12 22:02:04.235, foo, 0}
2016-07-12 22:02:04,235 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{52, 20, 17, 2006/12/23 23:59:40, 1, 400, 0, 2016-07-12 22:02:04.235, foo, 2016-07-12 22:02:04.235, foo, 0}
2016-07-12 22:02:04,236 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{53, 13, 16, 2007/12/28 12:13:10.355, 1, 600000, 1, 2016-07-12 22:02:04.236, foo, 2016-07-12 22:02:04.236, foo, 0}
2016-07-12 22:02:04,242 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{54, 16, 14, 2006/02/22 23:59:41, 2, 1700, 1, 2016-07-12 22:02:04.242, foo, 2016-07-12 22:02:04.242, foo, 0}
2016-07-12 22:02:04,243 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{55, 3, 3, 2007/07/21 12:13:00.356, 1, 1800, 1, 2016-07-12 22:02:04.242, foo, 2016-07-12 22:02:04.242, foo, 0}
2016-07-12 22:02:04,243 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{56, 2, 8, 2006/12/22 23:59:42, 1, 2000, 1, 2016-07-12 22:02:04.243, foo, 2016-07-12 22:02:04.243, foo, 0}
2016-07-12 22:02:04,244 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{57, 6, 19, 2007/02/01 02:13:00.357, 2, 1000, 0, 2016-07-12 22:02:04.244, foo, 2016-07-12 22:02:04.244, foo, 0}
2016-07-12 22:02:04,244 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{58, 2, 12, 2006/12/12 23:59:43, 1, 4000000, 1, 2016-07-12 22:02:04.244, foo, 2016-07-12 22:02:04.244, foo, 0}
2016-07-12 22:02:04,245 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{59, 4, 18, 2007/05/01 02:03:00.358, 1, 380, 1, 2016-07-12 22:02:04.245, foo, 2016-07-12 22:02:04.245, foo, 0}
2016-07-12 22:02:04,246 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{60, 4, 20, 2006/12/12 23:59:44, 2, 680, 0, 2016-07-12 22:02:04.246, foo, 2016-07-12 22:02:04.246, foo, 0}
2016-07-12 22:02:04,247 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{61, 1, 16, 2008-03-03 06:34:56.000, 3, 12000000, 1, 2016-07-12 22:02:04.246, foo, 2016-07-12 22:02:04.246, foo, 0}
2016-07-12 22:02:04,247 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{62, 1, 2, 2009-06-04 06:34:56.000, 12, 20000, 1, 2016-07-12 22:02:04.247, foo, 2016-07-12 22:02:04.247, foo, 0}
2016-07-12 22:02:04,248 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{63, 1, 6, 2010-09-26 06:34:56.000, 2, 2000, 1, 2016-07-12 22:02:04.248, foo, 2016-07-12 22:02:04.248, foo, 0}
2016-07-12 22:02:04,249 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{64, 1, 8, 2011-03-03 09:45:29.000, 1, 50, 1, 2016-07-12 22:02:04.249, foo, 2016-07-12 22:02:04.249, foo, 0}
2016-07-12 22:02:04,250 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{65, 1, 13, 2012-06-04 09:45:29.000, 1, 1000000, 1, 2016-07-12 22:02:04.249, foo, 2016-07-12 22:02:04.249, foo, 0}
2016-07-12 22:02:04,250 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{66, 1, 13, 2013-09-26 09:45:29.000, 1, 900000, 1, 2016-07-12 22:02:04.25, foo, 2016-07-12 22:02:04.25, foo, 0}
2016-07-12 22:02:04,251 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{67, 1, 5, 2014-03-03 21:02:12.000, 2, 3000, 1, 2016-07-12 22:02:04.251, foo, 2016-07-12 22:02:04.251, foo, 0}
2016-07-12 22:02:04,252 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{68, 1, 17, 2015-06-04 21:02:12.000, 30, 3000, 1, 2016-07-12 22:02:04.252, foo, 2016-07-12 22:02:04.252, foo, 0}
2016-07-12 22:02:04,253 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{69, 1, 17, 2016-09-26 21:02:12.000, 1, 1000, 1, 2016-07-12 22:02:04.253, foo, 2016-07-12 22:02:04.253, foo, 0}
2016-07-12 22:02:04,254 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{70, 1, 17, 2017-03-03 01:11:00.000, 1, 1200, 1, 2016-07-12 22:02:04.254, foo, 2016-07-12 22:02:04.254, foo, 0}
2016-07-12 22:02:04,296 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 70 rows are loaded to PURCHASE
2016-07-12 22:02:04,297 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{1, 1, 1800, 2006/12/25 23:59:59, BAK, 2016-07-12 22:02:04.297, foo, 2016-07-12 22:02:04.297, foo}
2016-07-12 22:02:04,298 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{2, 2, 1700, 2007/11/13 16:16:16, BAK, 2016-07-12 22:02:04.298, foo, 2016-07-12 22:02:04.298, foo}
2016-07-12 22:02:04,299 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{3, 3, 900, 2006/12/23 23:56:29, CRC, 2016-07-12 22:02:04.299, foo, 2016-07-12 22:02:04.299, foo}
2016-07-12 22:02:04,300 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{4, 3, 900, 2006/12/23 23:56:30, HAN, 2016-07-12 22:02:04.3, foo, 2016-07-12 22:02:04.3, foo}
2016-07-12 22:02:04,302 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{5, 4, 1700, 2007/12/01 02:13:00, HAN, 2016-07-12 22:02:04.301, foo, 2016-07-12 22:02:04.301, foo}
2016-07-12 22:02:04,303 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{6, 5, 800.20, 2008/04/04 23:12:59, HAN, 2016-07-12 22:02:04.303, foo, 2016-07-12 22:02:04.303, foo}
2016-07-12 22:02:04,304 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{7, 5, 1000.90, 2008/05/04 23:12:59, CRC, 2016-07-12 22:02:04.304, foo, 2016-07-12 22:02:04.304, foo}
2016-07-12 22:02:04,305 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{8, 6, 1000, 2002/01/01 16:32:01, CRC, 2016-07-12 22:02:04.305, foo, 2016-07-12 22:02:04.305, foo}
2016-07-12 22:02:04,307 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{9, 6, 400.8, 2002/01/01 16:32:01, CRC, 2016-07-12 22:02:04.307, foo, 2016-07-12 22:02:04.307, foo}
2016-07-12 22:02:04,308 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{10, 6, 599.2, 2002/01/01 16:32:01, HAN, 2016-07-12 22:02:04.308, foo, 2016-07-12 22:02:04.308, foo}
2016-07-12 22:02:04,309 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{11, 7, 300, 2006/01/28 23:59:59, CRC, 2016-07-12 22:02:04.309, foo, 2016-07-12 22:02:04.309, foo}
2016-07-12 22:02:04,310 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{12, 8, 535.5, 2007/11/09 16:23:00, BAK, 2016-07-12 22:02:04.31, foo, 2016-07-12 22:02:04.31, foo}
2016-07-12 22:02:04,311 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{13, 8, 999.5, 2014/11/09 16:23:05, BAK, 2016-07-12 22:02:04.311, foo, 2016-07-12 22:02:04.311, foo}
2016-07-12 22:02:04,312 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{14, 9, 1700, 2006/12/22 23:59:59, BAK, 2016-07-12 22:02:04.312, foo, 2016-07-12 22:02:04.312, foo}
2016-07-12 22:02:04,312 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{15, 11, 1799.2, 2014/11/09 16:23:01, CRC, 2016-07-12 22:02:04.312, foo, 2016-07-12 22:02:04.312, foo}
2016-07-12 22:02:04,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{16, 11, 0.8, 2014/11/09 16:23:01, HAN, 2016-07-12 22:02:04.313, foo, 2016-07-12 22:02:04.313, foo}
2016-07-12 22:02:04,314 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{17, 12, 1690, 2011/12/22 23:59:12, HAN, 2016-07-12 22:02:04.314, foo, 2016-07-12 22:02:04.314, foo}
2016-07-12 22:02:04,315 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{18, 12, 10, 2011/12/22 23:59:12, CRC, 2016-07-12 22:02:04.315, foo, 2016-07-12 22:02:04.315, foo}
2016-07-12 22:02:04,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{19, 13, 1800.7, 2007/11/01 02:13:00, CRC, 2016-07-12 22:02:04.317, foo, 2016-07-12 22:02:04.317, foo}
2016-07-12 22:02:04,318 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{20, 14, 1700, 2008/11/09 16:23:02, BAK, 2016-07-12 22:02:04.318, foo, 2016-07-12 22:02:04.318, foo}
2016-07-12 22:02:04,319 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{21, 15, 300, 2006/12/22 23:59:32, HAN, 2016-07-12 22:02:04.319, foo, 2016-07-12 22:02:04.319, foo}
2016-07-12 22:02:04,321 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{22, 15, 600, 2007/12/22 23:59:32, BAK, 2016-07-12 22:02:04.32, foo, 2016-07-12 22:02:04.32, foo}
2016-07-12 22:02:04,321 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{23, 15, 900, 2008/12/22 23:59:32, HAN, 2016-07-12 22:02:04.321, foo, 2016-07-12 22:02:04.321, foo}
2016-07-12 22:02:04,322 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{24, 16, 2000, 2012/11/01 02:13:00, BAK, 2016-07-12 22:02:04.322, foo, 2016-07-12 22:02:04.322, foo}
2016-07-12 22:02:04,323 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{25, 18, 1535, 2013/11/01 02:13:00, HAN, 2016-07-12 22:02:04.323, foo, 2016-07-12 22:02:04.323, foo}
2016-07-12 22:02:04,323 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{26, 19, 1700, 2007/11/01 02:13:00, HAN, 2016-07-12 22:02:04.323, foo, 2016-07-12 22:02:04.323, foo}
2016-07-12 22:02:04,324 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{27, 20, 5, 2006/12/22 23:59:35, HAN, 2016-07-12 22:02:04.324, foo, 2016-07-12 22:02:04.324, foo}
2016-07-12 22:02:04,325 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{28, 21, 399999, 2006/12/22 23:59:35, BAK, 2016-07-12 22:02:04.325, foo, 2016-07-12 22:02:04.325, foo}
2016-07-12 22:02:04,325 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{29, 22, 1800, 2007/11/01 02:13:00, BAK, 2016-07-12 22:02:04.325, foo, 2016-07-12 22:02:04.325, foo}
2016-07-12 22:02:04,328 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{30, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-12 22:02:04.326, foo, 2016-07-12 22:02:04.326, foo}
2016-07-12 22:02:04,330 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{31, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-12 22:02:04.329, foo, 2016-07-12 22:02:04.329, foo}
2016-07-12 22:02:04,331 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{32, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-12 22:02:04.331, foo, 2016-07-12 22:02:04.331, foo}
2016-07-12 22:02:04,332 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{33, 24, 1000, 2012/09/11 12:13:00, BAK, 2016-07-12 22:02:04.332, foo, 2016-07-12 22:02:04.332, foo}
2016-07-12 22:02:04,332 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{34, 24, 800, 2015/09/11 12:13:00, BAK, 2016-07-12 22:02:04.332, foo, 2016-07-12 22:02:04.332, foo}
2016-07-12 22:02:04,336 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{35, 25, 1700, 2013/12/22 23:59:37, BAK, 2016-07-12 22:02:04.336, foo, 2016-07-12 22:02:04.336, foo}
2016-07-12 22:02:04,337 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{36, 26, 1800, 2005/12/21 12:13:00, BAK, 2016-07-12 22:02:04.337, foo, 2016-07-12 22:02:04.337, foo}
2016-07-12 22:02:04,338 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{37, 27, 2000, 2006/12/22 23:59:38, HAN, 2016-07-12 22:02:04.338, foo, 2016-07-12 22:02:04.338, foo}
2016-07-12 22:02:04,338 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{38, 28, 600, 2007/11/01 02:13:00, BAK, 2016-07-12 22:02:04.338, foo, 2016-07-12 22:02:04.338, foo}
2016-07-12 22:02:04,346 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{39, 29, 1535, 2006/12/22 23:59:39, BAK, 2016-07-12 22:02:04.346, foo, 2016-07-12 22:02:04.346, foo}
2016-07-12 22:02:04,347 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{40, 30, 100, 2010/09/01 02:13:00, HAN, 2016-07-12 22:02:04.347, foo, 2016-07-12 22:02:04.347, foo}
2016-07-12 22:02:04,348 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{41, 30, 200, 2011/10/31 02:13:00, CRC, 2016-07-12 22:02:04.348, foo, 2016-07-12 22:02:04.348, foo}
2016-07-12 22:02:04,349 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{42, 30, 300.75, 2012/11/01 02:13:00, CRC, 2016-07-12 22:02:04.349, foo, 2016-07-12 22:02:04.349, foo}
2016-07-12 22:02:04,349 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{43, 30, 400.25, 2013/12/01 02:13:00, HAN, 2016-07-12 22:02:04.349, foo, 2016-07-12 22:02:04.349, foo}
2016-07-12 22:02:04,350 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{44, 30, 300, 2014/09/01 02:13:00, HAN, 2016-07-12 22:02:04.35, foo, 2016-07-12 22:02:04.35, foo}
2016-07-12 22:02:04,351 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{45, 30, 700, 2014/10/01 02:13:00, HAN, 2016-07-12 22:02:04.351, foo, 2016-07-12 22:02:04.351, foo}
2016-07-12 22:02:04,351 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{46, 31, 1700.85, 2006/12/22 23:59:40, HAN, 2016-07-12 22:02:04.351, foo, 2016-07-12 22:02:04.351, foo}
2016-07-12 22:02:04,352 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{47, 32, 1800, 2009/12/28 12:13:10, HAN, 2016-07-12 22:02:04.352, foo, 2016-07-12 22:02:04.352, foo}
2016-07-12 22:02:04,353 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{48, 33, 1700, 2006/12/22 23:59:41, CRC, 2016-07-12 22:02:04.353, foo, 2016-07-12 22:02:04.353, foo}
2016-07-12 22:02:04,353 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{49, 34, 1800, 2007/05/21 12:13:00, BAK, 2016-07-12 22:02:04.353, foo, 2016-07-12 22:02:04.353, foo}
2016-07-12 22:02:04,354 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{50, 35, 2000, 2006/12/12 23:59:42, CRC, 2016-07-12 22:02:04.354, foo, 2016-07-12 22:02:04.354, foo}
2016-07-12 22:02:04,355 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{51, 36, 300.1, 2012/05/01 02:13:00, CRC, 2016-07-12 22:02:04.355, foo, 2016-07-12 22:02:04.355, foo}
2016-07-12 22:02:04,356 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{52, 36, 300.8, 2013/05/01 02:13:00, HAN, 2016-07-12 22:02:04.356, foo, 2016-07-12 22:02:04.356, foo}
2016-07-12 22:02:04,357 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{53, 36, 300.25, 2014/05/01 02:13:00, HAN, 2016-07-12 22:02:04.357, foo, 2016-07-12 22:02:04.357, foo}
2016-07-12 22:02:04,359 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{54, 37, 1535, 2006/12/12 23:59:43, HAN, 2016-07-12 22:02:04.359, foo, 2016-07-12 22:02:04.359, foo}
2016-07-12 22:02:04,360 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{55, 38, 1700, 2007/05/01 02:03:00, HAN, 2016-07-12 22:02:04.36, foo, 2016-07-12 22:02:04.36, foo}
2016-07-12 22:02:04,362 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{56, 40, 128, 2007/05/01 12:13:00, BAK, 2016-07-12 22:02:04.361, foo, 2016-07-12 22:02:04.361, foo}
2016-07-12 22:02:04,363 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{57, 40, 256, 2013/05/01 12:13:00, BAK, 2016-07-12 22:02:04.363, foo, 2016-07-12 22:02:04.363, foo}
2016-07-12 22:02:04,364 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{58, 40, 512, 2009/05/01 12:13:00, CRC, 2016-07-12 22:02:04.364, foo, 2016-07-12 22:02:04.364, foo}
2016-07-12 22:02:04,365 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{59, 41, 1700, 2007/11/01 02:13:00, HAN, 2016-07-12 22:02:04.365, foo, 2016-07-12 22:02:04.365, foo}
2016-07-12 22:02:04,365 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{60, 42, 30000000, 2014/03/22 21:59:40, HAN, 2016-07-12 22:02:04.365, foo, 2016-07-12 22:02:04.365, foo}
2016-07-12 22:02:04,366 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{61, 43, 1800, 2006/12/28 12:13:10, BAK, 2016-07-12 22:02:04.366, foo, 2016-07-12 22:02:04.366, foo}
2016-07-12 22:02:04,367 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{62, 44, 1700, 2006/12/22 23:59:41, BAK, 2016-07-12 22:02:04.367, foo, 2016-07-12 22:02:04.367, foo}
2016-07-12 22:02:04,368 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{63, 45, 1800, 2007/05/21 12:13:00, CRC, 2016-07-12 22:02:04.368, foo, 2016-07-12 22:02:04.368, foo}
2016-07-12 22:02:04,368 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{64, 46, 2000, 2010/12/12 23:59:42, BAK, 2016-07-12 22:02:04.368, foo, 2016-07-12 22:02:04.368, foo}
2016-07-12 22:02:04,369 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{65, 48, 90000, 2006/12/12 23:59:43, HAN, 2016-07-12 22:02:04.369, foo, 2016-07-12 22:02:04.369, foo}
2016-07-12 22:02:04,370 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{66, 48, 10000, 2006/12/12 23:59:43, BAK, 2016-07-12 22:02:04.37, foo, 2016-07-12 22:02:04.37, foo}
2016-07-12 22:02:04,370 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{67, 49, 1700.66, 2007/05/01 02:03:00, HAN, 2016-07-12 22:02:04.37, foo, 2016-07-12 22:02:04.37, foo}
2016-07-12 22:02:04,379 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{68, 51, 1700, 2007/11/21 02:13:00, BAK, 2016-07-12 22:02:04.379, foo, 2016-07-12 22:02:04.379, foo}
2016-07-12 22:02:04,380 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{69, 52, 100, 2006/12/23 23:59:40, BAK, 2016-07-12 22:02:04.38, foo, 2016-07-12 22:02:04.38, foo}
2016-07-12 22:02:04,381 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{70, 52, 40, 2007/12/23 23:59:40, HAN, 2016-07-12 22:02:04.381, foo, 2016-07-12 22:02:04.381, foo}
2016-07-12 22:02:04,382 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{71, 52, 40, 2008/12/23 23:59:40, HAN, 2016-07-12 22:02:04.382, foo, 2016-07-12 22:02:04.382, foo}
2016-07-12 22:02:04,382 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{72, 52, 40, 2009/12/23 23:59:40, HAN, 2016-07-12 22:02:04.382, foo, 2016-07-12 22:02:04.382, foo}
2016-07-12 22:02:04,384 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{73, 52, 40, 2010/12/23 23:59:40, BAK, 2016-07-12 22:02:04.383, foo, 2016-07-12 22:02:04.383, foo}
2016-07-12 22:02:04,385 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{74, 52, 40, 2011/12/23 23:59:40, CRC, 2016-07-12 22:02:04.385, foo, 2016-07-12 22:02:04.385, foo}
2016-07-12 22:02:04,386 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{75, 52, 40, 2012/12/23 23:59:40, BAK, 2016-07-12 22:02:04.386, foo, 2016-07-12 22:02:04.386, foo}
2016-07-12 22:02:04,387 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{76, 52, 40, 2013/12/23 23:59:40, HAN, 2016-07-12 22:02:04.387, foo, 2016-07-12 22:02:04.387, foo}
2016-07-12 22:02:04,389 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{77, 52, 40, 2014/12/23 23:59:40, HAN, 2016-07-12 22:02:04.388, foo, 2016-07-12 22:02:04.388, foo}
2016-07-12 22:02:04,390 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{78, 52, 40, 2015/12/23 23:59:40, HAN, 2016-07-12 22:02:04.39, foo, 2016-07-12 22:02:04.39, foo}
2016-07-12 22:02:04,391 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{79, 53, 600000, 2007/12/28 12:13:10, BAK, 2016-07-12 22:02:04.391, foo, 2016-07-12 22:02:04.391, foo}
2016-07-12 22:02:04,392 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{80, 54, 1700.42, 2008/02/22 23:59:41, CRC, 2016-07-12 22:02:04.392, foo, 2016-07-12 22:02:04.392, foo}
2016-07-12 22:02:04,394 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{81, 55, 1600, 2012/07/21 12:13:00, HAN, 2016-07-12 22:02:04.394, foo, 2016-07-12 22:02:04.394, foo}
2016-07-12 22:02:04,395 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{82, 55, 200, 2008/07/21 12:13:00, CRC, 2016-07-12 22:02:04.395, foo, 2016-07-12 22:02:04.395, foo}
2016-07-12 22:02:04,395 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{83, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-12 22:02:04.395, foo, 2016-07-12 22:02:04.395, foo}
2016-07-12 22:02:04,396 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{84, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-12 22:02:04.396, foo, 2016-07-12 22:02:04.396, foo}
2016-07-12 22:02:04,397 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{85, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-12 22:02:04.397, foo, 2016-07-12 22:02:04.397, foo}
2016-07-12 22:02:04,398 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{86, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-12 22:02:04.398, foo, 2016-07-12 22:02:04.398, foo}
2016-07-12 22:02:04,399 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{87, 57, 999, 2014/02/01 02:13:00, HAN, 2016-07-12 22:02:04.399, foo, 2016-07-12 22:02:04.399, foo}
2016-07-12 22:02:04,399 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{88, 58, 4000000, 2006/12/12 23:59:43, HAN, 2016-07-12 22:02:04.399, foo, 2016-07-12 22:02:04.399, foo}
2016-07-12 22:02:04,400 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{89, 59, 380.77, 2013/05/01 02:03:00, CRC, 2016-07-12 22:02:04.4, foo, 2016-07-12 22:02:04.4, foo}
2016-07-12 22:02:04,401 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{90, 60, 675.88, 2006/12/12 23:59:44, BAK, 2016-07-12 22:02:04.401, foo, 2016-07-12 22:02:04.401, foo}
2016-07-12 22:02:04,401 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{91, 61, 12000000, 2008/03/03 06:34:56, HAN, 2016-07-12 22:02:04.401, foo, 2016-07-12 22:02:04.401, foo}
2016-07-12 22:02:04,402 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{92, 62, 20000, 2009/06/04 06:34:56, HAN, 2016-07-12 22:02:04.402, foo, 2016-07-12 22:02:04.402, foo}
2016-07-12 22:02:04,414 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{93, 63, 2000, 2010/09/26 06:34:56, HAN, 2016-07-12 22:02:04.414, foo, 2016-07-12 22:02:04.414, foo}
2016-07-12 22:02:04,415 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{94, 64, 50, 2011/03/03 09:45:29, BAK, 2016-07-12 22:02:04.415, foo, 2016-07-12 22:02:04.415, foo}
2016-07-12 22:02:04,416 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{95, 65, 1000000, 2012/06/04 09:45:29, BAK, 2016-07-12 22:02:04.416, foo, 2016-07-12 22:02:04.416, foo}
2016-07-12 22:02:04,416 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{96, 66, 900000, 2013/09/26 09:45:29, BAK, 2016-07-12 22:02:04.416, foo, 2016-07-12 22:02:04.416, foo}
2016-07-12 22:02:04,417 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{97, 67, 3000, 2014/03/03 21:02:12, CRC, 2016-07-12 22:02:04.417, foo, 2016-07-12 22:02:04.417, foo}
2016-07-12 22:02:04,418 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{98, 68, 3000, 2015/06/04 21:02:12, CRC, 2016-07-12 22:02:04.418, foo, 2016-07-12 22:02:04.418, foo}
2016-07-12 22:02:04,419 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{99, 69, 1000, 2016/09/26 21:02:12, CRC, 2016-07-12 22:02:04.419, foo, 2016-07-12 22:02:04.419, foo}
2016-07-12 22:02:04,420 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{100, 70, 1200, 2017/03/03 01:11:00, HAN, 2016-07-12 22:02:04.42, foo, 2016-07-12 22:02:04.42, foo}
2016-07-12 22:02:04,483 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 100 rows are loaded to PURCHASE_PAYMENT
2016-07-12 22:02:04,484 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():378) - ...Checking implicit set of classification
2016-07-12 22:02:04,520 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-12 22:02:04,533 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-12 22:02:04,545 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-12 22:02:04,548 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-12 22:02:04,555 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-12 22:02:04,559 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-12 22:02:04,564 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-12 22:02:04,589 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-07-12 22:02:04,591 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-07-12 22:02:04,593 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct MOBILE_LOGIN_FLG from MEMBER_LOGIN where MOBILE_LOGIN_FLG not in (1, 0)
2016-07-12 22:02:04,597 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_COMPLETE_FLG from PURCHASE where PAYMENT_COMPLETE_FLG not in (1, 0)
2016-07-12 22:02:04,599 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_METHOD_CODE from PURCHASE_PAYMENT where PAYMENT_METHOD_CODE not in ('HAN', 'BAK', 'CRC')
2016-07-12 22:02:04,604 [main] INFO  (DfTakeFinallyProcess#takeFinally():219) - 
2016-07-12 22:02:04,605 [main] INFO  (DfTakeFinallyProcess#takeFinally():220) - * * * * * * * **
2016-07-12 22:02:04,605 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - *              *
2016-07-12 22:02:04,605 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * Take Finally *
2016-07-12 22:02:04,606 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2016-07-12 22:02:04,606 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * * * * * * * **
2016-07-12 22:02:04,616 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: take-finally.sql
2016-07-12 22:02:04,617 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Member addresses should be only one at any time.
-- - - - - - - - - - -/
select adr.MEMBER_ADDRESS_ID, adr.MEMBER_ID
     , adr.VALID_BEGIN_DATE, adr.VALID_END_DATE
     , adr.ADDRESS
  from MEMBER_ADDRESS adr
 where exists (select subadr.MEMBER_ADDRESS_ID
                 from MEMBER_ADDRESS subadr
                where subadr.MEMBER_ID = adr.MEMBER_ID
                  and subadr.VALID_BEGIN_DATE > adr.VALID_BEGIN_DATE
                  -- 有効期間が一日だけ重複しているパターンも検出
                  and subadr.VALID_BEGIN_DATE <= adr.VALID_END_DATE
       )
2016-07-12 22:02:04,623 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 正式会員日時を持ってる仮会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'PRV'
   and mem.FORMALIZED_DATETIME is not NULL
2016-07-12 22:02:04,626 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- まだ生まれていない会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.BIRTHDATE > now()
2016-07-12 22:02:04,628 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 退会会員が退会情報を持っていることをアサート
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'WDL'
   and not exists (select wdl.MEMBER_ID
                     from MEMBER_WITHDRAWAL wdl
                    where wdl.MEMBER_ID = mem.MEMBER_ID
       )
2016-07-12 22:02:04,631 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=4 failure=0
2016-07-12 22:02:04,632 [main] INFO  (DfSqlFileFireMan#fire():89) - {Take Finally}: success=4 failure=0 (in 1 files)
2016-07-12 22:02:04,633 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-12 22:02:04,638 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m05s746ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=49 failure=0 (in 3 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql
  o replace-schema-50-procedure.sql

 {Load Data}: loaded-files=3
  (common)
  o 10-master.xls
  (ut)
  o 20-member.xls
  o 30-product.xls

 {Take Finally}: success=4 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2016-07-13 00:52:52,093 [main] INFO  (DfReplaceSchemaTask#begin():91) - +------------------------------------------+
2016-07-13 00:52:52,098 [main] INFO  (DfReplaceSchemaTask#begin():92) - |                                          |
2016-07-13 00:52:52,098 [main] INFO  (DfReplaceSchemaTask#begin():93) - |              ReplaceSchema               |
2016-07-13 00:52:52,103 [main] INFO  (DfReplaceSchemaTask#begin():101) - |                                          |
2016-07-13 00:52:52,103 [main] INFO  (DfReplaceSchemaTask#begin():102) - +------------------------------------------+
2016-07-13 00:52:52,106 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():342) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2016-07-13 00:52:52,850 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 00:52:52,851 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 00:52:52,851 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 00:52:52,852 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 00:52:52,864 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-13 00:52:53,502 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-13 00:52:53,503 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-13 00:52:53,535 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2016-07-13 00:52:53,536 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2016-07-13 00:52:53,536 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2016-07-13 00:52:53,539 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2016-07-13 00:52:53,539 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2016-07-13 00:52:53,540 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2016-07-13 00:52:53,567 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-13 00:52:53,568 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 00:52:53,569 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-13 00:52:53,614 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_address
2016-07-13 00:52:53,624 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_following
2016-07-13 00:52:53,631 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_login
2016-07-13 00:52:53,636 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_security
2016-07-13 00:52:53,642 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_service
2016-07-13 00:52:53,651 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_withdrawal
2016-07-13 00:52:53,705 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table purchase_payment
2016-07-13 00:52:53,776 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member drop foreign key FK_MEMBER_MEMBER_STATUS
2016-07-13 00:52:53,797 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_address drop foreign key FK_MEMBER_ADDRESS_MEMBER
2016-07-13 00:52:53,812 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_address drop foreign key FK_MEMBER_ADDRESS_REGION
2016-07-13 00:52:53,834 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_following drop foreign key FK_MEMBER_FOLLOWING_MY_MEMBER
2016-07-13 00:52:53,854 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_following drop foreign key FK_MEMBER_FOLLOWING_YOUR_MEMBER
2016-07-13 00:52:53,879 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_login drop foreign key FK_MEMBER_LOGIN_MEMBER_STATUS
2016-07-13 00:52:53,892 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_login drop foreign key FK_MEMBER_LOGIN_MEMBER
2016-07-13 00:52:53,916 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_security drop foreign key FK_MEMBER_SECURITY_MEMBER
2016-07-13 00:52:53,935 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_service drop foreign key FK_MEMBER_SERVICE_MEMBER
2016-07-13 00:52:53,953 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_service drop foreign key FK_MEMBER_SERVICE_SERVICE_RANK_CODE
2016-07-13 00:52:53,977 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_withdrawal drop foreign key FK_MEMBER_WITHDRAWAL_MEMBER
2016-07-13 00:52:53,992 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_withdrawal drop foreign key FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON
2016-07-13 00:52:54,016 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table product drop foreign key FK_PRODUCT_PRODUCT_CATEGORY
2016-07-13 00:52:54,032 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table product drop foreign key FK_PRODUCT_PRODUCT_STATUS
2016-07-13 00:52:54,055 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table product_category drop foreign key FK_PRODUCT_CATEGORY_PARENT
2016-07-13 00:52:54,075 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table purchase drop foreign key FK_PURCHASE_MEMBER
2016-07-13 00:52:54,091 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table purchase drop foreign key FK_PURCHASE_PRODUCT
2016-07-13 00:52:54,116 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table purchase_payment drop foreign key FK_PURCHASE_PAYMENT_PURCHASE
2016-07-13 00:52:54,136 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member
2016-07-13 00:52:54,140 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_address
2016-07-13 00:52:54,143 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_following
2016-07-13 00:52:54,150 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_login
2016-07-13 00:52:54,153 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_security
2016-07-13 00:52:54,156 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_service
2016-07-13 00:52:54,160 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_status
2016-07-13 00:52:54,165 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_withdrawal
2016-07-13 00:52:54,168 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table product
2016-07-13 00:52:54,172 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table product_category
2016-07-13 00:52:54,175 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table product_status
2016-07-13 00:52:54,179 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table purchase
2016-07-13 00:52:54,184 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table purchase_payment
2016-07-13 00:52:54,188 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table region
2016-07-13 00:52:54,191 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table service_rank
2016-07-13 00:52:54,195 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table withdrawal_reason
2016-07-13 00:52:54,320 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop procedure SP_IN_OUT_PARAMETER
2016-07-13 00:52:54,323 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop procedure SP_RETURN_RESULT_SET
2016-07-13 00:52:54,327 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2016-07-13 00:52:54,328 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2016-07-13 00:52:54,329 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2016-07-13 00:52:54,329 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2016-07-13 00:52:54,330 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2016-07-13 00:52:54,330 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2016-07-13 00:52:54,335 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-00-system.sql
2016-07-13 00:52:54,338 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2016-07-13 00:52:54,339 [main] INFO  (DfCreateSchemaProcess$1#dispatch():295) - ...Creating a connection to system
2016-07-13 00:52:54,340 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():520) - ...Creating a connection for additional user: root
2016-07-13 00:52:54,349 [main] INFO  (DfCreateSchemaProcess$1#dispatch():321) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2016-07-13 00:52:54,349 [main] INFO  (DfCreateSchemaProcess$1#dispatch():323) -  -> Can't create database 'maihamadb'; database exists
2016-07-13 00:52:54,351 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():433) - ...Reviving the user 'system' until the end of this SQL file
2016-07-13 00:52:54,351 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on maihamadb.*
  to maihamadb@localhost identified by 'maihamadb'
2016-07-13 00:52:54,354 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2016-07-13 00:52:54,358 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-07-13 00:52:54,358 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-10-basic.sql
2016-07-13 00:52:54,359 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():370) - ...Saying good-bye to the user 'system' again
2016-07-13 00:52:54,359 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():374) - ...Clearing revived users
2016-07-13 00:52:54,359 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():381) - ...Coming back to the main user from the user 'system'
2016-07-13 00:52:54,365 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER(
    MEMBER_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員ID: 会員を識別するID。連番として基本的に自動採番される。
（会員IDだけに限らず）採番方法はDBMSによって変わる。',
    MEMBER_NAME VARCHAR(160) NOT NULL COMMENT '会員名称: 会員のフルネームの名称。',
    MEMBER_ACCOUNT VARCHAR(50) NOT NULL COMMENT '会員アカウント: 会員がログイン時に利用するアカウントNO。',
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード',
    FORMALIZED_DATETIME DATETIME COMMENT '正式会員日時: 会員が正式に確定した日時。一度確定したら更新されない。
仮会員のときはnull。',
    BIRTHDATE DATE COMMENT '生年月日: 必須項目ではないので、このデータがない会員もいる。',
    REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時: レコードが登録された日時。共通カラムの一つ。',
    REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ: レコードを登録したユーザ。共通カラムの一つ。',
    UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時: レコードが（最後に）更新された日時。共通カラムの一つ。',
    UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ: レコードを更新したユーザ。',
    VERSION_NO BIGINT NOT NULL COMMENT 'バージョンNO: レコードのバージョンを示すNO。
更新回数と等しく、主に排他制御のために利用される。',
    PRIMARY KEY (MEMBER_ID),
    UNIQUE (MEMBER_ACCOUNT)
) COMMENT='会員: 会員登録時にデータが登録される。
基本的に物理削除はなく、退会したらステータスが退会会員になる。'
2016-07-13 00:52:54,390 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_ADDRESS(
    MEMBER_ADDRESS_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員住所ID: 会員住所を識別するID。
履歴分も含むテーブルなので、これ自体はFKではない。',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
履歴分を含むため、これだけではユニークにはならない。',
    VALID_BEGIN_DATE DATE NOT NULL COMMENT '有効開始日: 一つの有効期間の開始を示す日付。
前の有効終了日の次の日の値が格納される。',
    VALID_END_DATE DATE NOT NULL COMMENT '有効終了日: 有効期間の終了日。
次の有効開始日の一日前の値が格納される。
ただし、次の有効期間がない場合は 9999/12/31 となる。',
    ADDRESS VARCHAR(200) NOT NULL COMMENT '住所: まるごと住所',
    REGION_ID INTEGER NOT NULL COMMENT '地域ID: 地域を参照するID。
ここでは特に住所の内容と連動しているわけではない。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ADDRESS_ID),
    UNIQUE (MEMBER_ID, VALID_BEGIN_DATE)
) COMMENT='会員住所情報: 会員の住所に関する情報。
同時に有効期間ごとに履歴管理されている。'
2016-07-13 00:52:54,453 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_LOGIN(
    MEMBER_LOGIN_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員ログインID',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID',
    LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時: ログインした瞬間の日時。',
    MOBILE_LOGIN_FLG INTEGER NOT NULL COMMENT 'モバイルログインフラグ: モバイル機器からのログインか否か。',
    LOGIN_MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT 'ログイン会員ステータスコード: ログイン時の会員ステータス',
    PRIMARY KEY (MEMBER_LOGIN_ID),
    UNIQUE (MEMBER_ID, LOGIN_DATETIME)
) COMMENT='会員ログイン情報: ログインするたびに登録されるログイン履歴。'
2016-07-13 00:52:54,463 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SECURITY(
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: そのまま one-to-one を構成するためのFKとなる。',
    LOGIN_PASSWORD VARCHAR(50) NOT NULL COMMENT 'ログインパスワード: ログイン時に利用するパスワード。
本当は良くないが、Exampleなのでひとまず暗号化していない。',
    REMINDER_QUESTION VARCHAR(50) NOT NULL COMMENT 'リマインダ質問: パスワードを忘れた際のリマインダ機能における質問の内容。',
    REMINDER_ANSWER VARCHAR(50) NOT NULL COMMENT 'リマインダ回答: パスワードを忘れた際のリマインダ機能における質問の答え。',
    REMINDER_USE_COUNT INTEGER NOT NULL COMMENT 'リマインダ回数: 忘れっぽい人を分析するためのもの。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある'
2016-07-13 00:52:54,536 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SERVICE(
	MEMBER_SERVICE_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員サービスID: 代理キー。律儀にIDの役割を分ける',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。ユニークなので、会員とは one-to-one の関係に。',
    SERVICE_POINT_COUNT INTEGER NOT NULL COMMENT 'サービスポイント数: 会員が現在利用できるサービスポイントの数。
基本的に、購入時には増えてポイントを使ったら減る。',
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを参照するコード。
どんなランクがあるのかドキドキですね。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_SERVICE_ID),
    UNIQUE (MEMBER_ID)
) COMMENT='会員サービス: 会員のサービス情報（ポイントサービスなど）。'
2016-07-13 00:52:54,547 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_WITHDRAWAL(
    MEMBER_ID INTEGER NOT NULL,
    WITHDRAWAL_REASON_CODE CHAR(3) COMMENT '退会理由コード: 退会した定型理由を参照するコード。
何も言わずに退会する会員もいるので必須項目ではない。',
    WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト: 会員がフリーテキストで入力できる退会理由。
もう言いたいこと言ってもらう感じ。',
    WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT '退会日時: 退会した瞬間の日時。
正式会員日時と違い、こっちはone-to-oneの別テーブルで。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員退会情報: 退会会員の退会に関する詳細な情報。
退会会員のみデータが存在する。'
2016-07-13 00:52:54,559 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE(
    PURCHASE_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入ID: 連番',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
購入を識別する自然キー（複合ユニーク制約）の筆頭要素。',
    PRODUCT_ID INTEGER NOT NULL COMMENT '商品ID: 商品を参照するID。',
    PURCHASE_DATETIME DATETIME NOT NULL COMMENT '購入日時: 購入した瞬間の日時。',
    PURCHASE_COUNT INTEGER NOT NULL COMMENT '購入数量: 購入した商品の（一回の購入における）数量。',
    PURCHASE_PRICE INTEGER NOT NULL COMMENT '購入価格: 購入によって実際に会員が支払った（支払う予定の）価格。
基本は商品の定価に購入数量を掛けたものになるが、
ポイント利用や割引があったりと必ずしもそうはならない。',
    PAYMENT_COMPLETE_FLG INTEGER NOT NULL COMMENT '支払完了フラグ: この購入に関しての支払いが完了しているか否か。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PURCHASE_ID),
    UNIQUE (MEMBER_ID, PRODUCT_ID, PURCHASE_DATETIME),
    KEY (MEMBER_ID),
    KEY (PRODUCT_ID)
) COMMENT='購入: 一つの商品に対する一回の購入を表現する。
一回の購入で一つの商品を複数個買うこともある。'
2016-07-13 00:52:54,635 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE_PAYMENT(
    PURCHASE_PAYMENT_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入支払ID: 連番',
    PURCHASE_ID BIGINT NOT NULL COMMENT '購入ID: 支払い対象の購入へのID',
    PAYMENT_AMOUNT DECIMAL(10,2) NOT NULL COMMENT '支払金額: 支払った金額。さて、小数点なのはなぜでしょう？',
    PAYMENT_DATETIME DATETIME NOT NULL COMMENT '支払日時: 支払ったときの日時',
    PAYMENT_METHOD_CODE CHAR(3) NOT NULL COMMENT '支払方法コード: 手渡しや銀行振込など',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (PURCHASE_PAYMENT_ID)
) COMMENT='購入支払: 購入に対する支払。
分割払いもできるのでmanyとなり、会員からの孫テーブルのテストができてうれしい。'
2016-07-13 00:52:54,646 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT(
    PRODUCT_ID INTEGER AUTO_INCREMENT NOT NULL,
    PRODUCT_NAME VARCHAR(50) NOT NULL COMMENT '商品名称',
    PRODUCT_HANDLE_CODE VARCHAR(100) NOT NULL COMMENT '商品ハンドルコード: 商品を識別する業務上のコード。',
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL,
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL,
    REGULAR_PRICE INTEGER NOT NULL COMMENT '定価',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PRODUCT_ID),
    UNIQUE (PRODUCT_HANDLE_CODE)
) COMMENT='商品'
2016-07-13 00:52:54,656 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_CATEGORY(
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL COMMENT '商品カテゴリコード',
    PRODUCT_CATEGORY_NAME VARCHAR(50) NOT NULL COMMENT '商品カテゴリ名称',
    PARENT_CATEGORY_CODE CHAR(3) COMMENT '親カテゴリコード: 最上位の場合はデータなし。',
    PRIMARY KEY (PRODUCT_CATEGORY_CODE)
) COMMENT='商品カテゴリ: 商品のカテゴリを表現するマスタ。
自己参照の階層になっている。'
2016-07-13 00:52:54,669 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_STATUS(
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL COMMENT '商品ステータスコード',
    PRODUCT_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '商品ステータス名称',
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (PRODUCT_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='商品ステータス'
2016-07-13 00:52:54,680 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table REGION(
    REGION_ID INTEGER NOT NULL COMMENT '地域ID',
    REGION_NAME VARCHAR(50) NOT NULL COMMENT '地域名称',
    PRIMARY KEY (REGION_ID)
) COMMENT='地域: 主に会員の住所に対応する地域。
かなりざっくりした感じではある。'
2016-07-13 00:52:54,691 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table SERVICE_RANK(
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを識別するコード。',
    SERVICE_RANK_NAME VARCHAR(50) NOT NULL COMMENT 'サービスランク名称: サービスランクの名称。
（ゴールドとかプラチナとか基本的には威厳のある名前）',
    SERVICE_POINT_INCIDENCE NUMERIC(5, 3) NOT NULL COMMENT 'サービスポイント発生率: 購入ごとのサービスポイントの発生率。
購入価格にこの値をかけた数が発生ポイント。',
    NEW_ACCEPTABLE_FLG INTEGER NOT NULL COMMENT '新規受け入れ可能フラグ: このランクへの新規受け入れができるかどうか。',
    DESCRIPTION VARCHAR(200) NOT NULL,
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (SERVICE_RANK_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='サービスランク: 会員のサービスレベルを表現するランク。
（ゴールドとかプラチナとか）'
2016-07-13 00:52:54,717 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_STATUS(
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード: 会員ステータスを識別するコード。',
    MEMBER_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '会員ステータス名称',
    DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明: 会員ステータスそれぞれの説明。
気の利いた説明があるとディベロッパーがとても助かる。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順: UI上のステータスの表示順を示すNO。
並べるときは、このカラムに対して昇順のソート条件にする。',
    PRIMARY KEY (MEMBER_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='会員ステータス'
2016-07-13 00:52:54,728 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table WITHDRAWAL_REASON(
    WITHDRAWAL_REASON_CODE CHAR(3) NOT NULL COMMENT '退会理由コード',
    WITHDRAWAL_REASON_TEXT TEXT NOT NULL COMMENT '退会理由テキスト: 退会理由の内容。テキスト形式なので目いっぱい書けるが、
そうするとUI側できれいに見せるのが大変でしょうね。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順',
    PRIMARY KEY (WITHDRAWAL_REASON_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='退会理由: 会員に選ばせる定型的な退会理由のマスタ。'
2016-07-13 00:52:54,738 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_FOLLOWING(
    MEMBER_FOLLOWING_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員フォローイングID: 連番',
    MY_MEMBER_ID INTEGER NOT NULL COMMENT 'わたし: 気になった人がいて...勇気を振り絞った会員のID。',
    YOUR_MEMBER_ID INTEGER NOT NULL COMMENT 'あなた: いきなりのアクションに...ちょっと心揺らいだ会員のID。',
    FOLLOW_DATETIME DATETIME NOT NULL COMMENT 'その瞬間: ふりかえるとちょっと恥ずかしい気持ちになる日時',
    PRIMARY KEY (MEMBER_FOLLOWING_ID),
    UNIQUE (MY_MEMBER_ID, YOUR_MEMBER_ID)
) COMMENT='会員フォローイング: とある会員が他の会員をフォローできる。すると、フォローした会員の購入履歴が閲覧できる。'
2016-07-13 00:52:54,782 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER add constraint FK_MEMBER_MEMBER_STATUS 
    foreign key (MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-07-13 00:52:54,797 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-13 00:52:54,822 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_REGION 
    foreign key (REGION_ID) references REGION (REGION_ID)
2016-07-13 00:52:54,845 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER_STATUS 
    foreign key (LOGIN_MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-07-13 00:52:54,873 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-13 00:52:54,893 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-13 00:52:54,914 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_SERVICE_RANK_CODE 
    foreign key (SERVICE_RANK_CODE) references SERVICE_RANK (SERVICE_RANK_CODE)
2016-07-13 00:52:54,933 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SECURITY add constraint FK_MEMBER_SECURITY_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-13 00:52:54,952 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-13 00:52:55,175 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON 
    foreign key (WITHDRAWAL_REASON_CODE) references WITHDRAWAL_REASON (WITHDRAWAL_REASON_CODE)
2016-07-13 00:52:55,193 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-13 00:52:55,215 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_PRODUCT 
    foreign key (PRODUCT_ID) references PRODUCT (PRODUCT_ID)
2016-07-13 00:52:55,240 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE_PAYMENT add constraint FK_PURCHASE_PAYMENT_PURCHASE 
    foreign key (PURCHASE_ID) references PURCHASE (PURCHASE_ID)
2016-07-13 00:52:55,263 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_CATEGORY 
    foreign key (PRODUCT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-07-13 00:52:55,285 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_STATUS 
    foreign key (PRODUCT_STATUS_CODE) references PRODUCT_STATUS (PRODUCT_STATUS_CODE)
2016-07-13 00:52:55,308 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT_CATEGORY add constraint FK_PRODUCT_CATEGORY_PARENT 
    foreign key (PARENT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-07-13 00:52:55,335 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_MY_MEMBER 
    foreign key (MY_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-13 00:52:55,355 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_YOUR_MEMBER 
    foreign key (YOUR_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-13 00:52:55,374 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_UNIQUE_REVERSE on MEMBER_FOLLOWING(YOUR_MEMBER_ID, MY_MEMBER_ID)
2016-07-13 00:52:55,389 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_FOLLOW_DATETIME on MEMBER_FOLLOWING(FOLLOW_DATETIME)
2016-07-13 00:52:55,411 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_MEMBER_NAME on MEMBER(MEMBER_NAME)
2016-07-13 00:52:55,429 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FORMALIZED_DATETIME on MEMBER(FORMALIZED_DATETIME)
2016-07-13 00:52:55,449 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_LOGIN_DATETIME on MEMBER_LOGIN(LOGIN_DATETIME)
2016-07-13 00:52:55,468 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_SERVICE_POINT_COUNT on MEMBER_SERVICE(SERVICE_POINT_COUNT)
2016-07-13 00:52:55,488 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRODUCT_DATETIME on PURCHASE(PRODUCT_ID, PURCHASE_DATETIME)
2016-07-13 00:52:55,511 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_DATETIME_MEMBER on PURCHASE(PURCHASE_DATETIME, MEMBER_ID)
2016-07-13 00:52:55,529 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRICE on PURCHASE(PURCHASE_PRICE)
2016-07-13 00:52:55,549 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PAYMENT_DATETIME on PURCHASE_PAYMENT(PAYMENT_DATETIME, PAYMENT_AMOUNT)
2016-07-13 00:52:55,571 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PRODUCT_PRODUCT_NAME on PRODUCT(PRODUCT_NAME)
2016-07-13 00:52:55,588 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=45 failure=0
2016-07-13 00:52:55,589 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-50-procedure.sql
2016-07-13 00:52:55,590 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_IN_OUT_PARAMETER(
	in v_in_varchar varchar(32)
	, out v_out_varchar varchar(32)
	, inout v_inout_varchar varchar(32)
)
begin
	set v_out_varchar = v_inout_varchar;
	set v_inout_varchar = v_in_varchar;
end;

2016-07-13 00:52:55,591 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_RETURN_RESULT_SET(in birthdateFrom DATE)
begin
  select MEMBER_NAME, BIRTHDATE, MEMBER_STATUS_CODE
    from MEMBER
   where BIRTHDATE >= birthdateFrom
   order by BIRTHDATE desc, MEMBER_ID asc;
  select MEMBER_STATUS_CODE, MEMBER_STATUS_NAME
    from MEMBER_STATUS
   order by DISPLAY_ORDER;
end;

2016-07-13 00:52:55,593 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-07-13 00:52:55,594 [main] INFO  (DfSqlFileFireMan#fire():89) - {Create Schema}: success=49 failure=0 (in 3 files)
2016-07-13 00:52:55,595 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():564) - ...Closing connections to change-users: [system]
2016-07-13 00:52:55,706 [main] INFO  (DfLoadDataProcess#execute():129) - 
2016-07-13 00:52:55,707 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2016-07-13 00:52:55,707 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2016-07-13 00:52:55,707 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2016-07-13 00:52:55,707 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2016-07-13 00:52:55,708 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2016-07-13 00:52:55,736 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-13 00:52:55,737 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/common/xls/10-master.xls)
2016-07-13 00:52:55,737 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-13 00:52:56,057 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-13 00:52:56,057 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 00:52:56,058 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-13 00:52:56,096 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{PRV, 仮会員, 入会直後のステータスで一部のサイトサービスが利用可能, 3}
2016-07-13 00:52:56,148 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{FML, 正式会員, 正式な会員としてサイトサービスが利用可能, 1}
2016-07-13 00:52:56,150 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{WDL, 退会会員, 退会が確定した会員でサイトサービスはダメ, 2}
2016-07-13 00:52:56,151 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():212) - ...Skipping the terminal garbage row
2016-07-13 00:52:56,157 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to MEMBER_STATUS
2016-07-13 00:52:56,159 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{1, アメリカ}
2016-07-13 00:52:56,160 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{2, カナダ}
2016-07-13 00:52:56,160 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{3, 中国}
2016-07-13 00:52:56,161 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{4, 千葉}
2016-07-13 00:52:56,167 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to REGION
2016-07-13 00:52:56,168 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLT, PLATINUM, 12.3, 1, platinum rank, 1}
2016-07-13 00:52:56,170 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{GLD, GOLD, 9.2, 1, gold rank, 2}
2016-07-13 00:52:56,170 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{SIL, SILVER, 6.74, 1, silver rank, 3}
2016-07-13 00:52:56,171 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{BRZ, BRONZE, 2, 1, bronze rank, 4}
2016-07-13 00:52:56,171 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLS, PLASTIC, 0.1, 0, plastic rank, 5}
2016-07-13 00:52:56,178 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to SERVICE_RANK
2016-07-13 00:52:56,179 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{SIT, サイトが使いにくいから, 1}
2016-07-13 00:52:56,181 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{OTH, その他理由, 4}
2016-07-13 00:52:56,181 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{FRT, フリテンだから, 3}
2016-07-13 00:52:56,182 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{PRD, 商品に魅力がないから, 2}
2016-07-13 00:52:56,188 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to WITHDRAWAL_REASON
2016-07-13 00:52:56,189 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MSC, 音楽, null}
2016-07-13 00:52:56,190 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{FOD, 食品, null}
2016-07-13 00:52:56,190 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MCD, 音楽CD, MSC}
2016-07-13 00:52:56,191 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{INS, 楽器, MSC}
2016-07-13 00:52:56,191 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{HEB, ハーブ, FOD}
2016-07-13 00:52:56,196 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to PRODUCT_CATEGORY
2016-07-13 00:52:56,197 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{ONS, 生産販売可能, 1}
2016-07-13 00:52:56,198 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{PST, 生産中止, 2}
2016-07-13 00:52:56,199 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{SST, 販売中止, 3}
2016-07-13 00:52:56,203 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to PRODUCT_STATUS
2016-07-13 00:52:56,205 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-13 00:52:56,205 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/20-member.xls)
2016-07-13 00:52:56,205 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-13 00:52:56,304 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{1, Stojkovic, Pixy, FML, 2007/12/01 11:01:10, 1965/03/03, 2016-07-13 00:52:56.303, foo, 2016-07-13 00:52:56.303, foo, 0}
2016-07-13 00:52:56,311 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{2, Savicevic, Genius, PRV, null, 1966/09/15, 2016-07-13 00:52:56.311, foo, 2016-07-13 00:52:56.311, foo, 0}
2016-07-13 00:52:56,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{3, Mijatovic, Mijato, WDL, 2005/10/03 13:03:30, null, 2016-07-13 00:52:56.313, foo, 2016-07-13 00:52:56.313, foo, 0}
2016-07-13 00:52:56,315 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{4, Stankovic, Stanko, FML, 2006/09/04 14:04:40, 1978/09/11, 2016-07-13 00:52:56.314, foo, 2016-07-13 00:52:56.315, foo, 0}
2016-07-13 00:52:56,325 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{5, Milosevic, Milose, FML, 2007/08/05 15:05:50, null, 2016-07-13 00:52:56.323, foo, 2016-07-13 00:52:56.323, foo, 0}
2016-07-13 00:52:56,331 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{6, Mihajlovic, FreeKick, WDL, 2006/07/06 16:06:40, 1969/02/20, 2016-07-13 00:52:56.331, foo, 2016-07-13 00:52:56.331, foo, 0}
2016-07-13 00:52:56,335 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{7, アカギ, Akagi, FML, 2005/06/07 17:07:30, null, 2016-07-13 00:52:56.335, foo, 2016-07-13 00:52:56.335, foo, 0}
2016-07-13 00:52:56,337 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{8, Kezman, RedCard, FML, 2006/05/08 18:08:20, null, 2016-07-13 00:52:56.337, foo, 2016-07-13 00:52:56.337, foo, 0}
2016-07-13 00:52:56,339 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{9, Maslovar, JEFUnited, FML, 2007/12/31 00:00:00, 1967/02/20, 2016-07-13 00:52:56.339, foo, 2016-07-13 00:52:56.339, foo, 0}
2016-07-13 00:52:56,345 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{10, 諸葛亮孔明, ShokatsuGoGo, PRV, null, null, 2016-07-13 00:52:56.345, foo, 2016-07-13 00:52:56.345, foo, 0}
2016-07-13 00:52:56,347 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{11, Boban, Boban, FML, 2007/12/01 11:01:10, 1968/10/08, 2016-07-13 00:52:56.347, foo, 2016-07-13 00:52:56.347, foo, 0}
2016-07-13 00:52:56,349 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{12, Suker, Suker, PRV, null, 1968/01/01, 2016-07-13 00:52:56.349, foo, 2016-07-13 00:52:56.349, foo, 0}
2016-07-13 00:52:56,357 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{13, Jarni, Jarni, WDL, 2005/10/03 13:03:30, 1968/10/26, 2016-07-13 00:52:56.356, foo, 2016-07-13 00:52:56.356, foo, 0}
2016-07-13 00:52:56,360 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{14, Boksic, Boksic, FML, 2006/09/04 14:04:40, 1970/01/21, 2016-07-13 00:52:56.359, foo, 2016-07-13 00:52:56.359, foo, 0}
2016-07-13 00:52:56,365 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{15, Prosinecki, Prosinecki, FML, 2004/08/05 15:05:50, 1969/01/12, 2016-07-13 00:52:56.365, foo, 2016-07-13 00:52:56.365, foo, 0}
2016-07-13 00:52:56,368 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{16, RobeltKovac, RobeltKovac, WDL, 2006/07/06 16:06:40, null, 2016-07-13 00:52:56.368, foo, 2016-07-13 00:52:56.368, foo, 0}
2016-07-13 00:52:56,369 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{17, NikoKovac, NikoKovac, FML, 2005/06/07 17:07:30, null, 2016-07-13 00:52:56.369, foo, 2016-07-13 00:52:56.369, foo, 0}
2016-07-13 00:52:56,370 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{18, Jovanovic, Jovano, FML, 2006/05/08 18:08:20, 1981/04/18, 2016-07-13 00:52:56.37, foo, 2016-07-13 00:52:56.37, foo, 0}
2016-07-13 00:52:56,372 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{19, Milko, Milko, FML, 2005/12/31 12:34:56, 1974/09/10, 2016-07-13 00:52:56.372, foo, 2016-07-13 00:52:56.372, foo, 0}
2016-07-13 00:52:56,374 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{20, 諸葛瑾子瑜, ShokatsuKinKin, FML, 2001/12/31 23:59:59, null, 2016-07-13 00:52:56.374, foo, 2016-07-13 00:52:56.374, foo, 0}
2016-07-13 00:52:56,393 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER
2016-07-13 00:52:56,394 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{1, 1, 2007/03/24, 2015/12/31, Nagara, 4, 2016-07-13 00:52:56.394, foo, 2016-07-13 00:52:56.394, foo, 0}
2016-07-13 00:52:56,396 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{2, 1, 1949/01/01, 1997/03/31, New York, 1, 2016-07-13 00:52:56.396, foo, 2016-07-13 00:52:56.396, foo, 0}
2016-07-13 00:52:56,398 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{3, 1, 1997/04/01, 2000/09/30, Los Angels, 1, 2016-07-13 00:52:56.398, foo, 2016-07-13 00:52:56.398, foo, 0}
2016-07-13 00:52:56,400 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{4, 1, 2000/10/01, 2003/08/31, New York, 1, 2016-07-13 00:52:56.4, foo, 2016-07-13 00:52:56.4, foo, 0}
2016-07-13 00:52:56,402 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{5, 1, 2003/09/01, 2004/12/22, San Francisco Powell, 1, 2016-07-13 00:52:56.401, foo, 2016-07-13 00:52:56.401, foo, 0}
2016-07-13 00:52:56,405 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{6, 1, 2004/12/23, 2006/03/23, San Francisco Daly City, 1, 2016-07-13 00:52:56.405, foo, 2016-07-13 00:52:56.405, foo, 0}
2016-07-13 00:52:56,407 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{7, 1, 2016/01/01, 9999/12/31, Victoria, 2, 2016-07-13 00:52:56.406, foo, 2016-07-13 00:52:56.406, foo, 0}
2016-07-13 00:52:56,408 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{8, 2, 2004/12/24, 9999/12/31, Ichihara, 4, 2016-07-13 00:52:56.408, foo, 2016-07-13 00:52:56.408, foo, 0}
2016-07-13 00:52:56,411 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{9, 3, 2004/12/24, 2007/03/23, Mobara, 4, 2016-07-13 00:52:56.411, foo, 2016-07-13 00:52:56.411, foo, 0}
2016-07-13 00:52:56,414 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{10, 4, 2002/11/01, 9999/12/31, Sousa, 4, 2016-07-13 00:52:56.414, foo, 2016-07-13 00:52:56.414, foo, 0}
2016-07-13 00:52:56,417 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{11, 6, 2002/11/01, 9999/12/31, Yokoshiba, 4, 2016-07-13 00:52:56.417, foo, 2016-07-13 00:52:56.417, foo, 0}
2016-07-13 00:52:56,422 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{12, 9, 2010/11/01, 9999/12/31, Tateyama, 4, 2016-07-13 00:52:56.422, foo, 2016-07-13 00:52:56.422, foo, 0}
2016-07-13 00:52:56,424 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{13, 10, 1970/01/01, 9999/12/31, Shoku, 3, 2016-07-13 00:52:56.424, foo, 2016-07-13 00:52:56.424, foo, 0}
2016-07-13 00:52:56,426 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{14, 12, 2000/11/01, 2001/11/01, Oohara, 4, 2016-07-13 00:52:56.426, foo, 2016-07-13 00:52:56.426, foo, 0}
2016-07-13 00:52:56,428 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{15, 15, 2002/11/01, 2006/10/30, MinamiBousou, 4, 2016-07-13 00:52:56.428, foo, 2016-07-13 00:52:56.428, foo, 0}
2016-07-13 00:52:56,429 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{16, 15, 2007/11/01, 9999/12/31, Tomisato, 4, 2016-07-13 00:52:56.429, foo, 2016-07-13 00:52:56.429, foo, 0}
2016-07-13 00:52:56,432 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{17, 18, 2001/03/21, 2007/11/21, Katsuura, 4, 2016-07-13 00:52:56.432, foo, 2016-07-13 00:52:56.432, foo, 0}
2016-07-13 00:52:56,434 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{18, 18, 2007/11/22, 9999/12/31, Kamogawa, 4, 2016-07-13 00:52:56.434, foo, 2016-07-13 00:52:56.434, foo, 0}
2016-07-13 00:52:56,436 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{19, 19, 2000/11/01, 9999/12/31, Yotsukaido, 4, 2016-07-13 00:52:56.436, foo, 2016-07-13 00:52:56.436, foo, 0}
2016-07-13 00:52:56,438 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{20, 20, 1970/01/01, 9999/12/31, Go, 3, 2016-07-13 00:52:56.438, foo, 2016-07-13 00:52:56.438, foo, 0}
2016-07-13 00:52:56,464 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_ADDRESS
2016-07-13 00:52:56,465 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{1, 3, 2006/12/24 23:59:59, 0, FML}
2016-07-13 00:52:56,467 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{2, 6, 2007/11/11 16:16:16, 0, FML}
2016-07-13 00:52:56,469 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{3, 1, 2006/12/23 22:56:29, 0, FML}
2016-07-13 00:52:56,470 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{4, 6, 2007/11/01 02:13:00, 0, FML}
2016-07-13 00:52:56,471 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{5, 7, 2006/05/24 23:12:59, 0, FML}
2016-07-13 00:52:56,472 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{6, 6, 2005/11/11 16:32:01, 0, PRV}
2016-07-13 00:52:56,473 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{7, 6, 2006/01/28 23:59:59, 1, FML}
2016-07-13 00:52:56,474 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{8, 6, 2007/11/09 16:23:00, 0, FML}
2016-07-13 00:52:56,475 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{9, 8, 2006/12/22 23:59:59, 0, FML}
2016-07-13 00:52:56,476 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{10, 6, 2007/11/11 09:01:00, 0, FML}
2016-07-13 00:52:56,478 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{11, 1, 2006/12/23 23:59:59, 0, FML}
2016-07-13 00:52:56,479 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{12, 9, 2007/11/15 12:43:00, 0, FML}
2016-07-13 00:52:56,481 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{13, 10, 2006/12/24 23:59:59, 0, FML}
2016-07-13 00:52:56,483 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{14, 6, 2007/04/01 16:23:01, 0, FML}
2016-07-13 00:52:56,484 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{15, 7, 2006/12/24 23:59:20, 1, FML}
2016-07-13 00:52:56,485 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{16, 6, 2007/05/01 12:23:02, 0, FML}
2016-07-13 00:52:56,486 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{17, 7, 2006/12/24 23:59:21, 0, FML}
2016-07-13 00:52:56,488 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{18, 6, 2007/06/11 17:23:03, 0, FML}
2016-07-13 00:52:56,489 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{19, 4, 2006/12/24 23:59:22, 0, FML}
2016-07-13 00:52:56,490 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{20, 3, 2007/11/01 16:12:04, 0, FML}
2016-07-13 00:52:56,491 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{21, 11, 2006/12/24 23:59:23, 0, FML}
2016-07-13 00:52:56,492 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{22, 1, 2007/11/01 16:23:05, 0, PRV}
2016-07-13 00:52:56,493 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{23, 9, 2006/12/24 23:59:24, 1, FML}
2016-07-13 00:52:56,494 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{24, 8, 2007/11/01 16:23:06, 0, FML}
2016-07-13 00:52:56,495 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{25, 7, 2007/12/24 11:59:25, 1, FML}
2016-07-13 00:52:56,496 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{26, 6, 2007/06/21 01:23:57, 0, FML}
2016-07-13 00:52:56,498 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{27, 5, 2006/12/24 23:59:26, 0, FML}
2016-07-13 00:52:56,499 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{28, 3, 2007/11/01 16:23:08, 0, FML}
2016-07-13 00:52:56,500 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{29, 3, 2006/12/24 23:59:27, 0, FML}
2016-07-13 00:52:56,502 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{30, 10, 2007/11/01 16:23:09, 0, FML}
2016-07-13 00:52:56,502 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{31, 15, 2006/07/24 23:59:28, 0, FML}
2016-07-13 00:52:56,503 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{32, 14, 2007/11/01 17:23:10, 0, FML}
2016-07-13 00:52:56,504 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{33, 15, 2007/11/01 16:23:10, 0, FML}
2016-07-13 00:52:56,505 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{34, 18, 2006/07/24 23:59:29, 0, FML}
2016-07-13 00:52:56,506 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{35, 3, 2007/11/01 17:23:11, 0, PRV}
2016-07-13 00:52:56,507 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{36, 5, 2007/11/01 16:23:11, 1, FML}
2016-07-13 00:52:56,508 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{37, 11, 2006/07/24 23:59:30, 0, FML}
2016-07-13 00:52:56,509 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{38, 20, 2007/11/01 17:23:12, 1, FML}
2016-07-13 00:52:56,510 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{39, 19, 2007/11/01 16:23:12, 0, FML}
2016-07-13 00:52:56,511 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{40, 4, 2006/07/24 23:59:31, 0, FML}
2016-07-13 00:52:56,512 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{41, 4, 2007/11/01 17:23:13, 0, FML}
2016-07-13 00:52:56,513 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{42, 4, 2007/11/01 16:23:13, 0, FML}
2016-07-13 00:52:56,515 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{43, 4, 2006/07/24 23:52:32, 0, FML}
2016-07-13 00:52:56,517 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{44, 4, 2007/11/01 11:23:14, 0, FML}
2016-07-13 00:52:56,518 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{45, 4, 2007/11/21 06:23:14, 0, FML}
2016-07-13 00:52:56,519 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{46, 12, 2006/07/24 23:52:33, 0, PRV}
2016-07-13 00:52:56,520 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{47, 13, 2007/11/01 11:23:15, 1, FML}
2016-07-13 00:52:56,521 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{48, 14, 2007/11/21 06:23:15, 0, FML}
2016-07-13 00:52:56,522 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{49, 17, 2006/07/24 23:52:34, 1, FML}
2016-07-13 00:52:56,523 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{50, 18, 2007/11/01 11:23:16, 0, FML}
2016-07-13 00:52:56,524 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{51, 16, 2007/11/21 06:23:16, 0, FML}
2016-07-13 00:52:56,525 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{52, 4, 2006/07/24 23:52:35, 0, FML}
2016-07-13 00:52:56,526 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{53, 5, 2007/11/01 11:23:17, 0, FML}
2016-07-13 00:52:56,527 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{54, 5, 2007/11/21 06:23:17, 0, FML}
2016-07-13 00:52:56,528 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{55, 11, 2006/07/24 23:52:36, 0, FML}
2016-07-13 00:52:56,530 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{56, 12, 2007/11/01 11:23:18, 0, FML}
2016-07-13 00:52:56,580 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 56 rows are loaded to MEMBER_LOGIN
2016-07-13 00:52:56,582 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{1, aaa, 30符3飜は？, 自分で数えろ, 1, 2016-07-13 00:52:56.581, foo, 2016-07-13 00:52:56.581, foo, 0}
2016-07-13 00:52:56,584 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{2, bbb, 50符2飜は？, 自分で数えろ, 2, 2016-07-13 00:52:56.584, foo, 2016-07-13 00:52:56.584, foo, 0}
2016-07-13 00:52:56,585 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{3, ccc, 110符2飜は？, 自分で数えろ, 3, 2016-07-13 00:52:56.585, foo, 2016-07-13 00:52:56.585, foo, 0}
2016-07-13 00:52:56,586 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{4, ddd, タンヤオ？, そう, 4, 2016-07-13 00:52:56.586, foo, 2016-07-13 00:52:56.586, foo, 0}
2016-07-13 00:52:56,587 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{5, eee2, ピンフ？, そう, 5, 2016-07-13 00:52:56.587, foo, 2016-07-13 00:52:56.587, foo, 0}
2016-07-13 00:52:56,588 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{6, fff, サンアンコウ？, そう, 6, 2016-07-13 00:52:56.588, foo, 2016-07-13 00:52:56.588, foo, 0}
2016-07-13 00:52:56,589 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{7, ggg3, イーペーコウ？, そう, 7, 2016-07-13 00:52:56.589, foo, 2016-07-13 00:52:56.589, foo, 0}
2016-07-13 00:52:56,589 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{8, hhh555, リャンペーコウ？, そう, 8, 2016-07-13 00:52:56.589, foo, 2016-07-13 00:52:56.589, foo, 0}
2016-07-13 00:52:56,590 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{9, iii, サンペーコウはないよね？, 当たり前だ, 9, 2016-07-13 00:52:56.59, foo, 2016-07-13 00:52:56.59, foo, 0}
2016-07-13 00:52:56,591 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{10, jjj, 私はイカサマしません, 実はする, 10, 2016-07-13 00:52:56.591, foo, 2016-07-13 00:52:56.591, foo, 0}
2016-07-13 00:52:56,592 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{11, qwe, 70符3飜は？, 自分で数えろ, 11, 2016-07-13 00:52:56.592, foo, 2016-07-13 00:52:56.592, foo, 0}
2016-07-13 00:52:56,603 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{12, sdf, 20符4飜は？, 自分で数えろ, 12, 2016-07-13 00:52:56.603, foo, 2016-07-13 00:52:56.603, foo, 0}
2016-07-13 00:52:56,604 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{13, dfgsf, 大三元は？, 役満だよ, 13, 2016-07-13 00:52:56.604, foo, 2016-07-13 00:52:56.604, foo, 0}
2016-07-13 00:52:56,605 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{14, ert, タンヤオ？, そう, 14, 2016-07-13 00:52:56.605, foo, 2016-07-13 00:52:56.605, foo, 0}
2016-07-13 00:52:56,606 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{15, fhgf, ピンフ？, そう, 15, 2016-07-13 00:52:56.606, foo, 2016-07-13 00:52:56.606, foo, 0}
2016-07-13 00:52:56,607 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{16, ghj, サンアンコウ？, そう, 16, 2016-07-13 00:52:56.607, foo, 2016-07-13 00:52:56.607, foo, 0}
2016-07-13 00:52:56,609 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{17, tyuffff, サンレンコウ？, そう, 17, 2016-07-13 00:52:56.608, foo, 2016-07-13 00:52:56.608, foo, 0}
2016-07-13 00:52:56,610 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{18, jkl, イーペーコウ？, そう, 18, 2016-07-13 00:52:56.609, foo, 2016-07-13 00:52:56.609, foo, 0}
2016-07-13 00:52:56,611 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{19, ghjfff, 左ハイは？, 痛い, 19, 2016-07-13 00:52:56.611, foo, 2016-07-13 00:52:56.611, foo, 0}
2016-07-13 00:52:56,613 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{20, cvb, 孫権は？, 呉, 20, 2016-07-13 00:52:56.612, foo, 2016-07-13 00:52:56.612, foo, 0}
2016-07-13 00:52:56,641 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SECURITY
2016-07-13 00:52:56,642 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{1, 1, 1234, PLT, 2016-07-13 00:52:56.642, foo, 2016-07-13 00:52:56.642, foo, 0}
2016-07-13 00:52:56,644 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{2, 2, 2345, GLD, 2016-07-13 00:52:56.644, foo, 2016-07-13 00:52:56.644, foo, 0}
2016-07-13 00:52:56,646 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{3, 3, 3456, GLD, 2016-07-13 00:52:56.646, foo, 2016-07-13 00:52:56.646, foo, 0}
2016-07-13 00:52:56,647 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{4, 4, 875, BRZ, 2016-07-13 00:52:56.647, foo, 2016-07-13 00:52:56.647, foo, 0}
2016-07-13 00:52:56,647 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{5, 5, 1111, BRZ, 2016-07-13 00:52:56.647, foo, 2016-07-13 00:52:56.647, foo, 0}
2016-07-13 00:52:56,648 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{6, 6, 5422, SIL, 2016-07-13 00:52:56.648, foo, 2016-07-13 00:52:56.648, foo, 0}
2016-07-13 00:52:56,649 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{7, 7, 24678, SIL, 2016-07-13 00:52:56.649, foo, 2016-07-13 00:52:56.649, foo, 0}
2016-07-13 00:52:56,650 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{8, 8, 234, SIL, 2016-07-13 00:52:56.65, foo, 2016-07-13 00:52:56.65, foo, 0}
2016-07-13 00:52:56,651 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{9, 9, 3, SIL, 2016-07-13 00:52:56.65, foo, 2016-07-13 00:52:56.65, foo, 0}
2016-07-13 00:52:56,658 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{10, 10, 98765, PLT, 2016-07-13 00:52:56.658, foo, 2016-07-13 00:52:56.658, foo, 0}
2016-07-13 00:52:56,659 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{11, 11, 34, GLD, 2016-07-13 00:52:56.659, foo, 2016-07-13 00:52:56.659, foo, 0}
2016-07-13 00:52:56,660 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{12, 12, 532, PLT, 2016-07-13 00:52:56.66, foo, 2016-07-13 00:52:56.66, foo, 0}
2016-07-13 00:52:56,661 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{13, 13, 23678, GLD, 2016-07-13 00:52:56.661, foo, 2016-07-13 00:52:56.661, foo, 0}
2016-07-13 00:52:56,662 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{14, 14, 432, GLD, 2016-07-13 00:52:56.662, foo, 2016-07-13 00:52:56.662, foo, 0}
2016-07-13 00:52:56,664 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{15, 15, 543, BRZ, 2016-07-13 00:52:56.664, foo, 2016-07-13 00:52:56.664, foo, 0}
2016-07-13 00:52:56,665 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{16, 16, 23545, PLT, 2016-07-13 00:52:56.665, foo, 2016-07-13 00:52:56.665, foo, 0}
2016-07-13 00:52:56,667 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{17, 17, 2345, GLD, 2016-07-13 00:52:56.667, foo, 2016-07-13 00:52:56.667, foo, 0}
2016-07-13 00:52:56,668 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{18, 18, 8763, SIL, 2016-07-13 00:52:56.668, foo, 2016-07-13 00:52:56.668, foo, 0}
2016-07-13 00:52:56,669 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{19, 19, 34567, SIL, 2016-07-13 00:52:56.669, foo, 2016-07-13 00:52:56.669, foo, 0}
2016-07-13 00:52:56,670 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{20, 20, 43, GLD, 2016-07-13 00:52:56.67, foo, 2016-07-13 00:52:56.67, foo, 0}
2016-07-13 00:52:56,689 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SERVICE
2016-07-13 00:52:56,690 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{3, null, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123, 2016-07-13 00:52:56.69, foo, 2016-07-13 00:52:56.69, foo}
2016-07-13 00:52:56,693 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{6, SIT, null, 2007/11/11 16:00:00.456, 2016-07-13 00:52:56.693, foo, 2016-07-13 00:52:56.693, foo}
2016-07-13 00:52:56,694 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{13, PRD, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789, 2016-07-13 00:52:56.694, foo, 2016-07-13 00:52:56.694, foo}
2016-07-13 00:52:56,695 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{16, SIT, コバチが２人いるため, 2007/11/13 16:00:00.456, 2016-07-13 00:52:56.695, foo, 2016-07-13 00:52:56.695, foo}
2016-07-13 00:52:56,704 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to MEMBER_WITHDRAWAL
2016-07-13 00:52:56,705 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{1, 1, 2, 2006/12/24 23:59:59}
2016-07-13 00:52:56,707 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{2, 1, 3, 2007/11/11 16:16:16}
2016-07-13 00:52:56,708 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{3, 1, 4, 2006/12/23 22:56:29}
2016-07-13 00:52:56,709 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{4, 1, 5, 2007/11/01 02:13:00}
2016-07-13 00:52:56,709 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{5, 1, 6, 2012/05/24 23:12:59}
2016-07-13 00:52:56,710 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{6, 1, 9, 2005/11/11 16:32:01}
2016-07-13 00:52:56,732 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{7, 1, 15, 2006/01/28 23:59:59}
2016-07-13 00:52:56,732 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{8, 1, 18, 2007/11/09 16:23:00}
2016-07-13 00:52:56,733 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{9, 2, 1, 2009/12/22 23:59:59}
2016-07-13 00:52:56,734 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{10, 2, 3, 2007/11/11 09:01:00}
2016-07-13 00:52:56,735 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{11, 2, 4, 2006/11/23 23:59:59}
2016-07-13 00:52:56,737 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{12, 2, 9, 2012/11/15 12:43:00}
2016-07-13 00:52:56,738 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{13, 2, 14, 2006/12/24 23:59:59}
2016-07-13 00:52:56,739 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{14, 2, 19, 2011/04/01 16:23:01}
2016-07-13 00:52:56,741 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{15, 3, 1, 2006/12/24 23:59:20}
2016-07-13 00:52:56,741 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{16, 3, 2, 2008/05/01 12:23:02}
2016-07-13 00:52:56,742 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{17, 3, 4, 2006/12/24 23:59:21}
2016-07-13 00:52:56,746 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{18, 3, 6, 2009/06/11 17:23:03}
2016-07-13 00:52:56,748 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{19, 3, 9, 2010/12/24 23:59:22}
2016-07-13 00:52:56,752 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{20, 3, 10, 2007/11/01 16:12:04}
2016-07-13 00:52:56,753 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{21, 4, 1, 2006/12/24 23:59:23}
2016-07-13 00:52:56,754 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{22, 4, 2, 2007/11/01 16:23:05}
2016-07-13 00:52:56,755 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{23, 4, 3, 2011/12/24 23:59:24}
2016-07-13 00:52:56,756 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{24, 4, 4, 2007/11/01 16:23:06}
2016-07-13 00:52:56,757 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{25, 4, 5, 2013/05/24 11:59:25}
2016-07-13 00:52:56,757 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{26, 4, 6, 2007/06/21 01:23:57}
2016-07-13 00:52:56,758 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{27, 4, 9, 2006/12/24 23:59:26}
2016-07-13 00:52:56,759 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{28, 4, 11, 2007/11/01 16:23:08}
2016-07-13 00:52:56,760 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{29, 4, 12, 2013/02/24 23:59:27}
2016-07-13 00:52:56,760 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{30, 4, 13, 2012/11/01 16:23:03}
2016-07-13 00:52:56,761 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{31, 4, 14, 2006/07/24 23:59:28}
2016-07-13 00:52:56,770 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{32, 4, 15, 2007/11/01 17:23:10}
2016-07-13 00:52:56,776 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{33, 4, 16, 2007/11/01 16:23:10}
2016-07-13 00:52:56,779 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{34, 4, 17, 2006/07/24 23:59:29}
2016-07-13 00:52:56,781 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{35, 4, 18, 2011/11/01 17:23:11}
2016-07-13 00:52:56,785 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{36, 4, 19, 2007/11/01 16:23:11}
2016-07-13 00:52:56,786 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{37, 5, 1, 2008/07/24 23:59:30}
2016-07-13 00:52:56,787 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{38, 5, 3, 2007/11/01 17:23:12}
2016-07-13 00:52:56,788 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{39, 5, 6, 2007/11/01 16:23:12}
2016-07-13 00:52:56,789 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{40, 6, 1, 2006/07/24 23:59:31}
2016-07-13 00:52:56,790 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{41, 6, 2, 2007/11/01 17:23:13}
2016-07-13 00:52:56,791 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{42, 6, 3, 2007/11/01 16:23:13}
2016-07-13 00:52:56,792 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{43, 6, 4, 2006/07/24 23:52:32}
2016-07-13 00:52:56,793 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{44, 6, 5, 2007/11/01 11:23:14}
2016-07-13 00:52:56,793 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{45, 6, 6, 2007/11/21 06:23:14}
2016-07-13 00:52:56,794 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{46, 8, 1, 2011/07/24 23:52:33}
2016-07-13 00:52:56,795 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{47, 8, 2, 2007/11/01 11:23:15}
2016-07-13 00:52:56,796 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{48, 8, 3, 2007/11/21 06:23:15}
2016-07-13 00:52:56,797 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{49, 9, 1, 2006/07/24 23:52:34}
2016-07-13 00:52:56,803 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{50, 9, 2, 208/11/01 11:23:16}
2016-07-13 00:52:56,804 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{51, 9, 3, 2007/11/21 06:23:16}
2016-07-13 00:52:56,805 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{52, 9, 10, 2006/07/24 23:52:35}
2016-07-13 00:52:56,806 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{53, 9, 20, 2009/11/01 11:23:17}
2016-07-13 00:52:56,807 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{54, 10, 1, 2007/11/21 06:23:17}
2016-07-13 00:52:56,810 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{55, 10, 2, 2006/07/24 23:52:36}
2016-07-13 00:52:56,813 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{56, 10, 3, 2010/11/01 11:23:18}
2016-07-13 00:52:56,815 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{57, 10, 4, 2006/12/21 23:59:59}
2016-07-13 00:52:56,816 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{58, 10, 5, 2007/11/1 16:16:16}
2016-07-13 00:52:56,817 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{59, 10, 6, 2006/08/23 22:56:29}
2016-07-13 00:52:56,818 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{60, 10, 9, 2007/11/01 02:11:00}
2016-07-13 00:52:56,819 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{61, 10, 11, 2012/05/24 23:12:59}
2016-07-13 00:52:56,820 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{62, 10, 12, 2005/11/10 16:32:01}
2016-07-13 00:52:56,821 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{63, 10, 13, 2006/01/28 23:59:59}
2016-07-13 00:52:56,822 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{64, 10, 14, 2007/10/09 16:23:00}
2016-07-13 00:52:56,823 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{65, 10, 15, 2009/12/22 23:59:59}
2016-07-13 00:52:56,824 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{66, 10, 16, 2007/11/01 09:01:00}
2016-07-13 00:52:56,825 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{67, 10, 17, 2006/11/23 23:59:59}
2016-07-13 00:52:56,826 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{68, 10, 18, 2011/11/15 12:43:00}
2016-07-13 00:52:56,827 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{69, 10, 19, 2006/07/24 23:59:59}
2016-07-13 00:52:56,828 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{70, 10, 20, 2011/08/01 16:23:01}
2016-07-13 00:52:56,828 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{71, 11, 12, 2006/09/24 23:59:20}
2016-07-13 00:52:56,829 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{72, 11, 13, 2008/01/01 12:23:02}
2016-07-13 00:52:56,831 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{73, 11, 14, 2006/12/24 23:59:21}
2016-07-13 00:52:56,832 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{74, 11, 15, 2009/02/11 17:23:03}
2016-07-13 00:52:56,832 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{75, 11, 16, 2010/03/24 23:59:22}
2016-07-13 00:52:56,833 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{76, 11, 17, 2007/09/01 16:12:04}
2016-07-13 00:52:56,834 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{77, 11, 19, 2006/12/24 23:59:23}
2016-07-13 00:52:56,835 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{78, 12, 1, 2007/11/01 16:23:05}
2016-07-13 00:52:56,835 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{79, 12, 11, 2011/05/24 23:59:24}
2016-07-13 00:52:56,836 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{80, 12, 13, 2007/11/01 16:23:06}
2016-07-13 00:52:56,837 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{81, 12, 14, 2013/06/24 11:59:25}
2016-07-13 00:52:56,838 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{82, 12, 15, 2007/06/21 01:23:57}
2016-07-13 00:52:56,839 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{83, 12, 19, 2006/12/24 23:59:26}
2016-07-13 00:52:56,839 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{84, 13, 11, 2007/08/01 16:23:08}
2016-07-13 00:52:56,841 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{85, 13, 12, 2013/02/24 23:59:27}
2016-07-13 00:52:56,842 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{86, 13, 14, 2012/11/01 16:23:03}
2016-07-13 00:52:56,845 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{87, 14, 1, 2006/07/24 23:59:28}
2016-07-13 00:52:56,846 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{88, 14, 10, 2012/05/24 23:12:59}
2016-07-13 00:52:56,847 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{89, 14, 11, 2005/11/10 16:32:01}
2016-07-13 00:52:56,849 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{90, 14, 20, 2006/01/28 23:59:59}
2016-07-13 00:52:56,851 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{91, 16, 17, 2007/10/09 16:23:00}
2016-07-13 00:52:56,852 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{92, 17, 16, 2009/12/22 23:59:59}
2016-07-13 00:52:56,853 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{93, 18, 1, 2007/11/01 09:01:00}
2016-07-13 00:52:56,854 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{94, 18, 2, 2006/11/23 23:59:59}
2016-07-13 00:52:56,855 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{95, 18, 3, 2011/11/15 12:43:00}
2016-07-13 00:52:56,856 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{96, 18, 4, 2006/07/24 23:59:59}
2016-07-13 00:52:56,857 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{97, 18, 5, 2011/08/01 16:23:01}
2016-07-13 00:52:56,857 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{98, 18, 6, 2006/09/24 23:59:20}
2016-07-13 00:52:56,858 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{99, 18, 9, 2008/01/01 12:23:02}
2016-07-13 00:52:56,859 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{100, 18, 11, 2006/12/24 23:59:21}
2016-07-13 00:52:56,860 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{101, 18, 12, 2009/02/11 17:23:03}
2016-07-13 00:52:56,862 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{102, 18, 13, 2010/03/24 23:59:22}
2016-07-13 00:52:56,862 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{103, 18, 14, 2007/09/01 16:12:04}
2016-07-13 00:52:56,867 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{104, 18, 15, 2006/12/24 23:59:23}
2016-07-13 00:52:56,868 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{105, 19, 1, 2007/11/01 16:23:05}
2016-07-13 00:52:56,869 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{106, 19, 10, 2011/05/24 23:59:24}
2016-07-13 00:52:56,869 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{107, 19, 11, 2007/11/01 16:23:06}
2016-07-13 00:52:56,870 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{108, 19, 12, 2013/06/24 11:59:25}
2016-07-13 00:52:56,870 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{109, 19, 20, 2013/06/24 11:59:25}
2016-07-13 00:52:56,871 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{110, 20, 10, 2013/06/24 11:59:25}
2016-07-13 00:52:56,872 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{111, 20, 19, 2013/06/24 11:59:25}
2016-07-13 00:52:56,950 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 111 rows are loaded to MEMBER_FOLLOWING
2016-07-13 00:52:56,950 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-13 00:52:56,951 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/30-product.xls)
2016-07-13 00:52:56,951 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-13 00:52:57,003 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{1, Cold Spring Harbor, BILLYJOEL-01, MCD, PST, 1100, 2016-07-13 00:52:57.002, foo, 2016-07-13 00:52:57.003, foo, 0}
2016-07-13 00:52:57,004 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{2, Piano Man, BILLYJOEL-02, MCD, ONS, 1200, 2016-07-13 00:52:57.004, foo, 2016-07-13 00:52:57.004, foo, 0}
2016-07-13 00:52:57,005 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{3, Streetlife Serenade, BILLYJOEL-03, MCD, ONS, 1300, 2016-07-13 00:52:57.005, foo, 2016-07-13 00:52:57.005, foo, 0}
2016-07-13 00:52:57,006 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{4, Turnstiles, BILLYJOEL-04, MCD, ONS, 1400, 2016-07-13 00:52:57.006, foo, 2016-07-13 00:52:57.006, foo, 0}
2016-07-13 00:52:57,007 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{5, The Stranger, BILLYJOEL-05, MCD, ONS, 1500, 2016-07-13 00:52:57.007, foo, 2016-07-13 00:52:57.007, foo, 0}
2016-07-13 00:52:57,008 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{6, 52nd Street, BILLYJOEL-06, MCD, ONS, 1600, 2016-07-13 00:52:57.008, foo, 2016-07-13 00:52:57.008, foo, 0}
2016-07-13 00:52:57,009 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{7, Glass House, BILLYJOEL-07, MCD, ONS, 1700, 2016-07-13 00:52:57.009, foo, 2016-07-13 00:52:57.009, foo, 0}
2016-07-13 00:52:57,010 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{8, Nylon Curtain, BILLYJOEL-08, MCD, ONS, 1800, 2016-07-13 00:52:57.01, foo, 2016-07-13 00:52:57.01, foo, 0}
2016-07-13 00:52:57,011 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{9, Bridge, BILLYJOEL-09, MCD, ONS, 1900, 2016-07-13 00:52:57.01, foo, 2016-07-13 00:52:57.01, foo, 0}
2016-07-13 00:52:57,012 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{10, Storm Front, BILLYJOEL-10, MCD, ONS, 2000, 2016-07-13 00:52:57.011, foo, 2016-07-13 00:52:57.011, foo, 0}
2016-07-13 00:52:57,013 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{11, River of Dreams, BILLYJOEL-11, MCD, ONS, 2100, 2016-07-13 00:52:57.013, foo, 2016-07-13 00:52:57.013, foo, 0}
2016-07-13 00:52:57,014 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{12, Grand Piano, PIANO-01, INS, ONS, 1400000, 2016-07-13 00:52:57.013, foo, 2016-07-13 00:52:57.013, foo, 0}
2016-07-13 00:52:57,015 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{13, Upright Piano, PIANO-02, INS, ONS, 1100000, 2016-07-13 00:52:57.014, foo, 2016-07-13 00:52:57.014, foo, 0}
2016-07-13 00:52:57,016 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{14, Low Price Flute, FLUTE-01, INS, ONS, 50000, 2016-07-13 00:52:57.016, foo, 2016-07-13 00:52:57.016, foo, 0}
2016-07-13 00:52:57,017 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{15, Silver Flute, FLUTE-02, INS, ONS, 500000, 2016-07-13 00:52:57.017, foo, 2016-07-13 00:52:57.017, foo, 0}
2016-07-13 00:52:57,018 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{16, Gold Flute, FLUTE-03, INS, ONS, 4000000, 2016-07-13 00:52:57.018, foo, 2016-07-13 00:52:57.018, foo, 0}
2016-07-13 00:52:57,019 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{17, Rosemary (100g), HARB-100-01, HEB, ONS, 400, 2016-07-13 00:52:57.019, foo, 2016-07-13 00:52:57.019, foo, 0}
2016-07-13 00:52:57,020 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{18, Lemon Grass (100g), HARB-100-02, HEB, ONS, 380, 2016-07-13 00:52:57.019, foo, 2016-07-13 00:52:57.019, foo, 0}
2016-07-13 00:52:57,020 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{19, Camomile (100g), HARB-100-03, HEB, ONS, 380, 2016-07-13 00:52:57.02, foo, 2016-07-13 00:52:57.02, foo, 0}
2016-07-13 00:52:57,021 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{20, Hatomugi (100g), HARB-100-04, HEB, ONS, 340, 2016-07-13 00:52:57.021, foo, 2016-07-13 00:52:57.021, foo, 0}
2016-07-13 00:52:57,038 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to PRODUCT
2016-07-13 00:52:57,039 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{1, 5, 3, 2006/12/24 23:59:59, 1, 1800, 1, 2016-07-13 00:52:57.039, foo, 2016-07-13 00:52:57.039, foo, 0}
2016-07-13 00:52:57,041 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{2, 15, 7, 2007/11/11 16:16:16, 1, 1700, 1, 2016-07-13 00:52:57.04, foo, 2016-07-13 00:52:57.04, foo, 0}
2016-07-13 00:52:57,042 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{3, 13, 3, 2006/12/23 22:56:29.235, 1, 1800, 1, 2016-07-13 00:52:57.042, foo, 2016-07-13 00:52:57.042, foo, 0}
2016-07-13 00:52:57,043 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{4, 2, 5, 2007/11/01 02:13:00, 2, 1700, 1, 2016-07-13 00:52:57.043, foo, 2016-07-13 00:52:57.043, foo, 0}
2016-07-13 00:52:57,045 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{5, 9, 11, 2008/01/04 23:12:59, 5, 1800, 1, 2016-07-13 00:52:57.044, foo, 2016-07-13 00:52:57.044, foo, 0}
2016-07-13 00:52:57,046 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{6, 20, 2, 2002/01/01 16:32:01, 1, 2000, 1, 2016-07-13 00:52:57.046, foo, 2016-07-13 00:52:57.046, foo, 0}
2016-07-13 00:52:57,048 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{7, 19, 9, 2006/01/28 23:59:59.999, 1, 1000, 0, 2016-07-13 00:52:57.048, foo, 2016-07-13 00:52:57.048, foo, 0}
2016-07-13 00:52:57,050 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{8, 4, 7, 2007/11/09 16:23:00, 1, 1535, 1, 2016-07-13 00:52:57.05, foo, 2016-07-13 00:52:57.05, foo, 0}
2016-07-13 00:52:57,052 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{9, 4, 10, 2006/12/22 23:59:59, 20, 1700, 1, 2016-07-13 00:52:57.052, foo, 2016-07-13 00:52:57.052, foo, 0}
2016-07-13 00:52:57,053 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{10, 2, 10, 2007/11/01 02:13:00.345, 1, 1700, 0, 2016-07-13 00:52:57.053, foo, 2016-07-13 00:52:57.053, foo, 0}
2016-07-13 00:52:57,054 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{11, 5, 2, 2007/11/09 16:23:01, 1, 1800, 1, 2016-07-13 00:52:57.054, foo, 2016-07-13 00:52:57.054, foo, 0}
2016-07-13 00:52:57,056 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{12, 15, 2, 2006/12/22 23:59:12, 1, 1700, 1, 2016-07-13 00:52:57.055, foo, 2016-07-13 00:52:57.055, foo, 0}
2016-07-13 00:52:57,057 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{13, 13, 8, 2007/11/01 02:13:00.346, 1, 1800, 1, 2016-07-13 00:52:57.057, foo, 2016-07-13 00:52:57.057, foo, 0}
2016-07-13 00:52:57,058 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{14, 2, 4, 2007/11/09 16:23:02, 2, 1700, 1, 2016-07-13 00:52:57.058, foo, 2016-07-13 00:52:57.058, foo, 0}
2016-07-13 00:52:57,060 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{15, 9, 11, 2006/12/22 23:59:32, 5, 1800, 1, 2016-07-13 00:52:57.06, foo, 2016-07-13 00:52:57.06, foo, 0}
2016-07-13 00:52:57,062 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{16, 20, 1, 2007/11/01 02:13:00.347, 1, 2000, 1, 2016-07-13 00:52:57.061, foo, 2016-07-13 00:52:57.061, foo, 0}
2016-07-13 00:52:57,063 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{17, 19, 11, 2006/12/22 23:59:33, 2, 1000, 0, 2016-07-13 00:52:57.063, foo, 2016-07-13 00:52:57.063, foo, 0}
2016-07-13 00:52:57,064 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{18, 4, 10, 2007/11/01 02:13:00.348, 1, 1535, 1, 2016-07-13 00:52:57.064, foo, 2016-07-13 00:52:57.064, foo, 0}
2016-07-13 00:52:57,068 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{19, 4, 11, 2007/11/01 02:13:00.348, 4, 1700, 1, 2016-07-13 00:52:57.068, foo, 2016-07-13 00:52:57.068, foo, 0}
2016-07-13 00:52:57,069 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{20, 2, 11, 2006/12/22 23:59:35, 1, 1700, 0, 2016-07-13 00:52:57.069, foo, 2016-07-13 00:52:57.069, foo, 0}
2016-07-13 00:52:57,070 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{21, 2, 15, 2006/12/22 23:59:35, 1, 400000, 0, 2016-07-13 00:52:57.07, foo, 2016-07-13 00:52:57.07, foo, 0}
2016-07-13 00:52:57,089 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{22, 3, 6, 2007/11/01 02:13:00.350, 4, 1800, 1, 2016-07-13 00:52:57.089, foo, 2016-07-13 00:52:57.089, foo, 0}
2016-07-13 00:52:57,091 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{23, 15, 7, 2006/12/22 23:59:36, 1, 1700, 1, 2016-07-13 00:52:57.09, foo, 2016-07-13 00:52:57.09, foo, 0}
2016-07-13 00:52:57,092 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{24, 13, 3, 2007/09/11 12:13:00.351, 1, 1800, 1, 2016-07-13 00:52:57.092, foo, 2016-07-13 00:52:57.092, foo, 0}
2016-07-13 00:52:57,093 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{25, 16, 2, 2006/12/22 23:59:37, 2, 1700, 1, 2016-07-13 00:52:57.093, foo, 2016-07-13 00:52:57.093, foo, 0}
2016-07-13 00:52:57,094 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{26, 3, 4, 2005/12/21 12:13:00.352, 1, 1800, 1, 2016-07-13 00:52:57.094, foo, 2016-07-13 00:52:57.094, foo, 0}
2016-07-13 00:52:57,095 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{27, 2, 8, 2006/12/22 23:59:38, 1, 2000, 1, 2016-07-13 00:52:57.095, foo, 2016-07-13 00:52:57.095, foo, 0}
2016-07-13 00:52:57,096 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{28, 6, 17, 2007/11/01 02:13:00.353, 2, 600, 0, 2016-07-13 00:52:57.096, foo, 2016-07-13 00:52:57.096, foo, 0}
2016-07-13 00:52:57,099 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{29, 4, 4, 2006/12/22 23:59:39, 1, 1535, 1, 2016-07-13 00:52:57.099, foo, 2016-07-13 00:52:57.099, foo, 0}
2016-07-13 00:52:57,100 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{30, 4, 3, 2007/11/01 02:13:00.354, 4, 1700, 1, 2016-07-13 00:52:57.1, foo, 2016-07-13 00:52:57.1, foo, 0}
2016-07-13 00:52:57,101 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{31, 4, 10, 2006/12/22 23:59:40, 1, 1700, 0, 2016-07-13 00:52:57.101, foo, 2016-07-13 00:52:57.101, foo, 0}
2016-07-13 00:52:57,102 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{32, 13, 3, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-07-13 00:52:57.102, foo, 2016-07-13 00:52:57.102, foo, 0}
2016-07-13 00:52:57,103 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{33, 16, 2, 2006/12/22 23:59:41, 2, 1700, 1, 2016-07-13 00:52:57.103, foo, 2016-07-13 00:52:57.103, foo, 0}
2016-07-13 00:52:57,105 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{34, 3, 4, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-07-13 00:52:57.105, foo, 2016-07-13 00:52:57.105, foo, 0}
2016-07-13 00:52:57,106 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{35, 2, 8, 2006/12/12 23:59:42, 1, 2000, 1, 2016-07-13 00:52:57.106, foo, 2016-07-13 00:52:57.106, foo, 0}
2016-07-13 00:52:57,107 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{36, 6, 3, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-07-13 00:52:57.107, foo, 2016-07-13 00:52:57.107, foo, 0}
2016-07-13 00:52:57,108 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{37, 4, 4, 2006/12/12 23:59:43, 1, 1535, 1, 2016-07-13 00:52:57.108, foo, 2016-07-13 00:52:57.108, foo, 0}
2016-07-13 00:52:57,109 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{38, 4, 3, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-07-13 00:52:57.108, foo, 2016-07-13 00:52:57.108, foo, 0}
2016-07-13 00:52:57,109 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{39, 4, 10, 2006/12/12 23:59:44, 1, 1700, 0, 2016-07-13 00:52:57.109, foo, 2016-07-13 00:52:57.109, foo, 0}
2016-07-13 00:52:57,111 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{40, 4, 10, 2007/05/01 12:13:00.359, 1, 1700, 0, 2016-07-13 00:52:57.111, foo, 2016-07-13 00:52:57.111, foo, 0}
2016-07-13 00:52:57,112 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{41, 4, 11, 2007/11/01 02:13:01.354, 4, 1700, 1, 2016-07-13 00:52:57.112, foo, 2016-07-13 00:52:57.112, foo, 0}
2016-07-13 00:52:57,114 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{42, 10, 16, 2006/12/22 23:59:40, 1, 2800000, 1, 2016-07-13 00:52:57.114, foo, 2016-07-13 00:52:57.114, foo, 0}
2016-07-13 00:52:57,116 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{43, 13, 17, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-07-13 00:52:57.116, foo, 2016-07-13 00:52:57.116, foo, 0}
2016-07-13 00:52:57,118 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{44, 16, 14, 2006/12/22 23:59:41, 2, 1700, 1, 2016-07-13 00:52:57.118, foo, 2016-07-13 00:52:57.118, foo, 0}
2016-07-13 00:52:57,120 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{45, 3, 18, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-07-13 00:52:57.119, foo, 2016-07-13 00:52:57.119, foo, 0}
2016-07-13 00:52:57,121 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{46, 2, 7, 2006/12/12 23:59:42, 1, 2000, 1, 2016-07-13 00:52:57.121, foo, 2016-07-13 00:52:57.121, foo, 0}
2016-07-13 00:52:57,122 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{47, 6, 14, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-07-13 00:52:57.122, foo, 2016-07-13 00:52:57.122, foo, 0}
2016-07-13 00:52:57,123 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{48, 16, 12, 2006/12/12 23:59:43, 1, 100000, 1, 2016-07-13 00:52:57.123, foo, 2016-07-13 00:52:57.123, foo, 0}
2016-07-13 00:52:57,124 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{49, 4, 20, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-07-13 00:52:57.124, foo, 2016-07-13 00:52:57.124, foo, 0}
2016-07-13 00:52:57,125 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{50, 4, 19, 2006/12/12 23:59:44, 1, 1700, 0, 2016-07-13 00:52:57.125, foo, 2016-07-13 00:52:57.125, foo, 0}
2016-07-13 00:52:57,126 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{51, 4, 11, 2007/11/21 02:13:00.354, 4, 1700, 1, 2016-07-13 00:52:57.126, foo, 2016-07-13 00:52:57.126, foo, 0}
2016-07-13 00:52:57,127 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{52, 20, 17, 2006/12/23 23:59:40, 1, 400, 0, 2016-07-13 00:52:57.126, foo, 2016-07-13 00:52:57.126, foo, 0}
2016-07-13 00:52:57,127 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{53, 13, 16, 2007/12/28 12:13:10.355, 1, 600000, 1, 2016-07-13 00:52:57.127, foo, 2016-07-13 00:52:57.127, foo, 0}
2016-07-13 00:52:57,134 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{54, 16, 14, 2006/02/22 23:59:41, 2, 1700, 1, 2016-07-13 00:52:57.134, foo, 2016-07-13 00:52:57.134, foo, 0}
2016-07-13 00:52:57,135 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{55, 3, 3, 2007/07/21 12:13:00.356, 1, 1800, 1, 2016-07-13 00:52:57.135, foo, 2016-07-13 00:52:57.135, foo, 0}
2016-07-13 00:52:57,136 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{56, 2, 8, 2006/12/22 23:59:42, 1, 2000, 1, 2016-07-13 00:52:57.136, foo, 2016-07-13 00:52:57.136, foo, 0}
2016-07-13 00:52:57,137 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{57, 6, 19, 2007/02/01 02:13:00.357, 2, 1000, 0, 2016-07-13 00:52:57.137, foo, 2016-07-13 00:52:57.137, foo, 0}
2016-07-13 00:52:57,138 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{58, 2, 12, 2006/12/12 23:59:43, 1, 4000000, 1, 2016-07-13 00:52:57.138, foo, 2016-07-13 00:52:57.138, foo, 0}
2016-07-13 00:52:57,139 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{59, 4, 18, 2007/05/01 02:03:00.358, 1, 380, 1, 2016-07-13 00:52:57.139, foo, 2016-07-13 00:52:57.139, foo, 0}
2016-07-13 00:52:57,139 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{60, 4, 20, 2006/12/12 23:59:44, 2, 680, 0, 2016-07-13 00:52:57.139, foo, 2016-07-13 00:52:57.139, foo, 0}
2016-07-13 00:52:57,140 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{61, 1, 16, 2008-03-03 06:34:56.000, 3, 12000000, 1, 2016-07-13 00:52:57.14, foo, 2016-07-13 00:52:57.14, foo, 0}
2016-07-13 00:52:57,141 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{62, 1, 2, 2009-06-04 06:34:56.000, 12, 20000, 1, 2016-07-13 00:52:57.141, foo, 2016-07-13 00:52:57.141, foo, 0}
2016-07-13 00:52:57,142 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{63, 1, 6, 2010-09-26 06:34:56.000, 2, 2000, 1, 2016-07-13 00:52:57.142, foo, 2016-07-13 00:52:57.142, foo, 0}
2016-07-13 00:52:57,142 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{64, 1, 8, 2011-03-03 09:45:29.000, 1, 50, 1, 2016-07-13 00:52:57.142, foo, 2016-07-13 00:52:57.142, foo, 0}
2016-07-13 00:52:57,143 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{65, 1, 13, 2012-06-04 09:45:29.000, 1, 1000000, 1, 2016-07-13 00:52:57.143, foo, 2016-07-13 00:52:57.143, foo, 0}
2016-07-13 00:52:57,144 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{66, 1, 13, 2013-09-26 09:45:29.000, 1, 900000, 1, 2016-07-13 00:52:57.144, foo, 2016-07-13 00:52:57.144, foo, 0}
2016-07-13 00:52:57,145 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{67, 1, 5, 2014-03-03 21:02:12.000, 2, 3000, 1, 2016-07-13 00:52:57.145, foo, 2016-07-13 00:52:57.145, foo, 0}
2016-07-13 00:52:57,146 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{68, 1, 17, 2015-06-04 21:02:12.000, 30, 3000, 1, 2016-07-13 00:52:57.146, foo, 2016-07-13 00:52:57.146, foo, 0}
2016-07-13 00:52:57,148 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{69, 1, 17, 2016-09-26 21:02:12.000, 1, 1000, 1, 2016-07-13 00:52:57.148, foo, 2016-07-13 00:52:57.148, foo, 0}
2016-07-13 00:52:57,152 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{70, 1, 17, 2017-03-03 01:11:00.000, 1, 1200, 1, 2016-07-13 00:52:57.15, foo, 2016-07-13 00:52:57.15, foo, 0}
2016-07-13 00:52:57,195 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 70 rows are loaded to PURCHASE
2016-07-13 00:52:57,196 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{1, 1, 1800, 2006/12/25 23:59:59, BAK, 2016-07-13 00:52:57.196, foo, 2016-07-13 00:52:57.196, foo}
2016-07-13 00:52:57,198 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{2, 2, 1700, 2007/11/13 16:16:16, BAK, 2016-07-13 00:52:57.198, foo, 2016-07-13 00:52:57.198, foo}
2016-07-13 00:52:57,199 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{3, 3, 900, 2006/12/23 23:56:29, CRC, 2016-07-13 00:52:57.199, foo, 2016-07-13 00:52:57.199, foo}
2016-07-13 00:52:57,199 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{4, 3, 900, 2006/12/23 23:56:30, HAN, 2016-07-13 00:52:57.199, foo, 2016-07-13 00:52:57.199, foo}
2016-07-13 00:52:57,200 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{5, 4, 1700, 2007/12/01 02:13:00, HAN, 2016-07-13 00:52:57.2, foo, 2016-07-13 00:52:57.2, foo}
2016-07-13 00:52:57,201 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{6, 5, 800.20, 2008/04/04 23:12:59, HAN, 2016-07-13 00:52:57.201, foo, 2016-07-13 00:52:57.201, foo}
2016-07-13 00:52:57,202 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{7, 5, 1000.90, 2008/05/04 23:12:59, CRC, 2016-07-13 00:52:57.202, foo, 2016-07-13 00:52:57.202, foo}
2016-07-13 00:52:57,203 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{8, 6, 1000, 2002/01/01 16:32:01, CRC, 2016-07-13 00:52:57.203, foo, 2016-07-13 00:52:57.203, foo}
2016-07-13 00:52:57,204 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{9, 6, 400.8, 2002/01/01 16:32:01, CRC, 2016-07-13 00:52:57.204, foo, 2016-07-13 00:52:57.204, foo}
2016-07-13 00:52:57,204 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{10, 6, 599.2, 2002/01/01 16:32:01, HAN, 2016-07-13 00:52:57.204, foo, 2016-07-13 00:52:57.204, foo}
2016-07-13 00:52:57,205 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{11, 7, 300, 2006/01/28 23:59:59, CRC, 2016-07-13 00:52:57.205, foo, 2016-07-13 00:52:57.205, foo}
2016-07-13 00:52:57,206 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{12, 8, 535.5, 2007/11/09 16:23:00, BAK, 2016-07-13 00:52:57.206, foo, 2016-07-13 00:52:57.206, foo}
2016-07-13 00:52:57,207 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{13, 8, 999.5, 2014/11/09 16:23:05, BAK, 2016-07-13 00:52:57.207, foo, 2016-07-13 00:52:57.207, foo}
2016-07-13 00:52:57,208 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{14, 9, 1700, 2006/12/22 23:59:59, BAK, 2016-07-13 00:52:57.207, foo, 2016-07-13 00:52:57.207, foo}
2016-07-13 00:52:57,208 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{15, 11, 1799.2, 2014/11/09 16:23:01, CRC, 2016-07-13 00:52:57.208, foo, 2016-07-13 00:52:57.208, foo}
2016-07-13 00:52:57,209 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{16, 11, 0.8, 2014/11/09 16:23:01, HAN, 2016-07-13 00:52:57.209, foo, 2016-07-13 00:52:57.209, foo}
2016-07-13 00:52:57,210 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{17, 12, 1690, 2011/12/22 23:59:12, HAN, 2016-07-13 00:52:57.21, foo, 2016-07-13 00:52:57.21, foo}
2016-07-13 00:52:57,212 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{18, 12, 10, 2011/12/22 23:59:12, CRC, 2016-07-13 00:52:57.211, foo, 2016-07-13 00:52:57.211, foo}
2016-07-13 00:52:57,217 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{19, 13, 1800.7, 2007/11/01 02:13:00, CRC, 2016-07-13 00:52:57.217, foo, 2016-07-13 00:52:57.217, foo}
2016-07-13 00:52:57,219 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{20, 14, 1700, 2008/11/09 16:23:02, BAK, 2016-07-13 00:52:57.219, foo, 2016-07-13 00:52:57.219, foo}
2016-07-13 00:52:57,221 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{21, 15, 300, 2006/12/22 23:59:32, HAN, 2016-07-13 00:52:57.22, foo, 2016-07-13 00:52:57.22, foo}
2016-07-13 00:52:57,226 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{22, 15, 600, 2007/12/22 23:59:32, BAK, 2016-07-13 00:52:57.226, foo, 2016-07-13 00:52:57.226, foo}
2016-07-13 00:52:57,229 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{23, 15, 900, 2008/12/22 23:59:32, HAN, 2016-07-13 00:52:57.228, foo, 2016-07-13 00:52:57.228, foo}
2016-07-13 00:52:57,230 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{24, 16, 2000, 2012/11/01 02:13:00, BAK, 2016-07-13 00:52:57.23, foo, 2016-07-13 00:52:57.23, foo}
2016-07-13 00:52:57,231 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{25, 18, 1535, 2013/11/01 02:13:00, HAN, 2016-07-13 00:52:57.23, foo, 2016-07-13 00:52:57.23, foo}
2016-07-13 00:52:57,231 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{26, 19, 1700, 2007/11/01 02:13:00, HAN, 2016-07-13 00:52:57.231, foo, 2016-07-13 00:52:57.231, foo}
2016-07-13 00:52:57,234 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{27, 20, 5, 2006/12/22 23:59:35, HAN, 2016-07-13 00:52:57.233, foo, 2016-07-13 00:52:57.233, foo}
2016-07-13 00:52:57,235 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{28, 21, 399999, 2006/12/22 23:59:35, BAK, 2016-07-13 00:52:57.235, foo, 2016-07-13 00:52:57.235, foo}
2016-07-13 00:52:57,235 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{29, 22, 1800, 2007/11/01 02:13:00, BAK, 2016-07-13 00:52:57.235, foo, 2016-07-13 00:52:57.235, foo}
2016-07-13 00:52:57,236 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{30, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-13 00:52:57.236, foo, 2016-07-13 00:52:57.236, foo}
2016-07-13 00:52:57,238 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{31, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-13 00:52:57.237, foo, 2016-07-13 00:52:57.237, foo}
2016-07-13 00:52:57,239 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{32, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-13 00:52:57.239, foo, 2016-07-13 00:52:57.239, foo}
2016-07-13 00:52:57,240 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{33, 24, 1000, 2012/09/11 12:13:00, BAK, 2016-07-13 00:52:57.24, foo, 2016-07-13 00:52:57.24, foo}
2016-07-13 00:52:57,241 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{34, 24, 800, 2015/09/11 12:13:00, BAK, 2016-07-13 00:52:57.241, foo, 2016-07-13 00:52:57.241, foo}
2016-07-13 00:52:57,242 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{35, 25, 1700, 2013/12/22 23:59:37, BAK, 2016-07-13 00:52:57.242, foo, 2016-07-13 00:52:57.242, foo}
2016-07-13 00:52:57,243 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{36, 26, 1800, 2005/12/21 12:13:00, BAK, 2016-07-13 00:52:57.243, foo, 2016-07-13 00:52:57.243, foo}
2016-07-13 00:52:57,244 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{37, 27, 2000, 2006/12/22 23:59:38, HAN, 2016-07-13 00:52:57.244, foo, 2016-07-13 00:52:57.244, foo}
2016-07-13 00:52:57,245 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{38, 28, 600, 2007/11/01 02:13:00, BAK, 2016-07-13 00:52:57.244, foo, 2016-07-13 00:52:57.244, foo}
2016-07-13 00:52:57,246 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{39, 29, 1535, 2006/12/22 23:59:39, BAK, 2016-07-13 00:52:57.246, foo, 2016-07-13 00:52:57.246, foo}
2016-07-13 00:52:57,248 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{40, 30, 100, 2010/09/01 02:13:00, HAN, 2016-07-13 00:52:57.248, foo, 2016-07-13 00:52:57.248, foo}
2016-07-13 00:52:57,249 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{41, 30, 200, 2011/10/31 02:13:00, CRC, 2016-07-13 00:52:57.249, foo, 2016-07-13 00:52:57.249, foo}
2016-07-13 00:52:57,252 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{42, 30, 300.75, 2012/11/01 02:13:00, CRC, 2016-07-13 00:52:57.251, foo, 2016-07-13 00:52:57.251, foo}
2016-07-13 00:52:57,254 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{43, 30, 400.25, 2013/12/01 02:13:00, HAN, 2016-07-13 00:52:57.253, foo, 2016-07-13 00:52:57.253, foo}
2016-07-13 00:52:57,257 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{44, 30, 300, 2014/09/01 02:13:00, HAN, 2016-07-13 00:52:57.257, foo, 2016-07-13 00:52:57.257, foo}
2016-07-13 00:52:57,259 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{45, 30, 700, 2014/10/01 02:13:00, HAN, 2016-07-13 00:52:57.259, foo, 2016-07-13 00:52:57.259, foo}
2016-07-13 00:52:57,259 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{46, 31, 1700.85, 2006/12/22 23:59:40, HAN, 2016-07-13 00:52:57.259, foo, 2016-07-13 00:52:57.259, foo}
2016-07-13 00:52:57,260 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{47, 32, 1800, 2009/12/28 12:13:10, HAN, 2016-07-13 00:52:57.26, foo, 2016-07-13 00:52:57.26, foo}
2016-07-13 00:52:57,261 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{48, 33, 1700, 2006/12/22 23:59:41, CRC, 2016-07-13 00:52:57.261, foo, 2016-07-13 00:52:57.261, foo}
2016-07-13 00:52:57,262 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{49, 34, 1800, 2007/05/21 12:13:00, BAK, 2016-07-13 00:52:57.261, foo, 2016-07-13 00:52:57.261, foo}
2016-07-13 00:52:57,262 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{50, 35, 2000, 2006/12/12 23:59:42, CRC, 2016-07-13 00:52:57.262, foo, 2016-07-13 00:52:57.262, foo}
2016-07-13 00:52:57,270 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{51, 36, 300.1, 2012/05/01 02:13:00, CRC, 2016-07-13 00:52:57.27, foo, 2016-07-13 00:52:57.27, foo}
2016-07-13 00:52:57,271 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{52, 36, 300.8, 2013/05/01 02:13:00, HAN, 2016-07-13 00:52:57.271, foo, 2016-07-13 00:52:57.271, foo}
2016-07-13 00:52:57,271 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{53, 36, 300.25, 2014/05/01 02:13:00, HAN, 2016-07-13 00:52:57.271, foo, 2016-07-13 00:52:57.271, foo}
2016-07-13 00:52:57,272 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{54, 37, 1535, 2006/12/12 23:59:43, HAN, 2016-07-13 00:52:57.272, foo, 2016-07-13 00:52:57.272, foo}
2016-07-13 00:52:57,273 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{55, 38, 1700, 2007/05/01 02:03:00, HAN, 2016-07-13 00:52:57.273, foo, 2016-07-13 00:52:57.273, foo}
2016-07-13 00:52:57,274 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{56, 40, 128, 2007/05/01 12:13:00, BAK, 2016-07-13 00:52:57.274, foo, 2016-07-13 00:52:57.274, foo}
2016-07-13 00:52:57,275 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{57, 40, 256, 2013/05/01 12:13:00, BAK, 2016-07-13 00:52:57.275, foo, 2016-07-13 00:52:57.275, foo}
2016-07-13 00:52:57,276 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{58, 40, 512, 2009/05/01 12:13:00, CRC, 2016-07-13 00:52:57.276, foo, 2016-07-13 00:52:57.276, foo}
2016-07-13 00:52:57,277 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{59, 41, 1700, 2007/11/01 02:13:00, HAN, 2016-07-13 00:52:57.277, foo, 2016-07-13 00:52:57.277, foo}
2016-07-13 00:52:57,278 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{60, 42, 30000000, 2014/03/22 21:59:40, HAN, 2016-07-13 00:52:57.278, foo, 2016-07-13 00:52:57.278, foo}
2016-07-13 00:52:57,279 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{61, 43, 1800, 2006/12/28 12:13:10, BAK, 2016-07-13 00:52:57.279, foo, 2016-07-13 00:52:57.279, foo}
2016-07-13 00:52:57,281 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{62, 44, 1700, 2006/12/22 23:59:41, BAK, 2016-07-13 00:52:57.281, foo, 2016-07-13 00:52:57.281, foo}
2016-07-13 00:52:57,288 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{63, 45, 1800, 2007/05/21 12:13:00, CRC, 2016-07-13 00:52:57.288, foo, 2016-07-13 00:52:57.288, foo}
2016-07-13 00:52:57,289 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{64, 46, 2000, 2010/12/12 23:59:42, BAK, 2016-07-13 00:52:57.289, foo, 2016-07-13 00:52:57.289, foo}
2016-07-13 00:52:57,290 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{65, 48, 90000, 2006/12/12 23:59:43, HAN, 2016-07-13 00:52:57.29, foo, 2016-07-13 00:52:57.29, foo}
2016-07-13 00:52:57,291 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{66, 48, 10000, 2006/12/12 23:59:43, BAK, 2016-07-13 00:52:57.291, foo, 2016-07-13 00:52:57.291, foo}
2016-07-13 00:52:57,292 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{67, 49, 1700.66, 2007/05/01 02:03:00, HAN, 2016-07-13 00:52:57.292, foo, 2016-07-13 00:52:57.292, foo}
2016-07-13 00:52:57,293 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{68, 51, 1700, 2007/11/21 02:13:00, BAK, 2016-07-13 00:52:57.292, foo, 2016-07-13 00:52:57.292, foo}
2016-07-13 00:52:57,293 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{69, 52, 100, 2006/12/23 23:59:40, BAK, 2016-07-13 00:52:57.293, foo, 2016-07-13 00:52:57.293, foo}
2016-07-13 00:52:57,294 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{70, 52, 40, 2007/12/23 23:59:40, HAN, 2016-07-13 00:52:57.294, foo, 2016-07-13 00:52:57.294, foo}
2016-07-13 00:52:57,294 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{71, 52, 40, 2008/12/23 23:59:40, HAN, 2016-07-13 00:52:57.294, foo, 2016-07-13 00:52:57.294, foo}
2016-07-13 00:52:57,295 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{72, 52, 40, 2009/12/23 23:59:40, HAN, 2016-07-13 00:52:57.295, foo, 2016-07-13 00:52:57.295, foo}
2016-07-13 00:52:57,295 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{73, 52, 40, 2010/12/23 23:59:40, BAK, 2016-07-13 00:52:57.295, foo, 2016-07-13 00:52:57.295, foo}
2016-07-13 00:52:57,299 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{74, 52, 40, 2011/12/23 23:59:40, CRC, 2016-07-13 00:52:57.299, foo, 2016-07-13 00:52:57.299, foo}
2016-07-13 00:52:57,300 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{75, 52, 40, 2012/12/23 23:59:40, BAK, 2016-07-13 00:52:57.3, foo, 2016-07-13 00:52:57.3, foo}
2016-07-13 00:52:57,300 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{76, 52, 40, 2013/12/23 23:59:40, HAN, 2016-07-13 00:52:57.3, foo, 2016-07-13 00:52:57.3, foo}
2016-07-13 00:52:57,301 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{77, 52, 40, 2014/12/23 23:59:40, HAN, 2016-07-13 00:52:57.301, foo, 2016-07-13 00:52:57.301, foo}
2016-07-13 00:52:57,302 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{78, 52, 40, 2015/12/23 23:59:40, HAN, 2016-07-13 00:52:57.302, foo, 2016-07-13 00:52:57.302, foo}
2016-07-13 00:52:57,302 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{79, 53, 600000, 2007/12/28 12:13:10, BAK, 2016-07-13 00:52:57.302, foo, 2016-07-13 00:52:57.302, foo}
2016-07-13 00:52:57,303 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{80, 54, 1700.42, 2008/02/22 23:59:41, CRC, 2016-07-13 00:52:57.303, foo, 2016-07-13 00:52:57.303, foo}
2016-07-13 00:52:57,304 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{81, 55, 1600, 2012/07/21 12:13:00, HAN, 2016-07-13 00:52:57.304, foo, 2016-07-13 00:52:57.304, foo}
2016-07-13 00:52:57,304 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{82, 55, 200, 2008/07/21 12:13:00, CRC, 2016-07-13 00:52:57.304, foo, 2016-07-13 00:52:57.304, foo}
2016-07-13 00:52:57,305 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{83, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-13 00:52:57.305, foo, 2016-07-13 00:52:57.305, foo}
2016-07-13 00:52:57,305 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{84, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-13 00:52:57.305, foo, 2016-07-13 00:52:57.305, foo}
2016-07-13 00:52:57,306 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{85, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-13 00:52:57.306, foo, 2016-07-13 00:52:57.306, foo}
2016-07-13 00:52:57,307 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{86, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-13 00:52:57.306, foo, 2016-07-13 00:52:57.306, foo}
2016-07-13 00:52:57,307 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{87, 57, 999, 2014/02/01 02:13:00, HAN, 2016-07-13 00:52:57.307, foo, 2016-07-13 00:52:57.307, foo}
2016-07-13 00:52:57,308 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{88, 58, 4000000, 2006/12/12 23:59:43, HAN, 2016-07-13 00:52:57.308, foo, 2016-07-13 00:52:57.308, foo}
2016-07-13 00:52:57,309 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{89, 59, 380.77, 2013/05/01 02:03:00, CRC, 2016-07-13 00:52:57.309, foo, 2016-07-13 00:52:57.309, foo}
2016-07-13 00:52:57,309 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{90, 60, 675.88, 2006/12/12 23:59:44, BAK, 2016-07-13 00:52:57.309, foo, 2016-07-13 00:52:57.309, foo}
2016-07-13 00:52:57,310 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{91, 61, 12000000, 2008/03/03 06:34:56, HAN, 2016-07-13 00:52:57.31, foo, 2016-07-13 00:52:57.31, foo}
2016-07-13 00:52:57,311 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{92, 62, 20000, 2009/06/04 06:34:56, HAN, 2016-07-13 00:52:57.311, foo, 2016-07-13 00:52:57.311, foo}
2016-07-13 00:52:57,311 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{93, 63, 2000, 2010/09/26 06:34:56, HAN, 2016-07-13 00:52:57.311, foo, 2016-07-13 00:52:57.311, foo}
2016-07-13 00:52:57,312 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{94, 64, 50, 2011/03/03 09:45:29, BAK, 2016-07-13 00:52:57.312, foo, 2016-07-13 00:52:57.312, foo}
2016-07-13 00:52:57,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{95, 65, 1000000, 2012/06/04 09:45:29, BAK, 2016-07-13 00:52:57.313, foo, 2016-07-13 00:52:57.313, foo}
2016-07-13 00:52:57,314 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{96, 66, 900000, 2013/09/26 09:45:29, BAK, 2016-07-13 00:52:57.314, foo, 2016-07-13 00:52:57.314, foo}
2016-07-13 00:52:57,316 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{97, 67, 3000, 2014/03/03 21:02:12, CRC, 2016-07-13 00:52:57.316, foo, 2016-07-13 00:52:57.316, foo}
2016-07-13 00:52:57,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{98, 68, 3000, 2015/06/04 21:02:12, CRC, 2016-07-13 00:52:57.317, foo, 2016-07-13 00:52:57.317, foo}
2016-07-13 00:52:57,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{99, 69, 1000, 2016/09/26 21:02:12, CRC, 2016-07-13 00:52:57.317, foo, 2016-07-13 00:52:57.317, foo}
2016-07-13 00:52:57,319 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{100, 70, 1200, 2017/03/03 01:11:00, HAN, 2016-07-13 00:52:57.319, foo, 2016-07-13 00:52:57.319, foo}
2016-07-13 00:52:57,382 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 100 rows are loaded to PURCHASE_PAYMENT
2016-07-13 00:52:57,384 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():378) - ...Checking implicit set of classification
2016-07-13 00:52:57,402 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 00:52:57,411 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-13 00:52:57,419 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-13 00:52:57,423 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-13 00:52:57,426 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-13 00:52:57,429 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-13 00:52:57,436 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-13 00:52:57,444 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-07-13 00:52:57,447 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-07-13 00:52:57,454 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct MOBILE_LOGIN_FLG from MEMBER_LOGIN where MOBILE_LOGIN_FLG not in (1, 0)
2016-07-13 00:52:57,458 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_COMPLETE_FLG from PURCHASE where PAYMENT_COMPLETE_FLG not in (1, 0)
2016-07-13 00:52:57,460 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_METHOD_CODE from PURCHASE_PAYMENT where PAYMENT_METHOD_CODE not in ('HAN', 'BAK', 'CRC')
2016-07-13 00:52:57,468 [main] INFO  (DfTakeFinallyProcess#takeFinally():219) - 
2016-07-13 00:52:57,468 [main] INFO  (DfTakeFinallyProcess#takeFinally():220) - * * * * * * * **
2016-07-13 00:52:57,468 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - *              *
2016-07-13 00:52:57,468 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * Take Finally *
2016-07-13 00:52:57,469 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2016-07-13 00:52:57,469 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * * * * * * * **
2016-07-13 00:52:57,477 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: take-finally.sql
2016-07-13 00:52:57,478 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Member addresses should be only one at any time.
-- - - - - - - - - - -/
select adr.MEMBER_ADDRESS_ID, adr.MEMBER_ID
     , adr.VALID_BEGIN_DATE, adr.VALID_END_DATE
     , adr.ADDRESS
  from MEMBER_ADDRESS adr
 where exists (select subadr.MEMBER_ADDRESS_ID
                 from MEMBER_ADDRESS subadr
                where subadr.MEMBER_ID = adr.MEMBER_ID
                  and subadr.VALID_BEGIN_DATE > adr.VALID_BEGIN_DATE
                  -- 有効期間が一日だけ重複しているパターンも検出
                  and subadr.VALID_BEGIN_DATE <= adr.VALID_END_DATE
       )
2016-07-13 00:52:57,485 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 正式会員日時を持ってる仮会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'PRV'
   and mem.FORMALIZED_DATETIME is not NULL
2016-07-13 00:52:57,488 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- まだ生まれていない会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.BIRTHDATE > now()
2016-07-13 00:52:57,489 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 退会会員が退会情報を持っていることをアサート
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'WDL'
   and not exists (select wdl.MEMBER_ID
                     from MEMBER_WITHDRAWAL wdl
                    where wdl.MEMBER_ID = mem.MEMBER_ID
       )
2016-07-13 00:52:57,508 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=4 failure=0
2016-07-13 00:52:57,509 [main] INFO  (DfSqlFileFireMan#fire():89) - {Take Finally}: success=4 failure=0 (in 1 files)
2016-07-13 00:52:57,511 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-13 00:52:57,517 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m05s451ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=49 failure=0 (in 3 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql
  o replace-schema-50-procedure.sql

 {Load Data}: loaded-files=3
  (common)
  o 10-master.xls
  (ut)
  o 20-member.xls
  o 30-product.xls

 {Take Finally}: success=4 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2016-07-13 00:52:58,568 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2016-07-13 00:52:58,572 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2016-07-13 00:52:58,573 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2016-07-13 00:52:58,573 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2016-07-13 00:52:58,573 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2016-07-13 00:52:58,610 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 00:52:58,611 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 00:52:58,611 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 00:52:58,611 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 00:52:58,700 [main] INFO  (DfSchemaXmlSerializer#serialize():285) - 
2016-07-13 00:52:58,701 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - ...Starting to process JDBC to SchemaXML
2016-07-13 00:52:58,701 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1460) - ...Loading previous schema (schema diff process)
2016-07-13 00:52:58,715 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 00:52:58,904 [main] INFO  (DfSchemaXmlSerializer#generateXML():359) - ...Getting DB connection
2016-07-13 00:52:58,910 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-13 00:52:59,424 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-13 00:52:59,424 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-13 00:52:59,426 [main] INFO  (DfSchemaXmlSerializer#generateXML():362) - ...Getting DB meta data
2016-07-13 00:52:59,427 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-13 00:52:59,428 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 00:52:59,428 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-13 00:52:59,444 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'maihamadb' order by table_name asc
2016-07-13 00:52:59,447 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'maihamadb' order by table_name asc, column_name asc
2016-07-13 00:52:59,467 [main] INFO  (DfSchemaXmlSerializer#processTable():419) - 
2016-07-13 00:52:59,468 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2016-07-13 00:52:59,468 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ [Table List]
2016-07-13 00:52:59,468 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member(TABLE) // 会員: 会員登録時にデータが登録される。...
2016-07-13 00:52:59,520 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_address(TABLE) // 会員住所情報: 会員の住所に関する情報。...
2016-07-13 00:52:59,538 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_following(TABLE) // 会員フォローイング: とある会員が他の会員をフォローできる。すると、フォローした会員の購入履歴が閲覧できる。
2016-07-13 00:52:59,554 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_login(TABLE) // 会員ログイン情報: ログインするたびに登録されるログイン履歴。
2016-07-13 00:52:59,580 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_security(TABLE) // 会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある
2016-07-13 00:52:59,605 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_service(TABLE) // 会員サービス: 会員のサービス情報（ポイントサービスなど）。
2016-07-13 00:52:59,617 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_status(TABLE) // 会員ステータス
2016-07-13 00:52:59,629 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_withdrawal(TABLE) // 会員退会情報: 退会会員の退会に関する詳細な情報。...
2016-07-13 00:52:59,641 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product(TABLE) // 商品
2016-07-13 00:52:59,651 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product_category(TABLE) // 商品カテゴリ: 商品のカテゴリを表現するマスタ。...
2016-07-13 00:52:59,666 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product_status(TABLE) // 商品ステータス
2016-07-13 00:52:59,681 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.purchase(TABLE) // 購入: 一つの商品に対する一回の購入を表現する。...
2016-07-13 00:52:59,696 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.purchase_payment(TABLE) // 購入支払: 購入に対する支払。...
2016-07-13 00:52:59,709 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.region(TABLE) // 地域: 主に会員の住所に対応する地域。...
2016-07-13 00:52:59,717 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.service_rank(TABLE) // サービスランク: 会員のサービスレベルを表現するランク。...
2016-07-13 00:52:59,725 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.withdrawal_reason(TABLE) // 退会理由: 会員に選ばせる定型的な退会理由のマスタ。
2016-07-13 00:52:59,734 [main] INFO  (DfSchemaXmlSerializer#processTable():433) - $ 
2016-07-13 00:52:59,734 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ [Table Count]
2016-07-13 00:52:59,735 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 16
2016-07-13 00:52:59,735 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ = = = = = = = = = =/
2016-07-13 00:52:59,735 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - 
2016-07-13 00:52:59,740 [main] INFO  (DfSchemaXmlSerializer#processSequence():796) - ...Getting sequences
2016-07-13 00:52:59,748 [main] INFO  (DfSchemaXmlSerializer#serialize():300) - ...Serializing XML:
2016-07-13 00:52:59,748 [main] INFO  (DfSchemaXmlSerializer#serialize():301) -   filePath = ./schema/project-schema-maihamadb.xml
2016-07-13 00:52:59,749 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   encoding = UTF-8
2016-07-13 00:52:59,792 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1478) - ...Loading next schema (schema diff process)
2016-07-13 00:52:59,795 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 00:52:59,882 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1493) -  -> same as previous (schema diff)
2016-07-13 00:52:59,882 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-13 00:52:59,893 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s346ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2016-07-13 00:53:00,713 [main] INFO  (TorqueDocumentationTask#begin():175) - +------------------------------------------+
2016-07-13 00:53:00,716 [main] INFO  (TorqueDocumentationTask#begin():176) - |                                          |
2016-07-13 00:53:00,716 [main] INFO  (TorqueDocumentationTask#begin():177) - |                   Doc                    |
2016-07-13 00:53:00,717 [main] INFO  (TorqueDocumentationTask#begin():185) - |                                          |
2016-07-13 00:53:00,717 [main] INFO  (TorqueDocumentationTask#begin():186) - +------------------------------------------+
2016-07-13 00:53:00,751 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 00:53:00,751 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 00:53:00,752 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 00:53:00,752 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 00:53:00,755 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - 
2016-07-13 00:53:00,756 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2016-07-13 00:53:00,756 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():248) - *                   *
2016-07-13 00:53:00,757 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():249) - *    Schema HTML    *
2016-07-13 00:53:00,757 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():250) - *                   *
2016-07-13 00:53:00,757 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():251) - * * * * * * * * * * *
2016-07-13 00:53:00,819 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 00:53:00,923 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2016-07-13 00:53:01,111 [main] INFO  (Database#doEnableDocumentOutputDirectory():1179) - ...Setting up documentOutputDirectory: ./output/doc
2016-07-13 00:53:01,125 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2016-07-13 00:53:01,126 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2016-07-13 00:53:01,128 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2016-07-13 00:53:01,129 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2016-07-13 00:53:01,130 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2016-07-13 00:53:01,131 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2016-07-13 00:53:01,135 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2016-07-13 00:53:01,136 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2016-07-13 00:53:01,140 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_ADDRESS_VALID
2016-07-13 00:53:01,146 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-13 00:53:01,146 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_ADDRESS.[MEMBER_ID]
2016-07-13 00:53:01,147 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.VALID_BEGIN_DATE <= /*targetDate(Date)*/null\n     and $$foreignAlias$$.VALID_END_DATE >= /*targetDate(Date)*/null
2016-07-13 00:53:01,147 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_LOGIN_LATEST
2016-07-13 00:53:01,148 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-13 00:53:01,148 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_LOGIN.[MEMBER_ID]
2016-07-13 00:53:01,149 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.LOGIN_DATETIME = ($$sqbegin$$\nselect max(login.LOGIN_DATETIME)\n  from MEMBER_LOGIN login\n where login.MEMBER_ID = $$foreignAlias$$.MEMBER_ID\n)$$sqend$$
2016-07-13 00:53:01,149 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2016-07-13 00:53:01,163 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 00:53:01,516 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-13 00:53:01,520 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-13 00:53:01,523 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-13 00:53:01,526 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-13 00:53:01,531 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-13 00:53:01,535 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-13 00:53:01,544 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():157) - ...Loading schema history
2016-07-13 00:53:01,591 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():161) -  -> found history: count=4
2016-07-13 00:53:02,099 [main] INFO  (Database#getAvailableProcedureList():2823) -  
2016-07-13 00:53:02,100 [main] INFO  (Database#getAvailableProcedureList():2824) - ...Setting up procedures for documents
2016-07-13 00:53:02,107 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-13 00:53:02,122 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-13 00:53:02,122 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-13 00:53:02,190 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'maihamadb' order by ROUTINE_NAME
2016-07-13 00:53:02,194 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=maihamadb
2016-07-13 00:53:02,195 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_IN_OUT_PARAMETER:{4, 84, cb677351}
2016-07-13 00:53:02,196 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_RETURN_RESULT_SET:{9, 254, 4b86b61f}
2016-07-13 00:53:02,197 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=2
2016-07-13 00:53:02,197 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=2
2016-07-13 00:53:02,252 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-13 00:53:02,353 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-13 00:53:02,358 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s657ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2016-07-13 00:53:05,066 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2016-07-13 00:53:05,069 [main] INFO  (TorqueDataModelTask#begin():110) - |                                          |
2016-07-13 00:53:05,069 [main] INFO  (TorqueDataModelTask#begin():111) - |                 Generate                 |
2016-07-13 00:53:05,069 [main] INFO  (TorqueDataModelTask#begin():112) - |                                          |
2016-07-13 00:53:05,070 [main] INFO  (TorqueDataModelTask#begin():113) - +------------------------------------------+
2016-07-13 00:53:05,097 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 00:53:05,098 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 00:53:05,098 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 00:53:05,098 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 00:53:05,119 [main] INFO  (TorqueDataModelTask#setupControlTemplate():164) - 
2016-07-13 00:53:05,119 [main] INFO  (TorqueDataModelTask#setupControlTemplate():165) - ...Using Java control: om/ControlGenerateJava.vm
2016-07-13 00:53:05,155 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 00:53:05,235 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2016-07-13 00:53:05,522 [main] INFO  (Database#doEnableGenerateOutputDirectory():1147) - ...Setting up generateOutputDirectory: ../src/main/java
2016-07-13 00:53:05,527 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2016-07-13 00:53:05,528 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2016-07-13 00:53:05,529 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2016-07-13 00:53:05,531 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2016-07-13 00:53:05,531 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2016-07-13 00:53:05,533 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2016-07-13 00:53:05,537 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2016-07-13 00:53:05,537 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2016-07-13 00:53:05,540 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_ADDRESS_VALID
2016-07-13 00:53:05,555 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-13 00:53:05,556 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_ADDRESS.[MEMBER_ID]
2016-07-13 00:53:05,556 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.VALID_BEGIN_DATE <= /*targetDate(Date)*/null\n     and $$foreignAlias$$.VALID_END_DATE >= /*targetDate(Date)*/null
2016-07-13 00:53:05,556 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_LOGIN_LATEST
2016-07-13 00:53:05,557 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-13 00:53:05,557 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_LOGIN.[MEMBER_ID]
2016-07-13 00:53:05,558 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.LOGIN_DATETIME = ($$sqbegin$$\nselect max(login.LOGIN_DATETIME)\n  from MEMBER_LOGIN login\n where login.MEMBER_ID = $$foreignAlias$$.MEMBER_ID\n)$$sqend$$
2016-07-13 00:53:05,558 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2016-07-13 00:53:05,571 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 00:53:05,931 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-13 00:53:05,936 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-13 00:53:05,939 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-13 00:53:05,942 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-13 00:53:05,947 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-13 00:53:05,950 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-13 00:53:05,970 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2016-07-13 00:53:05,970 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2016-07-13 00:53:05,971 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2016-07-13 00:53:05,971 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2016-07-13 00:53:05,971 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2016-07-13 00:53:05,972 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2016-07-13 00:53:05,972 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2016-07-13 00:53:05,972 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2016-07-13 00:53:05,973 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2016-07-13 00:53:05,973 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2016-07-13 00:53:05,996 [main] INFO  (Database#info():2711) - public void parseAllCommon() {
2016-07-13 00:53:05,999 [main] INFO  (Database#info():2711) -     parse('CDef');
2016-07-13 00:53:06,068 [main] INFO  (Database#info():2711) -     parse('DBCurrent');
2016-07-13 00:53:06,073 [main] INFO  (Database#info():2711) -     parse('DBFluteConfig');
2016-07-13 00:53:06,096 [main] INFO  (Database#info():2711) -     parse('DBFluteInitializer');
2016-07-13 00:53:06,101 [main] INFO  (Database#info():2711) -     parse('DBMetaInstanceHandler');
2016-07-13 00:53:06,129 [main] INFO  (Database#info():2711) -     parse('EntityDefinedCommonColumn');
2016-07-13 00:53:06,154 [main] INFO  (Database#info():2711) -     parse('ImplementedBehaviorSelector');
2016-07-13 00:53:06,165 [main] INFO  (Database#info():2711) -     parse('ImplementedCommonColumnAutoSetupper');
2016-07-13 00:53:06,174 [main] INFO  (Database#info():2711) -     parse('ImplementedInvokerAssistant');
2016-07-13 00:53:06,182 [main] INFO  (Database#info():2711) -     parse('ImplementedSqlClauseCreator');
2016-07-13 00:53:06,189 [main] INFO  (Database#info():2711) - }
2016-07-13 00:53:06,189 [main] INFO  (Database#info():2711) - public void parseContainerConfig() {
2016-07-13 00:53:06,190 [main] INFO  (Database#info():2711) -     parse('../resources/dbflute.xml')
2016-07-13 00:53:06,216 [main] INFO  (Database#info():2711) - }
2016-07-13 00:53:06,224 [main] INFO  (DfOldClassHandler#info():1033) - public void deleteOldTableClass() {
2016-07-13 00:53:06,273 [main] INFO  (DfOldClassHandler#info():1033) - }
2016-07-13 00:53:06,274 [main] INFO  (Database#info():2711) - public void parseTableClass() {
2016-07-13 00:53:06,274 [main] INFO  (Database#info():2711) -     parse('member');
2016-07-13 00:53:06,875 [main] INFO  (Database#info():2711) -     parse('member_address');
2016-07-13 00:53:07,150 [main] INFO  (Database#info():2711) -     parse('member_following');
2016-07-13 00:53:07,329 [main] INFO  (Database#info():2711) -     parse('member_login');
2016-07-13 00:53:07,547 [main] INFO  (Database#info():2711) -     parse('member_security');
2016-07-13 00:53:07,754 [main] INFO  (Database#info():2711) -     parse('member_service');
2016-07-13 00:53:07,950 [main] INFO  (Database#info():2711) -     parse('member_status');
2016-07-13 00:53:08,127 [main] INFO  (Database#info():2711) -     parse('member_withdrawal');
2016-07-13 00:53:08,303 [main] INFO  (Database#info():2711) -     parse('product');
2016-07-13 00:53:08,509 [main] INFO  (Database#info():2711) -     parse('product_category');
2016-07-13 00:53:08,683 [main] INFO  (Database#info():2711) -     parse('product_status');
2016-07-13 00:53:08,831 [main] INFO  (Database#info():2711) -     parse('purchase');
2016-07-13 00:53:09,028 [main] INFO  (Database#info():2711) -     parse('purchase_payment');
2016-07-13 00:53:09,176 [main] INFO  (Database#info():2711) -     parse('region');
2016-07-13 00:53:09,301 [main] INFO  (Database#info():2711) -     parse('service_rank');
2016-07-13 00:53:09,442 [main] INFO  (Database#info():2711) -     parse('withdrawal_reason');
2016-07-13 00:53:09,593 [main] INFO  (Database#info():2711) - }
2016-07-13 00:53:09,593 [main] INFO  (Database#info():2711) -  
2016-07-13 00:53:09,635 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-13 00:53:09,645 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s595ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2016-07-13 00:53:10,554 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2016-07-13 00:53:10,556 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2016-07-13 00:53:10,556 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2016-07-13 00:53:10,557 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2016-07-13 00:53:10,557 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2016-07-13 00:53:10,580 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 00:53:10,580 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 00:53:10,581 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 00:53:10,581 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 00:53:10,614 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectOutsideMember.sql
2016-07-13 00:53:10,620 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-13 00:53:10,956 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-13 00:53:10,957 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-13 00:53:10,993 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 初めての外だしSQL

 [df:description]
  会員ID、会員名称、生年月日、会員ステータス名称、サービスポイント数を取得
  会員IDの等値、会員名称の前方一致、会員ステータスの等値を and で連結
  それぞれ条件値がない場合は条件自体が無効になるように
  全ての条件値がない場合は全件検索になるように
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , mb.MEMBER_STATUS_CODE
     , stat.MEMBER_STATUS_NAME
     , serv.SERVICE_POINT_COUNT
  from MEMBER mb
    left outer join MEMBER_STATUS stat
      on mb.MEMBER_STATUS_CODE = stat.MEMBER_STATUS_CODE
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
 /*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- //会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'S%' -- //会員名称 (Null Allowed)
       /*END*/
       /*IF pmb.memberStatusCode != null*/
   and mb.MEMBER_STATUS_CODE = /*pmb.memberStatusCode:ref(MEMBER)*/'FML' -- //会員ステータス名称 (Null Allowed)
       /*END*/
/*END*/
2016-07-13 00:53:10,997 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-13 00:53:10,998 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectPartOfMember.sql
2016-07-13 00:53:11,003 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 ページング検索

 [df:description]
 (Manual)ページング検索すること
 o 基本は "初めての外だしSQL" のSQLと同じで...
 o 会員ステータスの等値条件は要らない
 o 会員サービスのサービスポイント数の大なり条件を追加
 o 結合に関して、カウント検索のパフォーマンスを最大限考慮すること (会員サービスの結合とか)
 そのとき、IFコメントに記述する条件が複雑にならないように (代理判定メソッドを使う)
*/

-- #df:entity#

-- !df:pmb extends ManualPaging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , serv.SERVICE_POINT_COUNT
-- ELSE select count(*) 
/*END*/
  from MEMBER mb
    /*IF pmb.needsJoinService()*/
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
    /*END*/
/*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- 会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'%S%' -- //会員名称 (Null Allowed)
       /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
   and serv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // サービスポイント数の下限値 (Null Allowed)
      /*END*/
/*END*/
/*IF pmb.isPaging()*/
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
/*END*/
2016-07-13 00:53:11,006 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-13 00:53:11,007 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthCursor.sql
2016-07-13 00:53:11,009 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 外だしSQLでカーソル検索ってみる

 [df:description]
 "さらに外だし" と同じ仕様(ページングは不要)
 カーソル検索として作成すること
 明らかにおかしいカラム名のカラムはデータ取得してはいけない (後は何を取ってもOKですが、これだけはっ)
*/

-- #df:entity#
-- +cursor+

-- !df:pmb!
-- !!AutoDetect!!

select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                           
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  from PURCHASE pch
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
2016-07-13 00:53:11,013 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-13 00:53:11,014 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthSummary.sql
2016-07-13 00:53:11,016 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 さらに外だし

 [df:description]
 "会員と購入月" ごとの購入の平均購入価格、合計購入数量を検索する
 会員ID、会員名称、購入月、平均購入価格、合計購入数量という形で検索
 "支払済みの購入だけ" という条件が指定できるようにする
 会員名称の曖昧検索(部分一致)という条件が指定ができるようにする
 会員のサービスポイント数の大なり条件が指定できるようにする
 会員IDの昇順、購入月の降順で並べる
*/

-- #df:entity#

-- !df:pmb extends Paging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                               
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  -- ELSE select count(*) from (select mem.MEMBER_ID
/*END*/ 
  from PURCHASE pch
  /*IF pmb.needsJoinMember()*/
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
  /*IF pmb.needsJoinService()*/
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
/*IF pmb.isPaging()*/
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
  -- ELSE ) as count
/*END*/
2016-07-13 00:53:11,021 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-13 00:53:11,021 [main] INFO  (DfSqlFileFireMan#fire():89) - {Fired SQL}: success=4 failure=0 (in 4 files)
2016-07-13 00:53:11,022 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-13 00:53:11,030 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s484ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o MemberBhv_selectOutsideMember.sql
  o MemberBhv_selectPartOfMember.sql
  o PurchaseBhv_selectPurchaseMonthCursor.sql
  o PurchaseBhv_selectPurchaseMonthSummary.sql

   o: OK (4)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2016-07-13 00:53:11,799 [main] INFO  (DfSql2EntityTask#begin():105) - +------------------------------------------+
2016-07-13 00:53:11,802 [main] INFO  (DfSql2EntityTask#begin():106) - |                                          |
2016-07-13 00:53:11,802 [main] INFO  (DfSql2EntityTask#begin():107) - |                Sql2Entity                |
2016-07-13 00:53:11,802 [main] INFO  (DfSql2EntityTask#begin():108) - |                                          |
2016-07-13 00:53:11,803 [main] INFO  (DfSql2EntityTask#begin():109) - +------------------------------------------+
2016-07-13 00:53:11,826 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 00:53:11,826 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 00:53:11,826 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 00:53:11,826 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 00:53:11,841 [main] INFO  (DfSql2EntityTask#setupControlTemplate():175) - 
2016-07-13 00:53:11,841 [main] INFO  (DfSql2EntityTask#setupControlTemplate():176) - ...Using Java control: om/ControlSql2EntityJava.vm
2016-07-13 00:53:11,848 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 00:53:11,945 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectOutsideMember.sql
2016-07-13 00:53:11,951 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-13 00:53:12,270 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-13 00:53:12,271 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-13 00:53:12,274 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 初めての外だしSQL

 [df:description]
  会員ID、会員名称、生年月日、会員ステータス名称、サービスポイント数を取得
  会員IDの等値、会員名称の前方一致、会員ステータスの等値を and で連結
  それぞれ条件値がない場合は条件自体が無効になるように
  全ての条件値がない場合は全件検索になるように
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , mb.MEMBER_STATUS_CODE
     , stat.MEMBER_STATUS_NAME
     , serv.SERVICE_POINT_COUNT
  from MEMBER mb
    left outer join MEMBER_STATUS stat
      on mb.MEMBER_STATUS_CODE = stat.MEMBER_STATUS_CODE
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
 /*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- //会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'S%' -- //会員名称 (Null Allowed)
       /*END*/
       /*IF pmb.memberStatusCode != null*/
   and mb.MEMBER_STATUS_CODE = /*pmb.memberStatusCode:ref(MEMBER)*/'FML' -- //会員ステータス名称 (Null Allowed)
       /*END*/
/*END*/
2016-07-13 00:53:12,338 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-13 00:53:12,338 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectPartOfMember.sql
2016-07-13 00:53:12,339 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 ページング検索

 [df:description]
 (Manual)ページング検索すること
 o 基本は "初めての外だしSQL" のSQLと同じで...
 o 会員ステータスの等値条件は要らない
 o 会員サービスのサービスポイント数の大なり条件を追加
 o 結合に関して、カウント検索のパフォーマンスを最大限考慮すること (会員サービスの結合とか)
 そのとき、IFコメントに記述する条件が複雑にならないように (代理判定メソッドを使う)
*/

-- #df:entity#

-- !df:pmb extends ManualPaging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , serv.SERVICE_POINT_COUNT
-- ELSE select count(*) 
/*END*/
  from MEMBER mb
    /*IF pmb.needsJoinService()*/
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
    /*END*/
/*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- 会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'%S%' -- //会員名称 (Null Allowed)
       /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
   and serv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // サービスポイント数の下限値 (Null Allowed)
      /*END*/
/*END*/
/*IF pmb.isPaging()*/
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
/*END*/
2016-07-13 00:53:12,347 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-13 00:53:12,348 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthCursor.sql
2016-07-13 00:53:12,349 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 外だしSQLでカーソル検索ってみる

 [df:description]
 "さらに外だし" と同じ仕様(ページングは不要)
 カーソル検索として作成すること
 明らかにおかしいカラム名のカラムはデータ取得してはいけない (後は何を取ってもOKですが、これだけはっ)
*/

-- #df:entity#
-- +cursor+

-- !df:pmb!
-- !!AutoDetect!!

select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                           
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  from PURCHASE pch
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
2016-07-13 00:53:12,357 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-13 00:53:12,358 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthSummary.sql
2016-07-13 00:53:12,359 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 さらに外だし

 [df:description]
 "会員と購入月" ごとの購入の平均購入価格、合計購入数量を検索する
 会員ID、会員名称、購入月、平均購入価格、合計購入数量という形で検索
 "支払済みの購入だけ" という条件が指定できるようにする
 会員名称の曖昧検索(部分一致)という条件が指定ができるようにする
 会員のサービスポイント数の大なり条件が指定できるようにする
 会員IDの昇順、購入月の降順で並べる
*/

-- #df:entity#

-- !df:pmb extends Paging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                               
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  -- ELSE select count(*) from (select mem.MEMBER_ID
/*END*/ 
  from PURCHASE pch
  /*IF pmb.needsJoinMember()*/
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
  /*IF pmb.needsJoinService()*/
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
/*IF pmb.isPaging()*/
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
  -- ELSE ) as count
/*END*/
2016-07-13 00:53:12,379 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-13 00:53:12,379 [main] INFO  (DfSqlFileFireMan#fire():89) - {Fired SQL}: success=4 failure=0 (in 4 files)
2016-07-13 00:53:12,388 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2016-07-13 00:53:12,389 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2016-07-13 00:53:12,443 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'maihamadb' order by ROUTINE_NAME
2016-07-13 00:53:12,446 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=maihamadb
2016-07-13 00:53:12,447 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_IN_OUT_PARAMETER:{4, 84, cb677351}
2016-07-13 00:53:12,447 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_RETURN_RESULT_SET:{9, 254, 4b86b61f}
2016-07-13 00:53:12,448 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=2
2016-07-13 00:53:12,448 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=2
2016-07-13 00:53:12,479 [main] INFO  (DfProcedureExecutionMetaExtractor#doExtractExecutionMetaData():109) - ...Calling: {call SP_IN_OUT_PARAMETER(?, ?, ?)}
2016-07-13 00:53:12,515 [main] INFO  (DfProcedureExecutionMetaExtractor#doExtractExecutionMetaData():109) - ...Calling: {call SP_RETURN_RESULT_SET(?)}
2016-07-13 00:53:12,527 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2016-07-13 00:53:12,528 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2016-07-13 00:53:12,528 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():107) - [SpInOutParameterPmb]: maihamadb.SP_IN_OUT_PARAMETER // procedureNoResult
2016-07-13 00:53:12,529 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     String VInVarchar; // procedureColumnIn(12, VARCHAR)
2016-07-13 00:53:12,529 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     String VOutVarchar; // procedureColumnOut(12, VARCHAR)
2016-07-13 00:53:12,530 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     String VInoutVarchar; // procedureColumnInOut(12, VARCHAR)
2016-07-13 00:53:12,530 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():107) - [SpReturnResultSetPmb]: maihamadb.SP_RETURN_RESULT_SET // procedureNoResult
2016-07-13 00:53:12,530 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     java.time.LocalDate birthdateFrom; // procedureColumnIn(91, DATE)
2016-07-13 00:53:12,531 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():171) -     List<SpReturnResultSetNotParamResult1> notParamResult1; // procedureColumnResult
2016-07-13 00:53:12,531 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():171) -     List<SpReturnResultSetNotParamResult2> notParamResult2; // procedureColumnResult
2016-07-13 00:53:12,531 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2016-07-13 00:53:12,532 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2016-07-13 00:53:12,576 [main] INFO  (DfSql2EntityTask#initControlContext():306) - 
2016-07-13 00:53:12,577 [main] INFO  (DfSql2EntityTask#initControlContext():307) - ...Preparing generation of customize-entities and parameter-beans
2016-07-13 00:53:12,577 [main] INFO  (DfSql2EntityTask#initControlContext():308) - * * * * * * * * * *
2016-07-13 00:53:12,577 [main] INFO  (DfSql2EntityTask#initControlContext():309) - * CustomizeEntity *
2016-07-13 00:53:12,577 [main] INFO  (DfSql2EntityTask#initControlContext():310) - * * * * * * * * * *
2016-07-13 00:53:12,590 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():922) - 
OutsideMember
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  BIRTHDATE DATE(10) related to member.BIRTHDATE
  MEMBER_STATUS_CODE CHAR(3) related to member.MEMBER_STATUS_CODE
  MEMBER_STATUS_NAME VARCHAR(50) related to member_status.MEMBER_STATUS_NAME
  SERVICE_POINT_COUNT INT(11) related to member_service.SERVICE_POINT_COUNT

PartOfMember
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  BIRTHDATE DATE(10) related to member.BIRTHDATE
  SERVICE_POINT_COUNT INT(11) related to member_service.SERVICE_POINT_COUNT

PurchaseMonthCursor (cursor)
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  購入月 INT(2)
  平均購入価格 DECIMAL(14, 4)
  合計購入量 DECIMAL(32)

PurchaseMonthSummary
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  購入月 INT(2)
  平均購入価格 DECIMAL(14, 4)
  合計購入量 DECIMAL(32)

SpReturnResultSetNotParamResult1 (procedure)
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  BIRTHDATE DATE(10) related to member.BIRTHDATE
  MEMBER_STATUS_CODE CHAR(3) related to member.MEMBER_STATUS_CODE

SpReturnResultSetNotParamResult2 (procedure)
  MEMBER_STATUS_CODE CHAR(3) related to member_status.MEMBER_STATUS_CODE
  MEMBER_STATUS_NAME VARCHAR(50) related to member_status.MEMBER_STATUS_NAME
2016-07-13 00:53:12,595 [main] INFO  (DfSql2EntityTask#showParameterBean():927) - * * * * * * * * *
2016-07-13 00:53:12,595 [main] INFO  (DfSql2EntityTask#showParameterBean():928) - * ParameterBean *
2016-07-13 00:53:12,595 [main] INFO  (DfSql2EntityTask#showParameterBean():929) - * * * * * * * * *
2016-07-13 00:53:12,596 [main] INFO  (DfSql2EntityTask#showParameterBean():971) - 
OutsideMemberPmb (typed to list, entity)
  Integer memberId:comment(会員ID (Null Allowed))
  String memberName:likePrefix|comment(会員名称 (Null Allowed))
  String memberStatusCode:ref(MEMBER)|comment(会員ステータス名称 (Null Allowed))

PartOfMemberPmb extends SimplePagingBean (typed to entity, manual-paging)
  Integer memberId
  String memberName:likeContain|comment(会員名称 (Null Allowed))
  Integer SERVICE_POINT_COUNT:comment(サービスポイント数の下限値 (Null Allowed))

PurchaseMonthCursorPmb (typed to cursor)
  String memberName:likeContain|comment(会員IDで部分一致(Null Allowed))
  Integer SERVICE_POINT_COUNT:comment(指定されたポイント以上かどうか(Null Allowed))

PurchaseMonthSummaryPmb extends SimplePagingBean (typed to entity, manual-paging)
  String memberName:likeContain|comment(会員IDで部分一致(Null Allowed))
  Integer SERVICE_POINT_COUNT:comment(指定されたポイント以上かどうか(Null Allowed))

SpInOutParameterPmb (procedure)
  v_in_varchar
  v_out_varchar
  v_inout_varchar

SpReturnResultSetPmb (procedure with customize-entity)
  birthdateFrom
2016-07-13 00:53:12,601 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2016-07-13 00:53:12,785 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 00:53:12,793 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-13 00:53:12,796 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-13 00:53:12,798 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-13 00:53:12,800 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-13 00:53:12,803 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-13 00:53:12,806 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-13 00:53:12,822 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1163) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2016-07-13 00:53:12,828 [main] INFO  (DfOldClassHandler#info():1033) - public void deleteOldCustomizeClass() {
2016-07-13 00:53:12,849 [main] INFO  (DfOldClassHandler#info():1033) - }
2016-07-13 00:53:12,850 [main] INFO  (Database#info():2711) - public void parseCustomizeEntity() {
2016-07-13 00:53:12,987 [main] INFO  (Database#info():2711) -     parse('OutsideMember')
2016-07-13 00:53:13,051 [main] INFO  (Database#info():2711) -     parse('PartOfMember')
2016-07-13 00:53:13,071 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthCursorCursor')
2016-07-13 00:53:13,131 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthCursor')
2016-07-13 00:53:13,194 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthSummary')
2016-07-13 00:53:13,242 [main] INFO  (Database#info():2711) -     parse('SpReturnResultSetNotParamResult1')
2016-07-13 00:53:13,288 [main] INFO  (Database#info():2711) -     parse('SpReturnResultSetNotParamResult2')
2016-07-13 00:53:13,289 [main] INFO  (Database#info():2711) - }
2016-07-13 00:53:13,291 [main] INFO  (Database#info():2711) - public void parseParameterBean() {
2016-07-13 00:53:13,295 [main] INFO  (Database#info():2711) -     parse('OutsideMemberPmb');
2016-07-13 00:53:13,339 [main] INFO  (Database#info():2711) -     parse('PartOfMemberPmb');
2016-07-13 00:53:13,370 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthCursorPmb');
2016-07-13 00:53:13,392 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthSummaryPmb');
2016-07-13 00:53:13,411 [main] INFO  (Database#info():2711) -     parse('SpInOutParameterPmb');
2016-07-13 00:53:13,431 [main] INFO  (Database#info():2711) -     parse('SpReturnResultSetPmb');
2016-07-13 00:53:13,464 [main] INFO  (Database#info():2711) - }
2016-07-13 00:53:13,503 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():298) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 4

  MemberBhv_selectOutsideMember.sql
  MemberBhv_selectPartOfMember.sql
  PurchaseBhv_selectPurchaseMonthCursor.sql
  PurchaseBhv_selectPurchaseMonthSummary.sql
- - - - - - - - - -/
2016-07-13 00:53:13,515 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-13 00:53:13,530 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-13 00:53:13,540 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s750ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2016-07-13 00:53:24,400 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2016-07-13 00:53:24,404 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2016-07-13 00:53:24,405 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2016-07-13 00:53:24,405 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2016-07-13 00:53:24,406 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2016-07-13 00:53:24,444 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 00:53:24,444 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 00:53:24,445 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 00:53:24,446 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 00:53:24,491 [main] INFO  (DfSchemaXmlSerializer#serialize():285) - 
2016-07-13 00:53:24,491 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - ...Starting to process JDBC to SchemaXML
2016-07-13 00:53:24,492 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1460) - ...Loading previous schema (schema diff process)
2016-07-13 00:53:24,504 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 00:53:24,656 [main] INFO  (DfSchemaXmlSerializer#generateXML():359) - ...Getting DB connection
2016-07-13 00:53:24,665 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-13 00:53:25,214 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-13 00:53:25,217 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-13 00:53:25,219 [main] INFO  (DfSchemaXmlSerializer#generateXML():362) - ...Getting DB meta data
2016-07-13 00:53:25,221 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-13 00:53:25,223 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 00:53:25,223 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-13 00:53:25,248 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'maihamadb' order by table_name asc
2016-07-13 00:53:25,253 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'maihamadb' order by table_name asc, column_name asc
2016-07-13 00:53:25,281 [main] INFO  (DfSchemaXmlSerializer#processTable():419) - 
2016-07-13 00:53:25,281 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2016-07-13 00:53:25,282 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ [Table List]
2016-07-13 00:53:25,283 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member(TABLE) // 会員: 会員登録時にデータが登録される。...
2016-07-13 00:53:25,358 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_address(TABLE) // 会員住所情報: 会員の住所に関する情報。...
2016-07-13 00:53:25,379 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_following(TABLE) // 会員フォローイング: とある会員が他の会員をフォローできる。すると、フォローした会員の購入履歴が閲覧できる。
2016-07-13 00:53:25,412 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_login(TABLE) // 会員ログイン情報: ログインするたびに登録されるログイン履歴。
2016-07-13 00:53:25,440 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_security(TABLE) // 会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある
2016-07-13 00:53:25,481 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_service(TABLE) // 会員サービス: 会員のサービス情報（ポイントサービスなど）。
2016-07-13 00:53:25,499 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_status(TABLE) // 会員ステータス
2016-07-13 00:53:25,515 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_withdrawal(TABLE) // 会員退会情報: 退会会員の退会に関する詳細な情報。...
2016-07-13 00:53:25,537 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product(TABLE) // 商品
2016-07-13 00:53:25,553 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product_category(TABLE) // 商品カテゴリ: 商品のカテゴリを表現するマスタ。...
2016-07-13 00:53:25,568 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product_status(TABLE) // 商品ステータス
2016-07-13 00:53:25,579 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.purchase(TABLE) // 購入: 一つの商品に対する一回の購入を表現する。...
2016-07-13 00:53:25,596 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.purchase_payment(TABLE) // 購入支払: 購入に対する支払。...
2016-07-13 00:53:25,610 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.region(TABLE) // 地域: 主に会員の住所に対応する地域。...
2016-07-13 00:53:25,624 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.service_rank(TABLE) // サービスランク: 会員のサービスレベルを表現するランク。...
2016-07-13 00:53:25,635 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.withdrawal_reason(TABLE) // 退会理由: 会員に選ばせる定型的な退会理由のマスタ。
2016-07-13 00:53:25,646 [main] INFO  (DfSchemaXmlSerializer#processTable():433) - $ 
2016-07-13 00:53:25,647 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ [Table Count]
2016-07-13 00:53:25,647 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 16
2016-07-13 00:53:25,647 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ = = = = = = = = = =/
2016-07-13 00:53:25,648 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - 
2016-07-13 00:53:25,649 [main] INFO  (DfSchemaXmlSerializer#processSequence():796) - ...Getting sequences
2016-07-13 00:53:25,655 [main] INFO  (DfSchemaXmlSerializer#serialize():300) - ...Serializing XML:
2016-07-13 00:53:25,655 [main] INFO  (DfSchemaXmlSerializer#serialize():301) -   filePath = ./schema/project-schema-maihamadb.xml
2016-07-13 00:53:25,659 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   encoding = UTF-8
2016-07-13 00:53:25,706 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1478) - ...Loading next schema (schema diff process)
2016-07-13 00:53:25,806 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 00:53:25,885 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1493) -  -> same as previous (schema diff)
2016-07-13 00:53:25,886 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-13 00:53:25,898 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s516ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2016-07-13 00:53:26,848 [main] INFO  (TorqueDocumentationTask#begin():175) - +------------------------------------------+
2016-07-13 00:53:26,850 [main] INFO  (TorqueDocumentationTask#begin():176) - |                                          |
2016-07-13 00:53:26,851 [main] INFO  (TorqueDocumentationTask#begin():177) - |                   Doc                    |
2016-07-13 00:53:26,851 [main] INFO  (TorqueDocumentationTask#begin():185) - |                                          |
2016-07-13 00:53:26,852 [main] INFO  (TorqueDocumentationTask#begin():186) - +------------------------------------------+
2016-07-13 00:53:26,888 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 00:53:26,889 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 00:53:26,889 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 00:53:26,890 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 00:53:26,893 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - 
2016-07-13 00:53:26,894 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2016-07-13 00:53:26,894 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():248) - *                   *
2016-07-13 00:53:26,895 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():249) - *    Schema HTML    *
2016-07-13 00:53:26,895 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():250) - *                   *
2016-07-13 00:53:26,895 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():251) - * * * * * * * * * * *
2016-07-13 00:53:26,948 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 00:53:27,060 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2016-07-13 00:53:27,204 [main] INFO  (Database#doEnableDocumentOutputDirectory():1179) - ...Setting up documentOutputDirectory: ./output/doc
2016-07-13 00:53:27,212 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2016-07-13 00:53:27,213 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2016-07-13 00:53:27,214 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2016-07-13 00:53:27,216 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2016-07-13 00:53:27,217 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2016-07-13 00:53:27,219 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2016-07-13 00:53:27,222 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2016-07-13 00:53:27,222 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2016-07-13 00:53:27,225 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_ADDRESS_VALID
2016-07-13 00:53:27,230 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-13 00:53:27,231 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_ADDRESS.[MEMBER_ID]
2016-07-13 00:53:27,231 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.VALID_BEGIN_DATE <= /*targetDate(Date)*/null\n     and $$foreignAlias$$.VALID_END_DATE >= /*targetDate(Date)*/null
2016-07-13 00:53:27,232 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_LOGIN_LATEST
2016-07-13 00:53:27,232 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-13 00:53:27,233 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_LOGIN.[MEMBER_ID]
2016-07-13 00:53:27,233 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.LOGIN_DATETIME = ($$sqbegin$$\nselect max(login.LOGIN_DATETIME)\n  from MEMBER_LOGIN login\n where login.MEMBER_ID = $$foreignAlias$$.MEMBER_ID\n)$$sqend$$
2016-07-13 00:53:27,233 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2016-07-13 00:53:27,244 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 00:53:27,586 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-13 00:53:27,597 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-13 00:53:27,600 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-13 00:53:27,604 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-13 00:53:27,610 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-13 00:53:27,643 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-13 00:53:27,653 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():157) - ...Loading schema history
2016-07-13 00:53:27,700 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():161) -  -> found history: count=4
2016-07-13 00:53:28,229 [main] INFO  (Database#getAvailableProcedureList():2823) -  
2016-07-13 00:53:28,230 [main] INFO  (Database#getAvailableProcedureList():2824) - ...Setting up procedures for documents
2016-07-13 00:53:28,237 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-13 00:53:28,252 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-13 00:53:28,252 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-13 00:53:28,322 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'maihamadb' order by ROUTINE_NAME
2016-07-13 00:53:28,328 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=maihamadb
2016-07-13 00:53:28,329 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_IN_OUT_PARAMETER:{4, 84, cb677351}
2016-07-13 00:53:28,330 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_RETURN_RESULT_SET:{9, 254, 4b86b61f}
2016-07-13 00:53:28,330 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=2
2016-07-13 00:53:28,331 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=2
2016-07-13 00:53:28,373 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-13 00:53:28,392 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-13 00:53:28,398 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s570ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2016-07-13 00:53:31,139 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2016-07-13 00:53:31,142 [main] INFO  (TorqueDataModelTask#begin():110) - |                                          |
2016-07-13 00:53:31,143 [main] INFO  (TorqueDataModelTask#begin():111) - |                 Generate                 |
2016-07-13 00:53:31,143 [main] INFO  (TorqueDataModelTask#begin():112) - |                                          |
2016-07-13 00:53:31,144 [main] INFO  (TorqueDataModelTask#begin():113) - +------------------------------------------+
2016-07-13 00:53:31,184 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 00:53:31,185 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 00:53:31,186 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 00:53:31,187 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 00:53:31,207 [main] INFO  (TorqueDataModelTask#setupControlTemplate():164) - 
2016-07-13 00:53:31,207 [main] INFO  (TorqueDataModelTask#setupControlTemplate():165) - ...Using Java control: om/ControlGenerateJava.vm
2016-07-13 00:53:31,253 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 00:53:31,347 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2016-07-13 00:53:31,626 [main] INFO  (Database#doEnableGenerateOutputDirectory():1147) - ...Setting up generateOutputDirectory: ../src/main/java
2016-07-13 00:53:31,630 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2016-07-13 00:53:31,631 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2016-07-13 00:53:31,632 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2016-07-13 00:53:31,634 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2016-07-13 00:53:31,634 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2016-07-13 00:53:31,636 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2016-07-13 00:53:31,640 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2016-07-13 00:53:31,640 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2016-07-13 00:53:31,644 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_ADDRESS_VALID
2016-07-13 00:53:31,658 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-13 00:53:31,658 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_ADDRESS.[MEMBER_ID]
2016-07-13 00:53:31,659 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.VALID_BEGIN_DATE <= /*targetDate(Date)*/null\n     and $$foreignAlias$$.VALID_END_DATE >= /*targetDate(Date)*/null
2016-07-13 00:53:31,659 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_LOGIN_LATEST
2016-07-13 00:53:31,661 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-13 00:53:31,662 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_LOGIN.[MEMBER_ID]
2016-07-13 00:53:31,662 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.LOGIN_DATETIME = ($$sqbegin$$\nselect max(login.LOGIN_DATETIME)\n  from MEMBER_LOGIN login\n where login.MEMBER_ID = $$foreignAlias$$.MEMBER_ID\n)$$sqend$$
2016-07-13 00:53:31,663 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2016-07-13 00:53:31,676 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 00:53:32,067 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-13 00:53:32,070 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-13 00:53:32,073 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-13 00:53:32,075 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-13 00:53:32,079 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-13 00:53:32,082 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-13 00:53:32,101 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2016-07-13 00:53:32,102 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2016-07-13 00:53:32,103 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2016-07-13 00:53:32,103 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2016-07-13 00:53:32,104 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2016-07-13 00:53:32,104 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2016-07-13 00:53:32,105 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2016-07-13 00:53:32,105 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2016-07-13 00:53:32,105 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2016-07-13 00:53:32,106 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2016-07-13 00:53:32,118 [main] INFO  (Database#info():2711) - public void parseAllCommon() {
2016-07-13 00:53:32,120 [main] INFO  (Database#info():2711) -     parse('CDef');
2016-07-13 00:53:32,168 [main] INFO  (Database#info():2711) -     parse('DBCurrent');
2016-07-13 00:53:32,171 [main] INFO  (Database#info():2711) -     parse('DBFluteConfig');
2016-07-13 00:53:32,196 [main] INFO  (Database#info():2711) -     parse('DBFluteInitializer');
2016-07-13 00:53:32,203 [main] INFO  (Database#info():2711) -     parse('DBMetaInstanceHandler');
2016-07-13 00:53:32,224 [main] INFO  (Database#info():2711) -     parse('EntityDefinedCommonColumn');
2016-07-13 00:53:32,242 [main] INFO  (Database#info():2711) -     parse('ImplementedBehaviorSelector');
2016-07-13 00:53:32,251 [main] INFO  (Database#info():2711) -     parse('ImplementedCommonColumnAutoSetupper');
2016-07-13 00:53:32,260 [main] INFO  (Database#info():2711) -     parse('ImplementedInvokerAssistant');
2016-07-13 00:53:32,268 [main] INFO  (Database#info():2711) -     parse('ImplementedSqlClauseCreator');
2016-07-13 00:53:32,272 [main] INFO  (Database#info():2711) - }
2016-07-13 00:53:32,273 [main] INFO  (Database#info():2711) - public void parseContainerConfig() {
2016-07-13 00:53:32,274 [main] INFO  (Database#info():2711) -     parse('../resources/dbflute.xml')
2016-07-13 00:53:32,300 [main] INFO  (Database#info():2711) - }
2016-07-13 00:53:32,306 [main] INFO  (DfOldClassHandler#info():1033) - public void deleteOldTableClass() {
2016-07-13 00:53:32,360 [main] INFO  (DfOldClassHandler#info():1033) - }
2016-07-13 00:53:32,361 [main] INFO  (Database#info():2711) - public void parseTableClass() {
2016-07-13 00:53:32,362 [main] INFO  (Database#info():2711) -     parse('member');
2016-07-13 00:53:32,990 [main] INFO  (Database#info():2711) -     parse('member_address');
2016-07-13 00:53:33,251 [main] INFO  (Database#info():2711) -     parse('member_following');
2016-07-13 00:53:33,452 [main] INFO  (Database#info():2711) -     parse('member_login');
2016-07-13 00:53:33,633 [main] INFO  (Database#info():2711) -     parse('member_security');
2016-07-13 00:53:33,811 [main] INFO  (Database#info():2711) -     parse('member_service');
2016-07-13 00:53:34,018 [main] INFO  (Database#info():2711) -     parse('member_status');
2016-07-13 00:53:34,188 [main] INFO  (Database#info():2711) -     parse('member_withdrawal');
2016-07-13 00:53:34,372 [main] INFO  (Database#info():2711) -     parse('product');
2016-07-13 00:53:34,593 [main] INFO  (Database#info():2711) -     parse('product_category');
2016-07-13 00:53:34,758 [main] INFO  (Database#info():2711) -     parse('product_status');
2016-07-13 00:53:34,895 [main] INFO  (Database#info():2711) -     parse('purchase');
2016-07-13 00:53:35,096 [main] INFO  (Database#info():2711) -     parse('purchase_payment');
2016-07-13 00:53:35,233 [main] INFO  (Database#info():2711) -     parse('region');
2016-07-13 00:53:35,347 [main] INFO  (Database#info():2711) -     parse('service_rank');
2016-07-13 00:53:35,487 [main] INFO  (Database#info():2711) -     parse('withdrawal_reason');
2016-07-13 00:53:35,640 [main] INFO  (Database#info():2711) - }
2016-07-13 00:53:35,641 [main] INFO  (Database#info():2711) -  
2016-07-13 00:53:35,753 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-13 00:53:35,763 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s644ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2016-07-13 00:53:36,723 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2016-07-13 00:53:36,726 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2016-07-13 00:53:36,726 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2016-07-13 00:53:36,727 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2016-07-13 00:53:36,727 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2016-07-13 00:53:36,748 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 00:53:36,748 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 00:53:36,749 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 00:53:36,749 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 00:53:36,781 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectOutsideMember.sql
2016-07-13 00:53:36,787 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-13 00:53:37,109 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-13 00:53:37,110 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-13 00:53:37,146 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 初めての外だしSQL

 [df:description]
  会員ID、会員名称、生年月日、会員ステータス名称、サービスポイント数を取得
  会員IDの等値、会員名称の前方一致、会員ステータスの等値を and で連結
  それぞれ条件値がない場合は条件自体が無効になるように
  全ての条件値がない場合は全件検索になるように
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , mb.MEMBER_STATUS_CODE
     , stat.MEMBER_STATUS_NAME
     , serv.SERVICE_POINT_COUNT
  from MEMBER mb
    left outer join MEMBER_STATUS stat
      on mb.MEMBER_STATUS_CODE = stat.MEMBER_STATUS_CODE
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
 /*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- //会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'S%' -- //会員名称 (Null Allowed)
       /*END*/
       /*IF pmb.memberStatusCode != null*/
   and mb.MEMBER_STATUS_CODE = /*pmb.memberStatusCode:ref(MEMBER)*/'FML' -- //会員ステータス名称 (Null Allowed)
       /*END*/
/*END*/
2016-07-13 00:53:37,151 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-13 00:53:37,151 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectPartOfMember.sql
2016-07-13 00:53:37,154 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 ページング検索

 [df:description]
 (Manual)ページング検索すること
 o 基本は "初めての外だしSQL" のSQLと同じで...
 o 会員ステータスの等値条件は要らない
 o 会員サービスのサービスポイント数の大なり条件を追加
 o 結合に関して、カウント検索のパフォーマンスを最大限考慮すること (会員サービスの結合とか)
 そのとき、IFコメントに記述する条件が複雑にならないように (代理判定メソッドを使う)
*/

-- #df:entity#

-- !df:pmb extends ManualPaging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , serv.SERVICE_POINT_COUNT
-- ELSE select count(*) 
/*END*/
  from MEMBER mb
    /*IF pmb.needsJoinService()*/
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
    /*END*/
/*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- 会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'%S%' -- //会員名称 (Null Allowed)
       /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
   and serv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // サービスポイント数の下限値 (Null Allowed)
      /*END*/
/*END*/
/*IF pmb.isPaging()*/
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
/*END*/
2016-07-13 00:53:37,174 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-13 00:53:37,175 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthCursor.sql
2016-07-13 00:53:37,179 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 外だしSQLでカーソル検索ってみる

 [df:description]
 "さらに外だし" と同じ仕様(ページングは不要)
 カーソル検索として作成すること
 明らかにおかしいカラム名のカラムはデータ取得してはいけない (後は何を取ってもOKですが、これだけはっ)
*/

-- #df:entity#
-- +cursor+

-- !df:pmb!
-- !!AutoDetect!!

select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                           
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  from PURCHASE pch
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
2016-07-13 00:53:37,186 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-13 00:53:37,187 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthSummary.sql
2016-07-13 00:53:37,188 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 さらに外だし

 [df:description]
 "会員と購入月" ごとの購入の平均購入価格、合計購入数量を検索する
 会員ID、会員名称、購入月、平均購入価格、合計購入数量という形で検索
 "支払済みの購入だけ" という条件が指定できるようにする
 会員名称の曖昧検索(部分一致)という条件が指定ができるようにする
 会員のサービスポイント数の大なり条件が指定できるようにする
 会員IDの昇順、購入月の降順で並べる
*/

-- #df:entity#

-- !df:pmb extends Paging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                               
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  -- ELSE select count(*) from (select mem.MEMBER_ID
/*END*/ 
  from PURCHASE pch
  /*IF pmb.needsJoinMember()*/
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
  /*IF pmb.needsJoinService()*/
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
/*IF pmb.isPaging()*/
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
  -- ELSE ) as count
/*END*/
2016-07-13 00:53:37,211 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-13 00:53:37,211 [main] INFO  (DfSqlFileFireMan#fire():89) - {Fired SQL}: success=4 failure=0 (in 4 files)
2016-07-13 00:53:37,212 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-13 00:53:37,218 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s507ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o MemberBhv_selectOutsideMember.sql
  o MemberBhv_selectPartOfMember.sql
  o PurchaseBhv_selectPurchaseMonthCursor.sql
  o PurchaseBhv_selectPurchaseMonthSummary.sql

   o: OK (4)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2016-07-13 00:53:38,034 [main] INFO  (DfSql2EntityTask#begin():105) - +------------------------------------------+
2016-07-13 00:53:38,036 [main] INFO  (DfSql2EntityTask#begin():106) - |                                          |
2016-07-13 00:53:38,036 [main] INFO  (DfSql2EntityTask#begin():107) - |                Sql2Entity                |
2016-07-13 00:53:38,037 [main] INFO  (DfSql2EntityTask#begin():108) - |                                          |
2016-07-13 00:53:38,037 [main] INFO  (DfSql2EntityTask#begin():109) - +------------------------------------------+
2016-07-13 00:53:38,061 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 00:53:38,061 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 00:53:38,061 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 00:53:38,062 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 00:53:38,073 [main] INFO  (DfSql2EntityTask#setupControlTemplate():175) - 
2016-07-13 00:53:38,073 [main] INFO  (DfSql2EntityTask#setupControlTemplate():176) - ...Using Java control: om/ControlSql2EntityJava.vm
2016-07-13 00:53:38,084 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 00:53:38,189 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectOutsideMember.sql
2016-07-13 00:53:38,196 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-13 00:53:38,541 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-13 00:53:38,542 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-13 00:53:38,545 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 初めての外だしSQL

 [df:description]
  会員ID、会員名称、生年月日、会員ステータス名称、サービスポイント数を取得
  会員IDの等値、会員名称の前方一致、会員ステータスの等値を and で連結
  それぞれ条件値がない場合は条件自体が無効になるように
  全ての条件値がない場合は全件検索になるように
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , mb.MEMBER_STATUS_CODE
     , stat.MEMBER_STATUS_NAME
     , serv.SERVICE_POINT_COUNT
  from MEMBER mb
    left outer join MEMBER_STATUS stat
      on mb.MEMBER_STATUS_CODE = stat.MEMBER_STATUS_CODE
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
 /*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- //会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'S%' -- //会員名称 (Null Allowed)
       /*END*/
       /*IF pmb.memberStatusCode != null*/
   and mb.MEMBER_STATUS_CODE = /*pmb.memberStatusCode:ref(MEMBER)*/'FML' -- //会員ステータス名称 (Null Allowed)
       /*END*/
/*END*/
2016-07-13 00:53:38,602 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-13 00:53:38,603 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectPartOfMember.sql
2016-07-13 00:53:38,604 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 ページング検索

 [df:description]
 (Manual)ページング検索すること
 o 基本は "初めての外だしSQL" のSQLと同じで...
 o 会員ステータスの等値条件は要らない
 o 会員サービスのサービスポイント数の大なり条件を追加
 o 結合に関して、カウント検索のパフォーマンスを最大限考慮すること (会員サービスの結合とか)
 そのとき、IFコメントに記述する条件が複雑にならないように (代理判定メソッドを使う)
*/

-- #df:entity#

-- !df:pmb extends ManualPaging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , serv.SERVICE_POINT_COUNT
-- ELSE select count(*) 
/*END*/
  from MEMBER mb
    /*IF pmb.needsJoinService()*/
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
    /*END*/
/*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- 会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'%S%' -- //会員名称 (Null Allowed)
       /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
   and serv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // サービスポイント数の下限値 (Null Allowed)
      /*END*/
/*END*/
/*IF pmb.isPaging()*/
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
/*END*/
2016-07-13 00:53:38,613 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-13 00:53:38,613 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthCursor.sql
2016-07-13 00:53:38,615 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 外だしSQLでカーソル検索ってみる

 [df:description]
 "さらに外だし" と同じ仕様(ページングは不要)
 カーソル検索として作成すること
 明らかにおかしいカラム名のカラムはデータ取得してはいけない (後は何を取ってもOKですが、これだけはっ)
*/

-- #df:entity#
-- +cursor+

-- !df:pmb!
-- !!AutoDetect!!

select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                           
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  from PURCHASE pch
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
2016-07-13 00:53:38,623 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-13 00:53:38,624 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthSummary.sql
2016-07-13 00:53:38,625 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 さらに外だし

 [df:description]
 "会員と購入月" ごとの購入の平均購入価格、合計購入数量を検索する
 会員ID、会員名称、購入月、平均購入価格、合計購入数量という形で検索
 "支払済みの購入だけ" という条件が指定できるようにする
 会員名称の曖昧検索(部分一致)という条件が指定ができるようにする
 会員のサービスポイント数の大なり条件が指定できるようにする
 会員IDの昇順、購入月の降順で並べる
*/

-- #df:entity#

-- !df:pmb extends Paging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                               
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  -- ELSE select count(*) from (select mem.MEMBER_ID
/*END*/ 
  from PURCHASE pch
  /*IF pmb.needsJoinMember()*/
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
  /*IF pmb.needsJoinService()*/
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
/*IF pmb.isPaging()*/
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
  -- ELSE ) as count
/*END*/
2016-07-13 00:53:38,647 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-13 00:53:38,648 [main] INFO  (DfSqlFileFireMan#fire():89) - {Fired SQL}: success=4 failure=0 (in 4 files)
2016-07-13 00:53:38,654 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2016-07-13 00:53:38,655 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2016-07-13 00:53:38,716 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'maihamadb' order by ROUTINE_NAME
2016-07-13 00:53:38,720 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=maihamadb
2016-07-13 00:53:38,721 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_IN_OUT_PARAMETER:{4, 84, cb677351}
2016-07-13 00:53:38,721 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_RETURN_RESULT_SET:{9, 254, 4b86b61f}
2016-07-13 00:53:38,721 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=2
2016-07-13 00:53:38,722 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=2
2016-07-13 00:53:38,750 [main] INFO  (DfProcedureExecutionMetaExtractor#doExtractExecutionMetaData():109) - ...Calling: {call SP_IN_OUT_PARAMETER(?, ?, ?)}
2016-07-13 00:53:38,775 [main] INFO  (DfProcedureExecutionMetaExtractor#doExtractExecutionMetaData():109) - ...Calling: {call SP_RETURN_RESULT_SET(?)}
2016-07-13 00:53:38,789 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2016-07-13 00:53:38,789 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2016-07-13 00:53:38,789 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():107) - [SpInOutParameterPmb]: maihamadb.SP_IN_OUT_PARAMETER // procedureNoResult
2016-07-13 00:53:38,791 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     String VInVarchar; // procedureColumnIn(12, VARCHAR)
2016-07-13 00:53:38,791 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     String VOutVarchar; // procedureColumnOut(12, VARCHAR)
2016-07-13 00:53:38,792 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     String VInoutVarchar; // procedureColumnInOut(12, VARCHAR)
2016-07-13 00:53:38,792 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():107) - [SpReturnResultSetPmb]: maihamadb.SP_RETURN_RESULT_SET // procedureNoResult
2016-07-13 00:53:38,793 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     java.time.LocalDate birthdateFrom; // procedureColumnIn(91, DATE)
2016-07-13 00:53:38,793 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():171) -     List<SpReturnResultSetNotParamResult1> notParamResult1; // procedureColumnResult
2016-07-13 00:53:38,794 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():171) -     List<SpReturnResultSetNotParamResult2> notParamResult2; // procedureColumnResult
2016-07-13 00:53:38,794 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2016-07-13 00:53:38,794 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2016-07-13 00:53:38,824 [main] INFO  (DfSql2EntityTask#initControlContext():306) - 
2016-07-13 00:53:38,825 [main] INFO  (DfSql2EntityTask#initControlContext():307) - ...Preparing generation of customize-entities and parameter-beans
2016-07-13 00:53:38,825 [main] INFO  (DfSql2EntityTask#initControlContext():308) - * * * * * * * * * *
2016-07-13 00:53:38,825 [main] INFO  (DfSql2EntityTask#initControlContext():309) - * CustomizeEntity *
2016-07-13 00:53:38,825 [main] INFO  (DfSql2EntityTask#initControlContext():310) - * * * * * * * * * *
2016-07-13 00:53:38,837 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():922) - 
OutsideMember
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  BIRTHDATE DATE(10) related to member.BIRTHDATE
  MEMBER_STATUS_CODE CHAR(3) related to member.MEMBER_STATUS_CODE
  MEMBER_STATUS_NAME VARCHAR(50) related to member_status.MEMBER_STATUS_NAME
  SERVICE_POINT_COUNT INT(11) related to member_service.SERVICE_POINT_COUNT

PartOfMember
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  BIRTHDATE DATE(10) related to member.BIRTHDATE
  SERVICE_POINT_COUNT INT(11) related to member_service.SERVICE_POINT_COUNT

PurchaseMonthCursor (cursor)
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  購入月 INT(2)
  平均購入価格 DECIMAL(14, 4)
  合計購入量 DECIMAL(32)

PurchaseMonthSummary
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  購入月 INT(2)
  平均購入価格 DECIMAL(14, 4)
  合計購入量 DECIMAL(32)

SpReturnResultSetNotParamResult1 (procedure)
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  BIRTHDATE DATE(10) related to member.BIRTHDATE
  MEMBER_STATUS_CODE CHAR(3) related to member.MEMBER_STATUS_CODE

SpReturnResultSetNotParamResult2 (procedure)
  MEMBER_STATUS_CODE CHAR(3) related to member_status.MEMBER_STATUS_CODE
  MEMBER_STATUS_NAME VARCHAR(50) related to member_status.MEMBER_STATUS_NAME
2016-07-13 00:53:38,839 [main] INFO  (DfSql2EntityTask#showParameterBean():927) - * * * * * * * * *
2016-07-13 00:53:38,839 [main] INFO  (DfSql2EntityTask#showParameterBean():928) - * ParameterBean *
2016-07-13 00:53:38,839 [main] INFO  (DfSql2EntityTask#showParameterBean():929) - * * * * * * * * *
2016-07-13 00:53:38,840 [main] INFO  (DfSql2EntityTask#showParameterBean():971) - 
OutsideMemberPmb (typed to list, entity)
  Integer memberId:comment(会員ID (Null Allowed))
  String memberName:likePrefix|comment(会員名称 (Null Allowed))
  String memberStatusCode:ref(MEMBER)|comment(会員ステータス名称 (Null Allowed))

PartOfMemberPmb extends SimplePagingBean (typed to entity, manual-paging)
  Integer memberId
  String memberName:likeContain|comment(会員名称 (Null Allowed))
  Integer SERVICE_POINT_COUNT:comment(サービスポイント数の下限値 (Null Allowed))

PurchaseMonthCursorPmb (typed to cursor)
  String memberName:likeContain|comment(会員IDで部分一致(Null Allowed))
  Integer SERVICE_POINT_COUNT:comment(指定されたポイント以上かどうか(Null Allowed))

PurchaseMonthSummaryPmb extends SimplePagingBean (typed to entity, manual-paging)
  String memberName:likeContain|comment(会員IDで部分一致(Null Allowed))
  Integer SERVICE_POINT_COUNT:comment(指定されたポイント以上かどうか(Null Allowed))

SpInOutParameterPmb (procedure)
  v_in_varchar
  v_out_varchar
  v_inout_varchar

SpReturnResultSetPmb (procedure with customize-entity)
  birthdateFrom
2016-07-13 00:53:38,845 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2016-07-13 00:53:39,029 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 00:53:39,037 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-13 00:53:39,040 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-13 00:53:39,043 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-13 00:53:39,045 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-13 00:53:39,047 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-13 00:53:39,050 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-13 00:53:39,064 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1163) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2016-07-13 00:53:39,069 [main] INFO  (DfOldClassHandler#info():1033) - public void deleteOldCustomizeClass() {
2016-07-13 00:53:39,087 [main] INFO  (DfOldClassHandler#info():1033) - }
2016-07-13 00:53:39,088 [main] INFO  (Database#info():2711) - public void parseCustomizeEntity() {
2016-07-13 00:53:39,231 [main] INFO  (Database#info():2711) -     parse('OutsideMember')
2016-07-13 00:53:39,299 [main] INFO  (Database#info():2711) -     parse('PartOfMember')
2016-07-13 00:53:39,313 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthCursorCursor')
2016-07-13 00:53:39,371 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthCursor')
2016-07-13 00:53:39,440 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthSummary')
2016-07-13 00:53:39,495 [main] INFO  (Database#info():2711) -     parse('SpReturnResultSetNotParamResult1')
2016-07-13 00:53:39,540 [main] INFO  (Database#info():2711) -     parse('SpReturnResultSetNotParamResult2')
2016-07-13 00:53:39,541 [main] INFO  (Database#info():2711) - }
2016-07-13 00:53:39,543 [main] INFO  (Database#info():2711) - public void parseParameterBean() {
2016-07-13 00:53:39,551 [main] INFO  (Database#info():2711) -     parse('OutsideMemberPmb');
2016-07-13 00:53:39,592 [main] INFO  (Database#info():2711) -     parse('PartOfMemberPmb');
2016-07-13 00:53:39,615 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthCursorPmb');
2016-07-13 00:53:39,633 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthSummaryPmb');
2016-07-13 00:53:39,655 [main] INFO  (Database#info():2711) -     parse('SpInOutParameterPmb');
2016-07-13 00:53:39,684 [main] INFO  (Database#info():2711) -     parse('SpReturnResultSetPmb');
2016-07-13 00:53:39,703 [main] INFO  (Database#info():2711) - }
2016-07-13 00:53:39,750 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():298) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 4

  MemberBhv_selectOutsideMember.sql
  MemberBhv_selectPartOfMember.sql
  PurchaseBhv_selectPurchaseMonthCursor.sql
  PurchaseBhv_selectPurchaseMonthSummary.sql
- - - - - - - - - -/
2016-07-13 00:53:39,760 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-13 00:53:39,772 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-13 00:53:39,779 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s758ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2016-07-13 18:36:49,269 [main] INFO  (DfReplaceSchemaTask#begin():91) - +------------------------------------------+
2016-07-13 18:36:49,273 [main] INFO  (DfReplaceSchemaTask#begin():92) - |                                          |
2016-07-13 18:36:49,273 [main] INFO  (DfReplaceSchemaTask#begin():93) - |              ReplaceSchema               |
2016-07-13 18:36:49,280 [main] INFO  (DfReplaceSchemaTask#begin():101) - |                                          |
2016-07-13 18:36:49,280 [main] INFO  (DfReplaceSchemaTask#begin():102) - +------------------------------------------+
2016-07-13 18:36:49,282 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():342) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2016-07-13 18:36:50,370 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 18:36:50,371 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 18:36:50,372 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 18:36:50,372 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 18:36:50,388 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-13 18:36:50,883 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-13 18:36:50,884 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-13 18:36:50,911 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2016-07-13 18:36:50,912 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2016-07-13 18:36:50,912 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2016-07-13 18:36:50,914 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2016-07-13 18:36:50,915 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2016-07-13 18:36:50,919 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2016-07-13 18:36:50,943 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-13 18:36:50,943 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 18:36:50,944 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-13 18:36:50,991 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_address
2016-07-13 18:36:50,999 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_following
2016-07-13 18:36:51,006 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_login
2016-07-13 18:36:51,012 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_security
2016-07-13 18:36:51,022 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_service
2016-07-13 18:36:51,029 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table member_withdrawal
2016-07-13 18:36:51,044 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table purchase_payment
2016-07-13 18:36:51,073 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member drop foreign key FK_MEMBER_MEMBER_STATUS
2016-07-13 18:36:51,094 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_address drop foreign key FK_MEMBER_ADDRESS_MEMBER
2016-07-13 18:36:51,110 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_address drop foreign key FK_MEMBER_ADDRESS_REGION
2016-07-13 18:36:51,134 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_following drop foreign key FK_MEMBER_FOLLOWING_MY_MEMBER
2016-07-13 18:36:51,151 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_following drop foreign key FK_MEMBER_FOLLOWING_YOUR_MEMBER
2016-07-13 18:36:51,171 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_login drop foreign key FK_MEMBER_LOGIN_MEMBER_STATUS
2016-07-13 18:36:51,189 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_login drop foreign key FK_MEMBER_LOGIN_MEMBER
2016-07-13 18:36:51,203 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_security drop foreign key FK_MEMBER_SECURITY_MEMBER
2016-07-13 18:36:51,224 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_service drop foreign key FK_MEMBER_SERVICE_MEMBER
2016-07-13 18:36:51,240 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_service drop foreign key FK_MEMBER_SERVICE_SERVICE_RANK_CODE
2016-07-13 18:36:51,264 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_withdrawal drop foreign key FK_MEMBER_WITHDRAWAL_MEMBER
2016-07-13 18:36:51,280 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table member_withdrawal drop foreign key FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON
2016-07-13 18:36:51,306 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table product drop foreign key FK_PRODUCT_PRODUCT_CATEGORY
2016-07-13 18:36:51,320 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table product drop foreign key FK_PRODUCT_PRODUCT_STATUS
2016-07-13 18:36:51,342 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table product_category drop foreign key FK_PRODUCT_CATEGORY_PARENT
2016-07-13 18:36:51,364 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table purchase drop foreign key FK_PURCHASE_MEMBER
2016-07-13 18:36:51,381 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table purchase drop foreign key FK_PURCHASE_PRODUCT
2016-07-13 18:36:51,404 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table purchase_payment drop foreign key FK_PURCHASE_PAYMENT_PURCHASE
2016-07-13 18:36:51,425 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member
2016-07-13 18:36:51,428 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_address
2016-07-13 18:36:51,432 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_following
2016-07-13 18:36:51,438 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_login
2016-07-13 18:36:51,441 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_security
2016-07-13 18:36:51,445 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_service
2016-07-13 18:36:51,448 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_status
2016-07-13 18:36:51,452 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table member_withdrawal
2016-07-13 18:36:51,457 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table product
2016-07-13 18:36:51,461 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table product_category
2016-07-13 18:36:51,464 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table product_status
2016-07-13 18:36:51,469 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table purchase
2016-07-13 18:36:51,473 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table purchase_payment
2016-07-13 18:36:51,477 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table region
2016-07-13 18:36:51,481 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table service_rank
2016-07-13 18:36:51,484 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table withdrawal_reason
2016-07-13 18:36:51,604 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop procedure SP_IN_OUT_PARAMETER
2016-07-13 18:36:51,607 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop procedure SP_RETURN_RESULT_SET
2016-07-13 18:36:51,610 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2016-07-13 18:36:51,610 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2016-07-13 18:36:51,610 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2016-07-13 18:36:51,611 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2016-07-13 18:36:51,611 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2016-07-13 18:36:51,612 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2016-07-13 18:36:51,623 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-00-system.sql
2016-07-13 18:36:51,626 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2016-07-13 18:36:51,627 [main] INFO  (DfCreateSchemaProcess$1#dispatch():295) - ...Creating a connection to system
2016-07-13 18:36:51,628 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():520) - ...Creating a connection for additional user: root
2016-07-13 18:36:51,639 [main] INFO  (DfCreateSchemaProcess$1#dispatch():321) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2016-07-13 18:36:51,640 [main] INFO  (DfCreateSchemaProcess$1#dispatch():323) -  -> Can't create database 'maihamadb'; database exists
2016-07-13 18:36:51,641 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():433) - ...Reviving the user 'system' until the end of this SQL file
2016-07-13 18:36:51,642 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on maihamadb.*
  to maihamadb@localhost identified by 'maihamadb'
2016-07-13 18:36:51,644 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2016-07-13 18:36:51,649 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-07-13 18:36:51,649 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-10-basic.sql
2016-07-13 18:36:51,650 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():370) - ...Saying good-bye to the user 'system' again
2016-07-13 18:36:51,650 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():374) - ...Clearing revived users
2016-07-13 18:36:51,650 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():381) - ...Coming back to the main user from the user 'system'
2016-07-13 18:36:51,658 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER(
    MEMBER_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員ID: 会員を識別するID。連番として基本的に自動採番される。
（会員IDだけに限らず）採番方法はDBMSによって変わる。',
    MEMBER_NAME VARCHAR(160) NOT NULL COMMENT '会員名称: 会員のフルネームの名称。',
    MEMBER_ACCOUNT VARCHAR(50) NOT NULL COMMENT '会員アカウント: 会員がログイン時に利用するアカウントNO。',
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード',
    FORMALIZED_DATETIME DATETIME COMMENT '正式会員日時: 会員が正式に確定した日時。一度確定したら更新されない。
仮会員のときはnull。',
    BIRTHDATE DATE COMMENT '生年月日: 必須項目ではないので、このデータがない会員もいる。',
    REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時: レコードが登録された日時。共通カラムの一つ。',
    REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ: レコードを登録したユーザ。共通カラムの一つ。',
    UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時: レコードが（最後に）更新された日時。共通カラムの一つ。',
    UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ: レコードを更新したユーザ。',
    VERSION_NO BIGINT NOT NULL COMMENT 'バージョンNO: レコードのバージョンを示すNO。
更新回数と等しく、主に排他制御のために利用される。',
    PRIMARY KEY (MEMBER_ID),
    UNIQUE (MEMBER_ACCOUNT)
) COMMENT='会員: 会員登録時にデータが登録される。
基本的に物理削除はなく、退会したらステータスが退会会員になる。'
2016-07-13 18:36:51,682 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_ADDRESS(
    MEMBER_ADDRESS_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員住所ID: 会員住所を識別するID。
履歴分も含むテーブルなので、これ自体はFKではない。',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
履歴分を含むため、これだけではユニークにはならない。',
    VALID_BEGIN_DATE DATE NOT NULL COMMENT '有効開始日: 一つの有効期間の開始を示す日付。
前の有効終了日の次の日の値が格納される。',
    VALID_END_DATE DATE NOT NULL COMMENT '有効終了日: 有効期間の終了日。
次の有効開始日の一日前の値が格納される。
ただし、次の有効期間がない場合は 9999/12/31 となる。',
    ADDRESS VARCHAR(200) NOT NULL COMMENT '住所: まるごと住所',
    REGION_ID INTEGER NOT NULL COMMENT '地域ID: 地域を参照するID。
ここでは特に住所の内容と連動しているわけではない。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ADDRESS_ID),
    UNIQUE (MEMBER_ID, VALID_BEGIN_DATE)
) COMMENT='会員住所情報: 会員の住所に関する情報。
同時に有効期間ごとに履歴管理されている。'
2016-07-13 18:36:51,743 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_LOGIN(
    MEMBER_LOGIN_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員ログインID',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID',
    LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時: ログインした瞬間の日時。',
    MOBILE_LOGIN_FLG INTEGER NOT NULL COMMENT 'モバイルログインフラグ: モバイル機器からのログインか否か。',
    LOGIN_MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT 'ログイン会員ステータスコード: ログイン時の会員ステータス',
    PRIMARY KEY (MEMBER_LOGIN_ID),
    UNIQUE (MEMBER_ID, LOGIN_DATETIME)
) COMMENT='会員ログイン情報: ログインするたびに登録されるログイン履歴。'
2016-07-13 18:36:51,754 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SECURITY(
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: そのまま one-to-one を構成するためのFKとなる。',
    LOGIN_PASSWORD VARCHAR(50) NOT NULL COMMENT 'ログインパスワード: ログイン時に利用するパスワード。
本当は良くないが、Exampleなのでひとまず暗号化していない。',
    REMINDER_QUESTION VARCHAR(50) NOT NULL COMMENT 'リマインダ質問: パスワードを忘れた際のリマインダ機能における質問の内容。',
    REMINDER_ANSWER VARCHAR(50) NOT NULL COMMENT 'リマインダ回答: パスワードを忘れた際のリマインダ機能における質問の答え。',
    REMINDER_USE_COUNT INTEGER NOT NULL COMMENT 'リマインダ回数: 忘れっぽい人を分析するためのもの。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある'
2016-07-13 18:36:51,807 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SERVICE(
	MEMBER_SERVICE_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員サービスID: 代理キー。律儀にIDの役割を分ける',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。ユニークなので、会員とは one-to-one の関係に。',
    SERVICE_POINT_COUNT INTEGER NOT NULL COMMENT 'サービスポイント数: 会員が現在利用できるサービスポイントの数。
基本的に、購入時には増えてポイントを使ったら減る。',
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを参照するコード。
どんなランクがあるのかドキドキですね。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_SERVICE_ID),
    UNIQUE (MEMBER_ID)
) COMMENT='会員サービス: 会員のサービス情報（ポイントサービスなど）。'
2016-07-13 18:36:51,818 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_WITHDRAWAL(
    MEMBER_ID INTEGER NOT NULL,
    WITHDRAWAL_REASON_CODE CHAR(3) COMMENT '退会理由コード: 退会した定型理由を参照するコード。
何も言わずに退会する会員もいるので必須項目ではない。',
    WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト: 会員がフリーテキストで入力できる退会理由。
もう言いたいこと言ってもらう感じ。',
    WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT '退会日時: 退会した瞬間の日時。
正式会員日時と違い、こっちはone-to-oneの別テーブルで。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員退会情報: 退会会員の退会に関する詳細な情報。
退会会員のみデータが存在する。'
2016-07-13 18:36:51,889 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE(
    PURCHASE_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入ID: 連番',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
購入を識別する自然キー（複合ユニーク制約）の筆頭要素。',
    PRODUCT_ID INTEGER NOT NULL COMMENT '商品ID: 商品を参照するID。',
    PURCHASE_DATETIME DATETIME NOT NULL COMMENT '購入日時: 購入した瞬間の日時。',
    PURCHASE_COUNT INTEGER NOT NULL COMMENT '購入数量: 購入した商品の（一回の購入における）数量。',
    PURCHASE_PRICE INTEGER NOT NULL COMMENT '購入価格: 購入によって実際に会員が支払った（支払う予定の）価格。
基本は商品の定価に購入数量を掛けたものになるが、
ポイント利用や割引があったりと必ずしもそうはならない。',
    PAYMENT_COMPLETE_FLG INTEGER NOT NULL COMMENT '支払完了フラグ: この購入に関しての支払いが完了しているか否か。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PURCHASE_ID),
    UNIQUE (MEMBER_ID, PRODUCT_ID, PURCHASE_DATETIME),
    KEY (MEMBER_ID),
    KEY (PRODUCT_ID)
) COMMENT='購入: 一つの商品に対する一回の購入を表現する。
一回の購入で一つの商品を複数個買うこともある。'
2016-07-13 18:36:51,965 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE_PAYMENT(
    PURCHASE_PAYMENT_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入支払ID: 連番',
    PURCHASE_ID BIGINT NOT NULL COMMENT '購入ID: 支払い対象の購入へのID',
    PAYMENT_AMOUNT DECIMAL(10,2) NOT NULL COMMENT '支払金額: 支払った金額。さて、小数点なのはなぜでしょう？',
    PAYMENT_DATETIME DATETIME NOT NULL COMMENT '支払日時: 支払ったときの日時',
    PAYMENT_METHOD_CODE CHAR(3) NOT NULL COMMENT '支払方法コード: 手渡しや銀行振込など',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (PURCHASE_PAYMENT_ID)
) COMMENT='購入支払: 購入に対する支払。
分割払いもできるのでmanyとなり、会員からの孫テーブルのテストができてうれしい。'
2016-07-13 18:36:51,976 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT(
    PRODUCT_ID INTEGER AUTO_INCREMENT NOT NULL,
    PRODUCT_NAME VARCHAR(50) NOT NULL COMMENT '商品名称',
    PRODUCT_HANDLE_CODE VARCHAR(100) NOT NULL COMMENT '商品ハンドルコード: 商品を識別する業務上のコード。',
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL,
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL,
    REGULAR_PRICE INTEGER NOT NULL COMMENT '定価',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PRODUCT_ID),
    UNIQUE (PRODUCT_HANDLE_CODE)
) COMMENT='商品'
2016-07-13 18:36:52,027 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_CATEGORY(
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL COMMENT '商品カテゴリコード',
    PRODUCT_CATEGORY_NAME VARCHAR(50) NOT NULL COMMENT '商品カテゴリ名称',
    PARENT_CATEGORY_CODE CHAR(3) COMMENT '親カテゴリコード: 最上位の場合はデータなし。',
    PRIMARY KEY (PRODUCT_CATEGORY_CODE)
) COMMENT='商品カテゴリ: 商品のカテゴリを表現するマスタ。
自己参照の階層になっている。'
2016-07-13 18:36:52,038 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_STATUS(
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL COMMENT '商品ステータスコード',
    PRODUCT_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '商品ステータス名称',
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (PRODUCT_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='商品ステータス'
2016-07-13 18:36:52,049 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table REGION(
    REGION_ID INTEGER NOT NULL COMMENT '地域ID',
    REGION_NAME VARCHAR(50) NOT NULL COMMENT '地域名称',
    PRIMARY KEY (REGION_ID)
) COMMENT='地域: 主に会員の住所に対応する地域。
かなりざっくりした感じではある。'
2016-07-13 18:36:52,058 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table SERVICE_RANK(
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを識別するコード。',
    SERVICE_RANK_NAME VARCHAR(50) NOT NULL COMMENT 'サービスランク名称: サービスランクの名称。
（ゴールドとかプラチナとか基本的には威厳のある名前）',
    SERVICE_POINT_INCIDENCE NUMERIC(5, 3) NOT NULL COMMENT 'サービスポイント発生率: 購入ごとのサービスポイントの発生率。
購入価格にこの値をかけた数が発生ポイント。',
    NEW_ACCEPTABLE_FLG INTEGER NOT NULL COMMENT '新規受け入れ可能フラグ: このランクへの新規受け入れができるかどうか。',
    DESCRIPTION VARCHAR(200) NOT NULL,
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (SERVICE_RANK_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='サービスランク: 会員のサービスレベルを表現するランク。
（ゴールドとかプラチナとか）'
2016-07-13 18:36:52,095 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_STATUS(
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード: 会員ステータスを識別するコード。',
    MEMBER_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '会員ステータス名称',
    DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明: 会員ステータスそれぞれの説明。
気の利いた説明があるとディベロッパーがとても助かる。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順: UI上のステータスの表示順を示すNO。
並べるときは、このカラムに対して昇順のソート条件にする。',
    PRIMARY KEY (MEMBER_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='会員ステータス'
2016-07-13 18:36:52,107 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table WITHDRAWAL_REASON(
    WITHDRAWAL_REASON_CODE CHAR(3) NOT NULL COMMENT '退会理由コード',
    WITHDRAWAL_REASON_TEXT TEXT NOT NULL COMMENT '退会理由テキスト: 退会理由の内容。テキスト形式なので目いっぱい書けるが、
そうするとUI側できれいに見せるのが大変でしょうね。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順',
    PRIMARY KEY (WITHDRAWAL_REASON_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='退会理由: 会員に選ばせる定型的な退会理由のマスタ。'
2016-07-13 18:36:52,147 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_FOLLOWING(
    MEMBER_FOLLOWING_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員フォローイングID: 連番',
    MY_MEMBER_ID INTEGER NOT NULL COMMENT 'わたし: 気になった人がいて...勇気を振り絞った会員のID。',
    YOUR_MEMBER_ID INTEGER NOT NULL COMMENT 'あなた: いきなりのアクションに...ちょっと心揺らいだ会員のID。',
    FOLLOW_DATETIME DATETIME NOT NULL COMMENT 'その瞬間: ふりかえるとちょっと恥ずかしい気持ちになる日時',
    PRIMARY KEY (MEMBER_FOLLOWING_ID),
    UNIQUE (MY_MEMBER_ID, YOUR_MEMBER_ID)
) COMMENT='会員フォローイング: とある会員が他の会員をフォローできる。すると、フォローした会員の購入履歴が閲覧できる。'
2016-07-13 18:36:52,158 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER add constraint FK_MEMBER_MEMBER_STATUS 
    foreign key (MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-07-13 18:36:52,175 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-13 18:36:52,193 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_REGION 
    foreign key (REGION_ID) references REGION (REGION_ID)
2016-07-13 18:36:52,214 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER_STATUS 
    foreign key (LOGIN_MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-07-13 18:36:52,232 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-13 18:36:52,251 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-13 18:36:52,272 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_SERVICE_RANK_CODE 
    foreign key (SERVICE_RANK_CODE) references SERVICE_RANK (SERVICE_RANK_CODE)
2016-07-13 18:36:52,292 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SECURITY add constraint FK_MEMBER_SECURITY_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-13 18:36:52,311 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-13 18:36:52,332 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON 
    foreign key (WITHDRAWAL_REASON_CODE) references WITHDRAWAL_REASON (WITHDRAWAL_REASON_CODE)
2016-07-13 18:36:52,352 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-13 18:36:52,374 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_PRODUCT 
    foreign key (PRODUCT_ID) references PRODUCT (PRODUCT_ID)
2016-07-13 18:36:52,406 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE_PAYMENT add constraint FK_PURCHASE_PAYMENT_PURCHASE 
    foreign key (PURCHASE_ID) references PURCHASE (PURCHASE_ID)
2016-07-13 18:36:52,434 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_CATEGORY 
    foreign key (PRODUCT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-07-13 18:36:52,465 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_STATUS 
    foreign key (PRODUCT_STATUS_CODE) references PRODUCT_STATUS (PRODUCT_STATUS_CODE)
2016-07-13 18:36:52,495 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT_CATEGORY add constraint FK_PRODUCT_CATEGORY_PARENT 
    foreign key (PARENT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-07-13 18:36:52,523 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_MY_MEMBER 
    foreign key (MY_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-13 18:36:52,543 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_YOUR_MEMBER 
    foreign key (YOUR_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-13 18:36:52,570 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_UNIQUE_REVERSE on MEMBER_FOLLOWING(YOUR_MEMBER_ID, MY_MEMBER_ID)
2016-07-13 18:36:52,594 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_FOLLOW_DATETIME on MEMBER_FOLLOWING(FOLLOW_DATETIME)
2016-07-13 18:36:52,621 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_MEMBER_NAME on MEMBER(MEMBER_NAME)
2016-07-13 18:36:52,638 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FORMALIZED_DATETIME on MEMBER(FORMALIZED_DATETIME)
2016-07-13 18:36:52,657 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_LOGIN_DATETIME on MEMBER_LOGIN(LOGIN_DATETIME)
2016-07-13 18:36:52,677 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_SERVICE_POINT_COUNT on MEMBER_SERVICE(SERVICE_POINT_COUNT)
2016-07-13 18:36:52,696 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRODUCT_DATETIME on PURCHASE(PRODUCT_ID, PURCHASE_DATETIME)
2016-07-13 18:36:52,716 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_DATETIME_MEMBER on PURCHASE(PURCHASE_DATETIME, MEMBER_ID)
2016-07-13 18:36:52,737 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRICE on PURCHASE(PURCHASE_PRICE)
2016-07-13 18:36:52,756 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PAYMENT_DATETIME on PURCHASE_PAYMENT(PAYMENT_DATETIME, PAYMENT_AMOUNT)
2016-07-13 18:36:52,776 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PRODUCT_PRODUCT_NAME on PRODUCT(PRODUCT_NAME)
2016-07-13 18:36:52,796 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=45 failure=0
2016-07-13 18:36:52,796 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-50-procedure.sql
2016-07-13 18:36:52,798 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_IN_OUT_PARAMETER(
	in v_in_varchar varchar(32)
	, out v_out_varchar varchar(32)
	, inout v_inout_varchar varchar(32)
)
begin
	set v_out_varchar = v_inout_varchar;
	set v_inout_varchar = v_in_varchar;
end;

2016-07-13 18:36:52,801 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_RETURN_RESULT_SET(in birthdateFrom DATE)
begin
  select MEMBER_NAME, BIRTHDATE, MEMBER_STATUS_CODE
    from MEMBER
   where BIRTHDATE >= birthdateFrom
   order by BIRTHDATE desc, MEMBER_ID asc;
  select MEMBER_STATUS_CODE, MEMBER_STATUS_NAME
    from MEMBER_STATUS
   order by DISPLAY_ORDER;
end;

2016-07-13 18:36:52,803 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-07-13 18:36:52,804 [main] INFO  (DfSqlFileFireMan#fire():89) - {Create Schema}: success=49 failure=0 (in 3 files)
2016-07-13 18:36:52,804 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():564) - ...Closing connections to change-users: [system]
2016-07-13 18:36:52,924 [main] INFO  (DfLoadDataProcess#execute():129) - 
2016-07-13 18:36:52,925 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2016-07-13 18:36:52,925 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2016-07-13 18:36:52,925 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2016-07-13 18:36:52,925 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2016-07-13 18:36:52,926 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2016-07-13 18:36:52,963 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-13 18:36:52,964 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/common/xls/10-master.xls)
2016-07-13 18:36:52,964 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-13 18:36:53,287 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-13 18:36:53,288 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 18:36:53,288 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-13 18:36:53,330 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{PRV, 仮会員, 入会直後のステータスで一部のサイトサービスが利用可能, 3}
2016-07-13 18:36:53,386 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{FML, 正式会員, 正式な会員としてサイトサービスが利用可能, 1}
2016-07-13 18:36:53,387 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{WDL, 退会会員, 退会が確定した会員でサイトサービスはダメ, 2}
2016-07-13 18:36:53,387 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():212) - ...Skipping the terminal garbage row
2016-07-13 18:36:53,392 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to MEMBER_STATUS
2016-07-13 18:36:53,394 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{1, アメリカ}
2016-07-13 18:36:53,394 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{2, カナダ}
2016-07-13 18:36:53,395 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{3, 中国}
2016-07-13 18:36:53,395 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{4, 千葉}
2016-07-13 18:36:53,399 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to REGION
2016-07-13 18:36:53,400 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLT, PLATINUM, 12.3, 1, platinum rank, 1}
2016-07-13 18:36:53,401 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{GLD, GOLD, 9.2, 1, gold rank, 2}
2016-07-13 18:36:53,402 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{SIL, SILVER, 6.74, 1, silver rank, 3}
2016-07-13 18:36:53,402 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{BRZ, BRONZE, 2, 1, bronze rank, 4}
2016-07-13 18:36:53,403 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLS, PLASTIC, 0.1, 0, plastic rank, 5}
2016-07-13 18:36:53,407 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to SERVICE_RANK
2016-07-13 18:36:53,408 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{SIT, サイトが使いにくいから, 1}
2016-07-13 18:36:53,409 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{OTH, その他理由, 4}
2016-07-13 18:36:53,409 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{FRT, フリテンだから, 3}
2016-07-13 18:36:53,410 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{PRD, 商品に魅力がないから, 2}
2016-07-13 18:36:53,414 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to WITHDRAWAL_REASON
2016-07-13 18:36:53,415 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MSC, 音楽, null}
2016-07-13 18:36:53,416 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{FOD, 食品, null}
2016-07-13 18:36:53,416 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MCD, 音楽CD, MSC}
2016-07-13 18:36:53,416 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{INS, 楽器, MSC}
2016-07-13 18:36:53,417 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{HEB, ハーブ, FOD}
2016-07-13 18:36:53,421 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to PRODUCT_CATEGORY
2016-07-13 18:36:53,422 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{ONS, 生産販売可能, 1}
2016-07-13 18:36:53,423 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{PST, 生産中止, 2}
2016-07-13 18:36:53,423 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{SST, 販売中止, 3}
2016-07-13 18:36:53,427 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to PRODUCT_STATUS
2016-07-13 18:36:53,429 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-13 18:36:53,430 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/20-member.xls)
2016-07-13 18:36:53,430 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-13 18:36:53,534 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{1, Stojkovic, Pixy, FML, 2007/12/01 11:01:10, 1965/03/03, 2016-07-13 18:36:53.533, foo, 2016-07-13 18:36:53.533, foo, 0}
2016-07-13 18:36:53,540 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{2, Savicevic, Genius, PRV, null, 1966/09/15, 2016-07-13 18:36:53.539, foo, 2016-07-13 18:36:53.539, foo, 0}
2016-07-13 18:36:53,542 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{3, Mijatovic, Mijato, WDL, 2005/10/03 13:03:30, null, 2016-07-13 18:36:53.541, foo, 2016-07-13 18:36:53.541, foo, 0}
2016-07-13 18:36:53,544 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{4, Stankovic, Stanko, FML, 2006/09/04 14:04:40, 1978/09/11, 2016-07-13 18:36:53.543, foo, 2016-07-13 18:36:53.543, foo, 0}
2016-07-13 18:36:53,546 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{5, Milosevic, Milose, FML, 2007/08/05 15:05:50, null, 2016-07-13 18:36:53.546, foo, 2016-07-13 18:36:53.546, foo, 0}
2016-07-13 18:36:53,548 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{6, Mihajlovic, FreeKick, WDL, 2006/07/06 16:06:40, 1969/02/20, 2016-07-13 18:36:53.547, foo, 2016-07-13 18:36:53.547, foo, 0}
2016-07-13 18:36:53,550 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{7, アカギ, Akagi, FML, 2005/06/07 17:07:30, null, 2016-07-13 18:36:53.55, foo, 2016-07-13 18:36:53.55, foo, 0}
2016-07-13 18:36:53,551 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{8, Kezman, RedCard, FML, 2006/05/08 18:08:20, null, 2016-07-13 18:36:53.551, foo, 2016-07-13 18:36:53.551, foo, 0}
2016-07-13 18:36:53,553 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{9, Maslovar, JEFUnited, FML, 2007/12/31 00:00:00, 1967/02/20, 2016-07-13 18:36:53.553, foo, 2016-07-13 18:36:53.553, foo, 0}
2016-07-13 18:36:53,556 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{10, 諸葛亮孔明, ShokatsuGoGo, PRV, null, null, 2016-07-13 18:36:53.556, foo, 2016-07-13 18:36:53.556, foo, 0}
2016-07-13 18:36:53,557 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{11, Boban, Boban, FML, 2007/12/01 11:01:10, 1968/10/08, 2016-07-13 18:36:53.557, foo, 2016-07-13 18:36:53.557, foo, 0}
2016-07-13 18:36:53,559 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{12, Suker, Suker, PRV, null, 1968/01/01, 2016-07-13 18:36:53.559, foo, 2016-07-13 18:36:53.559, foo, 0}
2016-07-13 18:36:53,561 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{13, Jarni, Jarni, WDL, 2005/10/03 13:03:30, 1968/10/26, 2016-07-13 18:36:53.561, foo, 2016-07-13 18:36:53.561, foo, 0}
2016-07-13 18:36:53,566 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{14, Boksic, Boksic, FML, 2006/09/04 14:04:40, 1970/01/21, 2016-07-13 18:36:53.566, foo, 2016-07-13 18:36:53.566, foo, 0}
2016-07-13 18:36:53,569 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{15, Prosinecki, Prosinecki, FML, 2004/08/05 15:05:50, 1969/01/12, 2016-07-13 18:36:53.569, foo, 2016-07-13 18:36:53.569, foo, 0}
2016-07-13 18:36:53,571 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{16, RobeltKovac, RobeltKovac, WDL, 2006/07/06 16:06:40, null, 2016-07-13 18:36:53.571, foo, 2016-07-13 18:36:53.571, foo, 0}
2016-07-13 18:36:53,573 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{17, NikoKovac, NikoKovac, FML, 2005/06/07 17:07:30, null, 2016-07-13 18:36:53.573, foo, 2016-07-13 18:36:53.573, foo, 0}
2016-07-13 18:36:53,575 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{18, Jovanovic, Jovano, FML, 2006/05/08 18:08:20, 1981/04/18, 2016-07-13 18:36:53.574, foo, 2016-07-13 18:36:53.574, foo, 0}
2016-07-13 18:36:53,578 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{19, Milko, Milko, FML, 2005/12/31 12:34:56, 1974/09/10, 2016-07-13 18:36:53.578, foo, 2016-07-13 18:36:53.578, foo, 0}
2016-07-13 18:36:53,582 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{20, 諸葛瑾子瑜, ShokatsuKinKin, FML, 2001/12/31 23:59:59, null, 2016-07-13 18:36:53.581, foo, 2016-07-13 18:36:53.581, foo, 0}
2016-07-13 18:36:53,617 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER
2016-07-13 18:36:53,618 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{1, 1, 2007/03/24, 2015/12/31, Nagara, 4, 2016-07-13 18:36:53.618, foo, 2016-07-13 18:36:53.618, foo, 0}
2016-07-13 18:36:53,624 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{2, 1, 1949/01/01, 1997/03/31, New York, 1, 2016-07-13 18:36:53.624, foo, 2016-07-13 18:36:53.624, foo, 0}
2016-07-13 18:36:53,626 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{3, 1, 1997/04/01, 2000/09/30, Los Angels, 1, 2016-07-13 18:36:53.626, foo, 2016-07-13 18:36:53.626, foo, 0}
2016-07-13 18:36:53,629 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{4, 1, 2000/10/01, 2003/08/31, New York, 1, 2016-07-13 18:36:53.629, foo, 2016-07-13 18:36:53.629, foo, 0}
2016-07-13 18:36:53,632 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{5, 1, 2003/09/01, 2004/12/22, San Francisco Powell, 1, 2016-07-13 18:36:53.632, foo, 2016-07-13 18:36:53.632, foo, 0}
2016-07-13 18:36:53,634 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{6, 1, 2004/12/23, 2006/03/23, San Francisco Daly City, 1, 2016-07-13 18:36:53.634, foo, 2016-07-13 18:36:53.634, foo, 0}
2016-07-13 18:36:53,636 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{7, 1, 2016/01/01, 9999/12/31, Victoria, 2, 2016-07-13 18:36:53.636, foo, 2016-07-13 18:36:53.636, foo, 0}
2016-07-13 18:36:53,638 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{8, 2, 2004/12/24, 9999/12/31, Ichihara, 4, 2016-07-13 18:36:53.638, foo, 2016-07-13 18:36:53.638, foo, 0}
2016-07-13 18:36:53,640 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{9, 3, 2004/12/24, 2007/03/23, Mobara, 4, 2016-07-13 18:36:53.64, foo, 2016-07-13 18:36:53.64, foo, 0}
2016-07-13 18:36:53,642 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{10, 4, 2002/11/01, 9999/12/31, Sousa, 4, 2016-07-13 18:36:53.642, foo, 2016-07-13 18:36:53.642, foo, 0}
2016-07-13 18:36:53,645 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{11, 6, 2002/11/01, 9999/12/31, Yokoshiba, 4, 2016-07-13 18:36:53.645, foo, 2016-07-13 18:36:53.645, foo, 0}
2016-07-13 18:36:53,648 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{12, 9, 2010/11/01, 9999/12/31, Tateyama, 4, 2016-07-13 18:36:53.647, foo, 2016-07-13 18:36:53.647, foo, 0}
2016-07-13 18:36:53,651 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{13, 10, 1970/01/01, 9999/12/31, Shoku, 3, 2016-07-13 18:36:53.65, foo, 2016-07-13 18:36:53.65, foo, 0}
2016-07-13 18:36:53,655 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{14, 12, 2000/11/01, 2001/11/01, Oohara, 4, 2016-07-13 18:36:53.655, foo, 2016-07-13 18:36:53.655, foo, 0}
2016-07-13 18:36:53,657 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{15, 15, 2002/11/01, 2006/10/30, MinamiBousou, 4, 2016-07-13 18:36:53.657, foo, 2016-07-13 18:36:53.657, foo, 0}
2016-07-13 18:36:53,659 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{16, 15, 2007/11/01, 9999/12/31, Tomisato, 4, 2016-07-13 18:36:53.659, foo, 2016-07-13 18:36:53.659, foo, 0}
2016-07-13 18:36:53,662 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{17, 18, 2001/03/21, 2007/11/21, Katsuura, 4, 2016-07-13 18:36:53.662, foo, 2016-07-13 18:36:53.662, foo, 0}
2016-07-13 18:36:53,664 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{18, 18, 2007/11/22, 9999/12/31, Kamogawa, 4, 2016-07-13 18:36:53.664, foo, 2016-07-13 18:36:53.664, foo, 0}
2016-07-13 18:36:53,667 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{19, 19, 2000/11/01, 9999/12/31, Yotsukaido, 4, 2016-07-13 18:36:53.667, foo, 2016-07-13 18:36:53.667, foo, 0}
2016-07-13 18:36:53,669 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{20, 20, 1970/01/01, 9999/12/31, Go, 3, 2016-07-13 18:36:53.669, foo, 2016-07-13 18:36:53.669, foo, 0}
2016-07-13 18:36:53,689 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_ADDRESS
2016-07-13 18:36:53,690 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{1, 3, 2006/12/24 23:59:59, 0, FML}
2016-07-13 18:36:53,692 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{2, 6, 2007/11/11 16:16:16, 0, FML}
2016-07-13 18:36:53,693 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{3, 1, 2006/12/23 22:56:29, 0, FML}
2016-07-13 18:36:53,694 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{4, 6, 2007/11/01 02:13:00, 0, FML}
2016-07-13 18:36:53,695 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{5, 7, 2006/05/24 23:12:59, 0, FML}
2016-07-13 18:36:53,697 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{6, 6, 2005/11/11 16:32:01, 0, PRV}
2016-07-13 18:36:53,698 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{7, 6, 2006/01/28 23:59:59, 1, FML}
2016-07-13 18:36:53,699 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{8, 6, 2007/11/09 16:23:00, 0, FML}
2016-07-13 18:36:53,700 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{9, 8, 2006/12/22 23:59:59, 0, FML}
2016-07-13 18:36:53,702 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{10, 6, 2007/11/11 09:01:00, 0, FML}
2016-07-13 18:36:53,703 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{11, 1, 2006/12/23 23:59:59, 0, FML}
2016-07-13 18:36:53,705 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{12, 9, 2007/11/15 12:43:00, 0, FML}
2016-07-13 18:36:53,706 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{13, 10, 2006/12/24 23:59:59, 0, FML}
2016-07-13 18:36:53,707 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{14, 6, 2007/04/01 16:23:01, 0, FML}
2016-07-13 18:36:53,708 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{15, 7, 2006/12/24 23:59:20, 1, FML}
2016-07-13 18:36:53,709 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{16, 6, 2007/05/01 12:23:02, 0, FML}
2016-07-13 18:36:53,711 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{17, 7, 2006/12/24 23:59:21, 0, FML}
2016-07-13 18:36:53,712 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{18, 6, 2007/06/11 17:23:03, 0, FML}
2016-07-13 18:36:53,713 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{19, 4, 2006/12/24 23:59:22, 0, FML}
2016-07-13 18:36:53,715 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{20, 3, 2007/11/01 16:12:04, 0, FML}
2016-07-13 18:36:53,716 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{21, 11, 2006/12/24 23:59:23, 0, FML}
2016-07-13 18:36:53,717 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{22, 1, 2007/11/01 16:23:05, 0, PRV}
2016-07-13 18:36:53,718 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{23, 9, 2006/12/24 23:59:24, 1, FML}
2016-07-13 18:36:53,719 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{24, 8, 2007/11/01 16:23:06, 0, FML}
2016-07-13 18:36:53,720 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{25, 7, 2007/12/24 11:59:25, 1, FML}
2016-07-13 18:36:53,721 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{26, 6, 2007/06/21 01:23:57, 0, FML}
2016-07-13 18:36:53,722 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{27, 5, 2006/12/24 23:59:26, 0, FML}
2016-07-13 18:36:53,723 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{28, 3, 2007/11/01 16:23:08, 0, FML}
2016-07-13 18:36:53,725 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{29, 3, 2006/12/24 23:59:27, 0, FML}
2016-07-13 18:36:53,726 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{30, 10, 2007/11/01 16:23:09, 0, FML}
2016-07-13 18:36:53,726 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{31, 15, 2006/07/24 23:59:28, 0, FML}
2016-07-13 18:36:53,727 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{32, 14, 2007/11/01 17:23:10, 0, FML}
2016-07-13 18:36:53,728 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{33, 15, 2007/11/01 16:23:10, 0, FML}
2016-07-13 18:36:53,729 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{34, 18, 2006/07/24 23:59:29, 0, FML}
2016-07-13 18:36:53,729 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{35, 3, 2007/11/01 17:23:11, 0, PRV}
2016-07-13 18:36:53,730 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{36, 5, 2007/11/01 16:23:11, 1, FML}
2016-07-13 18:36:53,731 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{37, 11, 2006/07/24 23:59:30, 0, FML}
2016-07-13 18:36:53,731 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{38, 20, 2007/11/01 17:23:12, 1, FML}
2016-07-13 18:36:53,732 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{39, 19, 2007/11/01 16:23:12, 0, FML}
2016-07-13 18:36:53,733 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{40, 4, 2006/07/24 23:59:31, 0, FML}
2016-07-13 18:36:53,734 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{41, 4, 2007/11/01 17:23:13, 0, FML}
2016-07-13 18:36:53,736 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{42, 4, 2007/11/01 16:23:13, 0, FML}
2016-07-13 18:36:53,737 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{43, 4, 2006/07/24 23:52:32, 0, FML}
2016-07-13 18:36:53,739 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{44, 4, 2007/11/01 11:23:14, 0, FML}
2016-07-13 18:36:53,740 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{45, 4, 2007/11/21 06:23:14, 0, FML}
2016-07-13 18:36:53,741 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{46, 12, 2006/07/24 23:52:33, 0, PRV}
2016-07-13 18:36:53,742 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{47, 13, 2007/11/01 11:23:15, 1, FML}
2016-07-13 18:36:53,743 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{48, 14, 2007/11/21 06:23:15, 0, FML}
2016-07-13 18:36:53,744 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{49, 17, 2006/07/24 23:52:34, 1, FML}
2016-07-13 18:36:53,745 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{50, 18, 2007/11/01 11:23:16, 0, FML}
2016-07-13 18:36:53,746 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{51, 16, 2007/11/21 06:23:16, 0, FML}
2016-07-13 18:36:53,748 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{52, 4, 2006/07/24 23:52:35, 0, FML}
2016-07-13 18:36:53,749 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{53, 5, 2007/11/01 11:23:17, 0, FML}
2016-07-13 18:36:53,750 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{54, 5, 2007/11/21 06:23:17, 0, FML}
2016-07-13 18:36:53,751 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{55, 11, 2006/07/24 23:52:36, 0, FML}
2016-07-13 18:36:53,752 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{56, 12, 2007/11/01 11:23:18, 0, FML}
2016-07-13 18:36:53,798 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 56 rows are loaded to MEMBER_LOGIN
2016-07-13 18:36:53,799 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{1, aaa, 30符3飜は？, 自分で数えろ, 1, 2016-07-13 18:36:53.799, foo, 2016-07-13 18:36:53.799, foo, 0}
2016-07-13 18:36:53,801 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{2, bbb, 50符2飜は？, 自分で数えろ, 2, 2016-07-13 18:36:53.801, foo, 2016-07-13 18:36:53.801, foo, 0}
2016-07-13 18:36:53,802 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{3, ccc, 110符2飜は？, 自分で数えろ, 3, 2016-07-13 18:36:53.802, foo, 2016-07-13 18:36:53.802, foo, 0}
2016-07-13 18:36:53,803 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{4, ddd, タンヤオ？, そう, 4, 2016-07-13 18:36:53.803, foo, 2016-07-13 18:36:53.803, foo, 0}
2016-07-13 18:36:53,805 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{5, eee2, ピンフ？, そう, 5, 2016-07-13 18:36:53.804, foo, 2016-07-13 18:36:53.804, foo, 0}
2016-07-13 18:36:53,806 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{6, fff, サンアンコウ？, そう, 6, 2016-07-13 18:36:53.806, foo, 2016-07-13 18:36:53.806, foo, 0}
2016-07-13 18:36:53,807 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{7, ggg3, イーペーコウ？, そう, 7, 2016-07-13 18:36:53.807, foo, 2016-07-13 18:36:53.807, foo, 0}
2016-07-13 18:36:53,808 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{8, hhh555, リャンペーコウ？, そう, 8, 2016-07-13 18:36:53.808, foo, 2016-07-13 18:36:53.808, foo, 0}
2016-07-13 18:36:53,809 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{9, iii, サンペーコウはないよね？, 当たり前だ, 9, 2016-07-13 18:36:53.809, foo, 2016-07-13 18:36:53.809, foo, 0}
2016-07-13 18:36:53,811 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{10, jjj, 私はイカサマしません, 実はする, 10, 2016-07-13 18:36:53.811, foo, 2016-07-13 18:36:53.811, foo, 0}
2016-07-13 18:36:53,812 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{11, qwe, 70符3飜は？, 自分で数えろ, 11, 2016-07-13 18:36:53.812, foo, 2016-07-13 18:36:53.812, foo, 0}
2016-07-13 18:36:53,813 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{12, sdf, 20符4飜は？, 自分で数えろ, 12, 2016-07-13 18:36:53.813, foo, 2016-07-13 18:36:53.813, foo, 0}
2016-07-13 18:36:53,814 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{13, dfgsf, 大三元は？, 役満だよ, 13, 2016-07-13 18:36:53.814, foo, 2016-07-13 18:36:53.814, foo, 0}
2016-07-13 18:36:53,815 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{14, ert, タンヤオ？, そう, 14, 2016-07-13 18:36:53.815, foo, 2016-07-13 18:36:53.815, foo, 0}
2016-07-13 18:36:53,816 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{15, fhgf, ピンフ？, そう, 15, 2016-07-13 18:36:53.816, foo, 2016-07-13 18:36:53.816, foo, 0}
2016-07-13 18:36:53,817 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{16, ghj, サンアンコウ？, そう, 16, 2016-07-13 18:36:53.817, foo, 2016-07-13 18:36:53.817, foo, 0}
2016-07-13 18:36:53,817 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{17, tyuffff, サンレンコウ？, そう, 17, 2016-07-13 18:36:53.817, foo, 2016-07-13 18:36:53.817, foo, 0}
2016-07-13 18:36:53,818 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{18, jkl, イーペーコウ？, そう, 18, 2016-07-13 18:36:53.818, foo, 2016-07-13 18:36:53.818, foo, 0}
2016-07-13 18:36:53,819 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{19, ghjfff, 左ハイは？, 痛い, 19, 2016-07-13 18:36:53.819, foo, 2016-07-13 18:36:53.819, foo, 0}
2016-07-13 18:36:53,839 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{20, cvb, 孫権は？, 呉, 20, 2016-07-13 18:36:53.839, foo, 2016-07-13 18:36:53.839, foo, 0}
2016-07-13 18:36:53,856 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SECURITY
2016-07-13 18:36:53,857 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{1, 1, 1234, PLT, 2016-07-13 18:36:53.857, foo, 2016-07-13 18:36:53.857, foo, 0}
2016-07-13 18:36:53,858 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{2, 2, 2345, GLD, 2016-07-13 18:36:53.858, foo, 2016-07-13 18:36:53.858, foo, 0}
2016-07-13 18:36:53,859 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{3, 3, 3456, GLD, 2016-07-13 18:36:53.859, foo, 2016-07-13 18:36:53.859, foo, 0}
2016-07-13 18:36:53,860 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{4, 4, 875, BRZ, 2016-07-13 18:36:53.86, foo, 2016-07-13 18:36:53.86, foo, 0}
2016-07-13 18:36:53,860 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{5, 5, 1111, BRZ, 2016-07-13 18:36:53.86, foo, 2016-07-13 18:36:53.86, foo, 0}
2016-07-13 18:36:53,861 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{6, 6, 5422, SIL, 2016-07-13 18:36:53.861, foo, 2016-07-13 18:36:53.861, foo, 0}
2016-07-13 18:36:53,861 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{7, 7, 24678, SIL, 2016-07-13 18:36:53.861, foo, 2016-07-13 18:36:53.861, foo, 0}
2016-07-13 18:36:53,862 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{8, 8, 234, SIL, 2016-07-13 18:36:53.862, foo, 2016-07-13 18:36:53.862, foo, 0}
2016-07-13 18:36:53,863 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{9, 9, 3, SIL, 2016-07-13 18:36:53.862, foo, 2016-07-13 18:36:53.862, foo, 0}
2016-07-13 18:36:53,863 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{10, 10, 98765, PLT, 2016-07-13 18:36:53.863, foo, 2016-07-13 18:36:53.863, foo, 0}
2016-07-13 18:36:53,863 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{11, 11, 34, GLD, 2016-07-13 18:36:53.863, foo, 2016-07-13 18:36:53.863, foo, 0}
2016-07-13 18:36:53,883 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{12, 12, 532, PLT, 2016-07-13 18:36:53.883, foo, 2016-07-13 18:36:53.883, foo, 0}
2016-07-13 18:36:53,885 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{13, 13, 23678, GLD, 2016-07-13 18:36:53.885, foo, 2016-07-13 18:36:53.885, foo, 0}
2016-07-13 18:36:53,886 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{14, 14, 432, GLD, 2016-07-13 18:36:53.886, foo, 2016-07-13 18:36:53.886, foo, 0}
2016-07-13 18:36:53,888 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{15, 15, 543, BRZ, 2016-07-13 18:36:53.888, foo, 2016-07-13 18:36:53.888, foo, 0}
2016-07-13 18:36:53,890 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{16, 16, 23545, PLT, 2016-07-13 18:36:53.89, foo, 2016-07-13 18:36:53.89, foo, 0}
2016-07-13 18:36:53,891 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{17, 17, 2345, GLD, 2016-07-13 18:36:53.891, foo, 2016-07-13 18:36:53.891, foo, 0}
2016-07-13 18:36:53,892 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{18, 18, 8763, SIL, 2016-07-13 18:36:53.891, foo, 2016-07-13 18:36:53.892, foo, 0}
2016-07-13 18:36:53,892 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{19, 19, 34567, SIL, 2016-07-13 18:36:53.892, foo, 2016-07-13 18:36:53.892, foo, 0}
2016-07-13 18:36:53,893 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{20, 20, 43, GLD, 2016-07-13 18:36:53.893, foo, 2016-07-13 18:36:53.893, foo, 0}
2016-07-13 18:36:53,912 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SERVICE
2016-07-13 18:36:53,913 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{3, null, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123, 2016-07-13 18:36:53.913, foo, 2016-07-13 18:36:53.913, foo}
2016-07-13 18:36:53,915 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{6, SIT, null, 2007/11/11 16:00:00.456, 2016-07-13 18:36:53.915, foo, 2016-07-13 18:36:53.915, foo}
2016-07-13 18:36:53,931 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{13, PRD, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789, 2016-07-13 18:36:53.931, foo, 2016-07-13 18:36:53.931, foo}
2016-07-13 18:36:53,935 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{16, SIT, コバチが２人いるため, 2007/11/13 16:00:00.456, 2016-07-13 18:36:53.935, foo, 2016-07-13 18:36:53.935, foo}
2016-07-13 18:36:53,943 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to MEMBER_WITHDRAWAL
2016-07-13 18:36:53,944 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{1, 1, 2, 2006/12/24 23:59:59}
2016-07-13 18:36:53,946 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{2, 1, 3, 2007/11/11 16:16:16}
2016-07-13 18:36:53,947 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{3, 1, 4, 2006/12/23 22:56:29}
2016-07-13 18:36:53,947 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{4, 1, 5, 2007/11/01 02:13:00}
2016-07-13 18:36:53,948 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{5, 1, 6, 2012/05/24 23:12:59}
2016-07-13 18:36:53,949 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{6, 1, 9, 2005/11/11 16:32:01}
2016-07-13 18:36:53,950 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{7, 1, 15, 2006/01/28 23:59:59}
2016-07-13 18:36:53,951 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{8, 1, 18, 2007/11/09 16:23:00}
2016-07-13 18:36:53,952 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{9, 2, 1, 2009/12/22 23:59:59}
2016-07-13 18:36:53,952 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{10, 2, 3, 2007/11/11 09:01:00}
2016-07-13 18:36:53,953 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{11, 2, 4, 2006/11/23 23:59:59}
2016-07-13 18:36:53,971 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{12, 2, 9, 2012/11/15 12:43:00}
2016-07-13 18:36:53,972 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{13, 2, 14, 2006/12/24 23:59:59}
2016-07-13 18:36:53,973 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{14, 2, 19, 2011/04/01 16:23:01}
2016-07-13 18:36:53,975 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{15, 3, 1, 2006/12/24 23:59:20}
2016-07-13 18:36:53,976 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{16, 3, 2, 2008/05/01 12:23:02}
2016-07-13 18:36:53,977 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{17, 3, 4, 2006/12/24 23:59:21}
2016-07-13 18:36:53,978 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{18, 3, 6, 2009/06/11 17:23:03}
2016-07-13 18:36:53,979 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{19, 3, 9, 2010/12/24 23:59:22}
2016-07-13 18:36:53,980 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{20, 3, 10, 2007/11/01 16:12:04}
2016-07-13 18:36:53,981 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{21, 4, 1, 2006/12/24 23:59:23}
2016-07-13 18:36:53,988 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{22, 4, 2, 2007/11/01 16:23:05}
2016-07-13 18:36:53,990 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{23, 4, 3, 2011/12/24 23:59:24}
2016-07-13 18:36:53,991 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{24, 4, 4, 2007/11/01 16:23:06}
2016-07-13 18:36:53,992 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{25, 4, 5, 2013/05/24 11:59:25}
2016-07-13 18:36:54,018 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{26, 4, 6, 2007/06/21 01:23:57}
2016-07-13 18:36:54,019 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{27, 4, 9, 2006/12/24 23:59:26}
2016-07-13 18:36:54,020 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{28, 4, 11, 2007/11/01 16:23:08}
2016-07-13 18:36:54,021 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{29, 4, 12, 2013/02/24 23:59:27}
2016-07-13 18:36:54,022 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{30, 4, 13, 2012/11/01 16:23:03}
2016-07-13 18:36:54,023 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{31, 4, 14, 2006/07/24 23:59:28}
2016-07-13 18:36:54,024 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{32, 4, 15, 2007/11/01 17:23:10}
2016-07-13 18:36:54,025 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{33, 4, 16, 2007/11/01 16:23:10}
2016-07-13 18:36:54,026 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{34, 4, 17, 2006/07/24 23:59:29}
2016-07-13 18:36:54,027 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{35, 4, 18, 2011/11/01 17:23:11}
2016-07-13 18:36:54,031 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{36, 4, 19, 2007/11/01 16:23:11}
2016-07-13 18:36:54,032 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{37, 5, 1, 2008/07/24 23:59:30}
2016-07-13 18:36:54,032 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{38, 5, 3, 2007/11/01 17:23:12}
2016-07-13 18:36:54,045 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{39, 5, 6, 2007/11/01 16:23:12}
2016-07-13 18:36:54,046 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{40, 6, 1, 2006/07/24 23:59:31}
2016-07-13 18:36:54,047 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{41, 6, 2, 2007/11/01 17:23:13}
2016-07-13 18:36:54,047 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{42, 6, 3, 2007/11/01 16:23:13}
2016-07-13 18:36:54,048 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{43, 6, 4, 2006/07/24 23:52:32}
2016-07-13 18:36:54,049 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{44, 6, 5, 2007/11/01 11:23:14}
2016-07-13 18:36:54,051 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{45, 6, 6, 2007/11/21 06:23:14}
2016-07-13 18:36:54,052 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{46, 8, 1, 2011/07/24 23:52:33}
2016-07-13 18:36:54,053 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{47, 8, 2, 2007/11/01 11:23:15}
2016-07-13 18:36:54,054 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{48, 8, 3, 2007/11/21 06:23:15}
2016-07-13 18:36:54,055 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{49, 9, 1, 2006/07/24 23:52:34}
2016-07-13 18:36:54,056 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{50, 9, 2, 208/11/01 11:23:16}
2016-07-13 18:36:54,058 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{51, 9, 3, 2007/11/21 06:23:16}
2016-07-13 18:36:54,059 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{52, 9, 10, 2006/07/24 23:52:35}
2016-07-13 18:36:54,059 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{53, 9, 20, 2009/11/01 11:23:17}
2016-07-13 18:36:54,060 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{54, 10, 1, 2007/11/21 06:23:17}
2016-07-13 18:36:54,067 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{55, 10, 2, 2006/07/24 23:52:36}
2016-07-13 18:36:54,068 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{56, 10, 3, 2010/11/01 11:23:18}
2016-07-13 18:36:54,068 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{57, 10, 4, 2006/12/21 23:59:59}
2016-07-13 18:36:54,069 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{58, 10, 5, 2007/11/1 16:16:16}
2016-07-13 18:36:54,070 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{59, 10, 6, 2006/08/23 22:56:29}
2016-07-13 18:36:54,070 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{60, 10, 9, 2007/11/01 02:11:00}
2016-07-13 18:36:54,071 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{61, 10, 11, 2012/05/24 23:12:59}
2016-07-13 18:36:54,072 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{62, 10, 12, 2005/11/10 16:32:01}
2016-07-13 18:36:54,072 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{63, 10, 13, 2006/01/28 23:59:59}
2016-07-13 18:36:54,073 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{64, 10, 14, 2007/10/09 16:23:00}
2016-07-13 18:36:54,073 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{65, 10, 15, 2009/12/22 23:59:59}
2016-07-13 18:36:54,074 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{66, 10, 16, 2007/11/01 09:01:00}
2016-07-13 18:36:54,075 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{67, 10, 17, 2006/11/23 23:59:59}
2016-07-13 18:36:54,076 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{68, 10, 18, 2011/11/15 12:43:00}
2016-07-13 18:36:54,077 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{69, 10, 19, 2006/07/24 23:59:59}
2016-07-13 18:36:54,077 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{70, 10, 20, 2011/08/01 16:23:01}
2016-07-13 18:36:54,078 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{71, 11, 12, 2006/09/24 23:59:20}
2016-07-13 18:36:54,079 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{72, 11, 13, 2008/01/01 12:23:02}
2016-07-13 18:36:54,080 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{73, 11, 14, 2006/12/24 23:59:21}
2016-07-13 18:36:54,081 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{74, 11, 15, 2009/02/11 17:23:03}
2016-07-13 18:36:54,082 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{75, 11, 16, 2010/03/24 23:59:22}
2016-07-13 18:36:54,082 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{76, 11, 17, 2007/09/01 16:12:04}
2016-07-13 18:36:54,084 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{77, 11, 19, 2006/12/24 23:59:23}
2016-07-13 18:36:54,085 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{78, 12, 1, 2007/11/01 16:23:05}
2016-07-13 18:36:54,087 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{79, 12, 11, 2011/05/24 23:59:24}
2016-07-13 18:36:54,088 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{80, 12, 13, 2007/11/01 16:23:06}
2016-07-13 18:36:54,090 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{81, 12, 14, 2013/06/24 11:59:25}
2016-07-13 18:36:54,093 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{82, 12, 15, 2007/06/21 01:23:57}
2016-07-13 18:36:54,094 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{83, 12, 19, 2006/12/24 23:59:26}
2016-07-13 18:36:54,095 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{84, 13, 11, 2007/08/01 16:23:08}
2016-07-13 18:36:54,096 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{85, 13, 12, 2013/02/24 23:59:27}
2016-07-13 18:36:54,097 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{86, 13, 14, 2012/11/01 16:23:03}
2016-07-13 18:36:54,098 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{87, 14, 1, 2006/07/24 23:59:28}
2016-07-13 18:36:54,099 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{88, 14, 10, 2012/05/24 23:12:59}
2016-07-13 18:36:54,100 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{89, 14, 11, 2005/11/10 16:32:01}
2016-07-13 18:36:54,102 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{90, 14, 20, 2006/01/28 23:59:59}
2016-07-13 18:36:54,103 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{91, 16, 17, 2007/10/09 16:23:00}
2016-07-13 18:36:54,104 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{92, 17, 16, 2009/12/22 23:59:59}
2016-07-13 18:36:54,105 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{93, 18, 1, 2007/11/01 09:01:00}
2016-07-13 18:36:54,106 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{94, 18, 2, 2006/11/23 23:59:59}
2016-07-13 18:36:54,107 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{95, 18, 3, 2011/11/15 12:43:00}
2016-07-13 18:36:54,108 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{96, 18, 4, 2006/07/24 23:59:59}
2016-07-13 18:36:54,108 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{97, 18, 5, 2011/08/01 16:23:01}
2016-07-13 18:36:54,109 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{98, 18, 6, 2006/09/24 23:59:20}
2016-07-13 18:36:54,110 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{99, 18, 9, 2008/01/01 12:23:02}
2016-07-13 18:36:54,111 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{100, 18, 11, 2006/12/24 23:59:21}
2016-07-13 18:36:54,111 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{101, 18, 12, 2009/02/11 17:23:03}
2016-07-13 18:36:54,112 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{102, 18, 13, 2010/03/24 23:59:22}
2016-07-13 18:36:54,113 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{103, 18, 14, 2007/09/01 16:12:04}
2016-07-13 18:36:54,113 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{104, 18, 15, 2006/12/24 23:59:23}
2016-07-13 18:36:54,114 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{105, 19, 1, 2007/11/01 16:23:05}
2016-07-13 18:36:54,114 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{106, 19, 10, 2011/05/24 23:59:24}
2016-07-13 18:36:54,115 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{107, 19, 11, 2007/11/01 16:23:06}
2016-07-13 18:36:54,115 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{108, 19, 12, 2013/06/24 11:59:25}
2016-07-13 18:36:54,116 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{109, 19, 20, 2013/06/24 11:59:25}
2016-07-13 18:36:54,116 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{110, 20, 10, 2013/06/24 11:59:25}
2016-07-13 18:36:54,117 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{111, 20, 19, 2013/06/24 11:59:25}
2016-07-13 18:36:54,193 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 111 rows are loaded to MEMBER_FOLLOWING
2016-07-13 18:36:54,194 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-13 18:36:54,194 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/30-product.xls)
2016-07-13 18:36:54,195 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-13 18:36:54,267 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{1, Cold Spring Harbor, BILLYJOEL-01, MCD, PST, 1100, 2016-07-13 18:36:54.267, foo, 2016-07-13 18:36:54.267, foo, 0}
2016-07-13 18:36:54,269 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{2, Piano Man, BILLYJOEL-02, MCD, ONS, 1200, 2016-07-13 18:36:54.269, foo, 2016-07-13 18:36:54.269, foo, 0}
2016-07-13 18:36:54,270 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{3, Streetlife Serenade, BILLYJOEL-03, MCD, ONS, 1300, 2016-07-13 18:36:54.27, foo, 2016-07-13 18:36:54.27, foo, 0}
2016-07-13 18:36:54,271 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{4, Turnstiles, BILLYJOEL-04, MCD, ONS, 1400, 2016-07-13 18:36:54.271, foo, 2016-07-13 18:36:54.271, foo, 0}
2016-07-13 18:36:54,271 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{5, The Stranger, BILLYJOEL-05, MCD, ONS, 1500, 2016-07-13 18:36:54.271, foo, 2016-07-13 18:36:54.271, foo, 0}
2016-07-13 18:36:54,272 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{6, 52nd Street, BILLYJOEL-06, MCD, ONS, 1600, 2016-07-13 18:36:54.272, foo, 2016-07-13 18:36:54.272, foo, 0}
2016-07-13 18:36:54,273 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{7, Glass House, BILLYJOEL-07, MCD, ONS, 1700, 2016-07-13 18:36:54.273, foo, 2016-07-13 18:36:54.273, foo, 0}
2016-07-13 18:36:54,274 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{8, Nylon Curtain, BILLYJOEL-08, MCD, ONS, 1800, 2016-07-13 18:36:54.274, foo, 2016-07-13 18:36:54.274, foo, 0}
2016-07-13 18:36:54,275 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{9, Bridge, BILLYJOEL-09, MCD, ONS, 1900, 2016-07-13 18:36:54.275, foo, 2016-07-13 18:36:54.275, foo, 0}
2016-07-13 18:36:54,278 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{10, Storm Front, BILLYJOEL-10, MCD, ONS, 2000, 2016-07-13 18:36:54.278, foo, 2016-07-13 18:36:54.278, foo, 0}
2016-07-13 18:36:54,279 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{11, River of Dreams, BILLYJOEL-11, MCD, ONS, 2100, 2016-07-13 18:36:54.279, foo, 2016-07-13 18:36:54.279, foo, 0}
2016-07-13 18:36:54,280 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{12, Grand Piano, PIANO-01, INS, ONS, 1400000, 2016-07-13 18:36:54.28, foo, 2016-07-13 18:36:54.28, foo, 0}
2016-07-13 18:36:54,281 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{13, Upright Piano, PIANO-02, INS, ONS, 1100000, 2016-07-13 18:36:54.281, foo, 2016-07-13 18:36:54.281, foo, 0}
2016-07-13 18:36:54,282 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{14, Low Price Flute, FLUTE-01, INS, ONS, 50000, 2016-07-13 18:36:54.282, foo, 2016-07-13 18:36:54.282, foo, 0}
2016-07-13 18:36:54,283 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{15, Silver Flute, FLUTE-02, INS, ONS, 500000, 2016-07-13 18:36:54.283, foo, 2016-07-13 18:36:54.283, foo, 0}
2016-07-13 18:36:54,284 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{16, Gold Flute, FLUTE-03, INS, ONS, 4000000, 2016-07-13 18:36:54.284, foo, 2016-07-13 18:36:54.284, foo, 0}
2016-07-13 18:36:54,284 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{17, Rosemary (100g), HARB-100-01, HEB, ONS, 400, 2016-07-13 18:36:54.284, foo, 2016-07-13 18:36:54.284, foo, 0}
2016-07-13 18:36:54,285 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{18, Lemon Grass (100g), HARB-100-02, HEB, ONS, 380, 2016-07-13 18:36:54.285, foo, 2016-07-13 18:36:54.285, foo, 0}
2016-07-13 18:36:54,293 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{19, Camomile (100g), HARB-100-03, HEB, ONS, 380, 2016-07-13 18:36:54.293, foo, 2016-07-13 18:36:54.293, foo, 0}
2016-07-13 18:36:54,294 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{20, Hatomugi (100g), HARB-100-04, HEB, ONS, 340, 2016-07-13 18:36:54.294, foo, 2016-07-13 18:36:54.294, foo, 0}
2016-07-13 18:36:54,312 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to PRODUCT
2016-07-13 18:36:54,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{1, 5, 3, 2006/12/24 23:59:59, 1, 1800, 1, 2016-07-13 18:36:54.313, foo, 2016-07-13 18:36:54.313, foo, 0}
2016-07-13 18:36:54,314 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{2, 15, 7, 2007/11/11 16:16:16, 1, 1700, 1, 2016-07-13 18:36:54.314, foo, 2016-07-13 18:36:54.314, foo, 0}
2016-07-13 18:36:54,316 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{3, 13, 3, 2006/12/23 22:56:29.235, 1, 1800, 1, 2016-07-13 18:36:54.316, foo, 2016-07-13 18:36:54.316, foo, 0}
2016-07-13 18:36:54,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{4, 2, 5, 2007/11/01 02:13:00, 2, 1700, 1, 2016-07-13 18:36:54.317, foo, 2016-07-13 18:36:54.317, foo, 0}
2016-07-13 18:36:54,318 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{5, 9, 11, 2008/01/04 23:12:59, 5, 1800, 1, 2016-07-13 18:36:54.318, foo, 2016-07-13 18:36:54.318, foo, 0}
2016-07-13 18:36:54,319 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{6, 20, 2, 2002/01/01 16:32:01, 1, 2000, 1, 2016-07-13 18:36:54.319, foo, 2016-07-13 18:36:54.319, foo, 0}
2016-07-13 18:36:54,320 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{7, 19, 9, 2006/01/28 23:59:59.999, 1, 1000, 0, 2016-07-13 18:36:54.32, foo, 2016-07-13 18:36:54.32, foo, 0}
2016-07-13 18:36:54,322 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{8, 4, 7, 2007/11/09 16:23:00, 1, 1535, 1, 2016-07-13 18:36:54.322, foo, 2016-07-13 18:36:54.322, foo, 0}
2016-07-13 18:36:54,323 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{9, 4, 10, 2006/12/22 23:59:59, 20, 1700, 1, 2016-07-13 18:36:54.323, foo, 2016-07-13 18:36:54.323, foo, 0}
2016-07-13 18:36:54,324 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{10, 2, 10, 2007/11/01 02:13:00.345, 1, 1700, 0, 2016-07-13 18:36:54.324, foo, 2016-07-13 18:36:54.324, foo, 0}
2016-07-13 18:36:54,325 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{11, 5, 2, 2007/11/09 16:23:01, 1, 1800, 1, 2016-07-13 18:36:54.325, foo, 2016-07-13 18:36:54.325, foo, 0}
2016-07-13 18:36:54,326 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{12, 15, 2, 2006/12/22 23:59:12, 1, 1700, 1, 2016-07-13 18:36:54.326, foo, 2016-07-13 18:36:54.326, foo, 0}
2016-07-13 18:36:54,328 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{13, 13, 8, 2007/11/01 02:13:00.346, 1, 1800, 1, 2016-07-13 18:36:54.328, foo, 2016-07-13 18:36:54.328, foo, 0}
2016-07-13 18:36:54,329 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{14, 2, 4, 2007/11/09 16:23:02, 2, 1700, 1, 2016-07-13 18:36:54.329, foo, 2016-07-13 18:36:54.329, foo, 0}
2016-07-13 18:36:54,348 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{15, 9, 11, 2006/12/22 23:59:32, 5, 1800, 1, 2016-07-13 18:36:54.348, foo, 2016-07-13 18:36:54.348, foo, 0}
2016-07-13 18:36:54,350 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{16, 20, 1, 2007/11/01 02:13:00.347, 1, 2000, 1, 2016-07-13 18:36:54.35, foo, 2016-07-13 18:36:54.35, foo, 0}
2016-07-13 18:36:54,358 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{17, 19, 11, 2006/12/22 23:59:33, 2, 1000, 0, 2016-07-13 18:36:54.358, foo, 2016-07-13 18:36:54.358, foo, 0}
2016-07-13 18:36:54,359 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{18, 4, 10, 2007/11/01 02:13:00.348, 1, 1535, 1, 2016-07-13 18:36:54.359, foo, 2016-07-13 18:36:54.359, foo, 0}
2016-07-13 18:36:54,360 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{19, 4, 11, 2007/11/01 02:13:00.348, 4, 1700, 1, 2016-07-13 18:36:54.36, foo, 2016-07-13 18:36:54.36, foo, 0}
2016-07-13 18:36:54,361 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{20, 2, 11, 2006/12/22 23:59:35, 1, 1700, 0, 2016-07-13 18:36:54.361, foo, 2016-07-13 18:36:54.361, foo, 0}
2016-07-13 18:36:54,362 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{21, 2, 15, 2006/12/22 23:59:35, 1, 400000, 0, 2016-07-13 18:36:54.361, foo, 2016-07-13 18:36:54.361, foo, 0}
2016-07-13 18:36:54,362 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{22, 3, 6, 2007/11/01 02:13:00.350, 4, 1800, 1, 2016-07-13 18:36:54.362, foo, 2016-07-13 18:36:54.362, foo, 0}
2016-07-13 18:36:54,363 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{23, 15, 7, 2006/12/22 23:59:36, 1, 1700, 1, 2016-07-13 18:36:54.363, foo, 2016-07-13 18:36:54.363, foo, 0}
2016-07-13 18:36:54,364 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{24, 13, 3, 2007/09/11 12:13:00.351, 1, 1800, 1, 2016-07-13 18:36:54.364, foo, 2016-07-13 18:36:54.364, foo, 0}
2016-07-13 18:36:54,365 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{25, 16, 2, 2006/12/22 23:59:37, 2, 1700, 1, 2016-07-13 18:36:54.365, foo, 2016-07-13 18:36:54.365, foo, 0}
2016-07-13 18:36:54,366 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{26, 3, 4, 2005/12/21 12:13:00.352, 1, 1800, 1, 2016-07-13 18:36:54.366, foo, 2016-07-13 18:36:54.366, foo, 0}
2016-07-13 18:36:54,367 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{27, 2, 8, 2006/12/22 23:59:38, 1, 2000, 1, 2016-07-13 18:36:54.367, foo, 2016-07-13 18:36:54.367, foo, 0}
2016-07-13 18:36:54,371 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{28, 6, 17, 2007/11/01 02:13:00.353, 2, 600, 0, 2016-07-13 18:36:54.37, foo, 2016-07-13 18:36:54.37, foo, 0}
2016-07-13 18:36:54,373 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{29, 4, 4, 2006/12/22 23:59:39, 1, 1535, 1, 2016-07-13 18:36:54.373, foo, 2016-07-13 18:36:54.373, foo, 0}
2016-07-13 18:36:54,375 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{30, 4, 3, 2007/11/01 02:13:00.354, 4, 1700, 1, 2016-07-13 18:36:54.375, foo, 2016-07-13 18:36:54.375, foo, 0}
2016-07-13 18:36:54,376 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{31, 4, 10, 2006/12/22 23:59:40, 1, 1700, 0, 2016-07-13 18:36:54.376, foo, 2016-07-13 18:36:54.376, foo, 0}
2016-07-13 18:36:54,378 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{32, 13, 3, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-07-13 18:36:54.378, foo, 2016-07-13 18:36:54.378, foo, 0}
2016-07-13 18:36:54,379 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{33, 16, 2, 2006/12/22 23:59:41, 2, 1700, 1, 2016-07-13 18:36:54.378, foo, 2016-07-13 18:36:54.378, foo, 0}
2016-07-13 18:36:54,380 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{34, 3, 4, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-07-13 18:36:54.38, foo, 2016-07-13 18:36:54.38, foo, 0}
2016-07-13 18:36:54,381 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{35, 2, 8, 2006/12/12 23:59:42, 1, 2000, 1, 2016-07-13 18:36:54.381, foo, 2016-07-13 18:36:54.381, foo, 0}
2016-07-13 18:36:54,382 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{36, 6, 3, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-07-13 18:36:54.382, foo, 2016-07-13 18:36:54.382, foo, 0}
2016-07-13 18:36:54,383 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{37, 4, 4, 2006/12/12 23:59:43, 1, 1535, 1, 2016-07-13 18:36:54.382, foo, 2016-07-13 18:36:54.382, foo, 0}
2016-07-13 18:36:54,383 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{38, 4, 3, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-07-13 18:36:54.383, foo, 2016-07-13 18:36:54.383, foo, 0}
2016-07-13 18:36:54,384 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{39, 4, 10, 2006/12/12 23:59:44, 1, 1700, 0, 2016-07-13 18:36:54.384, foo, 2016-07-13 18:36:54.384, foo, 0}
2016-07-13 18:36:54,389 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{40, 4, 10, 2007/05/01 12:13:00.359, 1, 1700, 0, 2016-07-13 18:36:54.389, foo, 2016-07-13 18:36:54.389, foo, 0}
2016-07-13 18:36:54,390 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{41, 4, 11, 2007/11/01 02:13:01.354, 4, 1700, 1, 2016-07-13 18:36:54.39, foo, 2016-07-13 18:36:54.39, foo, 0}
2016-07-13 18:36:54,391 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{42, 10, 16, 2006/12/22 23:59:40, 1, 2800000, 1, 2016-07-13 18:36:54.391, foo, 2016-07-13 18:36:54.391, foo, 0}
2016-07-13 18:36:54,392 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{43, 13, 17, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-07-13 18:36:54.392, foo, 2016-07-13 18:36:54.392, foo, 0}
2016-07-13 18:36:54,393 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{44, 16, 14, 2006/12/22 23:59:41, 2, 1700, 1, 2016-07-13 18:36:54.393, foo, 2016-07-13 18:36:54.393, foo, 0}
2016-07-13 18:36:54,394 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{45, 3, 18, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-07-13 18:36:54.394, foo, 2016-07-13 18:36:54.394, foo, 0}
2016-07-13 18:36:54,394 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{46, 2, 7, 2006/12/12 23:59:42, 1, 2000, 1, 2016-07-13 18:36:54.394, foo, 2016-07-13 18:36:54.394, foo, 0}
2016-07-13 18:36:54,395 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{47, 6, 14, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-07-13 18:36:54.395, foo, 2016-07-13 18:36:54.395, foo, 0}
2016-07-13 18:36:54,396 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{48, 16, 12, 2006/12/12 23:59:43, 1, 100000, 1, 2016-07-13 18:36:54.396, foo, 2016-07-13 18:36:54.396, foo, 0}
2016-07-13 18:36:54,397 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{49, 4, 20, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-07-13 18:36:54.397, foo, 2016-07-13 18:36:54.397, foo, 0}
2016-07-13 18:36:54,398 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{50, 4, 19, 2006/12/12 23:59:44, 1, 1700, 0, 2016-07-13 18:36:54.398, foo, 2016-07-13 18:36:54.398, foo, 0}
2016-07-13 18:36:54,399 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{51, 4, 11, 2007/11/21 02:13:00.354, 4, 1700, 1, 2016-07-13 18:36:54.399, foo, 2016-07-13 18:36:54.399, foo, 0}
2016-07-13 18:36:54,399 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{52, 20, 17, 2006/12/23 23:59:40, 1, 400, 0, 2016-07-13 18:36:54.399, foo, 2016-07-13 18:36:54.399, foo, 0}
2016-07-13 18:36:54,400 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{53, 13, 16, 2007/12/28 12:13:10.355, 1, 600000, 1, 2016-07-13 18:36:54.4, foo, 2016-07-13 18:36:54.4, foo, 0}
2016-07-13 18:36:54,401 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{54, 16, 14, 2006/02/22 23:59:41, 2, 1700, 1, 2016-07-13 18:36:54.401, foo, 2016-07-13 18:36:54.401, foo, 0}
2016-07-13 18:36:54,403 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{55, 3, 3, 2007/07/21 12:13:00.356, 1, 1800, 1, 2016-07-13 18:36:54.403, foo, 2016-07-13 18:36:54.403, foo, 0}
2016-07-13 18:36:54,404 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{56, 2, 8, 2006/12/22 23:59:42, 1, 2000, 1, 2016-07-13 18:36:54.404, foo, 2016-07-13 18:36:54.404, foo, 0}
2016-07-13 18:36:54,405 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{57, 6, 19, 2007/02/01 02:13:00.357, 2, 1000, 0, 2016-07-13 18:36:54.405, foo, 2016-07-13 18:36:54.405, foo, 0}
2016-07-13 18:36:54,406 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{58, 2, 12, 2006/12/12 23:59:43, 1, 4000000, 1, 2016-07-13 18:36:54.406, foo, 2016-07-13 18:36:54.406, foo, 0}
2016-07-13 18:36:54,407 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{59, 4, 18, 2007/05/01 02:03:00.358, 1, 380, 1, 2016-07-13 18:36:54.407, foo, 2016-07-13 18:36:54.407, foo, 0}
2016-07-13 18:36:54,409 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{60, 4, 20, 2006/12/12 23:59:44, 2, 680, 0, 2016-07-13 18:36:54.409, foo, 2016-07-13 18:36:54.409, foo, 0}
2016-07-13 18:36:54,410 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{61, 1, 16, 2008-03-03 06:34:56.000, 3, 12000000, 1, 2016-07-13 18:36:54.41, foo, 2016-07-13 18:36:54.41, foo, 0}
2016-07-13 18:36:54,411 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{62, 1, 2, 2009-06-04 06:34:56.000, 12, 20000, 1, 2016-07-13 18:36:54.411, foo, 2016-07-13 18:36:54.411, foo, 0}
2016-07-13 18:36:54,412 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{63, 1, 6, 2010-09-26 06:34:56.000, 2, 2000, 1, 2016-07-13 18:36:54.412, foo, 2016-07-13 18:36:54.412, foo, 0}
2016-07-13 18:36:54,413 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{64, 1, 8, 2011-03-03 09:45:29.000, 1, 50, 1, 2016-07-13 18:36:54.413, foo, 2016-07-13 18:36:54.413, foo, 0}
2016-07-13 18:36:54,414 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{65, 1, 13, 2012-06-04 09:45:29.000, 1, 1000000, 1, 2016-07-13 18:36:54.414, foo, 2016-07-13 18:36:54.414, foo, 0}
2016-07-13 18:36:54,415 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{66, 1, 13, 2013-09-26 09:45:29.000, 1, 900000, 1, 2016-07-13 18:36:54.415, foo, 2016-07-13 18:36:54.415, foo, 0}
2016-07-13 18:36:54,416 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{67, 1, 5, 2014-03-03 21:02:12.000, 2, 3000, 1, 2016-07-13 18:36:54.416, foo, 2016-07-13 18:36:54.416, foo, 0}
2016-07-13 18:36:54,417 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{68, 1, 17, 2015-06-04 21:02:12.000, 30, 3000, 1, 2016-07-13 18:36:54.417, foo, 2016-07-13 18:36:54.417, foo, 0}
2016-07-13 18:36:54,418 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{69, 1, 17, 2016-09-26 21:02:12.000, 1, 1000, 1, 2016-07-13 18:36:54.418, foo, 2016-07-13 18:36:54.418, foo, 0}
2016-07-13 18:36:54,419 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{70, 1, 17, 2017-03-03 01:11:00.000, 1, 1200, 1, 2016-07-13 18:36:54.419, foo, 2016-07-13 18:36:54.419, foo, 0}
2016-07-13 18:36:54,464 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 70 rows are loaded to PURCHASE
2016-07-13 18:36:54,465 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{1, 1, 1800, 2006/12/25 23:59:59, BAK, 2016-07-13 18:36:54.464, foo, 2016-07-13 18:36:54.464, foo}
2016-07-13 18:36:54,466 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{2, 2, 1700, 2007/11/13 16:16:16, BAK, 2016-07-13 18:36:54.466, foo, 2016-07-13 18:36:54.466, foo}
2016-07-13 18:36:54,467 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{3, 3, 900, 2006/12/23 23:56:29, CRC, 2016-07-13 18:36:54.467, foo, 2016-07-13 18:36:54.467, foo}
2016-07-13 18:36:54,468 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{4, 3, 900, 2006/12/23 23:56:30, HAN, 2016-07-13 18:36:54.468, foo, 2016-07-13 18:36:54.468, foo}
2016-07-13 18:36:54,469 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{5, 4, 1700, 2007/12/01 02:13:00, HAN, 2016-07-13 18:36:54.469, foo, 2016-07-13 18:36:54.469, foo}
2016-07-13 18:36:54,470 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{6, 5, 800.20, 2008/04/04 23:12:59, HAN, 2016-07-13 18:36:54.47, foo, 2016-07-13 18:36:54.47, foo}
2016-07-13 18:36:54,471 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{7, 5, 1000.90, 2008/05/04 23:12:59, CRC, 2016-07-13 18:36:54.471, foo, 2016-07-13 18:36:54.471, foo}
2016-07-13 18:36:54,473 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{8, 6, 1000, 2002/01/01 16:32:01, CRC, 2016-07-13 18:36:54.473, foo, 2016-07-13 18:36:54.473, foo}
2016-07-13 18:36:54,474 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{9, 6, 400.8, 2002/01/01 16:32:01, CRC, 2016-07-13 18:36:54.474, foo, 2016-07-13 18:36:54.474, foo}
2016-07-13 18:36:54,475 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{10, 6, 599.2, 2002/01/01 16:32:01, HAN, 2016-07-13 18:36:54.475, foo, 2016-07-13 18:36:54.475, foo}
2016-07-13 18:36:54,476 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{11, 7, 300, 2006/01/28 23:59:59, CRC, 2016-07-13 18:36:54.475, foo, 2016-07-13 18:36:54.475, foo}
2016-07-13 18:36:54,477 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{12, 8, 535.5, 2007/11/09 16:23:00, BAK, 2016-07-13 18:36:54.477, foo, 2016-07-13 18:36:54.477, foo}
2016-07-13 18:36:54,478 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{13, 8, 999.5, 2014/11/09 16:23:05, BAK, 2016-07-13 18:36:54.478, foo, 2016-07-13 18:36:54.478, foo}
2016-07-13 18:36:54,478 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{14, 9, 1700, 2006/12/22 23:59:59, BAK, 2016-07-13 18:36:54.478, foo, 2016-07-13 18:36:54.478, foo}
2016-07-13 18:36:54,479 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{15, 11, 1799.2, 2014/11/09 16:23:01, CRC, 2016-07-13 18:36:54.479, foo, 2016-07-13 18:36:54.479, foo}
2016-07-13 18:36:54,480 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{16, 11, 0.8, 2014/11/09 16:23:01, HAN, 2016-07-13 18:36:54.48, foo, 2016-07-13 18:36:54.48, foo}
2016-07-13 18:36:54,481 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{17, 12, 1690, 2011/12/22 23:59:12, HAN, 2016-07-13 18:36:54.481, foo, 2016-07-13 18:36:54.481, foo}
2016-07-13 18:36:54,482 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{18, 12, 10, 2011/12/22 23:59:12, CRC, 2016-07-13 18:36:54.482, foo, 2016-07-13 18:36:54.482, foo}
2016-07-13 18:36:54,487 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{19, 13, 1800.7, 2007/11/01 02:13:00, CRC, 2016-07-13 18:36:54.487, foo, 2016-07-13 18:36:54.487, foo}
2016-07-13 18:36:54,489 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{20, 14, 1700, 2008/11/09 16:23:02, BAK, 2016-07-13 18:36:54.488, foo, 2016-07-13 18:36:54.488, foo}
2016-07-13 18:36:54,491 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{21, 15, 300, 2006/12/22 23:59:32, HAN, 2016-07-13 18:36:54.491, foo, 2016-07-13 18:36:54.491, foo}
2016-07-13 18:36:54,492 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{22, 15, 600, 2007/12/22 23:59:32, BAK, 2016-07-13 18:36:54.492, foo, 2016-07-13 18:36:54.492, foo}
2016-07-13 18:36:54,493 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{23, 15, 900, 2008/12/22 23:59:32, HAN, 2016-07-13 18:36:54.493, foo, 2016-07-13 18:36:54.493, foo}
2016-07-13 18:36:54,494 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{24, 16, 2000, 2012/11/01 02:13:00, BAK, 2016-07-13 18:36:54.494, foo, 2016-07-13 18:36:54.494, foo}
2016-07-13 18:36:54,495 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{25, 18, 1535, 2013/11/01 02:13:00, HAN, 2016-07-13 18:36:54.495, foo, 2016-07-13 18:36:54.495, foo}
2016-07-13 18:36:54,496 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{26, 19, 1700, 2007/11/01 02:13:00, HAN, 2016-07-13 18:36:54.496, foo, 2016-07-13 18:36:54.496, foo}
2016-07-13 18:36:54,497 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{27, 20, 5, 2006/12/22 23:59:35, HAN, 2016-07-13 18:36:54.497, foo, 2016-07-13 18:36:54.497, foo}
2016-07-13 18:36:54,497 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{28, 21, 399999, 2006/12/22 23:59:35, BAK, 2016-07-13 18:36:54.497, foo, 2016-07-13 18:36:54.497, foo}
2016-07-13 18:36:54,498 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{29, 22, 1800, 2007/11/01 02:13:00, BAK, 2016-07-13 18:36:54.498, foo, 2016-07-13 18:36:54.498, foo}
2016-07-13 18:36:54,499 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{30, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-13 18:36:54.499, foo, 2016-07-13 18:36:54.499, foo}
2016-07-13 18:36:54,500 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{31, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-13 18:36:54.5, foo, 2016-07-13 18:36:54.5, foo}
2016-07-13 18:36:54,500 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{32, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-13 18:36:54.5, foo, 2016-07-13 18:36:54.5, foo}
2016-07-13 18:36:54,502 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{33, 24, 1000, 2012/09/11 12:13:00, BAK, 2016-07-13 18:36:54.502, foo, 2016-07-13 18:36:54.502, foo}
2016-07-13 18:36:54,503 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{34, 24, 800, 2015/09/11 12:13:00, BAK, 2016-07-13 18:36:54.503, foo, 2016-07-13 18:36:54.503, foo}
2016-07-13 18:36:54,505 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{35, 25, 1700, 2013/12/22 23:59:37, BAK, 2016-07-13 18:36:54.505, foo, 2016-07-13 18:36:54.505, foo}
2016-07-13 18:36:54,506 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{36, 26, 1800, 2005/12/21 12:13:00, BAK, 2016-07-13 18:36:54.506, foo, 2016-07-13 18:36:54.506, foo}
2016-07-13 18:36:54,507 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{37, 27, 2000, 2006/12/22 23:59:38, HAN, 2016-07-13 18:36:54.507, foo, 2016-07-13 18:36:54.507, foo}
2016-07-13 18:36:54,509 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{38, 28, 600, 2007/11/01 02:13:00, BAK, 2016-07-13 18:36:54.509, foo, 2016-07-13 18:36:54.509, foo}
2016-07-13 18:36:54,510 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{39, 29, 1535, 2006/12/22 23:59:39, BAK, 2016-07-13 18:36:54.51, foo, 2016-07-13 18:36:54.51, foo}
2016-07-13 18:36:54,511 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{40, 30, 100, 2010/09/01 02:13:00, HAN, 2016-07-13 18:36:54.511, foo, 2016-07-13 18:36:54.511, foo}
2016-07-13 18:36:54,512 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{41, 30, 200, 2011/10/31 02:13:00, CRC, 2016-07-13 18:36:54.512, foo, 2016-07-13 18:36:54.512, foo}
2016-07-13 18:36:54,514 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{42, 30, 300.75, 2012/11/01 02:13:00, CRC, 2016-07-13 18:36:54.513, foo, 2016-07-13 18:36:54.513, foo}
2016-07-13 18:36:54,514 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{43, 30, 400.25, 2013/12/01 02:13:00, HAN, 2016-07-13 18:36:54.514, foo, 2016-07-13 18:36:54.514, foo}
2016-07-13 18:36:54,515 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{44, 30, 300, 2014/09/01 02:13:00, HAN, 2016-07-13 18:36:54.515, foo, 2016-07-13 18:36:54.515, foo}
2016-07-13 18:36:54,516 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{45, 30, 700, 2014/10/01 02:13:00, HAN, 2016-07-13 18:36:54.516, foo, 2016-07-13 18:36:54.516, foo}
2016-07-13 18:36:54,516 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{46, 31, 1700.85, 2006/12/22 23:59:40, HAN, 2016-07-13 18:36:54.516, foo, 2016-07-13 18:36:54.516, foo}
2016-07-13 18:36:54,517 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{47, 32, 1800, 2009/12/28 12:13:10, HAN, 2016-07-13 18:36:54.517, foo, 2016-07-13 18:36:54.517, foo}
2016-07-13 18:36:54,526 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{48, 33, 1700, 2006/12/22 23:59:41, CRC, 2016-07-13 18:36:54.526, foo, 2016-07-13 18:36:54.526, foo}
2016-07-13 18:36:54,527 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{49, 34, 1800, 2007/05/21 12:13:00, BAK, 2016-07-13 18:36:54.527, foo, 2016-07-13 18:36:54.527, foo}
2016-07-13 18:36:54,528 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{50, 35, 2000, 2006/12/12 23:59:42, CRC, 2016-07-13 18:36:54.528, foo, 2016-07-13 18:36:54.528, foo}
2016-07-13 18:36:54,529 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{51, 36, 300.1, 2012/05/01 02:13:00, CRC, 2016-07-13 18:36:54.529, foo, 2016-07-13 18:36:54.529, foo}
2016-07-13 18:36:54,529 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{52, 36, 300.8, 2013/05/01 02:13:00, HAN, 2016-07-13 18:36:54.529, foo, 2016-07-13 18:36:54.529, foo}
2016-07-13 18:36:54,530 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{53, 36, 300.25, 2014/05/01 02:13:00, HAN, 2016-07-13 18:36:54.53, foo, 2016-07-13 18:36:54.53, foo}
2016-07-13 18:36:54,531 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{54, 37, 1535, 2006/12/12 23:59:43, HAN, 2016-07-13 18:36:54.531, foo, 2016-07-13 18:36:54.531, foo}
2016-07-13 18:36:54,532 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{55, 38, 1700, 2007/05/01 02:03:00, HAN, 2016-07-13 18:36:54.531, foo, 2016-07-13 18:36:54.531, foo}
2016-07-13 18:36:54,532 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{56, 40, 128, 2007/05/01 12:13:00, BAK, 2016-07-13 18:36:54.532, foo, 2016-07-13 18:36:54.532, foo}
2016-07-13 18:36:54,533 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{57, 40, 256, 2013/05/01 12:13:00, BAK, 2016-07-13 18:36:54.533, foo, 2016-07-13 18:36:54.533, foo}
2016-07-13 18:36:54,534 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{58, 40, 512, 2009/05/01 12:13:00, CRC, 2016-07-13 18:36:54.533, foo, 2016-07-13 18:36:54.534, foo}
2016-07-13 18:36:54,535 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{59, 41, 1700, 2007/11/01 02:13:00, HAN, 2016-07-13 18:36:54.535, foo, 2016-07-13 18:36:54.535, foo}
2016-07-13 18:36:54,538 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{60, 42, 30000000, 2014/03/22 21:59:40, HAN, 2016-07-13 18:36:54.537, foo, 2016-07-13 18:36:54.537, foo}
2016-07-13 18:36:54,540 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{61, 43, 1800, 2006/12/28 12:13:10, BAK, 2016-07-13 18:36:54.54, foo, 2016-07-13 18:36:54.54, foo}
2016-07-13 18:36:54,542 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{62, 44, 1700, 2006/12/22 23:59:41, BAK, 2016-07-13 18:36:54.542, foo, 2016-07-13 18:36:54.542, foo}
2016-07-13 18:36:54,543 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{63, 45, 1800, 2007/05/21 12:13:00, CRC, 2016-07-13 18:36:54.543, foo, 2016-07-13 18:36:54.543, foo}
2016-07-13 18:36:54,545 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{64, 46, 2000, 2010/12/12 23:59:42, BAK, 2016-07-13 18:36:54.544, foo, 2016-07-13 18:36:54.544, foo}
2016-07-13 18:36:54,546 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{65, 48, 90000, 2006/12/12 23:59:43, HAN, 2016-07-13 18:36:54.546, foo, 2016-07-13 18:36:54.546, foo}
2016-07-13 18:36:54,550 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{66, 48, 10000, 2006/12/12 23:59:43, BAK, 2016-07-13 18:36:54.55, foo, 2016-07-13 18:36:54.55, foo}
2016-07-13 18:36:54,551 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{67, 49, 1700.66, 2007/05/01 02:03:00, HAN, 2016-07-13 18:36:54.55, foo, 2016-07-13 18:36:54.55, foo}
2016-07-13 18:36:54,551 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{68, 51, 1700, 2007/11/21 02:13:00, BAK, 2016-07-13 18:36:54.551, foo, 2016-07-13 18:36:54.551, foo}
2016-07-13 18:36:54,552 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{69, 52, 100, 2006/12/23 23:59:40, BAK, 2016-07-13 18:36:54.552, foo, 2016-07-13 18:36:54.552, foo}
2016-07-13 18:36:54,553 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{70, 52, 40, 2007/12/23 23:59:40, HAN, 2016-07-13 18:36:54.553, foo, 2016-07-13 18:36:54.553, foo}
2016-07-13 18:36:54,553 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{71, 52, 40, 2008/12/23 23:59:40, HAN, 2016-07-13 18:36:54.553, foo, 2016-07-13 18:36:54.553, foo}
2016-07-13 18:36:54,554 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{72, 52, 40, 2009/12/23 23:59:40, HAN, 2016-07-13 18:36:54.554, foo, 2016-07-13 18:36:54.554, foo}
2016-07-13 18:36:54,560 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{73, 52, 40, 2010/12/23 23:59:40, BAK, 2016-07-13 18:36:54.56, foo, 2016-07-13 18:36:54.56, foo}
2016-07-13 18:36:54,561 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{74, 52, 40, 2011/12/23 23:59:40, CRC, 2016-07-13 18:36:54.561, foo, 2016-07-13 18:36:54.561, foo}
2016-07-13 18:36:54,562 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{75, 52, 40, 2012/12/23 23:59:40, BAK, 2016-07-13 18:36:54.562, foo, 2016-07-13 18:36:54.562, foo}
2016-07-13 18:36:54,563 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{76, 52, 40, 2013/12/23 23:59:40, HAN, 2016-07-13 18:36:54.563, foo, 2016-07-13 18:36:54.563, foo}
2016-07-13 18:36:54,564 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{77, 52, 40, 2014/12/23 23:59:40, HAN, 2016-07-13 18:36:54.564, foo, 2016-07-13 18:36:54.564, foo}
2016-07-13 18:36:54,564 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{78, 52, 40, 2015/12/23 23:59:40, HAN, 2016-07-13 18:36:54.564, foo, 2016-07-13 18:36:54.564, foo}
2016-07-13 18:36:54,565 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{79, 53, 600000, 2007/12/28 12:13:10, BAK, 2016-07-13 18:36:54.565, foo, 2016-07-13 18:36:54.565, foo}
2016-07-13 18:36:54,566 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{80, 54, 1700.42, 2008/02/22 23:59:41, CRC, 2016-07-13 18:36:54.566, foo, 2016-07-13 18:36:54.566, foo}
2016-07-13 18:36:54,567 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{81, 55, 1600, 2012/07/21 12:13:00, HAN, 2016-07-13 18:36:54.567, foo, 2016-07-13 18:36:54.567, foo}
2016-07-13 18:36:54,569 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{82, 55, 200, 2008/07/21 12:13:00, CRC, 2016-07-13 18:36:54.569, foo, 2016-07-13 18:36:54.569, foo}
2016-07-13 18:36:54,571 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{83, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-13 18:36:54.571, foo, 2016-07-13 18:36:54.571, foo}
2016-07-13 18:36:54,573 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{84, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-13 18:36:54.572, foo, 2016-07-13 18:36:54.572, foo}
2016-07-13 18:36:54,575 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{85, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-13 18:36:54.574, foo, 2016-07-13 18:36:54.574, foo}
2016-07-13 18:36:54,576 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{86, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-13 18:36:54.576, foo, 2016-07-13 18:36:54.576, foo}
2016-07-13 18:36:54,577 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{87, 57, 999, 2014/02/01 02:13:00, HAN, 2016-07-13 18:36:54.576, foo, 2016-07-13 18:36:54.576, foo}
2016-07-13 18:36:54,577 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{88, 58, 4000000, 2006/12/12 23:59:43, HAN, 2016-07-13 18:36:54.577, foo, 2016-07-13 18:36:54.577, foo}
2016-07-13 18:36:54,578 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{89, 59, 380.77, 2013/05/01 02:03:00, CRC, 2016-07-13 18:36:54.578, foo, 2016-07-13 18:36:54.578, foo}
2016-07-13 18:36:54,578 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{90, 60, 675.88, 2006/12/12 23:59:44, BAK, 2016-07-13 18:36:54.578, foo, 2016-07-13 18:36:54.578, foo}
2016-07-13 18:36:54,579 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{91, 61, 12000000, 2008/03/03 06:34:56, HAN, 2016-07-13 18:36:54.579, foo, 2016-07-13 18:36:54.579, foo}
2016-07-13 18:36:54,579 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{92, 62, 20000, 2009/06/04 06:34:56, HAN, 2016-07-13 18:36:54.579, foo, 2016-07-13 18:36:54.579, foo}
2016-07-13 18:36:54,580 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{93, 63, 2000, 2010/09/26 06:34:56, HAN, 2016-07-13 18:36:54.58, foo, 2016-07-13 18:36:54.58, foo}
2016-07-13 18:36:54,581 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{94, 64, 50, 2011/03/03 09:45:29, BAK, 2016-07-13 18:36:54.581, foo, 2016-07-13 18:36:54.581, foo}
2016-07-13 18:36:54,581 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{95, 65, 1000000, 2012/06/04 09:45:29, BAK, 2016-07-13 18:36:54.581, foo, 2016-07-13 18:36:54.581, foo}
2016-07-13 18:36:54,582 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{96, 66, 900000, 2013/09/26 09:45:29, BAK, 2016-07-13 18:36:54.582, foo, 2016-07-13 18:36:54.582, foo}
2016-07-13 18:36:54,583 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{97, 67, 3000, 2014/03/03 21:02:12, CRC, 2016-07-13 18:36:54.583, foo, 2016-07-13 18:36:54.583, foo}
2016-07-13 18:36:54,589 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{98, 68, 3000, 2015/06/04 21:02:12, CRC, 2016-07-13 18:36:54.589, foo, 2016-07-13 18:36:54.589, foo}
2016-07-13 18:36:54,590 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{99, 69, 1000, 2016/09/26 21:02:12, CRC, 2016-07-13 18:36:54.59, foo, 2016-07-13 18:36:54.59, foo}
2016-07-13 18:36:54,591 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{100, 70, 1200, 2017/03/03 01:11:00, HAN, 2016-07-13 18:36:54.591, foo, 2016-07-13 18:36:54.591, foo}
2016-07-13 18:36:54,660 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 100 rows are loaded to PURCHASE_PAYMENT
2016-07-13 18:36:54,661 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():378) - ...Checking implicit set of classification
2016-07-13 18:36:54,682 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 18:36:54,693 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-13 18:36:54,700 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-13 18:36:54,703 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-13 18:36:54,707 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-13 18:36:54,710 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-13 18:36:54,713 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-13 18:36:54,727 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-07-13 18:36:54,730 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-07-13 18:36:54,734 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct MOBILE_LOGIN_FLG from MEMBER_LOGIN where MOBILE_LOGIN_FLG not in (1, 0)
2016-07-13 18:36:54,739 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_COMPLETE_FLG from PURCHASE where PAYMENT_COMPLETE_FLG not in (1, 0)
2016-07-13 18:36:54,742 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_METHOD_CODE from PURCHASE_PAYMENT where PAYMENT_METHOD_CODE not in ('HAN', 'BAK', 'CRC')
2016-07-13 18:36:54,748 [main] INFO  (DfTakeFinallyProcess#takeFinally():219) - 
2016-07-13 18:36:54,749 [main] INFO  (DfTakeFinallyProcess#takeFinally():220) - * * * * * * * **
2016-07-13 18:36:54,749 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - *              *
2016-07-13 18:36:54,749 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * Take Finally *
2016-07-13 18:36:54,750 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2016-07-13 18:36:54,750 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * * * * * * * **
2016-07-13 18:36:54,759 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: take-finally.sql
2016-07-13 18:36:54,763 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Member addresses should be only one at any time.
-- - - - - - - - - - -/
select adr.MEMBER_ADDRESS_ID, adr.MEMBER_ID
     , adr.VALID_BEGIN_DATE, adr.VALID_END_DATE
     , adr.ADDRESS
  from MEMBER_ADDRESS adr
 where exists (select subadr.MEMBER_ADDRESS_ID
                 from MEMBER_ADDRESS subadr
                where subadr.MEMBER_ID = adr.MEMBER_ID
                  and subadr.VALID_BEGIN_DATE > adr.VALID_BEGIN_DATE
                  -- 有効期間が一日だけ重複しているパターンも検出
                  and subadr.VALID_BEGIN_DATE <= adr.VALID_END_DATE
       )
2016-07-13 18:36:54,766 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 正式会員日時を持ってる仮会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'PRV'
   and mem.FORMALIZED_DATETIME is not NULL
2016-07-13 18:36:54,767 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- まだ生まれていない会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.BIRTHDATE > now()
2016-07-13 18:36:54,769 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 退会会員が退会情報を持っていることをアサート
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'WDL'
   and not exists (select wdl.MEMBER_ID
                     from MEMBER_WITHDRAWAL wdl
                    where wdl.MEMBER_ID = mem.MEMBER_ID
       )
2016-07-13 18:36:54,771 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=4 failure=0
2016-07-13 18:36:54,772 [main] INFO  (DfSqlFileFireMan#fire():89) - {Take Finally}: success=4 failure=0 (in 1 files)
2016-07-13 18:36:54,774 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-13 18:36:54,779 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m05s540ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=49 failure=0 (in 3 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql
  o replace-schema-50-procedure.sql

 {Load Data}: loaded-files=3
  (common)
  o 10-master.xls
  (ut)
  o 20-member.xls
  o 30-product.xls

 {Take Finally}: success=4 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2016-07-13 18:36:55,784 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2016-07-13 18:36:55,787 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2016-07-13 18:36:55,787 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2016-07-13 18:36:55,787 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2016-07-13 18:36:55,788 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2016-07-13 18:36:55,817 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 18:36:55,818 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 18:36:55,818 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 18:36:55,818 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 18:36:55,890 [main] INFO  (DfSchemaXmlSerializer#serialize():285) - 
2016-07-13 18:36:55,890 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - ...Starting to process JDBC to SchemaXML
2016-07-13 18:36:55,890 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1460) - ...Loading previous schema (schema diff process)
2016-07-13 18:36:55,905 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 18:36:56,093 [main] INFO  (DfSchemaXmlSerializer#generateXML():359) - ...Getting DB connection
2016-07-13 18:36:56,099 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-13 18:36:56,615 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-13 18:36:56,616 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-13 18:36:56,617 [main] INFO  (DfSchemaXmlSerializer#generateXML():362) - ...Getting DB meta data
2016-07-13 18:36:56,618 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-13 18:36:56,619 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 18:36:56,619 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-13 18:36:56,634 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'maihamadb' order by table_name asc
2016-07-13 18:36:56,636 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'maihamadb' order by table_name asc, column_name asc
2016-07-13 18:36:56,657 [main] INFO  (DfSchemaXmlSerializer#processTable():419) - 
2016-07-13 18:36:56,657 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2016-07-13 18:36:56,658 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ [Table List]
2016-07-13 18:36:56,658 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member(TABLE) // 会員: 会員登録時にデータが登録される。...
2016-07-13 18:36:56,704 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_address(TABLE) // 会員住所情報: 会員の住所に関する情報。...
2016-07-13 18:36:56,730 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_following(TABLE) // 会員フォローイング: とある会員が他の会員をフォローできる。すると、フォローした会員の購入履歴が閲覧できる。
2016-07-13 18:36:56,760 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_login(TABLE) // 会員ログイン情報: ログインするたびに登録されるログイン履歴。
2016-07-13 18:36:56,791 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_security(TABLE) // 会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある
2016-07-13 18:36:56,817 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_service(TABLE) // 会員サービス: 会員のサービス情報（ポイントサービスなど）。
2016-07-13 18:36:56,834 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_status(TABLE) // 会員ステータス
2016-07-13 18:36:56,856 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_withdrawal(TABLE) // 会員退会情報: 退会会員の退会に関する詳細な情報。...
2016-07-13 18:36:56,867 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product(TABLE) // 商品
2016-07-13 18:36:56,878 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product_category(TABLE) // 商品カテゴリ: 商品のカテゴリを表現するマスタ。...
2016-07-13 18:36:56,887 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product_status(TABLE) // 商品ステータス
2016-07-13 18:36:56,896 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.purchase(TABLE) // 購入: 一つの商品に対する一回の購入を表現する。...
2016-07-13 18:36:56,909 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.purchase_payment(TABLE) // 購入支払: 購入に対する支払。...
2016-07-13 18:36:56,919 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.region(TABLE) // 地域: 主に会員の住所に対応する地域。...
2016-07-13 18:36:56,928 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.service_rank(TABLE) // サービスランク: 会員のサービスレベルを表現するランク。...
2016-07-13 18:36:56,935 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.withdrawal_reason(TABLE) // 退会理由: 会員に選ばせる定型的な退会理由のマスタ。
2016-07-13 18:36:56,944 [main] INFO  (DfSchemaXmlSerializer#processTable():433) - $ 
2016-07-13 18:36:56,945 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ [Table Count]
2016-07-13 18:36:56,945 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 16
2016-07-13 18:36:56,945 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ = = = = = = = = = =/
2016-07-13 18:36:56,946 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - 
2016-07-13 18:36:56,950 [main] INFO  (DfSchemaXmlSerializer#processSequence():796) - ...Getting sequences
2016-07-13 18:36:56,953 [main] INFO  (DfSchemaXmlSerializer#serialize():300) - ...Serializing XML:
2016-07-13 18:36:56,954 [main] INFO  (DfSchemaXmlSerializer#serialize():301) -   filePath = ./schema/project-schema-maihamadb.xml
2016-07-13 18:36:56,954 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   encoding = UTF-8
2016-07-13 18:36:56,995 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1478) - ...Loading next schema (schema diff process)
2016-07-13 18:36:56,997 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 18:36:57,081 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1493) -  -> same as previous (schema diff)
2016-07-13 18:36:57,081 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-13 18:36:57,091 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s326ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2016-07-13 18:36:57,882 [main] INFO  (TorqueDocumentationTask#begin():175) - +------------------------------------------+
2016-07-13 18:36:57,884 [main] INFO  (TorqueDocumentationTask#begin():176) - |                                          |
2016-07-13 18:36:57,884 [main] INFO  (TorqueDocumentationTask#begin():177) - |                   Doc                    |
2016-07-13 18:36:57,885 [main] INFO  (TorqueDocumentationTask#begin():185) - |                                          |
2016-07-13 18:36:57,885 [main] INFO  (TorqueDocumentationTask#begin():186) - +------------------------------------------+
2016-07-13 18:36:57,919 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 18:36:57,920 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 18:36:57,920 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 18:36:57,921 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 18:36:57,923 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - 
2016-07-13 18:36:57,924 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2016-07-13 18:36:57,924 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():248) - *                   *
2016-07-13 18:36:57,924 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():249) - *    Schema HTML    *
2016-07-13 18:36:57,925 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():250) - *                   *
2016-07-13 18:36:57,925 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():251) - * * * * * * * * * * *
2016-07-13 18:36:57,988 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 18:36:58,094 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2016-07-13 18:36:58,293 [main] INFO  (Database#doEnableDocumentOutputDirectory():1179) - ...Setting up documentOutputDirectory: ./output/doc
2016-07-13 18:36:58,305 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2016-07-13 18:36:58,306 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2016-07-13 18:36:58,308 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2016-07-13 18:36:58,309 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2016-07-13 18:36:58,310 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2016-07-13 18:36:58,312 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2016-07-13 18:36:58,315 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2016-07-13 18:36:58,316 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2016-07-13 18:36:58,320 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_ADDRESS_VALID
2016-07-13 18:36:58,328 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-13 18:36:58,329 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_ADDRESS.[MEMBER_ID]
2016-07-13 18:36:58,330 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.VALID_BEGIN_DATE <= /*targetDate(Date)*/null\n     and $$foreignAlias$$.VALID_END_DATE >= /*targetDate(Date)*/null
2016-07-13 18:36:58,330 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_LOGIN_LATEST
2016-07-13 18:36:58,331 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-13 18:36:58,331 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_LOGIN.[MEMBER_ID]
2016-07-13 18:36:58,332 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.LOGIN_DATETIME = ($$sqbegin$$\nselect max(login.LOGIN_DATETIME)\n  from MEMBER_LOGIN login\n where login.MEMBER_ID = $$foreignAlias$$.MEMBER_ID\n)$$sqend$$
2016-07-13 18:36:58,332 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2016-07-13 18:36:58,346 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 18:36:58,696 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-13 18:36:58,699 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-13 18:36:58,702 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-13 18:36:58,705 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-13 18:36:58,709 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-13 18:36:58,712 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-13 18:36:58,723 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():157) - ...Loading schema history
2016-07-13 18:36:58,766 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():161) -  -> found history: count=4
2016-07-13 18:36:59,228 [main] INFO  (Database#getAvailableProcedureList():2823) -  
2016-07-13 18:36:59,229 [main] INFO  (Database#getAvailableProcedureList():2824) - ...Setting up procedures for documents
2016-07-13 18:36:59,236 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-13 18:36:59,251 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-13 18:36:59,252 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-13 18:36:59,329 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'maihamadb' order by ROUTINE_NAME
2016-07-13 18:36:59,335 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=maihamadb
2016-07-13 18:36:59,336 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_IN_OUT_PARAMETER:{4, 84, cb677351}
2016-07-13 18:36:59,336 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_RETURN_RESULT_SET:{9, 254, 4b86b61f}
2016-07-13 18:36:59,337 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=2
2016-07-13 18:36:59,337 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=2
2016-07-13 18:36:59,388 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-13 18:36:59,400 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-13 18:36:59,404 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s536ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2016-07-13 18:37:02,076 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2016-07-13 18:37:02,079 [main] INFO  (TorqueDataModelTask#begin():110) - |                                          |
2016-07-13 18:37:02,079 [main] INFO  (TorqueDataModelTask#begin():111) - |                 Generate                 |
2016-07-13 18:37:02,079 [main] INFO  (TorqueDataModelTask#begin():112) - |                                          |
2016-07-13 18:37:02,079 [main] INFO  (TorqueDataModelTask#begin():113) - +------------------------------------------+
2016-07-13 18:37:02,103 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 18:37:02,104 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 18:37:02,104 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 18:37:02,104 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 18:37:02,119 [main] INFO  (TorqueDataModelTask#setupControlTemplate():164) - 
2016-07-13 18:37:02,120 [main] INFO  (TorqueDataModelTask#setupControlTemplate():165) - ...Using Java control: om/ControlGenerateJava.vm
2016-07-13 18:37:02,153 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 18:37:02,227 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2016-07-13 18:37:02,457 [main] INFO  (Database#doEnableGenerateOutputDirectory():1147) - ...Setting up generateOutputDirectory: ../src/main/java
2016-07-13 18:37:02,461 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2016-07-13 18:37:02,461 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2016-07-13 18:37:02,463 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2016-07-13 18:37:02,468 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2016-07-13 18:37:02,469 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2016-07-13 18:37:02,471 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2016-07-13 18:37:02,473 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2016-07-13 18:37:02,473 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2016-07-13 18:37:02,476 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_ADDRESS_VALID
2016-07-13 18:37:02,488 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-13 18:37:02,488 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_ADDRESS.[MEMBER_ID]
2016-07-13 18:37:02,489 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.VALID_BEGIN_DATE <= /*targetDate(Date)*/null\n     and $$foreignAlias$$.VALID_END_DATE >= /*targetDate(Date)*/null
2016-07-13 18:37:02,489 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_LOGIN_LATEST
2016-07-13 18:37:02,489 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-13 18:37:02,490 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_LOGIN.[MEMBER_ID]
2016-07-13 18:37:02,490 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.LOGIN_DATETIME = ($$sqbegin$$\nselect max(login.LOGIN_DATETIME)\n  from MEMBER_LOGIN login\n where login.MEMBER_ID = $$foreignAlias$$.MEMBER_ID\n)$$sqend$$
2016-07-13 18:37:02,490 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2016-07-13 18:37:02,502 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 18:37:02,815 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-13 18:37:02,818 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-13 18:37:02,820 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-13 18:37:02,823 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-13 18:37:02,827 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-13 18:37:02,829 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-13 18:37:02,843 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2016-07-13 18:37:02,844 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2016-07-13 18:37:02,844 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2016-07-13 18:37:02,844 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2016-07-13 18:37:02,844 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2016-07-13 18:37:02,845 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2016-07-13 18:37:02,845 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2016-07-13 18:37:02,845 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2016-07-13 18:37:02,846 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2016-07-13 18:37:02,846 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2016-07-13 18:37:02,860 [main] INFO  (Database#info():2711) - public void parseAllCommon() {
2016-07-13 18:37:02,861 [main] INFO  (Database#info():2711) -     parse('CDef');
2016-07-13 18:37:02,915 [main] INFO  (Database#info():2711) -     parse('DBCurrent');
2016-07-13 18:37:02,918 [main] INFO  (Database#info():2711) -     parse('DBFluteConfig');
2016-07-13 18:37:02,936 [main] INFO  (Database#info():2711) -     parse('DBFluteInitializer');
2016-07-13 18:37:02,942 [main] INFO  (Database#info():2711) -     parse('DBMetaInstanceHandler');
2016-07-13 18:37:02,962 [main] INFO  (Database#info():2711) -     parse('EntityDefinedCommonColumn');
2016-07-13 18:37:02,985 [main] INFO  (Database#info():2711) -     parse('ImplementedBehaviorSelector');
2016-07-13 18:37:02,994 [main] INFO  (Database#info():2711) -     parse('ImplementedCommonColumnAutoSetupper');
2016-07-13 18:37:03,003 [main] INFO  (Database#info():2711) -     parse('ImplementedInvokerAssistant');
2016-07-13 18:37:03,010 [main] INFO  (Database#info():2711) -     parse('ImplementedSqlClauseCreator');
2016-07-13 18:37:03,015 [main] INFO  (Database#info():2711) - }
2016-07-13 18:37:03,016 [main] INFO  (Database#info():2711) - public void parseContainerConfig() {
2016-07-13 18:37:03,019 [main] INFO  (Database#info():2711) -     parse('../resources/dbflute.xml')
2016-07-13 18:37:03,040 [main] INFO  (Database#info():2711) - }
2016-07-13 18:37:03,047 [main] INFO  (DfOldClassHandler#info():1033) - public void deleteOldTableClass() {
2016-07-13 18:37:03,095 [main] INFO  (DfOldClassHandler#info():1033) - }
2016-07-13 18:37:03,096 [main] INFO  (Database#info():2711) - public void parseTableClass() {
2016-07-13 18:37:03,096 [main] INFO  (Database#info():2711) -     parse('member');
2016-07-13 18:37:03,660 [main] INFO  (Database#info():2711) -     parse('member_address');
2016-07-13 18:37:03,907 [main] INFO  (Database#info():2711) -     parse('member_following');
2016-07-13 18:37:04,100 [main] INFO  (Database#info():2711) -     parse('member_login');
2016-07-13 18:37:04,305 [main] INFO  (Database#info():2711) -     parse('member_security');
2016-07-13 18:37:04,473 [main] INFO  (Database#info():2711) -     parse('member_service');
2016-07-13 18:37:04,672 [main] INFO  (Database#info():2711) -     parse('member_status');
2016-07-13 18:37:04,847 [main] INFO  (Database#info():2711) -     parse('member_withdrawal');
2016-07-13 18:37:05,024 [main] INFO  (Database#info():2711) -     parse('product');
2016-07-13 18:37:05,226 [main] INFO  (Database#info():2711) -     parse('product_category');
2016-07-13 18:37:05,381 [main] INFO  (Database#info():2711) -     parse('product_status');
2016-07-13 18:37:05,525 [main] INFO  (Database#info():2711) -     parse('purchase');
2016-07-13 18:37:05,721 [main] INFO  (Database#info():2711) -     parse('purchase_payment');
2016-07-13 18:37:05,856 [main] INFO  (Database#info():2711) -     parse('region');
2016-07-13 18:37:05,970 [main] INFO  (Database#info():2711) -     parse('service_rank');
2016-07-13 18:37:06,129 [main] INFO  (Database#info():2711) -     parse('withdrawal_reason');
2016-07-13 18:37:06,274 [main] INFO  (Database#info():2711) - }
2016-07-13 18:37:06,274 [main] INFO  (Database#info():2711) -  
2016-07-13 18:37:06,329 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-13 18:37:06,339 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s276ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2016-07-13 18:37:07,174 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2016-07-13 18:37:07,177 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2016-07-13 18:37:07,177 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2016-07-13 18:37:07,177 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2016-07-13 18:37:07,177 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2016-07-13 18:37:07,199 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 18:37:07,199 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 18:37:07,200 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 18:37:07,200 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 18:37:07,233 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectOutsideMember.sql
2016-07-13 18:37:07,238 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-13 18:37:07,561 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-13 18:37:07,561 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-13 18:37:07,602 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 初めての外だしSQL

 [df:description]
  会員ID、会員名称、生年月日、会員ステータス名称、サービスポイント数を取得
  会員IDの等値、会員名称の前方一致、会員ステータスの等値を and で連結
  それぞれ条件値がない場合は条件自体が無効になるように
  全ての条件値がない場合は全件検索になるように
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , mb.MEMBER_STATUS_CODE
     , stat.MEMBER_STATUS_NAME
     , serv.SERVICE_POINT_COUNT
  from MEMBER mb
    left outer join MEMBER_STATUS stat
      on mb.MEMBER_STATUS_CODE = stat.MEMBER_STATUS_CODE
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
 /*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- //会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'S%' -- //会員名称 (Null Allowed)
       /*END*/
       /*IF pmb.memberStatusCode != null*/
   and mb.MEMBER_STATUS_CODE = /*pmb.memberStatusCode:ref(MEMBER)*/'FML' -- //会員ステータス名称 (Null Allowed)
       /*END*/
/*END*/
2016-07-13 18:37:07,607 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-13 18:37:07,608 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectPartOfMember.sql
2016-07-13 18:37:07,611 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 ページング検索

 [df:description]
 (Manual)ページング検索すること
 o 基本は "初めての外だしSQL" のSQLと同じで...
 o 会員ステータスの等値条件は要らない
 o 会員サービスのサービスポイント数の大なり条件を追加
 o 結合に関して、カウント検索のパフォーマンスを最大限考慮すること (会員サービスの結合とか)
 そのとき、IFコメントに記述する条件が複雑にならないように (代理判定メソッドを使う)
*/

-- #df:entity#

-- !df:pmb extends ManualPaging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , serv.SERVICE_POINT_COUNT
-- ELSE select count(*) 
/*END*/
  from MEMBER mb
    /*IF pmb.needsJoinService()*/
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
    /*END*/
/*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- 会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'%S%' -- //会員名称 (Null Allowed)
       /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
   and serv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // サービスポイント数の下限値 (Null Allowed)
      /*END*/
/*END*/
/*IF pmb.isPaging()*/
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
/*END*/
2016-07-13 18:37:07,632 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-13 18:37:07,632 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthCursor.sql
2016-07-13 18:37:07,634 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 外だしSQLでカーソル検索ってみる

 [df:description]
 "さらに外だし" と同じ仕様(ページングは不要)
 カーソル検索として作成すること
 明らかにおかしいカラム名のカラムはデータ取得してはいけない (後は何を取ってもOKですが、これだけはっ)
*/

-- #df:entity#
-- +cursor+

-- !df:pmb!
-- !!AutoDetect!!

select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                           
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  from PURCHASE pch
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
2016-07-13 18:37:07,638 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-13 18:37:07,639 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthSummary.sql
2016-07-13 18:37:07,642 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 さらに外だし

 [df:description]
 "会員と購入月" ごとの購入の平均購入価格、合計購入数量を検索する
 会員ID、会員名称、購入月、平均購入価格、合計購入数量という形で検索
 "支払済みの購入だけ" という条件が指定できるようにする
 会員名称の曖昧検索(部分一致)という条件が指定ができるようにする
 会員のサービスポイント数の大なり条件が指定できるようにする
 会員IDの昇順、購入月の降順で並べる
*/

-- #df:entity#

-- !df:pmb extends Paging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                               
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  -- ELSE select count(*) from (select mem.MEMBER_ID
/*END*/ 
  from PURCHASE pch
  /*IF pmb.needsJoinMember()*/
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
  /*IF pmb.needsJoinService()*/
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
/*IF pmb.isPaging()*/
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
  -- ELSE ) as count
/*END*/
2016-07-13 18:37:07,647 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-13 18:37:07,648 [main] INFO  (DfSqlFileFireMan#fire():89) - {Fired SQL}: success=4 failure=0 (in 4 files)
2016-07-13 18:37:07,648 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-13 18:37:07,657 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s495ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o MemberBhv_selectOutsideMember.sql
  o MemberBhv_selectPartOfMember.sql
  o PurchaseBhv_selectPurchaseMonthCursor.sql
  o PurchaseBhv_selectPurchaseMonthSummary.sql

   o: OK (4)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2016-07-13 18:37:08,393 [main] INFO  (DfSql2EntityTask#begin():105) - +------------------------------------------+
2016-07-13 18:37:08,396 [main] INFO  (DfSql2EntityTask#begin():106) - |                                          |
2016-07-13 18:37:08,396 [main] INFO  (DfSql2EntityTask#begin():107) - |                Sql2Entity                |
2016-07-13 18:37:08,396 [main] INFO  (DfSql2EntityTask#begin():108) - |                                          |
2016-07-13 18:37:08,396 [main] INFO  (DfSql2EntityTask#begin():109) - +------------------------------------------+
2016-07-13 18:37:08,414 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 18:37:08,415 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 18:37:08,415 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 18:37:08,415 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 18:37:08,431 [main] INFO  (DfSql2EntityTask#setupControlTemplate():175) - 
2016-07-13 18:37:08,431 [main] INFO  (DfSql2EntityTask#setupControlTemplate():176) - ...Using Java control: om/ControlSql2EntityJava.vm
2016-07-13 18:37:08,437 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 18:37:08,539 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectOutsideMember.sql
2016-07-13 18:37:08,547 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-13 18:37:08,869 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-13 18:37:08,869 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-13 18:37:08,872 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 初めての外だしSQL

 [df:description]
  会員ID、会員名称、生年月日、会員ステータス名称、サービスポイント数を取得
  会員IDの等値、会員名称の前方一致、会員ステータスの等値を and で連結
  それぞれ条件値がない場合は条件自体が無効になるように
  全ての条件値がない場合は全件検索になるように
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , mb.MEMBER_STATUS_CODE
     , stat.MEMBER_STATUS_NAME
     , serv.SERVICE_POINT_COUNT
  from MEMBER mb
    left outer join MEMBER_STATUS stat
      on mb.MEMBER_STATUS_CODE = stat.MEMBER_STATUS_CODE
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
 /*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- //会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'S%' -- //会員名称 (Null Allowed)
       /*END*/
       /*IF pmb.memberStatusCode != null*/
   and mb.MEMBER_STATUS_CODE = /*pmb.memberStatusCode:ref(MEMBER)*/'FML' -- //会員ステータス名称 (Null Allowed)
       /*END*/
/*END*/
2016-07-13 18:37:08,932 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-13 18:37:08,932 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectPartOfMember.sql
2016-07-13 18:37:08,933 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 ページング検索

 [df:description]
 (Manual)ページング検索すること
 o 基本は "初めての外だしSQL" のSQLと同じで...
 o 会員ステータスの等値条件は要らない
 o 会員サービスのサービスポイント数の大なり条件を追加
 o 結合に関して、カウント検索のパフォーマンスを最大限考慮すること (会員サービスの結合とか)
 そのとき、IFコメントに記述する条件が複雑にならないように (代理判定メソッドを使う)
*/

-- #df:entity#

-- !df:pmb extends ManualPaging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , serv.SERVICE_POINT_COUNT
-- ELSE select count(*) 
/*END*/
  from MEMBER mb
    /*IF pmb.needsJoinService()*/
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
    /*END*/
/*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- 会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'%S%' -- //会員名称 (Null Allowed)
       /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
   and serv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // サービスポイント数の下限値 (Null Allowed)
      /*END*/
/*END*/
/*IF pmb.isPaging()*/
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
/*END*/
2016-07-13 18:37:08,941 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-13 18:37:08,942 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthCursor.sql
2016-07-13 18:37:08,943 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 外だしSQLでカーソル検索ってみる

 [df:description]
 "さらに外だし" と同じ仕様(ページングは不要)
 カーソル検索として作成すること
 明らかにおかしいカラム名のカラムはデータ取得してはいけない (後は何を取ってもOKですが、これだけはっ)
*/

-- #df:entity#
-- +cursor+

-- !df:pmb!
-- !!AutoDetect!!

select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                           
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  from PURCHASE pch
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
2016-07-13 18:37:08,951 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-13 18:37:08,951 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthSummary.sql
2016-07-13 18:37:08,952 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 さらに外だし

 [df:description]
 "会員と購入月" ごとの購入の平均購入価格、合計購入数量を検索する
 会員ID、会員名称、購入月、平均購入価格、合計購入数量という形で検索
 "支払済みの購入だけ" という条件が指定できるようにする
 会員名称の曖昧検索(部分一致)という条件が指定ができるようにする
 会員のサービスポイント数の大なり条件が指定できるようにする
 会員IDの昇順、購入月の降順で並べる
*/

-- #df:entity#

-- !df:pmb extends Paging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                               
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  -- ELSE select count(*) from (select mem.MEMBER_ID
/*END*/ 
  from PURCHASE pch
  /*IF pmb.needsJoinMember()*/
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
  /*IF pmb.needsJoinService()*/
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
/*IF pmb.isPaging()*/
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
  -- ELSE ) as count
/*END*/
2016-07-13 18:37:08,981 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-13 18:37:08,981 [main] INFO  (DfSqlFileFireMan#fire():89) - {Fired SQL}: success=4 failure=0 (in 4 files)
2016-07-13 18:37:08,987 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2016-07-13 18:37:08,987 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2016-07-13 18:37:09,042 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'maihamadb' order by ROUTINE_NAME
2016-07-13 18:37:09,047 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=maihamadb
2016-07-13 18:37:09,048 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_IN_OUT_PARAMETER:{4, 84, cb677351}
2016-07-13 18:37:09,048 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_RETURN_RESULT_SET:{9, 254, 4b86b61f}
2016-07-13 18:37:09,049 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=2
2016-07-13 18:37:09,049 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=2
2016-07-13 18:37:09,076 [main] INFO  (DfProcedureExecutionMetaExtractor#doExtractExecutionMetaData():109) - ...Calling: {call SP_IN_OUT_PARAMETER(?, ?, ?)}
2016-07-13 18:37:09,100 [main] INFO  (DfProcedureExecutionMetaExtractor#doExtractExecutionMetaData():109) - ...Calling: {call SP_RETURN_RESULT_SET(?)}
2016-07-13 18:37:09,112 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2016-07-13 18:37:09,113 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2016-07-13 18:37:09,113 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():107) - [SpInOutParameterPmb]: maihamadb.SP_IN_OUT_PARAMETER // procedureNoResult
2016-07-13 18:37:09,114 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     String VInVarchar; // procedureColumnIn(12, VARCHAR)
2016-07-13 18:37:09,115 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     String VOutVarchar; // procedureColumnOut(12, VARCHAR)
2016-07-13 18:37:09,115 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     String VInoutVarchar; // procedureColumnInOut(12, VARCHAR)
2016-07-13 18:37:09,116 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():107) - [SpReturnResultSetPmb]: maihamadb.SP_RETURN_RESULT_SET // procedureNoResult
2016-07-13 18:37:09,116 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     java.time.LocalDate birthdateFrom; // procedureColumnIn(91, DATE)
2016-07-13 18:37:09,117 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():171) -     List<SpReturnResultSetNotParamResult1> notParamResult1; // procedureColumnResult
2016-07-13 18:37:09,117 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():171) -     List<SpReturnResultSetNotParamResult2> notParamResult2; // procedureColumnResult
2016-07-13 18:37:09,117 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2016-07-13 18:37:09,117 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2016-07-13 18:37:09,148 [main] INFO  (DfSql2EntityTask#initControlContext():306) - 
2016-07-13 18:37:09,149 [main] INFO  (DfSql2EntityTask#initControlContext():307) - ...Preparing generation of customize-entities and parameter-beans
2016-07-13 18:37:09,149 [main] INFO  (DfSql2EntityTask#initControlContext():308) - * * * * * * * * * *
2016-07-13 18:37:09,149 [main] INFO  (DfSql2EntityTask#initControlContext():309) - * CustomizeEntity *
2016-07-13 18:37:09,149 [main] INFO  (DfSql2EntityTask#initControlContext():310) - * * * * * * * * * *
2016-07-13 18:37:09,161 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():922) - 
OutsideMember
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  BIRTHDATE DATE(10) related to member.BIRTHDATE
  MEMBER_STATUS_CODE CHAR(3) related to member.MEMBER_STATUS_CODE
  MEMBER_STATUS_NAME VARCHAR(50) related to member_status.MEMBER_STATUS_NAME
  SERVICE_POINT_COUNT INT(11) related to member_service.SERVICE_POINT_COUNT

PartOfMember
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  BIRTHDATE DATE(10) related to member.BIRTHDATE
  SERVICE_POINT_COUNT INT(11) related to member_service.SERVICE_POINT_COUNT

PurchaseMonthCursor (cursor)
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  購入月 INT(2)
  平均購入価格 DECIMAL(14, 4)
  合計購入量 DECIMAL(32)

PurchaseMonthSummary
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  購入月 INT(2)
  平均購入価格 DECIMAL(14, 4)
  合計購入量 DECIMAL(32)

SpReturnResultSetNotParamResult1 (procedure)
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  BIRTHDATE DATE(10) related to member.BIRTHDATE
  MEMBER_STATUS_CODE CHAR(3) related to member.MEMBER_STATUS_CODE

SpReturnResultSetNotParamResult2 (procedure)
  MEMBER_STATUS_CODE CHAR(3) related to member_status.MEMBER_STATUS_CODE
  MEMBER_STATUS_NAME VARCHAR(50) related to member_status.MEMBER_STATUS_NAME
2016-07-13 18:37:09,162 [main] INFO  (DfSql2EntityTask#showParameterBean():927) - * * * * * * * * *
2016-07-13 18:37:09,162 [main] INFO  (DfSql2EntityTask#showParameterBean():928) - * ParameterBean *
2016-07-13 18:37:09,163 [main] INFO  (DfSql2EntityTask#showParameterBean():929) - * * * * * * * * *
2016-07-13 18:37:09,183 [main] INFO  (DfSql2EntityTask#showParameterBean():971) - 
OutsideMemberPmb (typed to list, entity)
  Integer memberId:comment(会員ID (Null Allowed))
  String memberName:likePrefix|comment(会員名称 (Null Allowed))
  String memberStatusCode:ref(MEMBER)|comment(会員ステータス名称 (Null Allowed))

PartOfMemberPmb extends SimplePagingBean (typed to entity, manual-paging)
  Integer memberId
  String memberName:likeContain|comment(会員名称 (Null Allowed))
  Integer SERVICE_POINT_COUNT:comment(サービスポイント数の下限値 (Null Allowed))

PurchaseMonthCursorPmb (typed to cursor)
  String memberName:likeContain|comment(会員IDで部分一致(Null Allowed))
  Integer SERVICE_POINT_COUNT:comment(指定されたポイント以上かどうか(Null Allowed))

PurchaseMonthSummaryPmb extends SimplePagingBean (typed to entity, manual-paging)
  String memberName:likeContain|comment(会員IDで部分一致(Null Allowed))
  Integer SERVICE_POINT_COUNT:comment(指定されたポイント以上かどうか(Null Allowed))

SpInOutParameterPmb (procedure)
  v_in_varchar
  v_out_varchar
  v_inout_varchar

SpReturnResultSetPmb (procedure with customize-entity)
  birthdateFrom
2016-07-13 18:37:09,188 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2016-07-13 18:37:09,369 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 18:37:09,377 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-13 18:37:09,381 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-13 18:37:09,383 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-13 18:37:09,385 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-13 18:37:09,387 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-13 18:37:09,390 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-13 18:37:09,403 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1163) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2016-07-13 18:37:09,407 [main] INFO  (DfOldClassHandler#info():1033) - public void deleteOldCustomizeClass() {
2016-07-13 18:37:09,431 [main] INFO  (DfOldClassHandler#info():1033) - }
2016-07-13 18:37:09,432 [main] INFO  (Database#info():2711) - public void parseCustomizeEntity() {
2016-07-13 18:37:09,576 [main] INFO  (Database#info():2711) -     parse('OutsideMember')
2016-07-13 18:37:09,633 [main] INFO  (Database#info():2711) -     parse('PartOfMember')
2016-07-13 18:37:09,655 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthCursorCursor')
2016-07-13 18:37:09,707 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthCursor')
2016-07-13 18:37:09,777 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthSummary')
2016-07-13 18:37:09,823 [main] INFO  (Database#info():2711) -     parse('SpReturnResultSetNotParamResult1')
2016-07-13 18:37:09,867 [main] INFO  (Database#info():2711) -     parse('SpReturnResultSetNotParamResult2')
2016-07-13 18:37:09,867 [main] INFO  (Database#info():2711) - }
2016-07-13 18:37:09,869 [main] INFO  (Database#info():2711) - public void parseParameterBean() {
2016-07-13 18:37:09,874 [main] INFO  (Database#info():2711) -     parse('OutsideMemberPmb');
2016-07-13 18:37:09,912 [main] INFO  (Database#info():2711) -     parse('PartOfMemberPmb');
2016-07-13 18:37:09,936 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthCursorPmb');
2016-07-13 18:37:09,953 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthSummaryPmb');
2016-07-13 18:37:09,968 [main] INFO  (Database#info():2711) -     parse('SpInOutParameterPmb');
2016-07-13 18:37:09,986 [main] INFO  (Database#info():2711) -     parse('SpReturnResultSetPmb');
2016-07-13 18:37:10,005 [main] INFO  (Database#info():2711) - }
2016-07-13 18:37:10,045 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():298) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 4

  MemberBhv_selectOutsideMember.sql
  MemberBhv_selectPartOfMember.sql
  PurchaseBhv_selectPurchaseMonthCursor.sql
  PurchaseBhv_selectPurchaseMonthSummary.sql
- - - - - - - - - -/
2016-07-13 18:37:10,055 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-13 18:37:10,059 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-13 18:37:10,066 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s682ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2016-07-13 18:37:17,422 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2016-07-13 18:37:17,426 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2016-07-13 18:37:17,427 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2016-07-13 18:37:17,427 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2016-07-13 18:37:17,428 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2016-07-13 18:37:17,460 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 18:37:17,461 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 18:37:17,461 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 18:37:17,462 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 18:37:17,510 [main] INFO  (DfSchemaXmlSerializer#serialize():285) - 
2016-07-13 18:37:17,511 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - ...Starting to process JDBC to SchemaXML
2016-07-13 18:37:17,511 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1460) - ...Loading previous schema (schema diff process)
2016-07-13 18:37:17,524 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 18:37:17,676 [main] INFO  (DfSchemaXmlSerializer#generateXML():359) - ...Getting DB connection
2016-07-13 18:37:17,685 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-13 18:37:18,263 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-13 18:37:18,265 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-13 18:37:18,267 [main] INFO  (DfSchemaXmlSerializer#generateXML():362) - ...Getting DB meta data
2016-07-13 18:37:18,269 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-13 18:37:18,270 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 18:37:18,270 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-13 18:37:18,295 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'maihamadb' order by table_name asc
2016-07-13 18:37:18,299 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'maihamadb' order by table_name asc, column_name asc
2016-07-13 18:37:18,325 [main] INFO  (DfSchemaXmlSerializer#processTable():419) - 
2016-07-13 18:37:18,326 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2016-07-13 18:37:18,326 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ [Table List]
2016-07-13 18:37:18,327 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member(TABLE) // 会員: 会員登録時にデータが登録される。...
2016-07-13 18:37:18,401 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_address(TABLE) // 会員住所情報: 会員の住所に関する情報。...
2016-07-13 18:37:18,431 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_following(TABLE) // 会員フォローイング: とある会員が他の会員をフォローできる。すると、フォローした会員の購入履歴が閲覧できる。
2016-07-13 18:37:18,453 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_login(TABLE) // 会員ログイン情報: ログインするたびに登録されるログイン履歴。
2016-07-13 18:37:18,471 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_security(TABLE) // 会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある
2016-07-13 18:37:18,487 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_service(TABLE) // 会員サービス: 会員のサービス情報（ポイントサービスなど）。
2016-07-13 18:37:18,504 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_status(TABLE) // 会員ステータス
2016-07-13 18:37:18,518 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.member_withdrawal(TABLE) // 会員退会情報: 退会会員の退会に関する詳細な情報。...
2016-07-13 18:37:18,533 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product(TABLE) // 商品
2016-07-13 18:37:18,551 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product_category(TABLE) // 商品カテゴリ: 商品のカテゴリを表現するマスタ。...
2016-07-13 18:37:18,566 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.product_status(TABLE) // 商品ステータス
2016-07-13 18:37:18,586 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.purchase(TABLE) // 購入: 一つの商品に対する一回の購入を表現する。...
2016-07-13 18:37:18,605 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.purchase_payment(TABLE) // 購入支払: 購入に対する支払。...
2016-07-13 18:37:18,619 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.region(TABLE) // 地域: 主に会員の住所に対応する地域。...
2016-07-13 18:37:18,629 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.service_rank(TABLE) // サービスランク: 会員のサービスレベルを表現するランク。...
2016-07-13 18:37:18,640 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():501) - $ maihamadb.withdrawal_reason(TABLE) // 退会理由: 会員に選ばせる定型的な退会理由のマスタ。
2016-07-13 18:37:18,651 [main] INFO  (DfSchemaXmlSerializer#processTable():433) - $ 
2016-07-13 18:37:18,651 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ [Table Count]
2016-07-13 18:37:18,652 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 16
2016-07-13 18:37:18,652 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ = = = = = = = = = =/
2016-07-13 18:37:18,652 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - 
2016-07-13 18:37:18,654 [main] INFO  (DfSchemaXmlSerializer#processSequence():796) - ...Getting sequences
2016-07-13 18:37:18,659 [main] INFO  (DfSchemaXmlSerializer#serialize():300) - ...Serializing XML:
2016-07-13 18:37:18,660 [main] INFO  (DfSchemaXmlSerializer#serialize():301) -   filePath = ./schema/project-schema-maihamadb.xml
2016-07-13 18:37:18,661 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   encoding = UTF-8
2016-07-13 18:37:18,718 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1478) - ...Loading next schema (schema diff process)
2016-07-13 18:37:18,721 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 18:37:18,817 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1493) -  -> same as previous (schema diff)
2016-07-13 18:37:18,818 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-13 18:37:18,832 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s427ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2016-07-13 18:37:19,805 [main] INFO  (TorqueDocumentationTask#begin():175) - +------------------------------------------+
2016-07-13 18:37:19,808 [main] INFO  (TorqueDocumentationTask#begin():176) - |                                          |
2016-07-13 18:37:19,808 [main] INFO  (TorqueDocumentationTask#begin():177) - |                   Doc                    |
2016-07-13 18:37:19,809 [main] INFO  (TorqueDocumentationTask#begin():185) - |                                          |
2016-07-13 18:37:19,809 [main] INFO  (TorqueDocumentationTask#begin():186) - +------------------------------------------+
2016-07-13 18:37:19,843 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 18:37:19,844 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 18:37:19,844 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 18:37:19,845 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 18:37:19,848 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - 
2016-07-13 18:37:19,849 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2016-07-13 18:37:19,849 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():248) - *                   *
2016-07-13 18:37:19,849 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():249) - *    Schema HTML    *
2016-07-13 18:37:19,850 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():250) - *                   *
2016-07-13 18:37:19,850 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():251) - * * * * * * * * * * *
2016-07-13 18:37:19,902 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 18:37:20,018 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2016-07-13 18:37:20,162 [main] INFO  (Database#doEnableDocumentOutputDirectory():1179) - ...Setting up documentOutputDirectory: ./output/doc
2016-07-13 18:37:20,169 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2016-07-13 18:37:20,170 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2016-07-13 18:37:20,172 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2016-07-13 18:37:20,174 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2016-07-13 18:37:20,174 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2016-07-13 18:37:20,176 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2016-07-13 18:37:20,179 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2016-07-13 18:37:20,180 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2016-07-13 18:37:20,182 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_ADDRESS_VALID
2016-07-13 18:37:20,189 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-13 18:37:20,190 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_ADDRESS.[MEMBER_ID]
2016-07-13 18:37:20,191 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.VALID_BEGIN_DATE <= /*targetDate(Date)*/null\n     and $$foreignAlias$$.VALID_END_DATE >= /*targetDate(Date)*/null
2016-07-13 18:37:20,192 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_LOGIN_LATEST
2016-07-13 18:37:20,193 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-13 18:37:20,194 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_LOGIN.[MEMBER_ID]
2016-07-13 18:37:20,194 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.LOGIN_DATETIME = ($$sqbegin$$\nselect max(login.LOGIN_DATETIME)\n  from MEMBER_LOGIN login\n where login.MEMBER_ID = $$foreignAlias$$.MEMBER_ID\n)$$sqend$$
2016-07-13 18:37:20,195 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2016-07-13 18:37:20,204 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 18:37:20,540 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-13 18:37:20,553 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-13 18:37:20,557 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-13 18:37:20,563 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-13 18:37:20,569 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-13 18:37:20,573 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-13 18:37:20,583 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():157) - ...Loading schema history
2016-07-13 18:37:20,620 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():161) -  -> found history: count=4
2016-07-13 18:37:21,140 [main] INFO  (Database#getAvailableProcedureList():2823) -  
2016-07-13 18:37:21,141 [main] INFO  (Database#getAvailableProcedureList():2824) - ...Setting up procedures for documents
2016-07-13 18:37:21,149 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-13 18:37:21,165 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-13 18:37:21,165 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-13 18:37:21,233 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'maihamadb' order by ROUTINE_NAME
2016-07-13 18:37:21,239 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=maihamadb
2016-07-13 18:37:21,240 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_IN_OUT_PARAMETER:{4, 84, cb677351}
2016-07-13 18:37:21,241 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_RETURN_RESULT_SET:{9, 254, 4b86b61f}
2016-07-13 18:37:21,241 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=2
2016-07-13 18:37:21,242 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=2
2016-07-13 18:37:21,289 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-13 18:37:21,308 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-13 18:37:21,313 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s524ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2016-07-13 18:37:24,098 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2016-07-13 18:37:24,102 [main] INFO  (TorqueDataModelTask#begin():110) - |                                          |
2016-07-13 18:37:24,103 [main] INFO  (TorqueDataModelTask#begin():111) - |                 Generate                 |
2016-07-13 18:37:24,104 [main] INFO  (TorqueDataModelTask#begin():112) - |                                          |
2016-07-13 18:37:24,105 [main] INFO  (TorqueDataModelTask#begin():113) - +------------------------------------------+
2016-07-13 18:37:24,138 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 18:37:24,139 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 18:37:24,140 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 18:37:24,140 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 18:37:24,166 [main] INFO  (TorqueDataModelTask#setupControlTemplate():164) - 
2016-07-13 18:37:24,166 [main] INFO  (TorqueDataModelTask#setupControlTemplate():165) - ...Using Java control: om/ControlGenerateJava.vm
2016-07-13 18:37:24,219 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 18:37:24,302 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2016-07-13 18:37:24,602 [main] INFO  (Database#doEnableGenerateOutputDirectory():1147) - ...Setting up generateOutputDirectory: ../src/main/java
2016-07-13 18:37:24,608 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2016-07-13 18:37:24,608 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2016-07-13 18:37:24,610 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2016-07-13 18:37:24,612 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2016-07-13 18:37:24,613 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2016-07-13 18:37:24,614 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2016-07-13 18:37:24,618 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2016-07-13 18:37:24,618 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2016-07-13 18:37:24,622 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_ADDRESS_VALID
2016-07-13 18:37:24,636 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-13 18:37:24,637 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_ADDRESS.[MEMBER_ID]
2016-07-13 18:37:24,637 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.VALID_BEGIN_DATE <= /*targetDate(Date)*/null\n     and $$foreignAlias$$.VALID_END_DATE >= /*targetDate(Date)*/null
2016-07-13 18:37:24,637 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():79) - FK_MEMBER_MEMBER_LOGIN_LATEST
2016-07-13 18:37:24,638 [main] INFO  (DfAdditionalForeignKeyInitializer#setupForeignKeyToTable():209) -   *Referrer setting was not allowed in this case
2016-07-13 18:37:24,639 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():344) -   Add foreign key member.[MEMBER_ID] to MEMBER_LOGIN.[MEMBER_ID]
2016-07-13 18:37:24,639 [main] INFO  (DfAdditionalForeignKeyInitializer#showResult():346) -   with $$foreignAlias$$.LOGIN_DATETIME = ($$sqbegin$$\nselect max(login.LOGIN_DATETIME)\n  from MEMBER_LOGIN login\n where login.MEMBER_ID = $$foreignAlias$$.MEMBER_ID\n)$$sqend$$
2016-07-13 18:37:24,639 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2016-07-13 18:37:24,653 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 18:37:25,112 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-13 18:37:25,116 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-13 18:37:25,119 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-13 18:37:25,122 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-13 18:37:25,127 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-13 18:37:25,131 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-13 18:37:25,148 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2016-07-13 18:37:25,148 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2016-07-13 18:37:25,149 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2016-07-13 18:37:25,149 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2016-07-13 18:37:25,149 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2016-07-13 18:37:25,150 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2016-07-13 18:37:25,150 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2016-07-13 18:37:25,151 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2016-07-13 18:37:25,151 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2016-07-13 18:37:25,151 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2016-07-13 18:37:25,172 [main] INFO  (Database#info():2711) - public void parseAllCommon() {
2016-07-13 18:37:25,175 [main] INFO  (Database#info():2711) -     parse('CDef');
2016-07-13 18:37:25,237 [main] INFO  (Database#info():2711) -     parse('DBCurrent');
2016-07-13 18:37:25,240 [main] INFO  (Database#info():2711) -     parse('DBFluteConfig');
2016-07-13 18:37:25,260 [main] INFO  (Database#info():2711) -     parse('DBFluteInitializer');
2016-07-13 18:37:25,266 [main] INFO  (Database#info():2711) -     parse('DBMetaInstanceHandler');
2016-07-13 18:37:25,286 [main] INFO  (Database#info():2711) -     parse('EntityDefinedCommonColumn');
2016-07-13 18:37:25,305 [main] INFO  (Database#info():2711) -     parse('ImplementedBehaviorSelector');
2016-07-13 18:37:25,312 [main] INFO  (Database#info():2711) -     parse('ImplementedCommonColumnAutoSetupper');
2016-07-13 18:37:25,320 [main] INFO  (Database#info():2711) -     parse('ImplementedInvokerAssistant');
2016-07-13 18:37:25,328 [main] INFO  (Database#info():2711) -     parse('ImplementedSqlClauseCreator');
2016-07-13 18:37:25,332 [main] INFO  (Database#info():2711) - }
2016-07-13 18:37:25,332 [main] INFO  (Database#info():2711) - public void parseContainerConfig() {
2016-07-13 18:37:25,334 [main] INFO  (Database#info():2711) -     parse('../resources/dbflute.xml')
2016-07-13 18:37:25,356 [main] INFO  (Database#info():2711) - }
2016-07-13 18:37:25,361 [main] INFO  (DfOldClassHandler#info():1033) - public void deleteOldTableClass() {
2016-07-13 18:37:25,413 [main] INFO  (DfOldClassHandler#info():1033) - }
2016-07-13 18:37:25,414 [main] INFO  (Database#info():2711) - public void parseTableClass() {
2016-07-13 18:37:25,415 [main] INFO  (Database#info():2711) -     parse('member');
2016-07-13 18:37:25,995 [main] INFO  (Database#info():2711) -     parse('member_address');
2016-07-13 18:37:26,283 [main] INFO  (Database#info():2711) -     parse('member_following');
2016-07-13 18:37:26,509 [main] INFO  (Database#info():2711) -     parse('member_login');
2016-07-13 18:37:26,726 [main] INFO  (Database#info():2711) -     parse('member_security');
2016-07-13 18:37:26,899 [main] INFO  (Database#info():2711) -     parse('member_service');
2016-07-13 18:37:27,111 [main] INFO  (Database#info():2711) -     parse('member_status');
2016-07-13 18:37:27,303 [main] INFO  (Database#info():2711) -     parse('member_withdrawal');
2016-07-13 18:37:27,498 [main] INFO  (Database#info():2711) -     parse('product');
2016-07-13 18:37:27,731 [main] INFO  (Database#info():2711) -     parse('product_category');
2016-07-13 18:37:27,907 [main] INFO  (Database#info():2711) -     parse('product_status');
2016-07-13 18:37:28,041 [main] INFO  (Database#info():2711) -     parse('purchase');
2016-07-13 18:37:28,226 [main] INFO  (Database#info():2711) -     parse('purchase_payment');
2016-07-13 18:37:28,356 [main] INFO  (Database#info():2711) -     parse('region');
2016-07-13 18:37:28,477 [main] INFO  (Database#info():2711) -     parse('service_rank');
2016-07-13 18:37:28,613 [main] INFO  (Database#info():2711) -     parse('withdrawal_reason');
2016-07-13 18:37:28,757 [main] INFO  (Database#info():2711) - }
2016-07-13 18:37:28,758 [main] INFO  (Database#info():2711) -  
2016-07-13 18:37:28,798 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-13 18:37:28,812 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s734ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2016-07-13 18:37:29,842 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2016-07-13 18:37:29,844 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2016-07-13 18:37:29,844 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2016-07-13 18:37:29,845 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2016-07-13 18:37:29,845 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2016-07-13 18:37:29,868 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 18:37:29,869 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 18:37:29,869 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 18:37:29,869 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 18:37:29,901 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectOutsideMember.sql
2016-07-13 18:37:29,907 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-13 18:37:30,223 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-13 18:37:30,224 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-13 18:37:30,258 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 初めての外だしSQL

 [df:description]
  会員ID、会員名称、生年月日、会員ステータス名称、サービスポイント数を取得
  会員IDの等値、会員名称の前方一致、会員ステータスの等値を and で連結
  それぞれ条件値がない場合は条件自体が無効になるように
  全ての条件値がない場合は全件検索になるように
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , mb.MEMBER_STATUS_CODE
     , stat.MEMBER_STATUS_NAME
     , serv.SERVICE_POINT_COUNT
  from MEMBER mb
    left outer join MEMBER_STATUS stat
      on mb.MEMBER_STATUS_CODE = stat.MEMBER_STATUS_CODE
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
 /*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- //会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'S%' -- //会員名称 (Null Allowed)
       /*END*/
       /*IF pmb.memberStatusCode != null*/
   and mb.MEMBER_STATUS_CODE = /*pmb.memberStatusCode:ref(MEMBER)*/'FML' -- //会員ステータス名称 (Null Allowed)
       /*END*/
/*END*/
2016-07-13 18:37:30,263 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-13 18:37:30,264 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectPartOfMember.sql
2016-07-13 18:37:30,266 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 ページング検索

 [df:description]
 (Manual)ページング検索すること
 o 基本は "初めての外だしSQL" のSQLと同じで...
 o 会員ステータスの等値条件は要らない
 o 会員サービスのサービスポイント数の大なり条件を追加
 o 結合に関して、カウント検索のパフォーマンスを最大限考慮すること (会員サービスの結合とか)
 そのとき、IFコメントに記述する条件が複雑にならないように (代理判定メソッドを使う)
*/

-- #df:entity#

-- !df:pmb extends ManualPaging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , serv.SERVICE_POINT_COUNT
-- ELSE select count(*) 
/*END*/
  from MEMBER mb
    /*IF pmb.needsJoinService()*/
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
    /*END*/
/*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- 会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'%S%' -- //会員名称 (Null Allowed)
       /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
   and serv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // サービスポイント数の下限値 (Null Allowed)
      /*END*/
/*END*/
/*IF pmb.isPaging()*/
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
/*END*/
2016-07-13 18:37:30,270 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-13 18:37:30,271 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthCursor.sql
2016-07-13 18:37:30,273 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 外だしSQLでカーソル検索ってみる

 [df:description]
 "さらに外だし" と同じ仕様(ページングは不要)
 カーソル検索として作成すること
 明らかにおかしいカラム名のカラムはデータ取得してはいけない (後は何を取ってもOKですが、これだけはっ)
*/

-- #df:entity#
-- +cursor+

-- !df:pmb!
-- !!AutoDetect!!

select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                           
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  from PURCHASE pch
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
2016-07-13 18:37:30,277 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-13 18:37:30,277 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthSummary.sql
2016-07-13 18:37:30,279 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
 さらに外だし

 [df:description]
 "会員と購入月" ごとの購入の平均購入価格、合計購入数量を検索する
 会員ID、会員名称、購入月、平均購入価格、合計購入数量という形で検索
 "支払済みの購入だけ" という条件が指定できるようにする
 会員名称の曖昧検索(部分一致)という条件が指定ができるようにする
 会員のサービスポイント数の大なり条件が指定できるようにする
 会員IDの昇順、購入月の降順で並べる
*/

-- #df:entity#

-- !df:pmb extends Paging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                               
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  -- ELSE select count(*) from (select mem.MEMBER_ID
/*END*/ 
  from PURCHASE pch
  /*IF pmb.needsJoinMember()*/
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
  /*IF pmb.needsJoinService()*/
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
/*IF pmb.isPaging()*/
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
  -- ELSE ) as count
/*END*/
2016-07-13 18:37:30,305 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2016-07-13 18:37:30,306 [main] INFO  (DfSqlFileFireMan#fire():89) - {Fired SQL}: success=4 failure=0 (in 4 files)
2016-07-13 18:37:30,307 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-13 18:37:30,318 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s482ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o MemberBhv_selectOutsideMember.sql
  o MemberBhv_selectPartOfMember.sql
  o PurchaseBhv_selectPurchaseMonthCursor.sql
  o PurchaseBhv_selectPurchaseMonthSummary.sql

   o: OK (4)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2016-07-13 18:37:31,058 [main] INFO  (DfSql2EntityTask#begin():105) - +------------------------------------------+
2016-07-13 18:37:31,062 [main] INFO  (DfSql2EntityTask#begin():106) - |                                          |
2016-07-13 18:37:31,062 [main] INFO  (DfSql2EntityTask#begin():107) - |                Sql2Entity                |
2016-07-13 18:37:31,063 [main] INFO  (DfSql2EntityTask#begin():108) - |                                          |
2016-07-13 18:37:31,063 [main] INFO  (DfSql2EntityTask#begin():109) - +------------------------------------------+
2016-07-13 18:37:31,082 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-13 18:37:31,082 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-13 18:37:31,082 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-13 18:37:31,082 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-13 18:37:31,097 [main] INFO  (DfSql2EntityTask#setupControlTemplate():175) - 
2016-07-13 18:37:31,097 [main] INFO  (DfSql2EntityTask#setupControlTemplate():176) - ...Using Java control: om/ControlSql2EntityJava.vm
2016-07-13 18:37:31,103 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2016-07-13 18:37:31,192 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectOutsideMember.sql
2016-07-13 18:37:31,197 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-13 18:37:31,525 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-13 18:37:31,525 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-13 18:37:31,528 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 初めての外だしSQL

 [df:description]
  会員ID、会員名称、生年月日、会員ステータス名称、サービスポイント数を取得
  会員IDの等値、会員名称の前方一致、会員ステータスの等値を and で連結
  それぞれ条件値がない場合は条件自体が無効になるように
  全ての条件値がない場合は全件検索になるように
*/

-- #df:entity#

-- !df:pmb!
-- !!AutoDetect!!

select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , mb.MEMBER_STATUS_CODE
     , stat.MEMBER_STATUS_NAME
     , serv.SERVICE_POINT_COUNT
  from MEMBER mb
    left outer join MEMBER_STATUS stat
      on mb.MEMBER_STATUS_CODE = stat.MEMBER_STATUS_CODE
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
 /*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- //会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'S%' -- //会員名称 (Null Allowed)
       /*END*/
       /*IF pmb.memberStatusCode != null*/
   and mb.MEMBER_STATUS_CODE = /*pmb.memberStatusCode:ref(MEMBER)*/'FML' -- //会員ステータス名称 (Null Allowed)
       /*END*/
/*END*/
2016-07-13 18:37:31,584 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-13 18:37:31,584 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: MemberBhv_selectPartOfMember.sql
2016-07-13 18:37:31,585 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 ページング検索

 [df:description]
 (Manual)ページング検索すること
 o 基本は "初めての外だしSQL" のSQLと同じで...
 o 会員ステータスの等値条件は要らない
 o 会員サービスのサービスポイント数の大なり条件を追加
 o 結合に関して、カウント検索のパフォーマンスを最大限考慮すること (会員サービスの結合とか)
 そのとき、IFコメントに記述する条件が複雑にならないように (代理判定メソッドを使う)
*/

-- #df:entity#

-- !df:pmb extends ManualPaging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mb.MEMBER_ID
     , mb.MEMBER_NAME
     , mb.BIRTHDATE
     , serv.SERVICE_POINT_COUNT
-- ELSE select count(*) 
/*END*/
  from MEMBER mb
    /*IF pmb.needsJoinService()*/
	left outer join MEMBER_SERVICE serv
      on mb.MEMBER_ID = serv.MEMBER_ID
    /*END*/
/*BEGIN*/
 where /*IF pmb.memberId != null*/
       mb.MEMBER_ID = /*pmb.memberId*/3 -- 会員ID (Null Allowed)
 	   /*END*/
 	   /*IF pmb.memberName != null*/
   and mb.MEMBER_NAME like /*pmb.memberName*/'%S%' -- //会員名称 (Null Allowed)
       /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
   and serv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // サービスポイント数の下限値 (Null Allowed)
      /*END*/
/*END*/
/*IF pmb.isPaging()*/
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
/*END*/
2016-07-13 18:37:31,593 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-13 18:37:31,594 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthCursor.sql
2016-07-13 18:37:31,595 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 外だしSQLでカーソル検索ってみる

 [df:description]
 "さらに外だし" と同じ仕様(ページングは不要)
 カーソル検索として作成すること
 明らかにおかしいカラム名のカラムはデータ取得してはいけない (後は何を取ってもOKですが、これだけはっ)
*/

-- #df:entity#
-- +cursor+

-- !df:pmb!
-- !!AutoDetect!!

select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                           
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  from PURCHASE pch
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
2016-07-13 18:37:31,603 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-13 18:37:31,603 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: PurchaseBhv_selectPurchaseMonthSummary.sql
2016-07-13 18:37:31,604 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
 さらに外だし

 [df:description]
 "会員と購入月" ごとの購入の平均購入価格、合計購入数量を検索する
 会員ID、会員名称、購入月、平均購入価格、合計購入数量という形で検索
 "支払済みの購入だけ" という条件が指定できるようにする
 会員名称の曖昧検索(部分一致)という条件が指定ができるようにする
 会員のサービスポイント数の大なり条件が指定できるようにする
 会員IDの昇順、購入月の降順で並べる
*/

-- #df:entity#

-- !df:pmb extends Paging!
-- !!AutoDetect!!

/*IF pmb.isPaging()*/
select mem.MEMBER_ID                                 
     , mem.MEMBER_NAME                               
     , month(pch.PURCHASE_DATETIME) as 購入月       -- // 購入された月
     , avg(pch.PURCHASE_PRICE)      as 平均購入価格  -- // 会員と購入月ごとの購入の平均購入価格
     , sum(pch.PURCHASE_COUNT)      as 合計購入量   -- // 会員と購入月ごとの購入の合計購入数量
  -- ELSE select count(*) from (select mem.MEMBER_ID
/*END*/ 
  from PURCHASE pch
  /*IF pmb.needsJoinMember()*/
  inner join MEMBER mem
     on pch.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
  /*IF pmb.needsJoinService()*/
  inner join MEMBER_SERVICE srv
     on srv.MEMBER_ID = mem.MEMBER_ID
  /*END*/ 
/*BEGIN*/
where /*IF pmb.memberName != null*/
      mem.MEMBER_NAME like /*pmb.memberName*/'%A%'    -- // 会員IDで部分一致(Null Allowed)
      /*END*/
      /*IF pmb.SERVICE_POINT_COUNT != null*/
  and srv.SERVICE_POINT_COUNT >= /*pmb.SERVICE_POINT_COUNT*/0 -- // 指定されたポイント以上かどうか(Null Allowed)
      /*END*/
/*END*/
group by month(pch.PURCHASE_DATETIME)
       , mem.MEMBER_ID
/*IF pmb.isPaging()*/
order by mem.MEMBER_ID asc
       , month(pch.PURCHASE_DATETIME) desc
  limit /*$pmb.pageStartIndex*/80, /*$pmb.fetchSize*/20
  -- ELSE ) as count
/*END*/
2016-07-13 18:37:31,613 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2016-07-13 18:37:31,613 [main] INFO  (DfSqlFileFireMan#fire():89) - {Fired SQL}: success=4 failure=0 (in 4 files)
2016-07-13 18:37:31,620 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():90) -  
2016-07-13 18:37:31,621 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():91) - ...Setting up procedures for generating parameter-beans
2016-07-13 18:37:31,683 [main] INFO  (DfProcedureSupplementExtractorBase#log():122) - select * from INFORMATION_SCHEMA.ROUTINES where ROUTINE_SCHEMA = 'maihamadb' order by ROUTINE_NAME
2016-07-13 18:37:31,687 [main] INFO  (DfProcedureExtractor#log():1126) - ...Reflecting source info to procedure meta: schema=maihamadb
2016-07-13 18:37:31,688 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_IN_OUT_PARAMETER:{4, 84, cb677351}
2016-07-13 18:37:31,688 [main] INFO  (DfProcedureExtractor#log():1126) -   SP_RETURN_RESULT_SET:{9, 254, 4b86b61f}
2016-07-13 18:37:31,688 [main] INFO  (DfProcedureExtractor#log():1126) - ...Filtering procedures by the property: before=2
2016-07-13 18:37:31,689 [main] INFO  (DfProcedureExtractor#log():1126) -  -> All procedures are target: count=2
2016-07-13 18:37:31,715 [main] INFO  (DfProcedureExecutionMetaExtractor#doExtractExecutionMetaData():109) - ...Calling: {call SP_IN_OUT_PARAMETER(?, ?, ?)}
2016-07-13 18:37:31,739 [main] INFO  (DfProcedureExecutionMetaExtractor#doExtractExecutionMetaData():109) - ...Calling: {call SP_RETURN_RESULT_SET(?)}
2016-07-13 18:37:31,753 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():93) - 
2016-07-13 18:37:31,753 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():94) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
2016-07-13 18:37:31,753 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():107) - [SpInOutParameterPmb]: maihamadb.SP_IN_OUT_PARAMETER // procedureNoResult
2016-07-13 18:37:31,754 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     String VInVarchar; // procedureColumnIn(12, VARCHAR)
2016-07-13 18:37:31,755 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     String VOutVarchar; // procedureColumnOut(12, VARCHAR)
2016-07-13 18:37:31,755 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     String VInoutVarchar; // procedureColumnInOut(12, VARCHAR)
2016-07-13 18:37:31,756 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():107) - [SpReturnResultSetPmb]: maihamadb.SP_RETURN_RESULT_SET // procedureNoResult
2016-07-13 18:37:31,756 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():150) -     java.time.LocalDate birthdateFrom; // procedureColumnIn(91, DATE)
2016-07-13 18:37:31,757 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():171) -     List<SpReturnResultSetNotParamResult1> notParamResult1; // procedureColumnResult
2016-07-13 18:37:31,757 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():171) -     List<SpReturnResultSetNotParamResult2> notParamResult2; // procedureColumnResult
2016-07-13 18:37:31,757 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():185) - = = = = = = = = = =/
2016-07-13 18:37:31,758 [main] INFO  (DfProcedurePmbSetupper#setupProcedure():186) -  
2016-07-13 18:37:31,787 [main] INFO  (DfSql2EntityTask#initControlContext():306) - 
2016-07-13 18:37:31,787 [main] INFO  (DfSql2EntityTask#initControlContext():307) - ...Preparing generation of customize-entities and parameter-beans
2016-07-13 18:37:31,787 [main] INFO  (DfSql2EntityTask#initControlContext():308) - * * * * * * * * * *
2016-07-13 18:37:31,788 [main] INFO  (DfSql2EntityTask#initControlContext():309) - * CustomizeEntity *
2016-07-13 18:37:31,788 [main] INFO  (DfSql2EntityTask#initControlContext():310) - * * * * * * * * * *
2016-07-13 18:37:31,803 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():922) - 
OutsideMember
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  BIRTHDATE DATE(10) related to member.BIRTHDATE
  MEMBER_STATUS_CODE CHAR(3) related to member.MEMBER_STATUS_CODE
  MEMBER_STATUS_NAME VARCHAR(50) related to member_status.MEMBER_STATUS_NAME
  SERVICE_POINT_COUNT INT(11) related to member_service.SERVICE_POINT_COUNT

PartOfMember
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  BIRTHDATE DATE(10) related to member.BIRTHDATE
  SERVICE_POINT_COUNT INT(11) related to member_service.SERVICE_POINT_COUNT

PurchaseMonthCursor (cursor)
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  購入月 INT(2)
  平均購入価格 DECIMAL(14, 4)
  合計購入量 DECIMAL(32)

PurchaseMonthSummary
  MEMBER_ID INT(11) related to member.MEMBER_ID
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  購入月 INT(2)
  平均購入価格 DECIMAL(14, 4)
  合計購入量 DECIMAL(32)

SpReturnResultSetNotParamResult1 (procedure)
  MEMBER_NAME VARCHAR(160) related to member.MEMBER_NAME
  BIRTHDATE DATE(10) related to member.BIRTHDATE
  MEMBER_STATUS_CODE CHAR(3) related to member.MEMBER_STATUS_CODE

SpReturnResultSetNotParamResult2 (procedure)
  MEMBER_STATUS_CODE CHAR(3) related to member_status.MEMBER_STATUS_CODE
  MEMBER_STATUS_NAME VARCHAR(50) related to member_status.MEMBER_STATUS_NAME
2016-07-13 18:37:31,804 [main] INFO  (DfSql2EntityTask#showParameterBean():927) - * * * * * * * * *
2016-07-13 18:37:31,804 [main] INFO  (DfSql2EntityTask#showParameterBean():928) - * ParameterBean *
2016-07-13 18:37:31,804 [main] INFO  (DfSql2EntityTask#showParameterBean():929) - * * * * * * * * *
2016-07-13 18:37:31,805 [main] INFO  (DfSql2EntityTask#showParameterBean():971) - 
OutsideMemberPmb (typed to list, entity)
  Integer memberId:comment(会員ID (Null Allowed))
  String memberName:likePrefix|comment(会員名称 (Null Allowed))
  String memberStatusCode:ref(MEMBER)|comment(会員ステータス名称 (Null Allowed))

PartOfMemberPmb extends SimplePagingBean (typed to entity, manual-paging)
  Integer memberId
  String memberName:likeContain|comment(会員名称 (Null Allowed))
  Integer SERVICE_POINT_COUNT:comment(サービスポイント数の下限値 (Null Allowed))

PurchaseMonthCursorPmb (typed to cursor)
  String memberName:likeContain|comment(会員IDで部分一致(Null Allowed))
  Integer SERVICE_POINT_COUNT:comment(指定されたポイント以上かどうか(Null Allowed))

PurchaseMonthSummaryPmb extends SimplePagingBean (typed to entity, manual-paging)
  String memberName:likeContain|comment(会員IDで部分一致(Null Allowed))
  Integer SERVICE_POINT_COUNT:comment(指定されたポイント以上かどうか(Null Allowed))

SpInOutParameterPmb (procedure)
  v_in_varchar
  v_out_varchar
  v_inout_varchar

SpReturnResultSetPmb (procedure with customize-entity)
  birthdateFrom
2016-07-13 18:37:31,808 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2016-07-13 18:37:31,988 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-13 18:37:31,995 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-13 18:37:31,999 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-13 18:37:32,001 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-13 18:37:32,004 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-13 18:37:32,006 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-13 18:37:32,010 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-13 18:37:32,023 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1163) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2016-07-13 18:37:32,027 [main] INFO  (DfOldClassHandler#info():1033) - public void deleteOldCustomizeClass() {
2016-07-13 18:37:32,045 [main] INFO  (DfOldClassHandler#info():1033) - }
2016-07-13 18:37:32,045 [main] INFO  (Database#info():2711) - public void parseCustomizeEntity() {
2016-07-13 18:37:32,181 [main] INFO  (Database#info():2711) -     parse('OutsideMember')
2016-07-13 18:37:32,249 [main] INFO  (Database#info():2711) -     parse('PartOfMember')
2016-07-13 18:37:32,261 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthCursorCursor')
2016-07-13 18:37:32,317 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthCursor')
2016-07-13 18:37:32,378 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthSummary')
2016-07-13 18:37:32,426 [main] INFO  (Database#info():2711) -     parse('SpReturnResultSetNotParamResult1')
2016-07-13 18:37:32,473 [main] INFO  (Database#info():2711) -     parse('SpReturnResultSetNotParamResult2')
2016-07-13 18:37:32,475 [main] INFO  (Database#info():2711) - }
2016-07-13 18:37:32,477 [main] INFO  (Database#info():2711) - public void parseParameterBean() {
2016-07-13 18:37:32,482 [main] INFO  (Database#info():2711) -     parse('OutsideMemberPmb');
2016-07-13 18:37:32,526 [main] INFO  (Database#info():2711) -     parse('PartOfMemberPmb');
2016-07-13 18:37:32,549 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthCursorPmb');
2016-07-13 18:37:32,569 [main] INFO  (Database#info():2711) -     parse('PurchaseMonthSummaryPmb');
2016-07-13 18:37:32,584 [main] INFO  (Database#info():2711) -     parse('SpInOutParameterPmb');
2016-07-13 18:37:32,605 [main] INFO  (Database#info():2711) -     parse('SpReturnResultSetPmb');
2016-07-13 18:37:32,624 [main] INFO  (Database#info():2711) - }
2016-07-13 18:37:32,666 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():298) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 4

  MemberBhv_selectOutsideMember.sql
  MemberBhv_selectPartOfMember.sql
  PurchaseBhv_selectPurchaseMonthCursor.sql
  PurchaseBhv_selectPurchaseMonthSummary.sql
- - - - - - - - - -/
2016-07-13 18:37:32,676 [main] INFO  (DfRefreshResourceProcess#show():297) - ...Refreshing [dbflute-hands-on] by http://localhost:8386/
2016-07-13 18:37:32,680 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-13 18:37:32,689 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s641ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=maihamadb, password=maihamadb}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2016-07-24 21:56:47,428 [main] INFO  (DfReplaceSchemaTask#begin():91) - +------------------------------------------+
2016-07-24 21:56:47,433 [main] INFO  (DfReplaceSchemaTask#begin():92) - |                                          |
2016-07-24 21:56:47,433 [main] INFO  (DfReplaceSchemaTask#begin():93) - |              ReplaceSchema               |
2016-07-24 21:56:47,438 [main] INFO  (DfReplaceSchemaTask#begin():101) - |                                          |
2016-07-24 21:56:47,438 [main] INFO  (DfReplaceSchemaTask#begin():102) - +------------------------------------------+
2016-07-24 21:56:47,440 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():342) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2016-07-24 21:56:49,988 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-24 21:56:49,998 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-24 21:56:49,999 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-24 21:56:50,000 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-24 21:56:50,009 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-24 21:56:50,249 [main] INFO  (DfReplaceSchemaTask#setupLazyConnection():143) - ...Being a lazy connection: Failed to connect: url=jdbc:mysql://localhost:4...
2016-07-24 21:56:50,263 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2016-07-24 21:56:50,263 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2016-07-24 21:56:50,264 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2016-07-24 21:56:50,264 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2016-07-24 21:56:50,266 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2016-07-24 21:56:50,266 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2016-07-24 21:56:50,266 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():236) - *Passed because it's a lazy connection
2016-07-24 21:56:50,268 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2016-07-24 21:56:50,268 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2016-07-24 21:56:50,268 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2016-07-24 21:56:50,269 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2016-07-24 21:56:50,269 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2016-07-24 21:56:50,269 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2016-07-24 21:56:50,275 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-00-system.sql
2016-07-24 21:56:50,281 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2016-07-24 21:56:50,282 [main] INFO  (DfCreateSchemaProcess$1#dispatch():295) - ...Creating a connection to system
2016-07-24 21:56:50,284 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():520) - ...Creating a connection for additional user: root
2016-07-24 21:56:50,530 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on maihamadb.*
  to maihamadb@localhost identified by 'maihamadb'
2016-07-24 21:56:50,538 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2016-07-24 21:56:50,542 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=3 failure=0
2016-07-24 21:56:50,542 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-10-basic.sql
2016-07-24 21:56:50,543 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():381) - ...Coming back to the main user from the user 'system'
2016-07-24 21:56:50,551 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER(
    MEMBER_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員ID: 会員を識別するID。連番として基本的に自動採番される。
（会員IDだけに限らず）採番方法はDBMSによって変わる。',
    MEMBER_NAME VARCHAR(160) NOT NULL COMMENT '会員名称: 会員のフルネームの名称。',
    MEMBER_ACCOUNT VARCHAR(50) NOT NULL COMMENT '会員アカウント: 会員がログイン時に利用するアカウントNO。',
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード',
    FORMALIZED_DATETIME DATETIME COMMENT '正式会員日時: 会員が正式に確定した日時。一度確定したら更新されない。
仮会員のときはnull。',
    BIRTHDATE DATE COMMENT '生年月日: 必須項目ではないので、このデータがない会員もいる。',
    REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時: レコードが登録された日時。共通カラムの一つ。',
    REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ: レコードを登録したユーザ。共通カラムの一つ。',
    UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時: レコードが（最後に）更新された日時。共通カラムの一つ。',
    UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ: レコードを更新したユーザ。',
    VERSION_NO BIGINT NOT NULL COMMENT 'バージョンNO: レコードのバージョンを示すNO。
更新回数と等しく、主に排他制御のために利用される。',
    PRIMARY KEY (MEMBER_ID),
    UNIQUE (MEMBER_ACCOUNT)
) COMMENT='会員: 会員登録時にデータが登録される。
基本的に物理削除はなく、退会したらステータスが退会会員になる。'
2016-07-24 21:56:50,553 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#lazyConnectIfNeeds():466) - ...Connecting by main user lazily
2016-07-24 21:56:50,554 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-24 21:56:50,554 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-24 21:56:50,554 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb
2016-07-24 21:56:50,554 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2016-07-24 21:56:50,555 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-24 21:56:50,559 [main] INFO  (DfSqlFileFireMan#fire():89) - {Create Schema}: success=3 failure=1 *break (in 3 files)
2016-07-24 21:56:50,559 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():564) - ...Closing connections to change-users: [system]
2016-07-24 21:56:50,653 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.
* * * * * * * * * */
org.dbflute.exception.SQLFailureException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute the SQL!

[SQL File]
playsql/replace-schema-10-basic.sql

[Executed SQL]
create table MEMBER(
    MEMBER_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員ID: 会員を識別するID。連番として基本的に自動採番される。
（会員IDだけに限らず）採番方法はDBMSによって変わる。',
    MEMBER_NAME VARCHAR(160) NOT NULL COMMENT '会員名称: 会員のフルネームの名称。',
    MEMBER_ACCOUNT VARCHAR(50) NOT NULL COMMENT '会員アカウント: 会員がログイン時に利用するアカウントNO。',
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード',
    FORMALIZED_DATETIME DATETIME COMMENT '正式会員日時: 会員が正式に確定した日時。一度確定したら更新されない。
仮会員のときはnull。',
    BIRTHDATE DATE COMMENT '生年月日: 必須項目ではないので、このデータがない会員もいる。',
    REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時: レコードが登録された日時。共通カラムの一つ。',
    REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ: レコードを登録したユーザ。共通カラムの一つ。',
    UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時: レコードが（最後に）更新された日時。共通カラムの一つ。',
    UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ: レコードを更新したユーザ。',
    VERSION_NO BIGINT NOT NULL COMMENT 'バージョンNO: レコードのバージョンを示すNO。
更新回数と等しく、主に排他制御のために利用される。',
    PRIMARY KEY (MEMBER_ID),
    UNIQUE (MEMBER_ACCOUNT)
) COMMENT='会員: 会員登録時にデータが登録される。
基本的に物理削除はなく、退会したらステータスが退会会員になる。'

[SQLState]
08S01

[ErrorCode]
0

[SQLException]
org.dbflute.exception.DfJDBCException
Failed to connect: url=jdbc:mysql://localhost:43376/maihamadb user=maihamadb

[NextException]
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException
Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
* * * * * * * * * */
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.throwSQLFailureException(DfSqlFileRunnerBase.java:587)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:80)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:169)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:67)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:274)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:143)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:261)
	at org.dbflute.task.DfReplaceSchemaTask.doExecuteCoreProcess(DfReplaceSchemaTask.java:246)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:237)
	at org.dbflute.task.DfReplaceSchemaTask.processMain(DfReplaceSchemaTask.java:230)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:157)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:183)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:77)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: org.dbflute.exception.DfJDBCException: Failed to connect: url=jdbc:mysql://localhost:43376/maihamadb user=maihamadb
	at org.dbflute.helper.jdbc.connection.DfDataSourceHandler.createConnection(DfDataSourceHandler.java:170)
	at org.dbflute.helper.jdbc.connection.DfDataSourceHandler.processCachedConnection(DfDataSourceHandler.java:154)
	at org.dbflute.helper.jdbc.connection.DfDataSourceHandler.getConnection(DfDataSourceHandler.java:137)
	at org.dbflute.helper.jdbc.connection.DfFittingDataSource.getConnection(DfFittingDataSource.java:44)
	at org.dbflute.helper.jdbc.context.DfSchemaSource.getConnection(DfSchemaSource.java:82)
	at org.dbflute.task.DfReplaceSchemaTask.setupDataSource(DfReplaceSchemaTask.java:129)
	at org.dbflute.task.DfReplaceSchemaTask$2.callbackSetupDataSource(DfReplaceSchemaTask.java:280)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.setupDataSource(DfCreateSchemaProcess.java:133)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema.lazyConnectIfNeeds(DfCreateSchemaProcess.java:467)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:61)
	... 30 more
2016-07-24 21:56:50,687 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s267ms *Abort

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=3 failure=1 *break (in 3 files)
  o replace-schema-00-system.sql
  x replace-schema-10-basic.sql
   >> (failed: Look at the exception message)
    * * * * * *
    * Failure *
    * * * * * *
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2016-07-24 21:59:55,130 [main] INFO  (DfReplaceSchemaTask#begin():91) - +------------------------------------------+
2016-07-24 21:59:55,133 [main] INFO  (DfReplaceSchemaTask#begin():92) - |                                          |
2016-07-24 21:59:55,134 [main] INFO  (DfReplaceSchemaTask#begin():93) - |              ReplaceSchema               |
2016-07-24 21:59:55,138 [main] INFO  (DfReplaceSchemaTask#begin():101) - |                                          |
2016-07-24 21:59:55,139 [main] INFO  (DfReplaceSchemaTask#begin():102) - +------------------------------------------+
2016-07-24 21:59:55,141 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():342) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2016-07-24 21:59:57,033 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-24 21:59:57,033 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-24 21:59:57,042 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/maihamadb
2016-07-24 21:59:57,043 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2016-07-24 21:59:57,053 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-24 21:59:57,447 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-24 21:59:57,448 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-24 21:59:57,564 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2016-07-24 21:59:57,564 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2016-07-24 21:59:57,564 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2016-07-24 21:59:57,566 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2016-07-24 21:59:57,566 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2016-07-24 21:59:57,567 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2016-07-24 21:59:57,582 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-24 21:59:57,583 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-24 21:59:57,583 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-24 21:59:57,648 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2016-07-24 21:59:57,649 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2016-07-24 21:59:57,649 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2016-07-24 21:59:57,649 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2016-07-24 21:59:57,650 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2016-07-24 21:59:57,650 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2016-07-24 21:59:57,654 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-00-system.sql
2016-07-24 21:59:57,657 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2016-07-24 21:59:57,658 [main] INFO  (DfCreateSchemaProcess$1#dispatch():295) - ...Creating a connection to system
2016-07-24 21:59:57,660 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():520) - ...Creating a connection for additional user: root
2016-07-24 21:59:57,679 [main] INFO  (DfCreateSchemaProcess$1#dispatch():321) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2016-07-24 21:59:57,680 [main] INFO  (DfCreateSchemaProcess$1#dispatch():323) -  -> Can't create database 'maihamadb'; database exists
2016-07-24 21:59:57,682 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():433) - ...Reviving the user 'system' until the end of this SQL file
2016-07-24 21:59:57,686 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on maihamadb.*
  to root@localhost identified by ''
2016-07-24 21:59:57,689 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2016-07-24 21:59:57,693 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-07-24 21:59:57,693 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-10-basic.sql
2016-07-24 21:59:57,694 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():370) - ...Saying good-bye to the user 'system' again
2016-07-24 21:59:57,694 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():374) - ...Clearing revived users
2016-07-24 21:59:57,695 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():381) - ...Coming back to the main user from the user 'system'
2016-07-24 21:59:57,700 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER(
    MEMBER_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員ID: 会員を識別するID。連番として基本的に自動採番される。
（会員IDだけに限らず）採番方法はDBMSによって変わる。',
    MEMBER_NAME VARCHAR(160) NOT NULL COMMENT '会員名称: 会員のフルネームの名称。',
    MEMBER_ACCOUNT VARCHAR(50) NOT NULL COMMENT '会員アカウント: 会員がログイン時に利用するアカウントNO。',
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード',
    FORMALIZED_DATETIME DATETIME COMMENT '正式会員日時: 会員が正式に確定した日時。一度確定したら更新されない。
仮会員のときはnull。',
    BIRTHDATE DATE COMMENT '生年月日: 必須項目ではないので、このデータがない会員もいる。',
    REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時: レコードが登録された日時。共通カラムの一つ。',
    REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ: レコードを登録したユーザ。共通カラムの一つ。',
    UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時: レコードが（最後に）更新された日時。共通カラムの一つ。',
    UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ: レコードを更新したユーザ。',
    VERSION_NO BIGINT NOT NULL COMMENT 'バージョンNO: レコードのバージョンを示すNO。
更新回数と等しく、主に排他制御のために利用される。',
    PRIMARY KEY (MEMBER_ID),
    UNIQUE (MEMBER_ACCOUNT)
) COMMENT='会員: 会員登録時にデータが登録される。
基本的に物理削除はなく、退会したらステータスが退会会員になる。'
2016-07-24 21:59:57,716 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_ADDRESS(
    MEMBER_ADDRESS_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員住所ID: 会員住所を識別するID。
履歴分も含むテーブルなので、これ自体はFKではない。',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
履歴分を含むため、これだけではユニークにはならない。',
    VALID_BEGIN_DATE DATE NOT NULL COMMENT '有効開始日: 一つの有効期間の開始を示す日付。
前の有効終了日の次の日の値が格納される。',
    VALID_END_DATE DATE NOT NULL COMMENT '有効終了日: 有効期間の終了日。
次の有効開始日の一日前の値が格納される。
ただし、次の有効期間がない場合は 9999/12/31 となる。',
    ADDRESS VARCHAR(200) NOT NULL COMMENT '住所: まるごと住所',
    REGION_ID INTEGER NOT NULL COMMENT '地域ID: 地域を参照するID。
ここでは特に住所の内容と連動しているわけではない。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ADDRESS_ID),
    UNIQUE (MEMBER_ID, VALID_BEGIN_DATE)
) COMMENT='会員住所情報: 会員の住所に関する情報。
同時に有効期間ごとに履歴管理されている。'
2016-07-24 21:59:57,727 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_LOGIN(
    MEMBER_LOGIN_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員ログインID',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID',
    LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時: ログインした瞬間の日時。',
    MOBILE_LOGIN_FLG INTEGER NOT NULL COMMENT 'モバイルログインフラグ: モバイル機器からのログインか否か。',
    LOGIN_MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT 'ログイン会員ステータスコード: ログイン時の会員ステータス',
    PRIMARY KEY (MEMBER_LOGIN_ID),
    UNIQUE (MEMBER_ID, LOGIN_DATETIME)
) COMMENT='会員ログイン情報: ログインするたびに登録されるログイン履歴。'
2016-07-24 21:59:57,739 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SECURITY(
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: そのまま one-to-one を構成するためのFKとなる。',
    LOGIN_PASSWORD VARCHAR(50) NOT NULL COMMENT 'ログインパスワード: ログイン時に利用するパスワード。
本当は良くないが、Exampleなのでひとまず暗号化していない。',
    REMINDER_QUESTION VARCHAR(50) NOT NULL COMMENT 'リマインダ質問: パスワードを忘れた際のリマインダ機能における質問の内容。',
    REMINDER_ANSWER VARCHAR(50) NOT NULL COMMENT 'リマインダ回答: パスワードを忘れた際のリマインダ機能における質問の答え。',
    REMINDER_USE_COUNT INTEGER NOT NULL COMMENT 'リマインダ回数: 忘れっぽい人を分析するためのもの。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある'
2016-07-24 21:59:57,754 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SERVICE(
	MEMBER_SERVICE_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員サービスID: 代理キー。律儀にIDの役割を分ける',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。ユニークなので、会員とは one-to-one の関係に。',
    SERVICE_POINT_COUNT INTEGER NOT NULL COMMENT 'サービスポイント数: 会員が現在利用できるサービスポイントの数。
基本的に、購入時には増えてポイントを使ったら減る。',
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを参照するコード。
どんなランクがあるのかドキドキですね。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_SERVICE_ID),
    UNIQUE (MEMBER_ID)
) COMMENT='会員サービス: 会員のサービス情報（ポイントサービスなど）。'
2016-07-24 21:59:57,789 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_WITHDRAWAL(
    MEMBER_ID INTEGER NOT NULL,
    WITHDRAWAL_REASON_CODE CHAR(3) COMMENT '退会理由コード: 退会した定型理由を参照するコード。
何も言わずに退会する会員もいるので必須項目ではない。',
    WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト: 会員がフリーテキストで入力できる退会理由。
もう言いたいこと言ってもらう感じ。',
    WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT '退会日時: 退会した瞬間の日時。
正式会員日時と違い、こっちはone-to-oneの別テーブルで。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員退会情報: 退会会員の退会に関する詳細な情報。
退会会員のみデータが存在する。'
2016-07-24 21:59:57,806 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE(
    PURCHASE_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入ID: 連番',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
購入を識別する自然キー（複合ユニーク制約）の筆頭要素。',
    PRODUCT_ID INTEGER NOT NULL COMMENT '商品ID: 商品を参照するID。',
    PURCHASE_DATETIME DATETIME NOT NULL COMMENT '購入日時: 購入した瞬間の日時。',
    PURCHASE_COUNT INTEGER NOT NULL COMMENT '購入数量: 購入した商品の（一回の購入における）数量。',
    PURCHASE_PRICE INTEGER NOT NULL COMMENT '購入価格: 購入によって実際に会員が支払った（支払う予定の）価格。
基本は商品の定価に購入数量を掛けたものになるが、
ポイント利用や割引があったりと必ずしもそうはならない。',
    PAYMENT_COMPLETE_FLG INTEGER NOT NULL COMMENT '支払完了フラグ: この購入に関しての支払いが完了しているか否か。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PURCHASE_ID),
    UNIQUE (MEMBER_ID, PRODUCT_ID, PURCHASE_DATETIME),
    KEY (MEMBER_ID),
    KEY (PRODUCT_ID)
) COMMENT='購入: 一つの商品に対する一回の購入を表現する。
一回の購入で一つの商品を複数個買うこともある。'
2016-07-24 21:59:57,823 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE_PAYMENT(
    PURCHASE_PAYMENT_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入支払ID: 連番',
    PURCHASE_ID BIGINT NOT NULL COMMENT '購入ID: 支払い対象の購入へのID',
    PAYMENT_AMOUNT DECIMAL(10,2) NOT NULL COMMENT '支払金額: 支払った金額。さて、小数点なのはなぜでしょう？',
    PAYMENT_DATETIME DATETIME NOT NULL COMMENT '支払日時: 支払ったときの日時',
    PAYMENT_METHOD_CODE CHAR(3) NOT NULL COMMENT '支払方法コード: 手渡しや銀行振込など',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (PURCHASE_PAYMENT_ID)
) COMMENT='購入支払: 購入に対する支払。
分割払いもできるのでmanyとなり、会員からの孫テーブルのテストができてうれしい。'
2016-07-24 21:59:57,877 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT(
    PRODUCT_ID INTEGER AUTO_INCREMENT NOT NULL,
    PRODUCT_NAME VARCHAR(50) NOT NULL COMMENT '商品名称',
    PRODUCT_HANDLE_CODE VARCHAR(100) NOT NULL COMMENT '商品ハンドルコード: 商品を識別する業務上のコード。',
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL,
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL,
    REGULAR_PRICE INTEGER NOT NULL COMMENT '定価',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PRODUCT_ID),
    UNIQUE (PRODUCT_HANDLE_CODE)
) COMMENT='商品'
2016-07-24 21:59:57,896 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_CATEGORY(
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL COMMENT '商品カテゴリコード',
    PRODUCT_CATEGORY_NAME VARCHAR(50) NOT NULL COMMENT '商品カテゴリ名称',
    PARENT_CATEGORY_CODE CHAR(3) COMMENT '親カテゴリコード: 最上位の場合はデータなし。',
    PRIMARY KEY (PRODUCT_CATEGORY_CODE)
) COMMENT='商品カテゴリ: 商品のカテゴリを表現するマスタ。
自己参照の階層になっている。'
2016-07-24 21:59:57,906 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_STATUS(
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL COMMENT '商品ステータスコード',
    PRODUCT_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '商品ステータス名称',
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (PRODUCT_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='商品ステータス'
2016-07-24 21:59:57,920 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table REGION(
    REGION_ID INTEGER NOT NULL COMMENT '地域ID',
    REGION_NAME VARCHAR(50) NOT NULL COMMENT '地域名称',
    PRIMARY KEY (REGION_ID)
) COMMENT='地域: 主に会員の住所に対応する地域。
かなりざっくりした感じではある。'
2016-07-24 21:59:57,929 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table SERVICE_RANK(
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを識別するコード。',
    SERVICE_RANK_NAME VARCHAR(50) NOT NULL COMMENT 'サービスランク名称: サービスランクの名称。
（ゴールドとかプラチナとか基本的には威厳のある名前）',
    SERVICE_POINT_INCIDENCE NUMERIC(5, 3) NOT NULL COMMENT 'サービスポイント発生率: 購入ごとのサービスポイントの発生率。
購入価格にこの値をかけた数が発生ポイント。',
    NEW_ACCEPTABLE_FLG INTEGER NOT NULL COMMENT '新規受け入れ可能フラグ: このランクへの新規受け入れができるかどうか。',
    DESCRIPTION VARCHAR(200) NOT NULL,
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (SERVICE_RANK_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='サービスランク: 会員のサービスレベルを表現するランク。
（ゴールドとかプラチナとか）'
2016-07-24 21:59:57,973 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_STATUS(
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード: 会員ステータスを識別するコード。',
    MEMBER_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '会員ステータス名称',
    DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明: 会員ステータスそれぞれの説明。
気の利いた説明があるとディベロッパーがとても助かる。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順: UI上のステータスの表示順を示すNO。
並べるときは、このカラムに対して昇順のソート条件にする。',
    PRIMARY KEY (MEMBER_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='会員ステータス'
2016-07-24 21:59:57,984 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table WITHDRAWAL_REASON(
    WITHDRAWAL_REASON_CODE CHAR(3) NOT NULL COMMENT '退会理由コード',
    WITHDRAWAL_REASON_TEXT TEXT NOT NULL COMMENT '退会理由テキスト: 退会理由の内容。テキスト形式なので目いっぱい書けるが、
そうするとUI側できれいに見せるのが大変でしょうね。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順',
    PRIMARY KEY (WITHDRAWAL_REASON_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='退会理由: 会員に選ばせる定型的な退会理由のマスタ。'
2016-07-24 21:59:57,997 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_FOLLOWING(
    MEMBER_FOLLOWING_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員フォローイングID: 連番',
    MY_MEMBER_ID INTEGER NOT NULL COMMENT 'わたし: 気になった人がいて...勇気を振り絞った会員のID。',
    YOUR_MEMBER_ID INTEGER NOT NULL COMMENT 'あなた: いきなりのアクションに...ちょっと心揺らいだ会員のID。',
    FOLLOW_DATETIME DATETIME NOT NULL COMMENT 'その瞬間: ふりかえるとちょっと恥ずかしい気持ちになる日時',
    PRIMARY KEY (MEMBER_FOLLOWING_ID),
    UNIQUE (MY_MEMBER_ID, YOUR_MEMBER_ID)
) COMMENT='会員フォローイング: とある会員が他の会員をフォローできる。すると、フォローした会員の購入履歴が閲覧できる。'
2016-07-24 21:59:58,011 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER add constraint FK_MEMBER_MEMBER_STATUS 
    foreign key (MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-07-24 21:59:58,036 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 21:59:58,055 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_REGION 
    foreign key (REGION_ID) references REGION (REGION_ID)
2016-07-24 21:59:58,082 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER_STATUS 
    foreign key (LOGIN_MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-07-24 21:59:58,104 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 21:59:58,126 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 21:59:58,158 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_SERVICE_RANK_CODE 
    foreign key (SERVICE_RANK_CODE) references SERVICE_RANK (SERVICE_RANK_CODE)
2016-07-24 21:59:58,198 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SECURITY add constraint FK_MEMBER_SECURITY_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 21:59:58,228 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 21:59:58,256 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON 
    foreign key (WITHDRAWAL_REASON_CODE) references WITHDRAWAL_REASON (WITHDRAWAL_REASON_CODE)
2016-07-24 21:59:58,277 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 21:59:58,311 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_PRODUCT 
    foreign key (PRODUCT_ID) references PRODUCT (PRODUCT_ID)
2016-07-24 21:59:58,340 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE_PAYMENT add constraint FK_PURCHASE_PAYMENT_PURCHASE 
    foreign key (PURCHASE_ID) references PURCHASE (PURCHASE_ID)
2016-07-24 21:59:58,368 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_CATEGORY 
    foreign key (PRODUCT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-07-24 21:59:58,401 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_STATUS 
    foreign key (PRODUCT_STATUS_CODE) references PRODUCT_STATUS (PRODUCT_STATUS_CODE)
2016-07-24 21:59:58,429 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT_CATEGORY add constraint FK_PRODUCT_CATEGORY_PARENT 
    foreign key (PARENT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-07-24 21:59:58,457 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_MY_MEMBER 
    foreign key (MY_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 21:59:58,485 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_YOUR_MEMBER 
    foreign key (YOUR_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 21:59:58,700 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_UNIQUE_REVERSE on MEMBER_FOLLOWING(YOUR_MEMBER_ID, MY_MEMBER_ID)
2016-07-24 21:59:58,727 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_FOLLOW_DATETIME on MEMBER_FOLLOWING(FOLLOW_DATETIME)
2016-07-24 21:59:58,751 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_MEMBER_NAME on MEMBER(MEMBER_NAME)
2016-07-24 21:59:58,769 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FORMALIZED_DATETIME on MEMBER(FORMALIZED_DATETIME)
2016-07-24 21:59:58,789 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_LOGIN_DATETIME on MEMBER_LOGIN(LOGIN_DATETIME)
2016-07-24 21:59:58,809 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_SERVICE_POINT_COUNT on MEMBER_SERVICE(SERVICE_POINT_COUNT)
2016-07-24 21:59:58,829 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRODUCT_DATETIME on PURCHASE(PRODUCT_ID, PURCHASE_DATETIME)
2016-07-24 21:59:58,852 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_DATETIME_MEMBER on PURCHASE(PURCHASE_DATETIME, MEMBER_ID)
2016-07-24 21:59:58,879 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRICE on PURCHASE(PURCHASE_PRICE)
2016-07-24 21:59:58,899 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PAYMENT_DATETIME on PURCHASE_PAYMENT(PAYMENT_DATETIME, PAYMENT_AMOUNT)
2016-07-24 21:59:58,919 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PRODUCT_PRODUCT_NAME on PRODUCT(PRODUCT_NAME)
2016-07-24 21:59:58,939 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=45 failure=0
2016-07-24 21:59:58,939 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-50-procedure.sql
2016-07-24 21:59:58,943 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_IN_OUT_PARAMETER(
	in v_in_varchar varchar(32)
	, out v_out_varchar varchar(32)
	, inout v_inout_varchar varchar(32)
)
begin
	set v_out_varchar = v_inout_varchar;
	set v_inout_varchar = v_in_varchar;
end;

2016-07-24 21:59:58,969 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_RETURN_RESULT_SET(in birthdateFrom DATE)
begin
  select MEMBER_NAME, BIRTHDATE, MEMBER_STATUS_CODE
    from MEMBER
   where BIRTHDATE >= birthdateFrom
   order by BIRTHDATE desc, MEMBER_ID asc;
  select MEMBER_STATUS_CODE, MEMBER_STATUS_NAME
    from MEMBER_STATUS
   order by DISPLAY_ORDER;
end;

2016-07-24 21:59:58,971 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-07-24 21:59:58,971 [main] INFO  (DfSqlFileFireMan#fire():89) - {Create Schema}: success=49 failure=0 (in 3 files)
2016-07-24 21:59:58,972 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():564) - ...Closing connections to change-users: [system]
2016-07-24 21:59:59,096 [main] INFO  (DfLoadDataProcess#execute():129) - 
2016-07-24 21:59:59,097 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2016-07-24 21:59:59,097 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2016-07-24 21:59:59,097 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2016-07-24 21:59:59,098 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2016-07-24 21:59:59,098 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2016-07-24 21:59:59,143 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-24 21:59:59,143 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/common/xls/10-master.xls)
2016-07-24 21:59:59,144 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-24 21:59:59,465 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-24 21:59:59,465 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-24 21:59:59,466 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-24 21:59:59,527 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{PRV, 仮会員, 入会直後のステータスで一部のサイトサービスが利用可能, 3}
2016-07-24 21:59:59,581 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{FML, 正式会員, 正式な会員としてサイトサービスが利用可能, 1}
2016-07-24 21:59:59,582 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{WDL, 退会会員, 退会が確定した会員でサイトサービスはダメ, 2}
2016-07-24 21:59:59,582 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():212) - ...Skipping the terminal garbage row
2016-07-24 21:59:59,601 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to MEMBER_STATUS
2016-07-24 21:59:59,603 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{1, アメリカ}
2016-07-24 21:59:59,604 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{2, カナダ}
2016-07-24 21:59:59,604 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{3, 中国}
2016-07-24 21:59:59,605 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{4, 千葉}
2016-07-24 21:59:59,610 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to REGION
2016-07-24 21:59:59,612 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLT, PLATINUM, 12.3, 1, platinum rank, 1}
2016-07-24 21:59:59,613 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{GLD, GOLD, 9.2, 1, gold rank, 2}
2016-07-24 21:59:59,614 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{SIL, SILVER, 6.74, 1, silver rank, 3}
2016-07-24 21:59:59,615 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{BRZ, BRONZE, 2, 1, bronze rank, 4}
2016-07-24 21:59:59,616 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLS, PLASTIC, 0.1, 0, plastic rank, 5}
2016-07-24 21:59:59,621 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to SERVICE_RANK
2016-07-24 21:59:59,623 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{SIT, サイトが使いにくいから, 1}
2016-07-24 21:59:59,623 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{OTH, その他理由, 4}
2016-07-24 21:59:59,624 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{FRT, フリテンだから, 3}
2016-07-24 21:59:59,625 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{PRD, 商品に魅力がないから, 2}
2016-07-24 21:59:59,631 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to WITHDRAWAL_REASON
2016-07-24 21:59:59,632 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MSC, 音楽, null}
2016-07-24 21:59:59,633 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{FOD, 食品, null}
2016-07-24 21:59:59,634 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MCD, 音楽CD, MSC}
2016-07-24 21:59:59,634 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{INS, 楽器, MSC}
2016-07-24 21:59:59,635 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{HEB, ハーブ, FOD}
2016-07-24 21:59:59,649 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to PRODUCT_CATEGORY
2016-07-24 21:59:59,650 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{ONS, 生産販売可能, 1}
2016-07-24 21:59:59,651 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{PST, 生産中止, 2}
2016-07-24 21:59:59,651 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{SST, 販売中止, 3}
2016-07-24 21:59:59,658 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to PRODUCT_STATUS
2016-07-24 21:59:59,661 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-24 21:59:59,661 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/20-member.xls)
2016-07-24 21:59:59,662 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-24 21:59:59,773 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{1, Stojkovic, Pixy, FML, 2007/12/01 11:01:10, 1965/03/03, 2016-07-24 21:59:59.773, foo, 2016-07-24 21:59:59.773, foo, 0}
2016-07-24 21:59:59,782 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{2, Savicevic, Genius, PRV, null, 1966/09/15, 2016-07-24 21:59:59.782, foo, 2016-07-24 21:59:59.782, foo, 0}
2016-07-24 21:59:59,784 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{3, Mijatovic, Mijato, WDL, 2005/10/03 13:03:30, null, 2016-07-24 21:59:59.784, foo, 2016-07-24 21:59:59.784, foo, 0}
2016-07-24 21:59:59,785 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{4, Stankovic, Stanko, FML, 2006/09/04 14:04:40, 1978/09/11, 2016-07-24 21:59:59.785, foo, 2016-07-24 21:59:59.785, foo, 0}
2016-07-24 21:59:59,788 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{5, Milosevic, Milose, FML, 2007/08/05 15:05:50, null, 2016-07-24 21:59:59.788, foo, 2016-07-24 21:59:59.788, foo, 0}
2016-07-24 21:59:59,789 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{6, Mihajlovic, FreeKick, WDL, 2006/07/06 16:06:40, 1969/02/20, 2016-07-24 21:59:59.789, foo, 2016-07-24 21:59:59.789, foo, 0}
2016-07-24 21:59:59,792 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{7, アカギ, Akagi, FML, 2005/06/07 17:07:30, null, 2016-07-24 21:59:59.792, foo, 2016-07-24 21:59:59.792, foo, 0}
2016-07-24 21:59:59,794 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{8, Kezman, RedCard, FML, 2006/05/08 18:08:20, null, 2016-07-24 21:59:59.793, foo, 2016-07-24 21:59:59.793, foo, 0}
2016-07-24 21:59:59,795 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{9, Maslovar, JEFUnited, FML, 2007/12/31 00:00:00, 1967/02/20, 2016-07-24 21:59:59.795, foo, 2016-07-24 21:59:59.795, foo, 0}
2016-07-24 21:59:59,797 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{10, 諸葛亮孔明, ShokatsuGoGo, PRV, null, null, 2016-07-24 21:59:59.797, foo, 2016-07-24 21:59:59.797, foo, 0}
2016-07-24 21:59:59,799 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{11, Boban, Boban, FML, 2007/12/01 11:01:10, 1968/10/08, 2016-07-24 21:59:59.799, foo, 2016-07-24 21:59:59.799, foo, 0}
2016-07-24 21:59:59,801 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{12, Suker, Suker, PRV, null, 1968/01/01, 2016-07-24 21:59:59.801, foo, 2016-07-24 21:59:59.801, foo, 0}
2016-07-24 21:59:59,803 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{13, Jarni, Jarni, WDL, 2005/10/03 13:03:30, 1968/10/26, 2016-07-24 21:59:59.803, foo, 2016-07-24 21:59:59.803, foo, 0}
2016-07-24 21:59:59,806 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{14, Boksic, Boksic, FML, 2006/09/04 14:04:40, 1970/01/21, 2016-07-24 21:59:59.806, foo, 2016-07-24 21:59:59.806, foo, 0}
2016-07-24 21:59:59,825 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{15, Prosinecki, Prosinecki, FML, 2004/08/05 15:05:50, 1969/01/12, 2016-07-24 21:59:59.825, foo, 2016-07-24 21:59:59.825, foo, 0}
2016-07-24 21:59:59,828 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{16, RobeltKovac, RobeltKovac, WDL, 2006/07/06 16:06:40, null, 2016-07-24 21:59:59.828, foo, 2016-07-24 21:59:59.828, foo, 0}
2016-07-24 21:59:59,831 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{17, NikoKovac, NikoKovac, FML, 2005/06/07 17:07:30, null, 2016-07-24 21:59:59.831, foo, 2016-07-24 21:59:59.831, foo, 0}
2016-07-24 21:59:59,833 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{18, Jovanovic, Jovano, FML, 2006/05/08 18:08:20, 1981/04/18, 2016-07-24 21:59:59.832, foo, 2016-07-24 21:59:59.832, foo, 0}
2016-07-24 21:59:59,835 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{19, Milko, Milko, FML, 2005/12/31 12:34:56, 1974/09/10, 2016-07-24 21:59:59.834, foo, 2016-07-24 21:59:59.834, foo, 0}
2016-07-24 21:59:59,837 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{20, 諸葛瑾子瑜, ShokatsuKinKin, FML, 2001/12/31 23:59:59, null, 2016-07-24 21:59:59.837, foo, 2016-07-24 21:59:59.837, foo, 0}
2016-07-24 21:59:59,867 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER
2016-07-24 21:59:59,868 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{1, 1, 2007/03/24, 2015/12/31, Nagara, 4, 2016-07-24 21:59:59.868, foo, 2016-07-24 21:59:59.868, foo, 0}
2016-07-24 21:59:59,870 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{2, 1, 1949/01/01, 1997/03/31, New York, 1, 2016-07-24 21:59:59.87, foo, 2016-07-24 21:59:59.87, foo, 0}
2016-07-24 21:59:59,873 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{3, 1, 1997/04/01, 2000/09/30, Los Angels, 1, 2016-07-24 21:59:59.873, foo, 2016-07-24 21:59:59.873, foo, 0}
2016-07-24 21:59:59,876 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{4, 1, 2000/10/01, 2003/08/31, New York, 1, 2016-07-24 21:59:59.876, foo, 2016-07-24 21:59:59.876, foo, 0}
2016-07-24 21:59:59,880 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{5, 1, 2003/09/01, 2004/12/22, San Francisco Powell, 1, 2016-07-24 21:59:59.879, foo, 2016-07-24 21:59:59.879, foo, 0}
2016-07-24 21:59:59,882 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{6, 1, 2004/12/23, 2006/03/23, San Francisco Daly City, 1, 2016-07-24 21:59:59.882, foo, 2016-07-24 21:59:59.882, foo, 0}
2016-07-24 21:59:59,884 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{7, 1, 2016/01/01, 9999/12/31, Victoria, 2, 2016-07-24 21:59:59.884, foo, 2016-07-24 21:59:59.884, foo, 0}
2016-07-24 21:59:59,887 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{8, 2, 2004/12/24, 9999/12/31, Ichihara, 4, 2016-07-24 21:59:59.887, foo, 2016-07-24 21:59:59.887, foo, 0}
2016-07-24 21:59:59,891 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{9, 3, 2004/12/24, 2007/03/23, Mobara, 4, 2016-07-24 21:59:59.89, foo, 2016-07-24 21:59:59.89, foo, 0}
2016-07-24 21:59:59,894 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{10, 4, 2002/11/01, 9999/12/31, Sousa, 4, 2016-07-24 21:59:59.894, foo, 2016-07-24 21:59:59.894, foo, 0}
2016-07-24 21:59:59,896 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{11, 6, 2002/11/01, 9999/12/31, Yokoshiba, 4, 2016-07-24 21:59:59.896, foo, 2016-07-24 21:59:59.896, foo, 0}
2016-07-24 21:59:59,899 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{12, 9, 2010/11/01, 9999/12/31, Tateyama, 4, 2016-07-24 21:59:59.899, foo, 2016-07-24 21:59:59.899, foo, 0}
2016-07-24 21:59:59,901 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{13, 10, 1970/01/01, 9999/12/31, Shoku, 3, 2016-07-24 21:59:59.901, foo, 2016-07-24 21:59:59.901, foo, 0}
2016-07-24 21:59:59,903 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{14, 12, 2000/11/01, 2001/11/01, Oohara, 4, 2016-07-24 21:59:59.903, foo, 2016-07-24 21:59:59.903, foo, 0}
2016-07-24 21:59:59,906 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{15, 15, 2002/11/01, 2006/10/30, MinamiBousou, 4, 2016-07-24 21:59:59.906, foo, 2016-07-24 21:59:59.906, foo, 0}
2016-07-24 21:59:59,909 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{16, 15, 2007/11/01, 9999/12/31, Tomisato, 4, 2016-07-24 21:59:59.908, foo, 2016-07-24 21:59:59.908, foo, 0}
2016-07-24 21:59:59,967 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{17, 18, 2001/03/21, 2007/11/21, Katsuura, 4, 2016-07-24 21:59:59.967, foo, 2016-07-24 21:59:59.967, foo, 0}
2016-07-24 21:59:59,969 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{18, 18, 2007/11/22, 9999/12/31, Kamogawa, 4, 2016-07-24 21:59:59.969, foo, 2016-07-24 21:59:59.969, foo, 0}
2016-07-24 21:59:59,971 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{19, 19, 2000/11/01, 9999/12/31, Yotsukaido, 4, 2016-07-24 21:59:59.971, foo, 2016-07-24 21:59:59.971, foo, 0}
2016-07-24 21:59:59,973 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{20, 20, 1970/01/01, 9999/12/31, Go, 3, 2016-07-24 21:59:59.972, foo, 2016-07-24 21:59:59.972, foo, 0}
2016-07-24 21:59:59,992 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_ADDRESS
2016-07-24 21:59:59,994 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{1, 3, 2006/12/24 23:59:59, 0, FML}
2016-07-24 21:59:59,996 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{2, 6, 2007/11/11 16:16:16, 0, FML}
2016-07-24 21:59:59,998 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{3, 1, 2006/12/23 22:56:29, 0, FML}
2016-07-24 21:59:59,999 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{4, 6, 2007/11/01 02:13:00, 0, FML}
2016-07-24 22:00:00,000 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{5, 7, 2006/05/24 23:12:59, 0, FML}
2016-07-24 22:00:00,001 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{6, 6, 2005/11/11 16:32:01, 0, PRV}
2016-07-24 22:00:00,002 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{7, 6, 2006/01/28 23:59:59, 1, FML}
2016-07-24 22:00:00,003 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{8, 6, 2007/11/09 16:23:00, 0, FML}
2016-07-24 22:00:00,004 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{9, 8, 2006/12/22 23:59:59, 0, FML}
2016-07-24 22:00:00,006 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{10, 6, 2007/11/11 09:01:00, 0, FML}
2016-07-24 22:00:00,007 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{11, 1, 2006/12/23 23:59:59, 0, FML}
2016-07-24 22:00:00,009 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{12, 9, 2007/11/15 12:43:00, 0, FML}
2016-07-24 22:00:00,010 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{13, 10, 2006/12/24 23:59:59, 0, FML}
2016-07-24 22:00:00,011 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{14, 6, 2007/04/01 16:23:01, 0, FML}
2016-07-24 22:00:00,013 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{15, 7, 2006/12/24 23:59:20, 1, FML}
2016-07-24 22:00:00,014 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{16, 6, 2007/05/01 12:23:02, 0, FML}
2016-07-24 22:00:00,015 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{17, 7, 2006/12/24 23:59:21, 0, FML}
2016-07-24 22:00:00,016 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{18, 6, 2007/06/11 17:23:03, 0, FML}
2016-07-24 22:00:00,017 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{19, 4, 2006/12/24 23:59:22, 0, FML}
2016-07-24 22:00:00,018 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{20, 3, 2007/11/01 16:12:04, 0, FML}
2016-07-24 22:00:00,020 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{21, 11, 2006/12/24 23:59:23, 0, FML}
2016-07-24 22:00:00,021 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{22, 1, 2007/11/01 16:23:05, 0, PRV}
2016-07-24 22:00:00,022 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{23, 9, 2006/12/24 23:59:24, 1, FML}
2016-07-24 22:00:00,023 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{24, 8, 2007/11/01 16:23:06, 0, FML}
2016-07-24 22:00:00,024 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{25, 7, 2007/12/24 11:59:25, 1, FML}
2016-07-24 22:00:00,025 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{26, 6, 2007/06/21 01:23:57, 0, FML}
2016-07-24 22:00:00,026 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{27, 5, 2006/12/24 23:59:26, 0, FML}
2016-07-24 22:00:00,028 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{28, 3, 2007/11/01 16:23:08, 0, FML}
2016-07-24 22:00:00,029 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{29, 3, 2006/12/24 23:59:27, 0, FML}
2016-07-24 22:00:00,031 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{30, 10, 2007/11/01 16:23:09, 0, FML}
2016-07-24 22:00:00,032 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{31, 15, 2006/07/24 23:59:28, 0, FML}
2016-07-24 22:00:00,033 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{32, 14, 2007/11/01 17:23:10, 0, FML}
2016-07-24 22:00:00,034 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{33, 15, 2007/11/01 16:23:10, 0, FML}
2016-07-24 22:00:00,035 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{34, 18, 2006/07/24 23:59:29, 0, FML}
2016-07-24 22:00:00,036 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{35, 3, 2007/11/01 17:23:11, 0, PRV}
2016-07-24 22:00:00,037 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{36, 5, 2007/11/01 16:23:11, 1, FML}
2016-07-24 22:00:00,038 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{37, 11, 2006/07/24 23:59:30, 0, FML}
2016-07-24 22:00:00,039 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{38, 20, 2007/11/01 17:23:12, 1, FML}
2016-07-24 22:00:00,040 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{39, 19, 2007/11/01 16:23:12, 0, FML}
2016-07-24 22:00:00,041 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{40, 4, 2006/07/24 23:59:31, 0, FML}
2016-07-24 22:00:00,042 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{41, 4, 2007/11/01 17:23:13, 0, FML}
2016-07-24 22:00:00,043 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{42, 4, 2007/11/01 16:23:13, 0, FML}
2016-07-24 22:00:00,045 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{43, 4, 2006/07/24 23:52:32, 0, FML}
2016-07-24 22:00:00,046 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{44, 4, 2007/11/01 11:23:14, 0, FML}
2016-07-24 22:00:00,047 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{45, 4, 2007/11/21 06:23:14, 0, FML}
2016-07-24 22:00:00,048 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{46, 12, 2006/07/24 23:52:33, 0, PRV}
2016-07-24 22:00:00,049 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{47, 13, 2007/11/01 11:23:15, 1, FML}
2016-07-24 22:00:00,050 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{48, 14, 2007/11/21 06:23:15, 0, FML}
2016-07-24 22:00:00,051 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{49, 17, 2006/07/24 23:52:34, 1, FML}
2016-07-24 22:00:00,051 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{50, 18, 2007/11/01 11:23:16, 0, FML}
2016-07-24 22:00:00,053 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{51, 16, 2007/11/21 06:23:16, 0, FML}
2016-07-24 22:00:00,054 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{52, 4, 2006/07/24 23:52:35, 0, FML}
2016-07-24 22:00:00,055 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{53, 5, 2007/11/01 11:23:17, 0, FML}
2016-07-24 22:00:00,056 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{54, 5, 2007/11/21 06:23:17, 0, FML}
2016-07-24 22:00:00,057 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{55, 11, 2006/07/24 23:52:36, 0, FML}
2016-07-24 22:00:00,058 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{56, 12, 2007/11/01 11:23:18, 0, FML}
2016-07-24 22:00:00,109 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 56 rows are loaded to MEMBER_LOGIN
2016-07-24 22:00:00,111 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{1, aaa, 30符3飜は？, 自分で数えろ, 1, 2016-07-24 22:00:00.111, foo, 2016-07-24 22:00:00.111, foo, 0}
2016-07-24 22:00:00,113 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{2, bbb, 50符2飜は？, 自分で数えろ, 2, 2016-07-24 22:00:00.113, foo, 2016-07-24 22:00:00.113, foo, 0}
2016-07-24 22:00:00,114 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{3, ccc, 110符2飜は？, 自分で数えろ, 3, 2016-07-24 22:00:00.114, foo, 2016-07-24 22:00:00.114, foo, 0}
2016-07-24 22:00:00,115 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{4, ddd, タンヤオ？, そう, 4, 2016-07-24 22:00:00.115, foo, 2016-07-24 22:00:00.115, foo, 0}
2016-07-24 22:00:00,116 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{5, eee2, ピンフ？, そう, 5, 2016-07-24 22:00:00.116, foo, 2016-07-24 22:00:00.116, foo, 0}
2016-07-24 22:00:00,117 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{6, fff, サンアンコウ？, そう, 6, 2016-07-24 22:00:00.117, foo, 2016-07-24 22:00:00.117, foo, 0}
2016-07-24 22:00:00,118 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{7, ggg3, イーペーコウ？, そう, 7, 2016-07-24 22:00:00.118, foo, 2016-07-24 22:00:00.118, foo, 0}
2016-07-24 22:00:00,119 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{8, hhh555, リャンペーコウ？, そう, 8, 2016-07-24 22:00:00.119, foo, 2016-07-24 22:00:00.119, foo, 0}
2016-07-24 22:00:00,120 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{9, iii, サンペーコウはないよね？, 当たり前だ, 9, 2016-07-24 22:00:00.12, foo, 2016-07-24 22:00:00.12, foo, 0}
2016-07-24 22:00:00,121 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{10, jjj, 私はイカサマしません, 実はする, 10, 2016-07-24 22:00:00.121, foo, 2016-07-24 22:00:00.121, foo, 0}
2016-07-24 22:00:00,122 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{11, qwe, 70符3飜は？, 自分で数えろ, 11, 2016-07-24 22:00:00.122, foo, 2016-07-24 22:00:00.122, foo, 0}
2016-07-24 22:00:00,123 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{12, sdf, 20符4飜は？, 自分で数えろ, 12, 2016-07-24 22:00:00.123, foo, 2016-07-24 22:00:00.123, foo, 0}
2016-07-24 22:00:00,124 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{13, dfgsf, 大三元は？, 役満だよ, 13, 2016-07-24 22:00:00.124, foo, 2016-07-24 22:00:00.124, foo, 0}
2016-07-24 22:00:00,125 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{14, ert, タンヤオ？, そう, 14, 2016-07-24 22:00:00.125, foo, 2016-07-24 22:00:00.125, foo, 0}
2016-07-24 22:00:00,126 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{15, fhgf, ピンフ？, そう, 15, 2016-07-24 22:00:00.126, foo, 2016-07-24 22:00:00.126, foo, 0}
2016-07-24 22:00:00,127 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{16, ghj, サンアンコウ？, そう, 16, 2016-07-24 22:00:00.127, foo, 2016-07-24 22:00:00.127, foo, 0}
2016-07-24 22:00:00,128 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{17, tyuffff, サンレンコウ？, そう, 17, 2016-07-24 22:00:00.128, foo, 2016-07-24 22:00:00.128, foo, 0}
2016-07-24 22:00:00,129 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{18, jkl, イーペーコウ？, そう, 18, 2016-07-24 22:00:00.129, foo, 2016-07-24 22:00:00.129, foo, 0}
2016-07-24 22:00:00,130 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{19, ghjfff, 左ハイは？, 痛い, 19, 2016-07-24 22:00:00.13, foo, 2016-07-24 22:00:00.13, foo, 0}
2016-07-24 22:00:00,132 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{20, cvb, 孫権は？, 呉, 20, 2016-07-24 22:00:00.132, foo, 2016-07-24 22:00:00.132, foo, 0}
2016-07-24 22:00:00,167 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SECURITY
2016-07-24 22:00:00,169 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{1, 1, 1234, PLT, 2016-07-24 22:00:00.168, foo, 2016-07-24 22:00:00.168, foo, 0}
2016-07-24 22:00:00,170 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{2, 2, 2345, GLD, 2016-07-24 22:00:00.17, foo, 2016-07-24 22:00:00.17, foo, 0}
2016-07-24 22:00:00,171 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{3, 3, 3456, GLD, 2016-07-24 22:00:00.171, foo, 2016-07-24 22:00:00.171, foo, 0}
2016-07-24 22:00:00,172 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{4, 4, 875, BRZ, 2016-07-24 22:00:00.172, foo, 2016-07-24 22:00:00.172, foo, 0}
2016-07-24 22:00:00,173 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{5, 5, 1111, BRZ, 2016-07-24 22:00:00.173, foo, 2016-07-24 22:00:00.173, foo, 0}
2016-07-24 22:00:00,174 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{6, 6, 5422, SIL, 2016-07-24 22:00:00.174, foo, 2016-07-24 22:00:00.174, foo, 0}
2016-07-24 22:00:00,175 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{7, 7, 24678, SIL, 2016-07-24 22:00:00.175, foo, 2016-07-24 22:00:00.175, foo, 0}
2016-07-24 22:00:00,176 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{8, 8, 234, SIL, 2016-07-24 22:00:00.176, foo, 2016-07-24 22:00:00.176, foo, 0}
2016-07-24 22:00:00,177 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{9, 9, 3, SIL, 2016-07-24 22:00:00.177, foo, 2016-07-24 22:00:00.177, foo, 0}
2016-07-24 22:00:00,178 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{10, 10, 98765, PLT, 2016-07-24 22:00:00.178, foo, 2016-07-24 22:00:00.178, foo, 0}
2016-07-24 22:00:00,183 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{11, 11, 34, GLD, 2016-07-24 22:00:00.182, foo, 2016-07-24 22:00:00.182, foo, 0}
2016-07-24 22:00:00,184 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{12, 12, 532, PLT, 2016-07-24 22:00:00.184, foo, 2016-07-24 22:00:00.184, foo, 0}
2016-07-24 22:00:00,186 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{13, 13, 23678, GLD, 2016-07-24 22:00:00.185, foo, 2016-07-24 22:00:00.185, foo, 0}
2016-07-24 22:00:00,187 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{14, 14, 432, GLD, 2016-07-24 22:00:00.187, foo, 2016-07-24 22:00:00.187, foo, 0}
2016-07-24 22:00:00,189 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{15, 15, 543, BRZ, 2016-07-24 22:00:00.187, foo, 2016-07-24 22:00:00.187, foo, 0}
2016-07-24 22:00:00,190 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{16, 16, 23545, PLT, 2016-07-24 22:00:00.19, foo, 2016-07-24 22:00:00.19, foo, 0}
2016-07-24 22:00:00,192 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{17, 17, 2345, GLD, 2016-07-24 22:00:00.192, foo, 2016-07-24 22:00:00.192, foo, 0}
2016-07-24 22:00:00,195 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{18, 18, 8763, SIL, 2016-07-24 22:00:00.195, foo, 2016-07-24 22:00:00.195, foo, 0}
2016-07-24 22:00:00,197 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{19, 19, 34567, SIL, 2016-07-24 22:00:00.196, foo, 2016-07-24 22:00:00.196, foo, 0}
2016-07-24 22:00:00,198 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{20, 20, 43, GLD, 2016-07-24 22:00:00.197, foo, 2016-07-24 22:00:00.197, foo, 0}
2016-07-24 22:00:00,216 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SERVICE
2016-07-24 22:00:00,217 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{3, null, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123, 2016-07-24 22:00:00.217, foo, 2016-07-24 22:00:00.217, foo}
2016-07-24 22:00:00,219 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{6, SIT, null, 2007/11/11 16:00:00.456, 2016-07-24 22:00:00.219, foo, 2016-07-24 22:00:00.219, foo}
2016-07-24 22:00:00,221 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{13, PRD, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789, 2016-07-24 22:00:00.221, foo, 2016-07-24 22:00:00.221, foo}
2016-07-24 22:00:00,222 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{16, SIT, コバチが２人いるため, 2007/11/13 16:00:00.456, 2016-07-24 22:00:00.222, foo, 2016-07-24 22:00:00.222, foo}
2016-07-24 22:00:00,229 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to MEMBER_WITHDRAWAL
2016-07-24 22:00:00,230 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{1, 1, 2, 2006/12/24 23:59:59}
2016-07-24 22:00:00,231 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{2, 1, 3, 2007/11/11 16:16:16}
2016-07-24 22:00:00,232 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{3, 1, 4, 2006/12/23 22:56:29}
2016-07-24 22:00:00,233 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{4, 1, 5, 2007/11/01 02:13:00}
2016-07-24 22:00:00,234 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{5, 1, 6, 2012/05/24 23:12:59}
2016-07-24 22:00:00,235 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{6, 1, 9, 2005/11/11 16:32:01}
2016-07-24 22:00:00,236 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{7, 1, 15, 2006/01/28 23:59:59}
2016-07-24 22:00:00,237 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{8, 1, 18, 2007/11/09 16:23:00}
2016-07-24 22:00:00,238 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{9, 2, 1, 2009/12/22 23:59:59}
2016-07-24 22:00:00,238 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{10, 2, 3, 2007/11/11 09:01:00}
2016-07-24 22:00:00,240 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{11, 2, 4, 2006/11/23 23:59:59}
2016-07-24 22:00:00,240 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{12, 2, 9, 2012/11/15 12:43:00}
2016-07-24 22:00:00,241 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{13, 2, 14, 2006/12/24 23:59:59}
2016-07-24 22:00:00,243 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{14, 2, 19, 2011/04/01 16:23:01}
2016-07-24 22:00:00,244 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{15, 3, 1, 2006/12/24 23:59:20}
2016-07-24 22:00:00,245 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{16, 3, 2, 2008/05/01 12:23:02}
2016-07-24 22:00:00,246 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{17, 3, 4, 2006/12/24 23:59:21}
2016-07-24 22:00:00,247 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{18, 3, 6, 2009/06/11 17:23:03}
2016-07-24 22:00:00,247 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{19, 3, 9, 2010/12/24 23:59:22}
2016-07-24 22:00:00,248 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{20, 3, 10, 2007/11/01 16:12:04}
2016-07-24 22:00:00,249 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{21, 4, 1, 2006/12/24 23:59:23}
2016-07-24 22:00:00,249 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{22, 4, 2, 2007/11/01 16:23:05}
2016-07-24 22:00:00,250 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{23, 4, 3, 2011/12/24 23:59:24}
2016-07-24 22:00:00,250 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{24, 4, 4, 2007/11/01 16:23:06}
2016-07-24 22:00:00,251 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{25, 4, 5, 2013/05/24 11:59:25}
2016-07-24 22:00:00,251 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{26, 4, 6, 2007/06/21 01:23:57}
2016-07-24 22:00:00,252 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{27, 4, 9, 2006/12/24 23:59:26}
2016-07-24 22:00:00,252 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{28, 4, 11, 2007/11/01 16:23:08}
2016-07-24 22:00:00,252 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{29, 4, 12, 2013/02/24 23:59:27}
2016-07-24 22:00:00,253 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{30, 4, 13, 2012/11/01 16:23:03}
2016-07-24 22:00:00,253 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{31, 4, 14, 2006/07/24 23:59:28}
2016-07-24 22:00:00,254 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{32, 4, 15, 2007/11/01 17:23:10}
2016-07-24 22:00:00,255 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{33, 4, 16, 2007/11/01 16:23:10}
2016-07-24 22:00:00,256 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{34, 4, 17, 2006/07/24 23:59:29}
2016-07-24 22:00:00,256 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{35, 4, 18, 2011/11/01 17:23:11}
2016-07-24 22:00:00,257 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{36, 4, 19, 2007/11/01 16:23:11}
2016-07-24 22:00:00,258 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{37, 5, 1, 2008/07/24 23:59:30}
2016-07-24 22:00:00,261 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{38, 5, 3, 2007/11/01 17:23:12}
2016-07-24 22:00:00,262 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{39, 5, 6, 2007/11/01 16:23:12}
2016-07-24 22:00:00,263 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{40, 6, 1, 2006/07/24 23:59:31}
2016-07-24 22:00:00,264 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{41, 6, 2, 2007/11/01 17:23:13}
2016-07-24 22:00:00,265 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{42, 6, 3, 2007/11/01 16:23:13}
2016-07-24 22:00:00,266 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{43, 6, 4, 2006/07/24 23:52:32}
2016-07-24 22:00:00,266 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{44, 6, 5, 2007/11/01 11:23:14}
2016-07-24 22:00:00,267 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{45, 6, 6, 2007/11/21 06:23:14}
2016-07-24 22:00:00,267 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{46, 8, 1, 2011/07/24 23:52:33}
2016-07-24 22:00:00,268 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{47, 8, 2, 2007/11/01 11:23:15}
2016-07-24 22:00:00,268 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{48, 8, 3, 2007/11/21 06:23:15}
2016-07-24 22:00:00,269 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{49, 9, 1, 2006/07/24 23:52:34}
2016-07-24 22:00:00,270 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{50, 9, 2, 208/11/01 11:23:16}
2016-07-24 22:00:00,271 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{51, 9, 3, 2007/11/21 06:23:16}
2016-07-24 22:00:00,272 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{52, 9, 10, 2006/07/24 23:52:35}
2016-07-24 22:00:00,273 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{53, 9, 20, 2009/11/01 11:23:17}
2016-07-24 22:00:00,274 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{54, 10, 1, 2007/11/21 06:23:17}
2016-07-24 22:00:00,275 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{55, 10, 2, 2006/07/24 23:52:36}
2016-07-24 22:00:00,276 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{56, 10, 3, 2010/11/01 11:23:18}
2016-07-24 22:00:00,277 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{57, 10, 4, 2006/12/21 23:59:59}
2016-07-24 22:00:00,278 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{58, 10, 5, 2007/11/1 16:16:16}
2016-07-24 22:00:00,278 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{59, 10, 6, 2006/08/23 22:56:29}
2016-07-24 22:00:00,279 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{60, 10, 9, 2007/11/01 02:11:00}
2016-07-24 22:00:00,280 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{61, 10, 11, 2012/05/24 23:12:59}
2016-07-24 22:00:00,281 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{62, 10, 12, 2005/11/10 16:32:01}
2016-07-24 22:00:00,282 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{63, 10, 13, 2006/01/28 23:59:59}
2016-07-24 22:00:00,283 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{64, 10, 14, 2007/10/09 16:23:00}
2016-07-24 22:00:00,284 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{65, 10, 15, 2009/12/22 23:59:59}
2016-07-24 22:00:00,286 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{66, 10, 16, 2007/11/01 09:01:00}
2016-07-24 22:00:00,287 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{67, 10, 17, 2006/11/23 23:59:59}
2016-07-24 22:00:00,287 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{68, 10, 18, 2011/11/15 12:43:00}
2016-07-24 22:00:00,288 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{69, 10, 19, 2006/07/24 23:59:59}
2016-07-24 22:00:00,288 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{70, 10, 20, 2011/08/01 16:23:01}
2016-07-24 22:00:00,289 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{71, 11, 12, 2006/09/24 23:59:20}
2016-07-24 22:00:00,289 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{72, 11, 13, 2008/01/01 12:23:02}
2016-07-24 22:00:00,290 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{73, 11, 14, 2006/12/24 23:59:21}
2016-07-24 22:00:00,291 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{74, 11, 15, 2009/02/11 17:23:03}
2016-07-24 22:00:00,292 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{75, 11, 16, 2010/03/24 23:59:22}
2016-07-24 22:00:00,293 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{76, 11, 17, 2007/09/01 16:12:04}
2016-07-24 22:00:00,294 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{77, 11, 19, 2006/12/24 23:59:23}
2016-07-24 22:00:00,295 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{78, 12, 1, 2007/11/01 16:23:05}
2016-07-24 22:00:00,296 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{79, 12, 11, 2011/05/24 23:59:24}
2016-07-24 22:00:00,298 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{80, 12, 13, 2007/11/01 16:23:06}
2016-07-24 22:00:00,299 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{81, 12, 14, 2013/06/24 11:59:25}
2016-07-24 22:00:00,300 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{82, 12, 15, 2007/06/21 01:23:57}
2016-07-24 22:00:00,301 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{83, 12, 19, 2006/12/24 23:59:26}
2016-07-24 22:00:00,301 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{84, 13, 11, 2007/08/01 16:23:08}
2016-07-24 22:00:00,302 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{85, 13, 12, 2013/02/24 23:59:27}
2016-07-24 22:00:00,303 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{86, 13, 14, 2012/11/01 16:23:03}
2016-07-24 22:00:00,304 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{87, 14, 1, 2006/07/24 23:59:28}
2016-07-24 22:00:00,305 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{88, 14, 10, 2012/05/24 23:12:59}
2016-07-24 22:00:00,306 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{89, 14, 11, 2005/11/10 16:32:01}
2016-07-24 22:00:00,307 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{90, 14, 20, 2006/01/28 23:59:59}
2016-07-24 22:00:00,308 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{91, 16, 17, 2007/10/09 16:23:00}
2016-07-24 22:00:00,310 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{92, 17, 16, 2009/12/22 23:59:59}
2016-07-24 22:00:00,310 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{93, 18, 1, 2007/11/01 09:01:00}
2016-07-24 22:00:00,311 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{94, 18, 2, 2006/11/23 23:59:59}
2016-07-24 22:00:00,312 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{95, 18, 3, 2011/11/15 12:43:00}
2016-07-24 22:00:00,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{96, 18, 4, 2006/07/24 23:59:59}
2016-07-24 22:00:00,314 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{97, 18, 5, 2011/08/01 16:23:01}
2016-07-24 22:00:00,315 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{98, 18, 6, 2006/09/24 23:59:20}
2016-07-24 22:00:00,315 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{99, 18, 9, 2008/01/01 12:23:02}
2016-07-24 22:00:00,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{100, 18, 11, 2006/12/24 23:59:21}
2016-07-24 22:00:00,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{101, 18, 12, 2009/02/11 17:23:03}
2016-07-24 22:00:00,318 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{102, 18, 13, 2010/03/24 23:59:22}
2016-07-24 22:00:00,319 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{103, 18, 14, 2007/09/01 16:12:04}
2016-07-24 22:00:00,322 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{104, 18, 15, 2006/12/24 23:59:23}
2016-07-24 22:00:00,323 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{105, 19, 1, 2007/11/01 16:23:05}
2016-07-24 22:00:00,323 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{106, 19, 10, 2011/05/24 23:59:24}
2016-07-24 22:00:00,324 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{107, 19, 11, 2007/11/01 16:23:06}
2016-07-24 22:00:00,325 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{108, 19, 12, 2013/06/24 11:59:25}
2016-07-24 22:00:00,327 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{109, 19, 20, 2013/06/24 11:59:25}
2016-07-24 22:00:00,328 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{110, 20, 10, 2013/06/24 11:59:25}
2016-07-24 22:00:00,329 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{111, 20, 19, 2013/06/24 11:59:25}
2016-07-24 22:00:00,423 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 111 rows are loaded to MEMBER_FOLLOWING
2016-07-24 22:00:00,423 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-24 22:00:00,424 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/30-product.xls)
2016-07-24 22:00:00,424 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-24 22:00:00,498 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{1, Cold Spring Harbor, BILLYJOEL-01, MCD, PST, 1100, 2016-07-24 22:00:00.498, foo, 2016-07-24 22:00:00.498, foo, 0}
2016-07-24 22:00:00,499 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{2, Piano Man, BILLYJOEL-02, MCD, ONS, 1200, 2016-07-24 22:00:00.499, foo, 2016-07-24 22:00:00.499, foo, 0}
2016-07-24 22:00:00,500 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{3, Streetlife Serenade, BILLYJOEL-03, MCD, ONS, 1300, 2016-07-24 22:00:00.5, foo, 2016-07-24 22:00:00.5, foo, 0}
2016-07-24 22:00:00,501 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{4, Turnstiles, BILLYJOEL-04, MCD, ONS, 1400, 2016-07-24 22:00:00.501, foo, 2016-07-24 22:00:00.501, foo, 0}
2016-07-24 22:00:00,501 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{5, The Stranger, BILLYJOEL-05, MCD, ONS, 1500, 2016-07-24 22:00:00.501, foo, 2016-07-24 22:00:00.501, foo, 0}
2016-07-24 22:00:00,502 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{6, 52nd Street, BILLYJOEL-06, MCD, ONS, 1600, 2016-07-24 22:00:00.502, foo, 2016-07-24 22:00:00.502, foo, 0}
2016-07-24 22:00:00,503 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{7, Glass House, BILLYJOEL-07, MCD, ONS, 1700, 2016-07-24 22:00:00.503, foo, 2016-07-24 22:00:00.503, foo, 0}
2016-07-24 22:00:00,504 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{8, Nylon Curtain, BILLYJOEL-08, MCD, ONS, 1800, 2016-07-24 22:00:00.504, foo, 2016-07-24 22:00:00.504, foo, 0}
2016-07-24 22:00:00,505 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{9, Bridge, BILLYJOEL-09, MCD, ONS, 1900, 2016-07-24 22:00:00.505, foo, 2016-07-24 22:00:00.505, foo, 0}
2016-07-24 22:00:00,506 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{10, Storm Front, BILLYJOEL-10, MCD, ONS, 2000, 2016-07-24 22:00:00.506, foo, 2016-07-24 22:00:00.506, foo, 0}
2016-07-24 22:00:00,507 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{11, River of Dreams, BILLYJOEL-11, MCD, ONS, 2100, 2016-07-24 22:00:00.507, foo, 2016-07-24 22:00:00.507, foo, 0}
2016-07-24 22:00:00,508 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{12, Grand Piano, PIANO-01, INS, ONS, 1400000, 2016-07-24 22:00:00.508, foo, 2016-07-24 22:00:00.508, foo, 0}
2016-07-24 22:00:00,509 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{13, Upright Piano, PIANO-02, INS, ONS, 1100000, 2016-07-24 22:00:00.509, foo, 2016-07-24 22:00:00.509, foo, 0}
2016-07-24 22:00:00,510 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{14, Low Price Flute, FLUTE-01, INS, ONS, 50000, 2016-07-24 22:00:00.51, foo, 2016-07-24 22:00:00.51, foo, 0}
2016-07-24 22:00:00,511 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{15, Silver Flute, FLUTE-02, INS, ONS, 500000, 2016-07-24 22:00:00.511, foo, 2016-07-24 22:00:00.511, foo, 0}
2016-07-24 22:00:00,513 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{16, Gold Flute, FLUTE-03, INS, ONS, 4000000, 2016-07-24 22:00:00.513, foo, 2016-07-24 22:00:00.513, foo, 0}
2016-07-24 22:00:00,514 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{17, Rosemary (100g), HARB-100-01, HEB, ONS, 400, 2016-07-24 22:00:00.514, foo, 2016-07-24 22:00:00.514, foo, 0}
2016-07-24 22:00:00,515 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{18, Lemon Grass (100g), HARB-100-02, HEB, ONS, 380, 2016-07-24 22:00:00.515, foo, 2016-07-24 22:00:00.515, foo, 0}
2016-07-24 22:00:00,517 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{19, Camomile (100g), HARB-100-03, HEB, ONS, 380, 2016-07-24 22:00:00.517, foo, 2016-07-24 22:00:00.517, foo, 0}
2016-07-24 22:00:00,518 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{20, Hatomugi (100g), HARB-100-04, HEB, ONS, 340, 2016-07-24 22:00:00.518, foo, 2016-07-24 22:00:00.518, foo, 0}
2016-07-24 22:00:00,538 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to PRODUCT
2016-07-24 22:00:00,540 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{1, 5, 3, 2006/12/24 23:59:59, 1, 1800, 1, 2016-07-24 22:00:00.54, foo, 2016-07-24 22:00:00.54, foo, 0}
2016-07-24 22:00:00,542 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{2, 15, 7, 2007/11/11 16:16:16, 1, 1700, 1, 2016-07-24 22:00:00.542, foo, 2016-07-24 22:00:00.542, foo, 0}
2016-07-24 22:00:00,543 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{3, 13, 3, 2006/12/23 22:56:29.235, 1, 1800, 1, 2016-07-24 22:00:00.543, foo, 2016-07-24 22:00:00.543, foo, 0}
2016-07-24 22:00:00,544 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{4, 2, 5, 2007/11/01 02:13:00, 2, 1700, 1, 2016-07-24 22:00:00.544, foo, 2016-07-24 22:00:00.544, foo, 0}
2016-07-24 22:00:00,545 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{5, 9, 11, 2008/01/04 23:12:59, 5, 1800, 1, 2016-07-24 22:00:00.545, foo, 2016-07-24 22:00:00.545, foo, 0}
2016-07-24 22:00:00,546 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{6, 20, 2, 2002/01/01 16:32:01, 1, 2000, 1, 2016-07-24 22:00:00.546, foo, 2016-07-24 22:00:00.546, foo, 0}
2016-07-24 22:00:00,547 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{7, 19, 9, 2006/01/28 23:59:59.999, 1, 1000, 0, 2016-07-24 22:00:00.547, foo, 2016-07-24 22:00:00.547, foo, 0}
2016-07-24 22:00:00,549 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{8, 4, 7, 2007/11/09 16:23:00, 1, 1535, 1, 2016-07-24 22:00:00.549, foo, 2016-07-24 22:00:00.549, foo, 0}
2016-07-24 22:00:00,551 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{9, 4, 10, 2006/12/22 23:59:59, 20, 1700, 1, 2016-07-24 22:00:00.55, foo, 2016-07-24 22:00:00.55, foo, 0}
2016-07-24 22:00:00,553 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{10, 2, 10, 2007/11/01 02:13:00.345, 1, 1700, 0, 2016-07-24 22:00:00.553, foo, 2016-07-24 22:00:00.553, foo, 0}
2016-07-24 22:00:00,555 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{11, 5, 2, 2007/11/09 16:23:01, 1, 1800, 1, 2016-07-24 22:00:00.555, foo, 2016-07-24 22:00:00.555, foo, 0}
2016-07-24 22:00:00,557 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{12, 15, 2, 2006/12/22 23:59:12, 1, 1700, 1, 2016-07-24 22:00:00.557, foo, 2016-07-24 22:00:00.557, foo, 0}
2016-07-24 22:00:00,560 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{13, 13, 8, 2007/11/01 02:13:00.346, 1, 1800, 1, 2016-07-24 22:00:00.559, foo, 2016-07-24 22:00:00.559, foo, 0}
2016-07-24 22:00:00,562 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{14, 2, 4, 2007/11/09 16:23:02, 2, 1700, 1, 2016-07-24 22:00:00.562, foo, 2016-07-24 22:00:00.562, foo, 0}
2016-07-24 22:00:00,564 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{15, 9, 11, 2006/12/22 23:59:32, 5, 1800, 1, 2016-07-24 22:00:00.564, foo, 2016-07-24 22:00:00.564, foo, 0}
2016-07-24 22:00:00,566 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{16, 20, 1, 2007/11/01 02:13:00.347, 1, 2000, 1, 2016-07-24 22:00:00.566, foo, 2016-07-24 22:00:00.566, foo, 0}
2016-07-24 22:00:00,567 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{17, 19, 11, 2006/12/22 23:59:33, 2, 1000, 0, 2016-07-24 22:00:00.567, foo, 2016-07-24 22:00:00.567, foo, 0}
2016-07-24 22:00:00,569 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{18, 4, 10, 2007/11/01 02:13:00.348, 1, 1535, 1, 2016-07-24 22:00:00.568, foo, 2016-07-24 22:00:00.568, foo, 0}
2016-07-24 22:00:00,570 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{19, 4, 11, 2007/11/01 02:13:00.348, 4, 1700, 1, 2016-07-24 22:00:00.57, foo, 2016-07-24 22:00:00.57, foo, 0}
2016-07-24 22:00:00,571 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{20, 2, 11, 2006/12/22 23:59:35, 1, 1700, 0, 2016-07-24 22:00:00.571, foo, 2016-07-24 22:00:00.571, foo, 0}
2016-07-24 22:00:00,572 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{21, 2, 15, 2006/12/22 23:59:35, 1, 400000, 0, 2016-07-24 22:00:00.572, foo, 2016-07-24 22:00:00.572, foo, 0}
2016-07-24 22:00:00,573 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{22, 3, 6, 2007/11/01 02:13:00.350, 4, 1800, 1, 2016-07-24 22:00:00.573, foo, 2016-07-24 22:00:00.573, foo, 0}
2016-07-24 22:00:00,574 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{23, 15, 7, 2006/12/22 23:59:36, 1, 1700, 1, 2016-07-24 22:00:00.574, foo, 2016-07-24 22:00:00.574, foo, 0}
2016-07-24 22:00:00,576 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{24, 13, 3, 2007/09/11 12:13:00.351, 1, 1800, 1, 2016-07-24 22:00:00.576, foo, 2016-07-24 22:00:00.576, foo, 0}
2016-07-24 22:00:00,577 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{25, 16, 2, 2006/12/22 23:59:37, 2, 1700, 1, 2016-07-24 22:00:00.577, foo, 2016-07-24 22:00:00.577, foo, 0}
2016-07-24 22:00:00,579 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{26, 3, 4, 2005/12/21 12:13:00.352, 1, 1800, 1, 2016-07-24 22:00:00.579, foo, 2016-07-24 22:00:00.579, foo, 0}
2016-07-24 22:00:00,580 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{27, 2, 8, 2006/12/22 23:59:38, 1, 2000, 1, 2016-07-24 22:00:00.58, foo, 2016-07-24 22:00:00.58, foo, 0}
2016-07-24 22:00:00,581 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{28, 6, 17, 2007/11/01 02:13:00.353, 2, 600, 0, 2016-07-24 22:00:00.581, foo, 2016-07-24 22:00:00.581, foo, 0}
2016-07-24 22:00:00,583 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{29, 4, 4, 2006/12/22 23:59:39, 1, 1535, 1, 2016-07-24 22:00:00.583, foo, 2016-07-24 22:00:00.583, foo, 0}
2016-07-24 22:00:00,584 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{30, 4, 3, 2007/11/01 02:13:00.354, 4, 1700, 1, 2016-07-24 22:00:00.584, foo, 2016-07-24 22:00:00.584, foo, 0}
2016-07-24 22:00:00,587 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{31, 4, 10, 2006/12/22 23:59:40, 1, 1700, 0, 2016-07-24 22:00:00.587, foo, 2016-07-24 22:00:00.587, foo, 0}
2016-07-24 22:00:00,589 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{32, 13, 3, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-07-24 22:00:00.589, foo, 2016-07-24 22:00:00.589, foo, 0}
2016-07-24 22:00:00,590 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{33, 16, 2, 2006/12/22 23:59:41, 2, 1700, 1, 2016-07-24 22:00:00.59, foo, 2016-07-24 22:00:00.59, foo, 0}
2016-07-24 22:00:00,594 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{34, 3, 4, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-07-24 22:00:00.593, foo, 2016-07-24 22:00:00.593, foo, 0}
2016-07-24 22:00:00,595 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{35, 2, 8, 2006/12/12 23:59:42, 1, 2000, 1, 2016-07-24 22:00:00.595, foo, 2016-07-24 22:00:00.595, foo, 0}
2016-07-24 22:00:00,597 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{36, 6, 3, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-07-24 22:00:00.597, foo, 2016-07-24 22:00:00.597, foo, 0}
2016-07-24 22:00:00,599 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{37, 4, 4, 2006/12/12 23:59:43, 1, 1535, 1, 2016-07-24 22:00:00.598, foo, 2016-07-24 22:00:00.598, foo, 0}
2016-07-24 22:00:00,600 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{38, 4, 3, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-07-24 22:00:00.599, foo, 2016-07-24 22:00:00.6, foo, 0}
2016-07-24 22:00:00,602 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{39, 4, 10, 2006/12/12 23:59:44, 1, 1700, 0, 2016-07-24 22:00:00.602, foo, 2016-07-24 22:00:00.602, foo, 0}
2016-07-24 22:00:00,603 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{40, 4, 10, 2007/05/01 12:13:00.359, 1, 1700, 0, 2016-07-24 22:00:00.603, foo, 2016-07-24 22:00:00.603, foo, 0}
2016-07-24 22:00:00,606 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{41, 4, 11, 2007/11/01 02:13:01.354, 4, 1700, 1, 2016-07-24 22:00:00.606, foo, 2016-07-24 22:00:00.606, foo, 0}
2016-07-24 22:00:00,608 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{42, 10, 16, 2006/12/22 23:59:40, 1, 2800000, 1, 2016-07-24 22:00:00.608, foo, 2016-07-24 22:00:00.608, foo, 0}
2016-07-24 22:00:00,610 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{43, 13, 17, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-07-24 22:00:00.61, foo, 2016-07-24 22:00:00.61, foo, 0}
2016-07-24 22:00:00,611 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{44, 16, 14, 2006/12/22 23:59:41, 2, 1700, 1, 2016-07-24 22:00:00.611, foo, 2016-07-24 22:00:00.611, foo, 0}
2016-07-24 22:00:00,612 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{45, 3, 18, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-07-24 22:00:00.612, foo, 2016-07-24 22:00:00.612, foo, 0}
2016-07-24 22:00:00,613 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{46, 2, 7, 2006/12/12 23:59:42, 1, 2000, 1, 2016-07-24 22:00:00.613, foo, 2016-07-24 22:00:00.613, foo, 0}
2016-07-24 22:00:00,614 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{47, 6, 14, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-07-24 22:00:00.614, foo, 2016-07-24 22:00:00.614, foo, 0}
2016-07-24 22:00:00,615 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{48, 16, 12, 2006/12/12 23:59:43, 1, 100000, 1, 2016-07-24 22:00:00.615, foo, 2016-07-24 22:00:00.615, foo, 0}
2016-07-24 22:00:00,616 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{49, 4, 20, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-07-24 22:00:00.616, foo, 2016-07-24 22:00:00.616, foo, 0}
2016-07-24 22:00:00,618 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{50, 4, 19, 2006/12/12 23:59:44, 1, 1700, 0, 2016-07-24 22:00:00.618, foo, 2016-07-24 22:00:00.618, foo, 0}
2016-07-24 22:00:00,619 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{51, 4, 11, 2007/11/21 02:13:00.354, 4, 1700, 1, 2016-07-24 22:00:00.619, foo, 2016-07-24 22:00:00.619, foo, 0}
2016-07-24 22:00:00,620 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{52, 20, 17, 2006/12/23 23:59:40, 1, 400, 0, 2016-07-24 22:00:00.62, foo, 2016-07-24 22:00:00.62, foo, 0}
2016-07-24 22:00:00,622 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{53, 13, 16, 2007/12/28 12:13:10.355, 1, 600000, 1, 2016-07-24 22:00:00.622, foo, 2016-07-24 22:00:00.622, foo, 0}
2016-07-24 22:00:00,623 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{54, 16, 14, 2006/02/22 23:59:41, 2, 1700, 1, 2016-07-24 22:00:00.623, foo, 2016-07-24 22:00:00.623, foo, 0}
2016-07-24 22:00:00,624 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{55, 3, 3, 2007/07/21 12:13:00.356, 1, 1800, 1, 2016-07-24 22:00:00.624, foo, 2016-07-24 22:00:00.624, foo, 0}
2016-07-24 22:00:00,626 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{56, 2, 8, 2006/12/22 23:59:42, 1, 2000, 1, 2016-07-24 22:00:00.626, foo, 2016-07-24 22:00:00.626, foo, 0}
2016-07-24 22:00:00,628 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{57, 6, 19, 2007/02/01 02:13:00.357, 2, 1000, 0, 2016-07-24 22:00:00.628, foo, 2016-07-24 22:00:00.628, foo, 0}
2016-07-24 22:00:00,629 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{58, 2, 12, 2006/12/12 23:59:43, 1, 4000000, 1, 2016-07-24 22:00:00.629, foo, 2016-07-24 22:00:00.629, foo, 0}
2016-07-24 22:00:00,631 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{59, 4, 18, 2007/05/01 02:03:00.358, 1, 380, 1, 2016-07-24 22:00:00.631, foo, 2016-07-24 22:00:00.631, foo, 0}
2016-07-24 22:00:00,632 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{60, 4, 20, 2006/12/12 23:59:44, 2, 680, 0, 2016-07-24 22:00:00.632, foo, 2016-07-24 22:00:00.632, foo, 0}
2016-07-24 22:00:00,633 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{61, 1, 16, 2008-03-03 06:34:56.000, 3, 12000000, 1, 2016-07-24 22:00:00.633, foo, 2016-07-24 22:00:00.633, foo, 0}
2016-07-24 22:00:00,634 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{62, 1, 2, 2009-06-04 06:34:56.000, 12, 20000, 1, 2016-07-24 22:00:00.634, foo, 2016-07-24 22:00:00.634, foo, 0}
2016-07-24 22:00:00,635 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{63, 1, 6, 2010-09-26 06:34:56.000, 2, 2000, 1, 2016-07-24 22:00:00.635, foo, 2016-07-24 22:00:00.635, foo, 0}
2016-07-24 22:00:00,636 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{64, 1, 8, 2011-03-03 09:45:29.000, 1, 50, 1, 2016-07-24 22:00:00.636, foo, 2016-07-24 22:00:00.636, foo, 0}
2016-07-24 22:00:00,637 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{65, 1, 13, 2012-06-04 09:45:29.000, 1, 1000000, 1, 2016-07-24 22:00:00.637, foo, 2016-07-24 22:00:00.637, foo, 0}
2016-07-24 22:00:00,638 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{66, 1, 13, 2013-09-26 09:45:29.000, 1, 900000, 1, 2016-07-24 22:00:00.638, foo, 2016-07-24 22:00:00.638, foo, 0}
2016-07-24 22:00:00,639 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{67, 1, 5, 2014-03-03 21:02:12.000, 2, 3000, 1, 2016-07-24 22:00:00.639, foo, 2016-07-24 22:00:00.639, foo, 0}
2016-07-24 22:00:00,640 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{68, 1, 17, 2015-06-04 21:02:12.000, 30, 3000, 1, 2016-07-24 22:00:00.64, foo, 2016-07-24 22:00:00.64, foo, 0}
2016-07-24 22:00:00,641 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{69, 1, 17, 2016-09-26 21:02:12.000, 1, 1000, 1, 2016-07-24 22:00:00.641, foo, 2016-07-24 22:00:00.641, foo, 0}
2016-07-24 22:00:00,642 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{70, 1, 17, 2017-03-03 01:11:00.000, 1, 1200, 1, 2016-07-24 22:00:00.642, foo, 2016-07-24 22:00:00.642, foo, 0}
2016-07-24 22:00:00,711 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 70 rows are loaded to PURCHASE
2016-07-24 22:00:00,712 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{1, 1, 1800, 2006/12/25 23:59:59, BAK, 2016-07-24 22:00:00.712, foo, 2016-07-24 22:00:00.712, foo}
2016-07-24 22:00:00,714 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{2, 2, 1700, 2007/11/13 16:16:16, BAK, 2016-07-24 22:00:00.714, foo, 2016-07-24 22:00:00.714, foo}
2016-07-24 22:00:00,715 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{3, 3, 900, 2006/12/23 23:56:29, CRC, 2016-07-24 22:00:00.715, foo, 2016-07-24 22:00:00.715, foo}
2016-07-24 22:00:00,716 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{4, 3, 900, 2006/12/23 23:56:30, HAN, 2016-07-24 22:00:00.716, foo, 2016-07-24 22:00:00.716, foo}
2016-07-24 22:00:00,717 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{5, 4, 1700, 2007/12/01 02:13:00, HAN, 2016-07-24 22:00:00.717, foo, 2016-07-24 22:00:00.717, foo}
2016-07-24 22:00:00,718 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{6, 5, 800.20, 2008/04/04 23:12:59, HAN, 2016-07-24 22:00:00.718, foo, 2016-07-24 22:00:00.718, foo}
2016-07-24 22:00:00,719 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{7, 5, 1000.90, 2008/05/04 23:12:59, CRC, 2016-07-24 22:00:00.719, foo, 2016-07-24 22:00:00.719, foo}
2016-07-24 22:00:00,720 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{8, 6, 1000, 2002/01/01 16:32:01, CRC, 2016-07-24 22:00:00.72, foo, 2016-07-24 22:00:00.72, foo}
2016-07-24 22:00:00,721 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{9, 6, 400.8, 2002/01/01 16:32:01, CRC, 2016-07-24 22:00:00.721, foo, 2016-07-24 22:00:00.721, foo}
2016-07-24 22:00:00,721 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{10, 6, 599.2, 2002/01/01 16:32:01, HAN, 2016-07-24 22:00:00.721, foo, 2016-07-24 22:00:00.721, foo}
2016-07-24 22:00:00,722 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{11, 7, 300, 2006/01/28 23:59:59, CRC, 2016-07-24 22:00:00.722, foo, 2016-07-24 22:00:00.722, foo}
2016-07-24 22:00:00,723 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{12, 8, 535.5, 2007/11/09 16:23:00, BAK, 2016-07-24 22:00:00.723, foo, 2016-07-24 22:00:00.723, foo}
2016-07-24 22:00:00,724 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{13, 8, 999.5, 2014/11/09 16:23:05, BAK, 2016-07-24 22:00:00.724, foo, 2016-07-24 22:00:00.724, foo}
2016-07-24 22:00:00,725 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{14, 9, 1700, 2006/12/22 23:59:59, BAK, 2016-07-24 22:00:00.725, foo, 2016-07-24 22:00:00.725, foo}
2016-07-24 22:00:00,726 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{15, 11, 1799.2, 2014/11/09 16:23:01, CRC, 2016-07-24 22:00:00.726, foo, 2016-07-24 22:00:00.726, foo}
2016-07-24 22:00:00,728 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{16, 11, 0.8, 2014/11/09 16:23:01, HAN, 2016-07-24 22:00:00.728, foo, 2016-07-24 22:00:00.728, foo}
2016-07-24 22:00:00,729 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{17, 12, 1690, 2011/12/22 23:59:12, HAN, 2016-07-24 22:00:00.729, foo, 2016-07-24 22:00:00.729, foo}
2016-07-24 22:00:00,730 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{18, 12, 10, 2011/12/22 23:59:12, CRC, 2016-07-24 22:00:00.73, foo, 2016-07-24 22:00:00.73, foo}
2016-07-24 22:00:00,732 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{19, 13, 1800.7, 2007/11/01 02:13:00, CRC, 2016-07-24 22:00:00.731, foo, 2016-07-24 22:00:00.731, foo}
2016-07-24 22:00:00,733 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{20, 14, 1700, 2008/11/09 16:23:02, BAK, 2016-07-24 22:00:00.733, foo, 2016-07-24 22:00:00.733, foo}
2016-07-24 22:00:00,735 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{21, 15, 300, 2006/12/22 23:59:32, HAN, 2016-07-24 22:00:00.735, foo, 2016-07-24 22:00:00.735, foo}
2016-07-24 22:00:00,737 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{22, 15, 600, 2007/12/22 23:59:32, BAK, 2016-07-24 22:00:00.736, foo, 2016-07-24 22:00:00.736, foo}
2016-07-24 22:00:00,738 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{23, 15, 900, 2008/12/22 23:59:32, HAN, 2016-07-24 22:00:00.738, foo, 2016-07-24 22:00:00.738, foo}
2016-07-24 22:00:00,739 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{24, 16, 2000, 2012/11/01 02:13:00, BAK, 2016-07-24 22:00:00.739, foo, 2016-07-24 22:00:00.739, foo}
2016-07-24 22:00:00,740 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{25, 18, 1535, 2013/11/01 02:13:00, HAN, 2016-07-24 22:00:00.74, foo, 2016-07-24 22:00:00.74, foo}
2016-07-24 22:00:00,741 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{26, 19, 1700, 2007/11/01 02:13:00, HAN, 2016-07-24 22:00:00.741, foo, 2016-07-24 22:00:00.741, foo}
2016-07-24 22:00:00,742 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{27, 20, 5, 2006/12/22 23:59:35, HAN, 2016-07-24 22:00:00.742, foo, 2016-07-24 22:00:00.742, foo}
2016-07-24 22:00:00,743 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{28, 21, 399999, 2006/12/22 23:59:35, BAK, 2016-07-24 22:00:00.743, foo, 2016-07-24 22:00:00.743, foo}
2016-07-24 22:00:00,745 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{29, 22, 1800, 2007/11/01 02:13:00, BAK, 2016-07-24 22:00:00.745, foo, 2016-07-24 22:00:00.745, foo}
2016-07-24 22:00:00,747 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{30, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-24 22:00:00.747, foo, 2016-07-24 22:00:00.747, foo}
2016-07-24 22:00:00,748 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{31, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-24 22:00:00.748, foo, 2016-07-24 22:00:00.748, foo}
2016-07-24 22:00:00,749 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{32, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-24 22:00:00.749, foo, 2016-07-24 22:00:00.749, foo}
2016-07-24 22:00:00,751 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{33, 24, 1000, 2012/09/11 12:13:00, BAK, 2016-07-24 22:00:00.75, foo, 2016-07-24 22:00:00.75, foo}
2016-07-24 22:00:00,751 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{34, 24, 800, 2015/09/11 12:13:00, BAK, 2016-07-24 22:00:00.751, foo, 2016-07-24 22:00:00.751, foo}
2016-07-24 22:00:00,755 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{35, 25, 1700, 2013/12/22 23:59:37, BAK, 2016-07-24 22:00:00.755, foo, 2016-07-24 22:00:00.755, foo}
2016-07-24 22:00:00,756 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{36, 26, 1800, 2005/12/21 12:13:00, BAK, 2016-07-24 22:00:00.756, foo, 2016-07-24 22:00:00.756, foo}
2016-07-24 22:00:00,757 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{37, 27, 2000, 2006/12/22 23:59:38, HAN, 2016-07-24 22:00:00.757, foo, 2016-07-24 22:00:00.757, foo}
2016-07-24 22:00:00,758 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{38, 28, 600, 2007/11/01 02:13:00, BAK, 2016-07-24 22:00:00.758, foo, 2016-07-24 22:00:00.758, foo}
2016-07-24 22:00:00,760 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{39, 29, 1535, 2006/12/22 23:59:39, BAK, 2016-07-24 22:00:00.76, foo, 2016-07-24 22:00:00.76, foo}
2016-07-24 22:00:00,763 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{40, 30, 100, 2010/09/01 02:13:00, HAN, 2016-07-24 22:00:00.763, foo, 2016-07-24 22:00:00.763, foo}
2016-07-24 22:00:00,766 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{41, 30, 200, 2011/10/31 02:13:00, CRC, 2016-07-24 22:00:00.766, foo, 2016-07-24 22:00:00.766, foo}
2016-07-24 22:00:00,767 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{42, 30, 300.75, 2012/11/01 02:13:00, CRC, 2016-07-24 22:00:00.767, foo, 2016-07-24 22:00:00.767, foo}
2016-07-24 22:00:00,768 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{43, 30, 400.25, 2013/12/01 02:13:00, HAN, 2016-07-24 22:00:00.768, foo, 2016-07-24 22:00:00.768, foo}
2016-07-24 22:00:00,769 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{44, 30, 300, 2014/09/01 02:13:00, HAN, 2016-07-24 22:00:00.769, foo, 2016-07-24 22:00:00.769, foo}
2016-07-24 22:00:00,770 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{45, 30, 700, 2014/10/01 02:13:00, HAN, 2016-07-24 22:00:00.77, foo, 2016-07-24 22:00:00.77, foo}
2016-07-24 22:00:00,772 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{46, 31, 1700.85, 2006/12/22 23:59:40, HAN, 2016-07-24 22:00:00.772, foo, 2016-07-24 22:00:00.772, foo}
2016-07-24 22:00:00,773 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{47, 32, 1800, 2009/12/28 12:13:10, HAN, 2016-07-24 22:00:00.773, foo, 2016-07-24 22:00:00.773, foo}
2016-07-24 22:00:00,774 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{48, 33, 1700, 2006/12/22 23:59:41, CRC, 2016-07-24 22:00:00.774, foo, 2016-07-24 22:00:00.774, foo}
2016-07-24 22:00:00,775 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{49, 34, 1800, 2007/05/21 12:13:00, BAK, 2016-07-24 22:00:00.775, foo, 2016-07-24 22:00:00.775, foo}
2016-07-24 22:00:00,777 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{50, 35, 2000, 2006/12/12 23:59:42, CRC, 2016-07-24 22:00:00.777, foo, 2016-07-24 22:00:00.777, foo}
2016-07-24 22:00:00,778 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{51, 36, 300.1, 2012/05/01 02:13:00, CRC, 2016-07-24 22:00:00.777, foo, 2016-07-24 22:00:00.777, foo}
2016-07-24 22:00:00,778 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{52, 36, 300.8, 2013/05/01 02:13:00, HAN, 2016-07-24 22:00:00.778, foo, 2016-07-24 22:00:00.778, foo}
2016-07-24 22:00:00,780 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{53, 36, 300.25, 2014/05/01 02:13:00, HAN, 2016-07-24 22:00:00.78, foo, 2016-07-24 22:00:00.78, foo}
2016-07-24 22:00:00,781 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{54, 37, 1535, 2006/12/12 23:59:43, HAN, 2016-07-24 22:00:00.781, foo, 2016-07-24 22:00:00.781, foo}
2016-07-24 22:00:00,782 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{55, 38, 1700, 2007/05/01 02:03:00, HAN, 2016-07-24 22:00:00.782, foo, 2016-07-24 22:00:00.782, foo}
2016-07-24 22:00:00,783 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{56, 40, 128, 2007/05/01 12:13:00, BAK, 2016-07-24 22:00:00.782, foo, 2016-07-24 22:00:00.782, foo}
2016-07-24 22:00:00,785 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{57, 40, 256, 2013/05/01 12:13:00, BAK, 2016-07-24 22:00:00.785, foo, 2016-07-24 22:00:00.785, foo}
2016-07-24 22:00:00,786 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{58, 40, 512, 2009/05/01 12:13:00, CRC, 2016-07-24 22:00:00.786, foo, 2016-07-24 22:00:00.786, foo}
2016-07-24 22:00:00,786 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{59, 41, 1700, 2007/11/01 02:13:00, HAN, 2016-07-24 22:00:00.786, foo, 2016-07-24 22:00:00.786, foo}
2016-07-24 22:00:00,789 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{60, 42, 30000000, 2014/03/22 21:59:40, HAN, 2016-07-24 22:00:00.789, foo, 2016-07-24 22:00:00.789, foo}
2016-07-24 22:00:00,790 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{61, 43, 1800, 2006/12/28 12:13:10, BAK, 2016-07-24 22:00:00.79, foo, 2016-07-24 22:00:00.79, foo}
2016-07-24 22:00:00,791 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{62, 44, 1700, 2006/12/22 23:59:41, BAK, 2016-07-24 22:00:00.791, foo, 2016-07-24 22:00:00.791, foo}
2016-07-24 22:00:00,793 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{63, 45, 1800, 2007/05/21 12:13:00, CRC, 2016-07-24 22:00:00.793, foo, 2016-07-24 22:00:00.793, foo}
2016-07-24 22:00:00,794 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{64, 46, 2000, 2010/12/12 23:59:42, BAK, 2016-07-24 22:00:00.794, foo, 2016-07-24 22:00:00.794, foo}
2016-07-24 22:00:00,795 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{65, 48, 90000, 2006/12/12 23:59:43, HAN, 2016-07-24 22:00:00.795, foo, 2016-07-24 22:00:00.795, foo}
2016-07-24 22:00:00,797 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{66, 48, 10000, 2006/12/12 23:59:43, BAK, 2016-07-24 22:00:00.797, foo, 2016-07-24 22:00:00.797, foo}
2016-07-24 22:00:00,799 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{67, 49, 1700.66, 2007/05/01 02:03:00, HAN, 2016-07-24 22:00:00.799, foo, 2016-07-24 22:00:00.799, foo}
2016-07-24 22:00:00,800 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{68, 51, 1700, 2007/11/21 02:13:00, BAK, 2016-07-24 22:00:00.8, foo, 2016-07-24 22:00:00.8, foo}
2016-07-24 22:00:00,801 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{69, 52, 100, 2006/12/23 23:59:40, BAK, 2016-07-24 22:00:00.801, foo, 2016-07-24 22:00:00.801, foo}
2016-07-24 22:00:00,802 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{70, 52, 40, 2007/12/23 23:59:40, HAN, 2016-07-24 22:00:00.802, foo, 2016-07-24 22:00:00.802, foo}
2016-07-24 22:00:00,803 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{71, 52, 40, 2008/12/23 23:59:40, HAN, 2016-07-24 22:00:00.803, foo, 2016-07-24 22:00:00.803, foo}
2016-07-24 22:00:00,804 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{72, 52, 40, 2009/12/23 23:59:40, HAN, 2016-07-24 22:00:00.804, foo, 2016-07-24 22:00:00.804, foo}
2016-07-24 22:00:00,805 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{73, 52, 40, 2010/12/23 23:59:40, BAK, 2016-07-24 22:00:00.805, foo, 2016-07-24 22:00:00.805, foo}
2016-07-24 22:00:00,806 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{74, 52, 40, 2011/12/23 23:59:40, CRC, 2016-07-24 22:00:00.806, foo, 2016-07-24 22:00:00.806, foo}
2016-07-24 22:00:00,807 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{75, 52, 40, 2012/12/23 23:59:40, BAK, 2016-07-24 22:00:00.807, foo, 2016-07-24 22:00:00.807, foo}
2016-07-24 22:00:00,808 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{76, 52, 40, 2013/12/23 23:59:40, HAN, 2016-07-24 22:00:00.808, foo, 2016-07-24 22:00:00.808, foo}
2016-07-24 22:00:00,809 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{77, 52, 40, 2014/12/23 23:59:40, HAN, 2016-07-24 22:00:00.809, foo, 2016-07-24 22:00:00.809, foo}
2016-07-24 22:00:00,810 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{78, 52, 40, 2015/12/23 23:59:40, HAN, 2016-07-24 22:00:00.81, foo, 2016-07-24 22:00:00.81, foo}
2016-07-24 22:00:00,811 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{79, 53, 600000, 2007/12/28 12:13:10, BAK, 2016-07-24 22:00:00.811, foo, 2016-07-24 22:00:00.811, foo}
2016-07-24 22:00:00,812 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{80, 54, 1700.42, 2008/02/22 23:59:41, CRC, 2016-07-24 22:00:00.812, foo, 2016-07-24 22:00:00.812, foo}
2016-07-24 22:00:00,813 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{81, 55, 1600, 2012/07/21 12:13:00, HAN, 2016-07-24 22:00:00.813, foo, 2016-07-24 22:00:00.813, foo}
2016-07-24 22:00:00,815 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{82, 55, 200, 2008/07/21 12:13:00, CRC, 2016-07-24 22:00:00.815, foo, 2016-07-24 22:00:00.815, foo}
2016-07-24 22:00:00,820 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{83, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-24 22:00:00.82, foo, 2016-07-24 22:00:00.82, foo}
2016-07-24 22:00:00,822 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{84, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-24 22:00:00.822, foo, 2016-07-24 22:00:00.822, foo}
2016-07-24 22:00:00,823 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{85, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-24 22:00:00.823, foo, 2016-07-24 22:00:00.823, foo}
2016-07-24 22:00:00,825 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{86, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-24 22:00:00.825, foo, 2016-07-24 22:00:00.825, foo}
2016-07-24 22:00:00,827 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{87, 57, 999, 2014/02/01 02:13:00, HAN, 2016-07-24 22:00:00.827, foo, 2016-07-24 22:00:00.827, foo}
2016-07-24 22:00:00,829 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{88, 58, 4000000, 2006/12/12 23:59:43, HAN, 2016-07-24 22:00:00.829, foo, 2016-07-24 22:00:00.829, foo}
2016-07-24 22:00:00,831 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{89, 59, 380.77, 2013/05/01 02:03:00, CRC, 2016-07-24 22:00:00.831, foo, 2016-07-24 22:00:00.831, foo}
2016-07-24 22:00:00,834 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{90, 60, 675.88, 2006/12/12 23:59:44, BAK, 2016-07-24 22:00:00.834, foo, 2016-07-24 22:00:00.834, foo}
2016-07-24 22:00:00,836 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{91, 61, 12000000, 2008/03/03 06:34:56, HAN, 2016-07-24 22:00:00.836, foo, 2016-07-24 22:00:00.836, foo}
2016-07-24 22:00:00,837 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{92, 62, 20000, 2009/06/04 06:34:56, HAN, 2016-07-24 22:00:00.837, foo, 2016-07-24 22:00:00.837, foo}
2016-07-24 22:00:00,837 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{93, 63, 2000, 2010/09/26 06:34:56, HAN, 2016-07-24 22:00:00.837, foo, 2016-07-24 22:00:00.837, foo}
2016-07-24 22:00:00,843 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{94, 64, 50, 2011/03/03 09:45:29, BAK, 2016-07-24 22:00:00.843, foo, 2016-07-24 22:00:00.843, foo}
2016-07-24 22:00:00,844 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{95, 65, 1000000, 2012/06/04 09:45:29, BAK, 2016-07-24 22:00:00.844, foo, 2016-07-24 22:00:00.844, foo}
2016-07-24 22:00:00,845 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{96, 66, 900000, 2013/09/26 09:45:29, BAK, 2016-07-24 22:00:00.845, foo, 2016-07-24 22:00:00.845, foo}
2016-07-24 22:00:00,846 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{97, 67, 3000, 2014/03/03 21:02:12, CRC, 2016-07-24 22:00:00.846, foo, 2016-07-24 22:00:00.846, foo}
2016-07-24 22:00:00,847 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{98, 68, 3000, 2015/06/04 21:02:12, CRC, 2016-07-24 22:00:00.847, foo, 2016-07-24 22:00:00.847, foo}
2016-07-24 22:00:00,848 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{99, 69, 1000, 2016/09/26 21:02:12, CRC, 2016-07-24 22:00:00.848, foo, 2016-07-24 22:00:00.848, foo}
2016-07-24 22:00:00,849 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{100, 70, 1200, 2017/03/03 01:11:00, HAN, 2016-07-24 22:00:00.849, foo, 2016-07-24 22:00:00.849, foo}
2016-07-24 22:00:00,927 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 100 rows are loaded to PURCHASE_PAYMENT
2016-07-24 22:00:00,928 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():378) - ...Checking implicit set of classification
2016-07-24 22:00:00,943 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-24 22:00:00,952 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-24 22:00:00,975 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-24 22:00:00,978 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-24 22:00:00,981 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-24 22:00:00,984 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-24 22:00:00,988 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-24 22:00:01,000 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-07-24 22:00:01,020 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-07-24 22:00:01,022 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct MOBILE_LOGIN_FLG from MEMBER_LOGIN where MOBILE_LOGIN_FLG not in (1, 0)
2016-07-24 22:00:01,023 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_COMPLETE_FLG from PURCHASE where PAYMENT_COMPLETE_FLG not in (1, 0)
2016-07-24 22:00:01,024 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_METHOD_CODE from PURCHASE_PAYMENT where PAYMENT_METHOD_CODE not in ('HAN', 'BAK', 'CRC')
2016-07-24 22:00:01,029 [main] INFO  (DfTakeFinallyProcess#takeFinally():219) - 
2016-07-24 22:00:01,030 [main] INFO  (DfTakeFinallyProcess#takeFinally():220) - * * * * * * * **
2016-07-24 22:00:01,030 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - *              *
2016-07-24 22:00:01,031 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * Take Finally *
2016-07-24 22:00:01,031 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2016-07-24 22:00:01,031 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * * * * * * * **
2016-07-24 22:00:01,038 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: take-finally.sql
2016-07-24 22:00:01,039 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Member addresses should be only one at any time.
-- - - - - - - - - - -/
select adr.MEMBER_ADDRESS_ID, adr.MEMBER_ID
     , adr.VALID_BEGIN_DATE, adr.VALID_END_DATE
     , adr.ADDRESS
  from MEMBER_ADDRESS adr
 where exists (select subadr.MEMBER_ADDRESS_ID
                 from MEMBER_ADDRESS subadr
                where subadr.MEMBER_ID = adr.MEMBER_ID
                  and subadr.VALID_BEGIN_DATE > adr.VALID_BEGIN_DATE
                  -- 有効期間が一日だけ重複しているパターンも検出
                  and subadr.VALID_BEGIN_DATE <= adr.VALID_END_DATE
       )
2016-07-24 22:00:01,042 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 正式会員日時を持ってる仮会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'PRV'
   and mem.FORMALIZED_DATETIME is not NULL
2016-07-24 22:00:01,044 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- まだ生まれていない会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.BIRTHDATE > now()
2016-07-24 22:00:01,045 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 退会会員が退会情報を持っていることをアサート
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'WDL'
   and not exists (select wdl.MEMBER_ID
                     from MEMBER_WITHDRAWAL wdl
                    where wdl.MEMBER_ID = mem.MEMBER_ID
       )
2016-07-24 22:00:01,046 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=4 failure=0
2016-07-24 22:00:01,046 [main] INFO  (DfSqlFileFireMan#fire():89) - {Take Finally}: success=4 failure=0 (in 1 files)
2016-07-24 22:00:01,047 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-24 22:00:01,051 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m05s939ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = root
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=49 failure=0 (in 3 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql
  o replace-schema-50-procedure.sql

 {Load Data}: loaded-files=3
  (common)
  o 10-master.xls
  (ut)
  o 20-member.xls
  o 30-product.xls

 {Take Finally}: success=4 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2016-07-24 22:30:00,986 [main] INFO  (DfReplaceSchemaTask#begin():91) - +------------------------------------------+
2016-07-24 22:30:00,990 [main] INFO  (DfReplaceSchemaTask#begin():92) - |                                          |
2016-07-24 22:30:00,991 [main] INFO  (DfReplaceSchemaTask#begin():93) - |              ReplaceSchema               |
2016-07-24 22:30:00,996 [main] INFO  (DfReplaceSchemaTask#begin():101) - |                                          |
2016-07-24 22:30:00,997 [main] INFO  (DfReplaceSchemaTask#begin():102) - +------------------------------------------+
2016-07-24 22:30:00,998 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():342) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2016-07-24 22:30:01,935 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-24 22:30:01,935 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-24 22:30:01,936 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/maihamadb
2016-07-24 22:30:01,936 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2016-07-24 22:30:01,945 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-24 22:30:02,330 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-24 22:30:02,331 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-24 22:30:02,344 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2016-07-24 22:30:02,345 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2016-07-24 22:30:02,345 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2016-07-24 22:30:02,347 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2016-07-24 22:30:02,348 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2016-07-24 22:30:02,348 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2016-07-24 22:30:02,364 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-24 22:30:02,364 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-24 22:30:02,365 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-24 22:30:02,408 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_ADDRESS
2016-07-24 22:30:02,412 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_FOLLOWING
2016-07-24 22:30:02,417 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_LOGIN
2016-07-24 22:30:02,421 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_SECURITY
2016-07-24 22:30:02,425 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_SERVICE
2016-07-24 22:30:02,433 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_WITHDRAWAL
2016-07-24 22:30:02,445 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table PURCHASE_PAYMENT
2016-07-24 22:30:02,464 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER drop foreign key FK_MEMBER_MEMBER_STATUS
2016-07-24 22:30:02,480 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_ADDRESS drop foreign key FK_MEMBER_ADDRESS_MEMBER
2016-07-24 22:30:02,497 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_ADDRESS drop foreign key FK_MEMBER_ADDRESS_REGION
2016-07-24 22:30:02,531 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_FOLLOWING drop foreign key FK_MEMBER_FOLLOWING_MY_MEMBER
2016-07-24 22:30:02,551 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_FOLLOWING drop foreign key FK_MEMBER_FOLLOWING_YOUR_MEMBER
2016-07-24 22:30:02,567 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_LOGIN drop foreign key FK_MEMBER_LOGIN_MEMBER_STATUS
2016-07-24 22:30:02,586 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_LOGIN drop foreign key FK_MEMBER_LOGIN_MEMBER
2016-07-24 22:30:02,609 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_SECURITY drop foreign key FK_MEMBER_SECURITY_MEMBER
2016-07-24 22:30:02,630 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_SERVICE drop foreign key FK_MEMBER_SERVICE_MEMBER
2016-07-24 22:30:02,647 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_SERVICE drop foreign key FK_MEMBER_SERVICE_SERVICE_RANK_CODE
2016-07-24 22:30:02,669 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_WITHDRAWAL drop foreign key FK_MEMBER_WITHDRAWAL_MEMBER
2016-07-24 22:30:02,685 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_WITHDRAWAL drop foreign key FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON
2016-07-24 22:30:02,710 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PRODUCT drop foreign key FK_PRODUCT_PRODUCT_CATEGORY
2016-07-24 22:30:02,727 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PRODUCT drop foreign key FK_PRODUCT_PRODUCT_STATUS
2016-07-24 22:30:02,748 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PRODUCT_CATEGORY drop foreign key FK_PRODUCT_CATEGORY_PARENT
2016-07-24 22:30:02,768 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PURCHASE drop foreign key FK_PURCHASE_MEMBER
2016-07-24 22:30:02,785 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PURCHASE drop foreign key FK_PURCHASE_PRODUCT
2016-07-24 22:30:02,799 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PURCHASE_PAYMENT drop foreign key FK_PURCHASE_PAYMENT_PURCHASE
2016-07-24 22:30:02,821 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER
2016-07-24 22:30:02,824 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_ADDRESS
2016-07-24 22:30:02,829 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_FOLLOWING
2016-07-24 22:30:02,833 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_LOGIN
2016-07-24 22:30:02,837 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_SECURITY
2016-07-24 22:30:02,840 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_SERVICE
2016-07-24 22:30:02,844 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_STATUS
2016-07-24 22:30:02,847 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_WITHDRAWAL
2016-07-24 22:30:02,850 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PRODUCT
2016-07-24 22:30:02,854 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PRODUCT_CATEGORY
2016-07-24 22:30:02,857 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PRODUCT_STATUS
2016-07-24 22:30:02,862 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PURCHASE
2016-07-24 22:30:02,866 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PURCHASE_PAYMENT
2016-07-24 22:30:02,869 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table REGION
2016-07-24 22:30:02,872 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table SERVICE_RANK
2016-07-24 22:30:02,875 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table WITHDRAWAL_REASON
2016-07-24 22:30:02,930 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop procedure SP_IN_OUT_PARAMETER
2016-07-24 22:30:02,934 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop procedure SP_RETURN_RESULT_SET
2016-07-24 22:30:02,936 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2016-07-24 22:30:02,937 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2016-07-24 22:30:02,937 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2016-07-24 22:30:02,937 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2016-07-24 22:30:02,938 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2016-07-24 22:30:02,938 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2016-07-24 22:30:02,942 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-00-system.sql
2016-07-24 22:30:02,947 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2016-07-24 22:30:02,948 [main] INFO  (DfCreateSchemaProcess$1#dispatch():295) - ...Creating a connection to system
2016-07-24 22:30:02,949 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():520) - ...Creating a connection for additional user: root
2016-07-24 22:30:02,963 [main] INFO  (DfCreateSchemaProcess$1#dispatch():321) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2016-07-24 22:30:02,964 [main] INFO  (DfCreateSchemaProcess$1#dispatch():323) -  -> Can't create database 'maihamadb'; database exists
2016-07-24 22:30:02,965 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():433) - ...Reviving the user 'system' until the end of this SQL file
2016-07-24 22:30:02,966 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on maihamadb.*
  to root@localhost identified by ''
2016-07-24 22:30:02,969 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2016-07-24 22:30:02,972 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-07-24 22:30:02,973 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-10-basic.sql
2016-07-24 22:30:02,973 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():370) - ...Saying good-bye to the user 'system' again
2016-07-24 22:30:02,974 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():374) - ...Clearing revived users
2016-07-24 22:30:02,974 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():381) - ...Coming back to the main user from the user 'system'
2016-07-24 22:30:02,981 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER(
    MEMBER_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員ID: 会員を識別するID。連番として基本的に自動採番される。
（会員IDだけに限らず）採番方法はDBMSによって変わる。',
    MEMBER_NAME VARCHAR(160) NOT NULL COMMENT '会員名称: 会員のフルネームの名称。',
    MEMBER_ACCOUNT VARCHAR(50) NOT NULL COMMENT '会員アカウント: 会員がログイン時に利用するアカウントNO。',
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード',
    FORMALIZED_DATETIME DATETIME COMMENT '正式会員日時: 会員が正式に確定した日時。一度確定したら更新されない。
仮会員のときはnull。',
    BIRTHDATE DATE COMMENT '生年月日: 必須項目ではないので、このデータがない会員もいる。',
    REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時: レコードが登録された日時。共通カラムの一つ。',
    REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ: レコードを登録したユーザ。共通カラムの一つ。',
    UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時: レコードが（最後に）更新された日時。共通カラムの一つ。',
    UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ: レコードを更新したユーザ。',
    VERSION_NO BIGINT NOT NULL COMMENT 'バージョンNO: レコードのバージョンを示すNO。
更新回数と等しく、主に排他制御のために利用される。',
    PRIMARY KEY (MEMBER_ID),
    UNIQUE (MEMBER_ACCOUNT)
) COMMENT='会員: 会員登録時にデータが登録される。
基本的に物理削除はなく、退会したらステータスが退会会員になる。'
2016-07-24 22:30:03,006 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_ADDRESS(
    MEMBER_ADDRESS_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員住所ID: 会員住所を識別するID。
履歴分も含むテーブルなので、これ自体はFKではない。',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
履歴分を含むため、これだけではユニークにはならない。',
    VALID_BEGIN_DATE DATE NOT NULL COMMENT '有効開始日: 一つの有効期間の開始を示す日付。
前の有効終了日の次の日の値が格納される。',
    VALID_END_DATE DATE NOT NULL COMMENT '有効終了日: 有効期間の終了日。
次の有効開始日の一日前の値が格納される。
ただし、次の有効期間がない場合は 9999/12/31 となる。',
    ADDRESS VARCHAR(200) NOT NULL COMMENT '住所: まるごと住所',
    REGION_ID INTEGER NOT NULL COMMENT '地域ID: 地域を参照するID。
ここでは特に住所の内容と連動しているわけではない。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ADDRESS_ID),
    UNIQUE (MEMBER_ID, VALID_BEGIN_DATE)
) COMMENT='会員住所情報: 会員の住所に関する情報。
同時に有効期間ごとに履歴管理されている。'
2016-07-24 22:30:03,019 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_LOGIN(
    MEMBER_LOGIN_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員ログインID',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID',
    LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時: ログインした瞬間の日時。',
    MOBILE_LOGIN_FLG INTEGER NOT NULL COMMENT 'モバイルログインフラグ: モバイル機器からのログインか否か。',
    LOGIN_MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT 'ログイン会員ステータスコード: ログイン時の会員ステータス',
    PRIMARY KEY (MEMBER_LOGIN_ID),
    UNIQUE (MEMBER_ID, LOGIN_DATETIME)
) COMMENT='会員ログイン情報: ログインするたびに登録されるログイン履歴。'
2016-07-24 22:30:03,028 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SECURITY(
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: そのまま one-to-one を構成するためのFKとなる。',
    LOGIN_PASSWORD VARCHAR(50) NOT NULL COMMENT 'ログインパスワード: ログイン時に利用するパスワード。
本当は良くないが、Exampleなのでひとまず暗号化していない。',
    REMINDER_QUESTION VARCHAR(50) NOT NULL COMMENT 'リマインダ質問: パスワードを忘れた際のリマインダ機能における質問の内容。',
    REMINDER_ANSWER VARCHAR(50) NOT NULL COMMENT 'リマインダ回答: パスワードを忘れた際のリマインダ機能における質問の答え。',
    REMINDER_USE_COUNT INTEGER NOT NULL COMMENT 'リマインダ回数: 忘れっぽい人を分析するためのもの。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある'
2016-07-24 22:30:03,040 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SERVICE(
	MEMBER_SERVICE_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員サービスID: 代理キー。律儀にIDの役割を分ける',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。ユニークなので、会員とは one-to-one の関係に。',
    SERVICE_POINT_COUNT INTEGER NOT NULL COMMENT 'サービスポイント数: 会員が現在利用できるサービスポイントの数。
基本的に、購入時には増えてポイントを使ったら減る。',
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを参照するコード。
どんなランクがあるのかドキドキですね。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_SERVICE_ID),
    UNIQUE (MEMBER_ID)
) COMMENT='会員サービス: 会員のサービス情報（ポイントサービスなど）。'
2016-07-24 22:30:03,050 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_WITHDRAWAL(
    MEMBER_ID INTEGER NOT NULL,
    WITHDRAWAL_REASON_CODE CHAR(3) COMMENT '退会理由コード: 退会した定型理由を参照するコード。
何も言わずに退会する会員もいるので必須項目ではない。',
    WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト: 会員がフリーテキストで入力できる退会理由。
もう言いたいこと言ってもらう感じ。',
    WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT '退会日時: 退会した瞬間の日時。
正式会員日時と違い、こっちはone-to-oneの別テーブルで。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員退会情報: 退会会員の退会に関する詳細な情報。
退会会員のみデータが存在する。'
2016-07-24 22:30:03,063 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE(
    PURCHASE_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入ID: 連番',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
購入を識別する自然キー（複合ユニーク制約）の筆頭要素。',
    PRODUCT_ID INTEGER NOT NULL COMMENT '商品ID: 商品を参照するID。',
    PURCHASE_DATETIME DATETIME NOT NULL COMMENT '購入日時: 購入した瞬間の日時。',
    PURCHASE_COUNT INTEGER NOT NULL COMMENT '購入数量: 購入した商品の（一回の購入における）数量。',
    PURCHASE_PRICE INTEGER NOT NULL COMMENT '購入価格: 購入によって実際に会員が支払った（支払う予定の）価格。
基本は商品の定価に購入数量を掛けたものになるが、
ポイント利用や割引があったりと必ずしもそうはならない。',
    PAYMENT_COMPLETE_FLG INTEGER NOT NULL COMMENT '支払完了フラグ: この購入に関しての支払いが完了しているか否か。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PURCHASE_ID),
    UNIQUE (MEMBER_ID, PRODUCT_ID, PURCHASE_DATETIME),
    KEY (MEMBER_ID),
    KEY (PRODUCT_ID)
) COMMENT='購入: 一つの商品に対する一回の購入を表現する。
一回の購入で一つの商品を複数個買うこともある。'
2016-07-24 22:30:03,115 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE_PAYMENT(
    PURCHASE_PAYMENT_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入支払ID: 連番',
    PURCHASE_ID BIGINT NOT NULL COMMENT '購入ID: 支払い対象の購入へのID',
    PAYMENT_AMOUNT DECIMAL(10,2) NOT NULL COMMENT '支払金額: 支払った金額。さて、小数点なのはなぜでしょう？',
    PAYMENT_DATETIME DATETIME NOT NULL COMMENT '支払日時: 支払ったときの日時',
    PAYMENT_METHOD_CODE CHAR(3) NOT NULL COMMENT '支払方法コード: 手渡しや銀行振込など',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (PURCHASE_PAYMENT_ID)
) COMMENT='購入支払: 購入に対する支払。
分割払いもできるのでmanyとなり、会員からの孫テーブルのテストができてうれしい。'
2016-07-24 22:30:03,126 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT(
    PRODUCT_ID INTEGER AUTO_INCREMENT NOT NULL,
    PRODUCT_NAME VARCHAR(50) NOT NULL COMMENT '商品名称',
    PRODUCT_HANDLE_CODE VARCHAR(100) NOT NULL COMMENT '商品ハンドルコード: 商品を識別する業務上のコード。',
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL,
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL,
    REGULAR_PRICE INTEGER NOT NULL COMMENT '定価',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PRODUCT_ID),
    UNIQUE (PRODUCT_HANDLE_CODE)
) COMMENT='商品'
2016-07-24 22:30:03,191 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_CATEGORY(
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL COMMENT '商品カテゴリコード',
    PRODUCT_CATEGORY_NAME VARCHAR(50) NOT NULL COMMENT '商品カテゴリ名称',
    PARENT_CATEGORY_CODE CHAR(3) COMMENT '親カテゴリコード: 最上位の場合はデータなし。',
    PRIMARY KEY (PRODUCT_CATEGORY_CODE)
) COMMENT='商品カテゴリ: 商品のカテゴリを表現するマスタ。
自己参照の階層になっている。'
2016-07-24 22:30:03,203 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_STATUS(
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL COMMENT '商品ステータスコード',
    PRODUCT_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '商品ステータス名称',
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (PRODUCT_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='商品ステータス'
2016-07-24 22:30:03,213 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table REGION(
    REGION_ID INTEGER NOT NULL COMMENT '地域ID',
    REGION_NAME VARCHAR(50) NOT NULL COMMENT '地域名称',
    PRIMARY KEY (REGION_ID)
) COMMENT='地域: 主に会員の住所に対応する地域。
かなりざっくりした感じではある。'
2016-07-24 22:30:03,225 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table SERVICE_RANK(
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを識別するコード。',
    SERVICE_RANK_NAME VARCHAR(50) NOT NULL COMMENT 'サービスランク名称: サービスランクの名称。
（ゴールドとかプラチナとか基本的には威厳のある名前）',
    SERVICE_POINT_INCIDENCE NUMERIC(5, 3) NOT NULL COMMENT 'サービスポイント発生率: 購入ごとのサービスポイントの発生率。
購入価格にこの値をかけた数が発生ポイント。',
    NEW_ACCEPTABLE_FLG INTEGER NOT NULL COMMENT '新規受け入れ可能フラグ: このランクへの新規受け入れができるかどうか。',
    DESCRIPTION VARCHAR(200) NOT NULL,
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (SERVICE_RANK_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='サービスランク: 会員のサービスレベルを表現するランク。
（ゴールドとかプラチナとか）'
2016-07-24 22:30:03,271 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_STATUS(
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード: 会員ステータスを識別するコード。',
    MEMBER_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '会員ステータス名称',
    DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明: 会員ステータスそれぞれの説明。
気の利いた説明があるとディベロッパーがとても助かる。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順: UI上のステータスの表示順を示すNO。
並べるときは、このカラムに対して昇順のソート条件にする。',
    PRIMARY KEY (MEMBER_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='会員ステータス'
2016-07-24 22:30:03,283 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table WITHDRAWAL_REASON(
    WITHDRAWAL_REASON_CODE CHAR(3) NOT NULL COMMENT '退会理由コード',
    WITHDRAWAL_REASON_TEXT TEXT NOT NULL COMMENT '退会理由テキスト: 退会理由の内容。テキスト形式なので目いっぱい書けるが、
そうするとUI側できれいに見せるのが大変でしょうね。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順',
    PRIMARY KEY (WITHDRAWAL_REASON_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='退会理由: 会員に選ばせる定型的な退会理由のマスタ。'
2016-07-24 22:30:03,293 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_FOLLOWING(
    MEMBER_FOLLOWING_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員フォローイングID: 連番',
    MY_MEMBER_ID INTEGER NOT NULL COMMENT 'わたし: 気になった人がいて...勇気を振り絞った会員のID。',
    YOUR_MEMBER_ID INTEGER NOT NULL COMMENT 'あなた: いきなりのアクションに...ちょっと心揺らいだ会員のID。',
    FOLLOW_DATETIME DATETIME NOT NULL COMMENT 'その瞬間: ふりかえるとちょっと恥ずかしい気持ちになる日時',
    PRIMARY KEY (MEMBER_FOLLOWING_ID),
    UNIQUE (MY_MEMBER_ID, YOUR_MEMBER_ID)
) COMMENT='会員フォローイング: とある会員が他の会員をフォローできる。すると、フォローした会員の購入履歴が閲覧できる。'
2016-07-24 22:30:03,335 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER add constraint FK_MEMBER_MEMBER_STATUS 
    foreign key (MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-07-24 22:30:03,350 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 22:30:03,371 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_REGION 
    foreign key (REGION_ID) references REGION (REGION_ID)
2016-07-24 22:30:03,390 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER_STATUS 
    foreign key (LOGIN_MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-07-24 22:30:03,409 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 22:30:03,432 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 22:30:03,458 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_SERVICE_RANK_CODE 
    foreign key (SERVICE_RANK_CODE) references SERVICE_RANK (SERVICE_RANK_CODE)
2016-07-24 22:30:03,479 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SECURITY add constraint FK_MEMBER_SECURITY_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 22:30:03,501 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 22:30:03,524 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON 
    foreign key (WITHDRAWAL_REASON_CODE) references WITHDRAWAL_REASON (WITHDRAWAL_REASON_CODE)
2016-07-24 22:30:03,552 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 22:30:03,573 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_PRODUCT 
    foreign key (PRODUCT_ID) references PRODUCT (PRODUCT_ID)
2016-07-24 22:30:03,602 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE_PAYMENT add constraint FK_PURCHASE_PAYMENT_PURCHASE 
    foreign key (PURCHASE_ID) references PURCHASE (PURCHASE_ID)
2016-07-24 22:30:03,632 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_CATEGORY 
    foreign key (PRODUCT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-07-24 22:30:03,654 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_STATUS 
    foreign key (PRODUCT_STATUS_CODE) references PRODUCT_STATUS (PRODUCT_STATUS_CODE)
2016-07-24 22:30:03,684 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT_CATEGORY add constraint FK_PRODUCT_CATEGORY_PARENT 
    foreign key (PARENT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-07-24 22:30:03,710 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_MY_MEMBER 
    foreign key (MY_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 22:30:03,734 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_YOUR_MEMBER 
    foreign key (YOUR_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 22:30:03,760 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_UNIQUE_REVERSE on MEMBER_FOLLOWING(YOUR_MEMBER_ID, MY_MEMBER_ID)
2016-07-24 22:30:03,775 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_FOLLOW_DATETIME on MEMBER_FOLLOWING(FOLLOW_DATETIME)
2016-07-24 22:30:03,798 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_MEMBER_NAME on MEMBER(MEMBER_NAME)
2016-07-24 22:30:03,814 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FORMALIZED_DATETIME on MEMBER(FORMALIZED_DATETIME)
2016-07-24 22:30:03,835 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_LOGIN_DATETIME on MEMBER_LOGIN(LOGIN_DATETIME)
2016-07-24 22:30:03,854 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_SERVICE_POINT_COUNT on MEMBER_SERVICE(SERVICE_POINT_COUNT)
2016-07-24 22:30:03,874 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRODUCT_DATETIME on PURCHASE(PRODUCT_ID, PURCHASE_DATETIME)
2016-07-24 22:30:03,894 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_DATETIME_MEMBER on PURCHASE(PURCHASE_DATETIME, MEMBER_ID)
2016-07-24 22:30:03,918 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRICE on PURCHASE(PURCHASE_PRICE)
2016-07-24 22:30:03,935 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PAYMENT_DATETIME on PURCHASE_PAYMENT(PAYMENT_DATETIME, PAYMENT_AMOUNT)
2016-07-24 22:30:03,955 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PRODUCT_PRODUCT_NAME on PRODUCT(PRODUCT_NAME)
2016-07-24 22:30:03,974 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=45 failure=0
2016-07-24 22:30:03,975 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-50-procedure.sql
2016-07-24 22:30:03,977 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_IN_OUT_PARAMETER(
	in v_in_varchar varchar(32)
	, out v_out_varchar varchar(32)
	, inout v_inout_varchar varchar(32)
)
begin
	set v_out_varchar = v_inout_varchar;
	set v_inout_varchar = v_in_varchar;
end;

2016-07-24 22:30:03,980 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_RETURN_RESULT_SET(in birthdateFrom DATE)
begin
  select MEMBER_NAME, BIRTHDATE, MEMBER_STATUS_CODE
    from MEMBER
   where BIRTHDATE >= birthdateFrom
   order by BIRTHDATE desc, MEMBER_ID asc;
  select MEMBER_STATUS_CODE, MEMBER_STATUS_NAME
    from MEMBER_STATUS
   order by DISPLAY_ORDER;
end;

2016-07-24 22:30:03,983 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-07-24 22:30:03,984 [main] INFO  (DfSqlFileFireMan#fire():89) - {Create Schema}: success=49 failure=0 (in 3 files)
2016-07-24 22:30:03,984 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():564) - ...Closing connections to change-users: [system]
2016-07-24 22:30:04,101 [main] INFO  (DfLoadDataProcess#execute():129) - 
2016-07-24 22:30:04,101 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2016-07-24 22:30:04,101 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2016-07-24 22:30:04,102 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2016-07-24 22:30:04,102 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2016-07-24 22:30:04,102 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2016-07-24 22:30:04,126 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-24 22:30:04,127 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/common/xls/10-master.xls)
2016-07-24 22:30:04,127 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-24 22:30:04,389 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-24 22:30:04,389 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-24 22:30:04,390 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-24 22:30:04,427 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{PRV, 仮会員, 入会直後のステータスで一部のサイトサービスが利用可能, 3}
2016-07-24 22:30:04,537 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{FML, 正式会員, 正式な会員としてサイトサービスが利用可能, 1}
2016-07-24 22:30:04,538 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{WDL, 退会会員, 退会が確定した会員でサイトサービスはダメ, 2}
2016-07-24 22:30:04,539 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():212) - ...Skipping the terminal garbage row
2016-07-24 22:30:04,553 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to MEMBER_STATUS
2016-07-24 22:30:04,555 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{1, アメリカ}
2016-07-24 22:30:04,556 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{2, カナダ}
2016-07-24 22:30:04,556 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{3, 中国}
2016-07-24 22:30:04,557 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{4, 千葉}
2016-07-24 22:30:04,563 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to REGION
2016-07-24 22:30:04,566 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLT, PLATINUM, 12.3, 1, platinum rank, 1}
2016-07-24 22:30:04,567 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{GLD, GOLD, 9.2, 1, gold rank, 2}
2016-07-24 22:30:04,567 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{SIL, SILVER, 6.74, 1, silver rank, 3}
2016-07-24 22:30:04,568 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{BRZ, BRONZE, 2, 1, bronze rank, 4}
2016-07-24 22:30:04,568 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLS, PLASTIC, 0.1, 0, plastic rank, 5}
2016-07-24 22:30:04,573 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to SERVICE_RANK
2016-07-24 22:30:04,574 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{SIT, サイトが使いにくいから, 1}
2016-07-24 22:30:04,575 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{OTH, その他理由, 4}
2016-07-24 22:30:04,576 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{FRT, フリテンだから, 3}
2016-07-24 22:30:04,576 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{PRD, 商品に魅力がないから, 2}
2016-07-24 22:30:04,584 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to WITHDRAWAL_REASON
2016-07-24 22:30:04,585 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MSC, 音楽, null}
2016-07-24 22:30:04,586 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{FOD, 食品, null}
2016-07-24 22:30:04,586 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MCD, 音楽CD, MSC}
2016-07-24 22:30:04,587 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{INS, 楽器, MSC}
2016-07-24 22:30:04,587 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{HEB, ハーブ, FOD}
2016-07-24 22:30:04,593 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to PRODUCT_CATEGORY
2016-07-24 22:30:04,594 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{ONS, 生産販売可能, 1}
2016-07-24 22:30:04,594 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{PST, 生産中止, 2}
2016-07-24 22:30:04,595 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{SST, 販売中止, 3}
2016-07-24 22:30:04,600 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to PRODUCT_STATUS
2016-07-24 22:30:04,603 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-24 22:30:04,603 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/20-member.xls)
2016-07-24 22:30:04,604 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-24 22:30:04,700 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{1, Stojkovic, Pixy, FML, 2007/12/01 11:01:10, 1965/03/03, 2016-07-24 22:30:04.7, foo, 2016-07-24 22:30:04.7, foo, 0}
2016-07-24 22:30:04,708 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{2, Savicevic, Genius, PRV, null, 1966/09/15, 2016-07-24 22:30:04.708, foo, 2016-07-24 22:30:04.708, foo, 0}
2016-07-24 22:30:04,711 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{3, Mijatovic, Mijato, WDL, 2005/10/03 13:03:30, null, 2016-07-24 22:30:04.71, foo, 2016-07-24 22:30:04.71, foo, 0}
2016-07-24 22:30:04,713 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{4, Stankovic, Stanko, FML, 2006/09/04 14:04:40, 1978/09/11, 2016-07-24 22:30:04.713, foo, 2016-07-24 22:30:04.713, foo, 0}
2016-07-24 22:30:04,717 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{5, Milosevic, Milose, FML, 2007/08/05 15:05:50, null, 2016-07-24 22:30:04.717, foo, 2016-07-24 22:30:04.717, foo, 0}
2016-07-24 22:30:04,719 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{6, Mihajlovic, FreeKick, WDL, 2006/07/06 16:06:40, 1969/02/20, 2016-07-24 22:30:04.719, foo, 2016-07-24 22:30:04.719, foo, 0}
2016-07-24 22:30:04,722 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{7, アカギ, Akagi, FML, 2005/06/07 17:07:30, null, 2016-07-24 22:30:04.722, foo, 2016-07-24 22:30:04.722, foo, 0}
2016-07-24 22:30:04,724 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{8, Kezman, RedCard, FML, 2006/05/08 18:08:20, null, 2016-07-24 22:30:04.724, foo, 2016-07-24 22:30:04.724, foo, 0}
2016-07-24 22:30:04,727 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{9, Maslovar, JEFUnited, FML, 2007/12/31 00:00:00, 1967/02/20, 2016-07-24 22:30:04.727, foo, 2016-07-24 22:30:04.727, foo, 0}
2016-07-24 22:30:04,731 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{10, 諸葛亮孔明, ShokatsuGoGo, PRV, null, null, 2016-07-24 22:30:04.73, foo, 2016-07-24 22:30:04.73, foo, 0}
2016-07-24 22:30:04,732 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{11, Boban, Boban, FML, 2007/12/01 11:01:10, 1968/10/08, 2016-07-24 22:30:04.732, foo, 2016-07-24 22:30:04.732, foo, 0}
2016-07-24 22:30:04,735 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{12, Suker, Suker, PRV, null, 1968/01/01, 2016-07-24 22:30:04.734, foo, 2016-07-24 22:30:04.734, foo, 0}
2016-07-24 22:30:04,737 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{13, Jarni, Jarni, WDL, 2005/10/03 13:03:30, 1968/10/26, 2016-07-24 22:30:04.736, foo, 2016-07-24 22:30:04.736, foo, 0}
2016-07-24 22:30:04,739 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{14, Boksic, Boksic, FML, 2006/09/04 14:04:40, 1970/01/21, 2016-07-24 22:30:04.739, foo, 2016-07-24 22:30:04.739, foo, 0}
2016-07-24 22:30:04,742 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{15, Prosinecki, Prosinecki, FML, 2004/08/05 15:05:50, 1969/01/12, 2016-07-24 22:30:04.742, foo, 2016-07-24 22:30:04.742, foo, 0}
2016-07-24 22:30:04,745 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{16, RobeltKovac, RobeltKovac, WDL, 2006/07/06 16:06:40, null, 2016-07-24 22:30:04.745, foo, 2016-07-24 22:30:04.745, foo, 0}
2016-07-24 22:30:04,747 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{17, NikoKovac, NikoKovac, FML, 2005/06/07 17:07:30, null, 2016-07-24 22:30:04.747, foo, 2016-07-24 22:30:04.747, foo, 0}
2016-07-24 22:30:04,752 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{18, Jovanovic, Jovano, FML, 2006/05/08 18:08:20, 1981/04/18, 2016-07-24 22:30:04.749, foo, 2016-07-24 22:30:04.749, foo, 0}
2016-07-24 22:30:04,755 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{19, Milko, Milko, FML, 2005/12/31 12:34:56, 1974/09/10, 2016-07-24 22:30:04.755, foo, 2016-07-24 22:30:04.755, foo, 0}
2016-07-24 22:30:04,758 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{20, 諸葛瑾子瑜, ShokatsuKinKin, FML, 2001/12/31 23:59:59, null, 2016-07-24 22:30:04.758, foo, 2016-07-24 22:30:04.758, foo, 0}
2016-07-24 22:30:04,784 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER
2016-07-24 22:30:04,787 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{1, 1, 2007/03/24, 2015/12/31, Nagara, 4, 2016-07-24 22:30:04.787, foo, 2016-07-24 22:30:04.787, foo, 0}
2016-07-24 22:30:04,791 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{2, 1, 1949/01/01, 1997/03/31, New York, 1, 2016-07-24 22:30:04.79, foo, 2016-07-24 22:30:04.79, foo, 0}
2016-07-24 22:30:04,793 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{3, 1, 1997/04/01, 2000/09/30, Los Angels, 1, 2016-07-24 22:30:04.793, foo, 2016-07-24 22:30:04.793, foo, 0}
2016-07-24 22:30:04,796 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{4, 1, 2000/10/01, 2003/08/31, New York, 1, 2016-07-24 22:30:04.796, foo, 2016-07-24 22:30:04.796, foo, 0}
2016-07-24 22:30:04,800 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{5, 1, 2003/09/01, 2004/12/22, San Francisco Powell, 1, 2016-07-24 22:30:04.8, foo, 2016-07-24 22:30:04.8, foo, 0}
2016-07-24 22:30:04,803 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{6, 1, 2004/12/23, 2006/03/23, San Francisco Daly City, 1, 2016-07-24 22:30:04.803, foo, 2016-07-24 22:30:04.803, foo, 0}
2016-07-24 22:30:04,805 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{7, 1, 2016/01/01, 9999/12/31, Victoria, 2, 2016-07-24 22:30:04.805, foo, 2016-07-24 22:30:04.805, foo, 0}
2016-07-24 22:30:04,808 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{8, 2, 2004/12/24, 9999/12/31, Ichihara, 4, 2016-07-24 22:30:04.807, foo, 2016-07-24 22:30:04.807, foo, 0}
2016-07-24 22:30:04,810 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{9, 3, 2004/12/24, 2007/03/23, Mobara, 4, 2016-07-24 22:30:04.81, foo, 2016-07-24 22:30:04.81, foo, 0}
2016-07-24 22:30:04,812 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{10, 4, 2002/11/01, 9999/12/31, Sousa, 4, 2016-07-24 22:30:04.811, foo, 2016-07-24 22:30:04.812, foo, 0}
2016-07-24 22:30:04,814 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{11, 6, 2002/11/01, 9999/12/31, Yokoshiba, 4, 2016-07-24 22:30:04.813, foo, 2016-07-24 22:30:04.813, foo, 0}
2016-07-24 22:30:04,817 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{12, 9, 2010/11/01, 9999/12/31, Tateyama, 4, 2016-07-24 22:30:04.817, foo, 2016-07-24 22:30:04.817, foo, 0}
2016-07-24 22:30:04,819 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{13, 10, 1970/01/01, 9999/12/31, Shoku, 3, 2016-07-24 22:30:04.819, foo, 2016-07-24 22:30:04.819, foo, 0}
2016-07-24 22:30:04,822 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{14, 12, 2000/11/01, 2001/11/01, Oohara, 4, 2016-07-24 22:30:04.822, foo, 2016-07-24 22:30:04.822, foo, 0}
2016-07-24 22:30:04,825 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{15, 15, 2002/11/01, 2006/10/30, MinamiBousou, 4, 2016-07-24 22:30:04.825, foo, 2016-07-24 22:30:04.825, foo, 0}
2016-07-24 22:30:04,828 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{16, 15, 2007/11/01, 9999/12/31, Tomisato, 4, 2016-07-24 22:30:04.828, foo, 2016-07-24 22:30:04.828, foo, 0}
2016-07-24 22:30:04,831 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{17, 18, 2001/03/21, 2007/11/21, Katsuura, 4, 2016-07-24 22:30:04.831, foo, 2016-07-24 22:30:04.831, foo, 0}
2016-07-24 22:30:04,834 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{18, 18, 2007/11/22, 9999/12/31, Kamogawa, 4, 2016-07-24 22:30:04.834, foo, 2016-07-24 22:30:04.834, foo, 0}
2016-07-24 22:30:04,836 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{19, 19, 2000/11/01, 9999/12/31, Yotsukaido, 4, 2016-07-24 22:30:04.836, foo, 2016-07-24 22:30:04.836, foo, 0}
2016-07-24 22:30:04,838 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{20, 20, 1970/01/01, 9999/12/31, Go, 3, 2016-07-24 22:30:04.838, foo, 2016-07-24 22:30:04.838, foo, 0}
2016-07-24 22:30:04,863 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_ADDRESS
2016-07-24 22:30:04,864 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{1, 3, 2006/12/24 23:59:59, 0, FML}
2016-07-24 22:30:04,866 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{2, 6, 2007/11/11 16:16:16, 0, FML}
2016-07-24 22:30:04,868 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{3, 1, 2006/12/23 22:56:29, 0, FML}
2016-07-24 22:30:04,869 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{4, 6, 2007/11/01 02:13:00, 0, FML}
2016-07-24 22:30:04,870 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{5, 7, 2006/05/24 23:12:59, 0, FML}
2016-07-24 22:30:04,871 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{6, 6, 2005/11/11 16:32:01, 0, PRV}
2016-07-24 22:30:04,872 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{7, 6, 2006/01/28 23:59:59, 1, FML}
2016-07-24 22:30:04,873 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{8, 6, 2007/11/09 16:23:00, 0, FML}
2016-07-24 22:30:04,874 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{9, 8, 2006/12/22 23:59:59, 0, FML}
2016-07-24 22:30:04,876 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{10, 6, 2007/11/11 09:01:00, 0, FML}
2016-07-24 22:30:04,878 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{11, 1, 2006/12/23 23:59:59, 0, FML}
2016-07-24 22:30:04,880 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{12, 9, 2007/11/15 12:43:00, 0, FML}
2016-07-24 22:30:04,881 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{13, 10, 2006/12/24 23:59:59, 0, FML}
2016-07-24 22:30:04,883 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{14, 6, 2007/04/01 16:23:01, 0, FML}
2016-07-24 22:30:04,884 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{15, 7, 2006/12/24 23:59:20, 1, FML}
2016-07-24 22:30:04,885 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{16, 6, 2007/05/01 12:23:02, 0, FML}
2016-07-24 22:30:04,886 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{17, 7, 2006/12/24 23:59:21, 0, FML}
2016-07-24 22:30:04,888 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{18, 6, 2007/06/11 17:23:03, 0, FML}
2016-07-24 22:30:04,889 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{19, 4, 2006/12/24 23:59:22, 0, FML}
2016-07-24 22:30:04,890 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{20, 3, 2007/11/01 16:12:04, 0, FML}
2016-07-24 22:30:04,891 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{21, 11, 2006/12/24 23:59:23, 0, FML}
2016-07-24 22:30:04,892 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{22, 1, 2007/11/01 16:23:05, 0, PRV}
2016-07-24 22:30:04,892 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{23, 9, 2006/12/24 23:59:24, 1, FML}
2016-07-24 22:30:04,893 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{24, 8, 2007/11/01 16:23:06, 0, FML}
2016-07-24 22:30:04,894 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{25, 7, 2007/12/24 11:59:25, 1, FML}
2016-07-24 22:30:04,895 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{26, 6, 2007/06/21 01:23:57, 0, FML}
2016-07-24 22:30:04,896 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{27, 5, 2006/12/24 23:59:26, 0, FML}
2016-07-24 22:30:04,898 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{28, 3, 2007/11/01 16:23:08, 0, FML}
2016-07-24 22:30:04,899 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{29, 3, 2006/12/24 23:59:27, 0, FML}
2016-07-24 22:30:04,901 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{30, 10, 2007/11/01 16:23:09, 0, FML}
2016-07-24 22:30:04,903 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{31, 15, 2006/07/24 23:59:28, 0, FML}
2016-07-24 22:30:04,904 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{32, 14, 2007/11/01 17:23:10, 0, FML}
2016-07-24 22:30:04,904 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{33, 15, 2007/11/01 16:23:10, 0, FML}
2016-07-24 22:30:04,905 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{34, 18, 2006/07/24 23:59:29, 0, FML}
2016-07-24 22:30:04,906 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{35, 3, 2007/11/01 17:23:11, 0, PRV}
2016-07-24 22:30:04,908 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{36, 5, 2007/11/01 16:23:11, 1, FML}
2016-07-24 22:30:04,909 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{37, 11, 2006/07/24 23:59:30, 0, FML}
2016-07-24 22:30:04,910 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{38, 20, 2007/11/01 17:23:12, 1, FML}
2016-07-24 22:30:04,912 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{39, 19, 2007/11/01 16:23:12, 0, FML}
2016-07-24 22:30:04,913 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{40, 4, 2006/07/24 23:59:31, 0, FML}
2016-07-24 22:30:04,915 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{41, 4, 2007/11/01 17:23:13, 0, FML}
2016-07-24 22:30:04,916 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{42, 4, 2007/11/01 16:23:13, 0, FML}
2016-07-24 22:30:04,917 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{43, 4, 2006/07/24 23:52:32, 0, FML}
2016-07-24 22:30:04,919 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{44, 4, 2007/11/01 11:23:14, 0, FML}
2016-07-24 22:30:04,921 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{45, 4, 2007/11/21 06:23:14, 0, FML}
2016-07-24 22:30:04,923 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{46, 12, 2006/07/24 23:52:33, 0, PRV}
2016-07-24 22:30:04,924 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{47, 13, 2007/11/01 11:23:15, 1, FML}
2016-07-24 22:30:04,925 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{48, 14, 2007/11/21 06:23:15, 0, FML}
2016-07-24 22:30:04,926 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{49, 17, 2006/07/24 23:52:34, 1, FML}
2016-07-24 22:30:04,927 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{50, 18, 2007/11/01 11:23:16, 0, FML}
2016-07-24 22:30:04,928 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{51, 16, 2007/11/21 06:23:16, 0, FML}
2016-07-24 22:30:04,930 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{52, 4, 2006/07/24 23:52:35, 0, FML}
2016-07-24 22:30:04,931 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{53, 5, 2007/11/01 11:23:17, 0, FML}
2016-07-24 22:30:04,932 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{54, 5, 2007/11/21 06:23:17, 0, FML}
2016-07-24 22:30:04,934 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{55, 11, 2006/07/24 23:52:36, 0, FML}
2016-07-24 22:30:04,935 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{56, 12, 2007/11/01 11:23:18, 0, FML}
2016-07-24 22:30:04,984 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 56 rows are loaded to MEMBER_LOGIN
2016-07-24 22:30:04,985 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{1, aaa, 30符3飜は？, 自分で数えろ, 1, 2016-07-24 22:30:04.985, foo, 2016-07-24 22:30:04.985, foo, 0}
2016-07-24 22:30:04,987 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{2, bbb, 50符2飜は？, 自分で数えろ, 2, 2016-07-24 22:30:04.986, foo, 2016-07-24 22:30:04.986, foo, 0}
2016-07-24 22:30:04,988 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{3, ccc, 110符2飜は？, 自分で数えろ, 3, 2016-07-24 22:30:04.987, foo, 2016-07-24 22:30:04.987, foo, 0}
2016-07-24 22:30:04,988 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{4, ddd, タンヤオ？, そう, 4, 2016-07-24 22:30:04.988, foo, 2016-07-24 22:30:04.988, foo, 0}
2016-07-24 22:30:04,989 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{5, eee2, ピンフ？, そう, 5, 2016-07-24 22:30:04.989, foo, 2016-07-24 22:30:04.989, foo, 0}
2016-07-24 22:30:04,990 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{6, fff, サンアンコウ？, そう, 6, 2016-07-24 22:30:04.99, foo, 2016-07-24 22:30:04.99, foo, 0}
2016-07-24 22:30:04,991 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{7, ggg3, イーペーコウ？, そう, 7, 2016-07-24 22:30:04.991, foo, 2016-07-24 22:30:04.991, foo, 0}
2016-07-24 22:30:04,992 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{8, hhh555, リャンペーコウ？, そう, 8, 2016-07-24 22:30:04.992, foo, 2016-07-24 22:30:04.992, foo, 0}
2016-07-24 22:30:04,993 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{9, iii, サンペーコウはないよね？, 当たり前だ, 9, 2016-07-24 22:30:04.993, foo, 2016-07-24 22:30:04.993, foo, 0}
2016-07-24 22:30:04,993 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{10, jjj, 私はイカサマしません, 実はする, 10, 2016-07-24 22:30:04.993, foo, 2016-07-24 22:30:04.993, foo, 0}
2016-07-24 22:30:04,994 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{11, qwe, 70符3飜は？, 自分で数えろ, 11, 2016-07-24 22:30:04.994, foo, 2016-07-24 22:30:04.994, foo, 0}
2016-07-24 22:30:04,995 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{12, sdf, 20符4飜は？, 自分で数えろ, 12, 2016-07-24 22:30:04.995, foo, 2016-07-24 22:30:04.995, foo, 0}
2016-07-24 22:30:04,996 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{13, dfgsf, 大三元は？, 役満だよ, 13, 2016-07-24 22:30:04.996, foo, 2016-07-24 22:30:04.996, foo, 0}
2016-07-24 22:30:04,997 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{14, ert, タンヤオ？, そう, 14, 2016-07-24 22:30:04.996, foo, 2016-07-24 22:30:04.996, foo, 0}
2016-07-24 22:30:04,997 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{15, fhgf, ピンフ？, そう, 15, 2016-07-24 22:30:04.997, foo, 2016-07-24 22:30:04.997, foo, 0}
2016-07-24 22:30:04,998 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{16, ghj, サンアンコウ？, そう, 16, 2016-07-24 22:30:04.998, foo, 2016-07-24 22:30:04.998, foo, 0}
2016-07-24 22:30:04,998 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{17, tyuffff, サンレンコウ？, そう, 17, 2016-07-24 22:30:04.998, foo, 2016-07-24 22:30:04.998, foo, 0}
2016-07-24 22:30:04,999 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{18, jkl, イーペーコウ？, そう, 18, 2016-07-24 22:30:04.999, foo, 2016-07-24 22:30:04.999, foo, 0}
2016-07-24 22:30:05,000 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{19, ghjfff, 左ハイは？, 痛い, 19, 2016-07-24 22:30:05.0, foo, 2016-07-24 22:30:05.0, foo, 0}
2016-07-24 22:30:05,001 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{20, cvb, 孫権は？, 呉, 20, 2016-07-24 22:30:05.001, foo, 2016-07-24 22:30:05.001, foo, 0}
2016-07-24 22:30:05,018 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SECURITY
2016-07-24 22:30:05,019 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{1, 1, 1234, PLT, 2016-07-24 22:30:05.019, foo, 2016-07-24 22:30:05.019, foo, 0}
2016-07-24 22:30:05,021 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{2, 2, 2345, GLD, 2016-07-24 22:30:05.021, foo, 2016-07-24 22:30:05.021, foo, 0}
2016-07-24 22:30:05,022 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{3, 3, 3456, GLD, 2016-07-24 22:30:05.022, foo, 2016-07-24 22:30:05.022, foo, 0}
2016-07-24 22:30:05,023 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{4, 4, 875, BRZ, 2016-07-24 22:30:05.023, foo, 2016-07-24 22:30:05.023, foo, 0}
2016-07-24 22:30:05,024 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{5, 5, 1111, BRZ, 2016-07-24 22:30:05.024, foo, 2016-07-24 22:30:05.024, foo, 0}
2016-07-24 22:30:05,025 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{6, 6, 5422, SIL, 2016-07-24 22:30:05.025, foo, 2016-07-24 22:30:05.025, foo, 0}
2016-07-24 22:30:05,026 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{7, 7, 24678, SIL, 2016-07-24 22:30:05.026, foo, 2016-07-24 22:30:05.026, foo, 0}
2016-07-24 22:30:05,027 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{8, 8, 234, SIL, 2016-07-24 22:30:05.027, foo, 2016-07-24 22:30:05.027, foo, 0}
2016-07-24 22:30:05,028 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{9, 9, 3, SIL, 2016-07-24 22:30:05.027, foo, 2016-07-24 22:30:05.027, foo, 0}
2016-07-24 22:30:05,028 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{10, 10, 98765, PLT, 2016-07-24 22:30:05.028, foo, 2016-07-24 22:30:05.028, foo, 0}
2016-07-24 22:30:05,029 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{11, 11, 34, GLD, 2016-07-24 22:30:05.029, foo, 2016-07-24 22:30:05.029, foo, 0}
2016-07-24 22:30:05,030 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{12, 12, 532, PLT, 2016-07-24 22:30:05.03, foo, 2016-07-24 22:30:05.03, foo, 0}
2016-07-24 22:30:05,031 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{13, 13, 23678, GLD, 2016-07-24 22:30:05.031, foo, 2016-07-24 22:30:05.031, foo, 0}
2016-07-24 22:30:05,032 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{14, 14, 432, GLD, 2016-07-24 22:30:05.032, foo, 2016-07-24 22:30:05.032, foo, 0}
2016-07-24 22:30:05,032 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{15, 15, 543, BRZ, 2016-07-24 22:30:05.032, foo, 2016-07-24 22:30:05.032, foo, 0}
2016-07-24 22:30:05,033 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{16, 16, 23545, PLT, 2016-07-24 22:30:05.033, foo, 2016-07-24 22:30:05.033, foo, 0}
2016-07-24 22:30:05,034 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{17, 17, 2345, GLD, 2016-07-24 22:30:05.034, foo, 2016-07-24 22:30:05.034, foo, 0}
2016-07-24 22:30:05,035 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{18, 18, 8763, SIL, 2016-07-24 22:30:05.035, foo, 2016-07-24 22:30:05.035, foo, 0}
2016-07-24 22:30:05,035 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{19, 19, 34567, SIL, 2016-07-24 22:30:05.035, foo, 2016-07-24 22:30:05.035, foo, 0}
2016-07-24 22:30:05,036 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{20, 20, 43, GLD, 2016-07-24 22:30:05.036, foo, 2016-07-24 22:30:05.036, foo, 0}
2016-07-24 22:30:05,056 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SERVICE
2016-07-24 22:30:05,057 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{3, null, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123, 2016-07-24 22:30:05.057, foo, 2016-07-24 22:30:05.057, foo}
2016-07-24 22:30:05,060 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{6, SIT, null, 2007/11/11 16:00:00.456, 2016-07-24 22:30:05.06, foo, 2016-07-24 22:30:05.06, foo}
2016-07-24 22:30:05,062 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{13, PRD, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789, 2016-07-24 22:30:05.062, foo, 2016-07-24 22:30:05.062, foo}
2016-07-24 22:30:05,063 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{16, SIT, コバチが２人いるため, 2007/11/13 16:00:00.456, 2016-07-24 22:30:05.063, foo, 2016-07-24 22:30:05.063, foo}
2016-07-24 22:30:05,068 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to MEMBER_WITHDRAWAL
2016-07-24 22:30:05,069 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{1, 1, 2, 2006/12/24 23:59:59}
2016-07-24 22:30:05,071 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{2, 1, 3, 2007/11/11 16:16:16}
2016-07-24 22:30:05,071 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{3, 1, 4, 2006/12/23 22:56:29}
2016-07-24 22:30:05,073 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{4, 1, 5, 2007/11/01 02:13:00}
2016-07-24 22:30:05,073 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{5, 1, 6, 2012/05/24 23:12:59}
2016-07-24 22:30:05,075 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{6, 1, 9, 2005/11/11 16:32:01}
2016-07-24 22:30:05,076 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{7, 1, 15, 2006/01/28 23:59:59}
2016-07-24 22:30:05,076 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{8, 1, 18, 2007/11/09 16:23:00}
2016-07-24 22:30:05,078 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{9, 2, 1, 2009/12/22 23:59:59}
2016-07-24 22:30:05,079 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{10, 2, 3, 2007/11/11 09:01:00}
2016-07-24 22:30:05,081 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{11, 2, 4, 2006/11/23 23:59:59}
2016-07-24 22:30:05,082 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{12, 2, 9, 2012/11/15 12:43:00}
2016-07-24 22:30:05,083 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{13, 2, 14, 2006/12/24 23:59:59}
2016-07-24 22:30:05,084 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{14, 2, 19, 2011/04/01 16:23:01}
2016-07-24 22:30:05,085 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{15, 3, 1, 2006/12/24 23:59:20}
2016-07-24 22:30:05,094 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{16, 3, 2, 2008/05/01 12:23:02}
2016-07-24 22:30:05,104 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{17, 3, 4, 2006/12/24 23:59:21}
2016-07-24 22:30:05,105 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{18, 3, 6, 2009/06/11 17:23:03}
2016-07-24 22:30:05,107 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{19, 3, 9, 2010/12/24 23:59:22}
2016-07-24 22:30:05,108 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{20, 3, 10, 2007/11/01 16:12:04}
2016-07-24 22:30:05,110 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{21, 4, 1, 2006/12/24 23:59:23}
2016-07-24 22:30:05,112 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{22, 4, 2, 2007/11/01 16:23:05}
2016-07-24 22:30:05,114 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{23, 4, 3, 2011/12/24 23:59:24}
2016-07-24 22:30:05,115 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{24, 4, 4, 2007/11/01 16:23:06}
2016-07-24 22:30:05,116 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{25, 4, 5, 2013/05/24 11:59:25}
2016-07-24 22:30:05,117 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{26, 4, 6, 2007/06/21 01:23:57}
2016-07-24 22:30:05,118 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{27, 4, 9, 2006/12/24 23:59:26}
2016-07-24 22:30:05,119 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{28, 4, 11, 2007/11/01 16:23:08}
2016-07-24 22:30:05,120 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{29, 4, 12, 2013/02/24 23:59:27}
2016-07-24 22:30:05,120 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{30, 4, 13, 2012/11/01 16:23:03}
2016-07-24 22:30:05,121 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{31, 4, 14, 2006/07/24 23:59:28}
2016-07-24 22:30:05,122 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{32, 4, 15, 2007/11/01 17:23:10}
2016-07-24 22:30:05,127 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{33, 4, 16, 2007/11/01 16:23:10}
2016-07-24 22:30:05,130 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{34, 4, 17, 2006/07/24 23:59:29}
2016-07-24 22:30:05,131 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{35, 4, 18, 2011/11/01 17:23:11}
2016-07-24 22:30:05,132 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{36, 4, 19, 2007/11/01 16:23:11}
2016-07-24 22:30:05,133 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{37, 5, 1, 2008/07/24 23:59:30}
2016-07-24 22:30:05,134 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{38, 5, 3, 2007/11/01 17:23:12}
2016-07-24 22:30:05,136 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{39, 5, 6, 2007/11/01 16:23:12}
2016-07-24 22:30:05,138 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{40, 6, 1, 2006/07/24 23:59:31}
2016-07-24 22:30:05,139 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{41, 6, 2, 2007/11/01 17:23:13}
2016-07-24 22:30:05,140 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{42, 6, 3, 2007/11/01 16:23:13}
2016-07-24 22:30:05,141 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{43, 6, 4, 2006/07/24 23:52:32}
2016-07-24 22:30:05,142 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{44, 6, 5, 2007/11/01 11:23:14}
2016-07-24 22:30:05,145 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{45, 6, 6, 2007/11/21 06:23:14}
2016-07-24 22:30:05,147 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{46, 8, 1, 2011/07/24 23:52:33}
2016-07-24 22:30:05,150 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{47, 8, 2, 2007/11/01 11:23:15}
2016-07-24 22:30:05,151 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{48, 8, 3, 2007/11/21 06:23:15}
2016-07-24 22:30:05,151 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{49, 9, 1, 2006/07/24 23:52:34}
2016-07-24 22:30:05,152 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{50, 9, 2, 208/11/01 11:23:16}
2016-07-24 22:30:05,157 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{51, 9, 3, 2007/11/21 06:23:16}
2016-07-24 22:30:05,158 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{52, 9, 10, 2006/07/24 23:52:35}
2016-07-24 22:30:05,160 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{53, 9, 20, 2009/11/01 11:23:17}
2016-07-24 22:30:05,161 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{54, 10, 1, 2007/11/21 06:23:17}
2016-07-24 22:30:05,163 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{55, 10, 2, 2006/07/24 23:52:36}
2016-07-24 22:30:05,165 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{56, 10, 3, 2010/11/01 11:23:18}
2016-07-24 22:30:05,167 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{57, 10, 4, 2006/12/21 23:59:59}
2016-07-24 22:30:05,168 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{58, 10, 5, 2007/11/1 16:16:16}
2016-07-24 22:30:05,169 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{59, 10, 6, 2006/08/23 22:56:29}
2016-07-24 22:30:05,169 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{60, 10, 9, 2007/11/01 02:11:00}
2016-07-24 22:30:05,171 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{61, 10, 11, 2012/05/24 23:12:59}
2016-07-24 22:30:05,171 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{62, 10, 12, 2005/11/10 16:32:01}
2016-07-24 22:30:05,172 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{63, 10, 13, 2006/01/28 23:59:59}
2016-07-24 22:30:05,173 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{64, 10, 14, 2007/10/09 16:23:00}
2016-07-24 22:30:05,174 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{65, 10, 15, 2009/12/22 23:59:59}
2016-07-24 22:30:05,182 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{66, 10, 16, 2007/11/01 09:01:00}
2016-07-24 22:30:05,183 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{67, 10, 17, 2006/11/23 23:59:59}
2016-07-24 22:30:05,187 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{68, 10, 18, 2011/11/15 12:43:00}
2016-07-24 22:30:05,191 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{69, 10, 19, 2006/07/24 23:59:59}
2016-07-24 22:30:05,193 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{70, 10, 20, 2011/08/01 16:23:01}
2016-07-24 22:30:05,195 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{71, 11, 12, 2006/09/24 23:59:20}
2016-07-24 22:30:05,198 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{72, 11, 13, 2008/01/01 12:23:02}
2016-07-24 22:30:05,200 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{73, 11, 14, 2006/12/24 23:59:21}
2016-07-24 22:30:05,200 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{74, 11, 15, 2009/02/11 17:23:03}
2016-07-24 22:30:05,201 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{75, 11, 16, 2010/03/24 23:59:22}
2016-07-24 22:30:05,202 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{76, 11, 17, 2007/09/01 16:12:04}
2016-07-24 22:30:05,202 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{77, 11, 19, 2006/12/24 23:59:23}
2016-07-24 22:30:05,203 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{78, 12, 1, 2007/11/01 16:23:05}
2016-07-24 22:30:05,205 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{79, 12, 11, 2011/05/24 23:59:24}
2016-07-24 22:30:05,207 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{80, 12, 13, 2007/11/01 16:23:06}
2016-07-24 22:30:05,208 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{81, 12, 14, 2013/06/24 11:59:25}
2016-07-24 22:30:05,216 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{82, 12, 15, 2007/06/21 01:23:57}
2016-07-24 22:30:05,217 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{83, 12, 19, 2006/12/24 23:59:26}
2016-07-24 22:30:05,218 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{84, 13, 11, 2007/08/01 16:23:08}
2016-07-24 22:30:05,219 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{85, 13, 12, 2013/02/24 23:59:27}
2016-07-24 22:30:05,220 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{86, 13, 14, 2012/11/01 16:23:03}
2016-07-24 22:30:05,221 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{87, 14, 1, 2006/07/24 23:59:28}
2016-07-24 22:30:05,223 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{88, 14, 10, 2012/05/24 23:12:59}
2016-07-24 22:30:05,224 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{89, 14, 11, 2005/11/10 16:32:01}
2016-07-24 22:30:05,225 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{90, 14, 20, 2006/01/28 23:59:59}
2016-07-24 22:30:05,227 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{91, 16, 17, 2007/10/09 16:23:00}
2016-07-24 22:30:05,229 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{92, 17, 16, 2009/12/22 23:59:59}
2016-07-24 22:30:05,230 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{93, 18, 1, 2007/11/01 09:01:00}
2016-07-24 22:30:05,233 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{94, 18, 2, 2006/11/23 23:59:59}
2016-07-24 22:30:05,234 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{95, 18, 3, 2011/11/15 12:43:00}
2016-07-24 22:30:05,235 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{96, 18, 4, 2006/07/24 23:59:59}
2016-07-24 22:30:05,236 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{97, 18, 5, 2011/08/01 16:23:01}
2016-07-24 22:30:05,237 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{98, 18, 6, 2006/09/24 23:59:20}
2016-07-24 22:30:05,237 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{99, 18, 9, 2008/01/01 12:23:02}
2016-07-24 22:30:05,238 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{100, 18, 11, 2006/12/24 23:59:21}
2016-07-24 22:30:05,239 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{101, 18, 12, 2009/02/11 17:23:03}
2016-07-24 22:30:05,241 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{102, 18, 13, 2010/03/24 23:59:22}
2016-07-24 22:30:05,245 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{103, 18, 14, 2007/09/01 16:12:04}
2016-07-24 22:30:05,248 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{104, 18, 15, 2006/12/24 23:59:23}
2016-07-24 22:30:05,249 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{105, 19, 1, 2007/11/01 16:23:05}
2016-07-24 22:30:05,250 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{106, 19, 10, 2011/05/24 23:59:24}
2016-07-24 22:30:05,251 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{107, 19, 11, 2007/11/01 16:23:06}
2016-07-24 22:30:05,252 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{108, 19, 12, 2013/06/24 11:59:25}
2016-07-24 22:30:05,253 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{109, 19, 20, 2013/06/24 11:59:25}
2016-07-24 22:30:05,255 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{110, 20, 10, 2013/06/24 11:59:25}
2016-07-24 22:30:05,257 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{111, 20, 19, 2013/06/24 11:59:25}
2016-07-24 22:30:05,380 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 111 rows are loaded to MEMBER_FOLLOWING
2016-07-24 22:30:05,381 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-24 22:30:05,382 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/30-product.xls)
2016-07-24 22:30:05,382 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-24 22:30:05,450 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{1, Cold Spring Harbor, BILLYJOEL-01, MCD, PST, 1100, 2016-07-24 22:30:05.45, foo, 2016-07-24 22:30:05.45, foo, 0}
2016-07-24 22:30:05,451 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{2, Piano Man, BILLYJOEL-02, MCD, ONS, 1200, 2016-07-24 22:30:05.451, foo, 2016-07-24 22:30:05.451, foo, 0}
2016-07-24 22:30:05,453 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{3, Streetlife Serenade, BILLYJOEL-03, MCD, ONS, 1300, 2016-07-24 22:30:05.452, foo, 2016-07-24 22:30:05.452, foo, 0}
2016-07-24 22:30:05,454 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{4, Turnstiles, BILLYJOEL-04, MCD, ONS, 1400, 2016-07-24 22:30:05.454, foo, 2016-07-24 22:30:05.454, foo, 0}
2016-07-24 22:30:05,455 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{5, The Stranger, BILLYJOEL-05, MCD, ONS, 1500, 2016-07-24 22:30:05.455, foo, 2016-07-24 22:30:05.455, foo, 0}
2016-07-24 22:30:05,457 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{6, 52nd Street, BILLYJOEL-06, MCD, ONS, 1600, 2016-07-24 22:30:05.456, foo, 2016-07-24 22:30:05.456, foo, 0}
2016-07-24 22:30:05,458 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{7, Glass House, BILLYJOEL-07, MCD, ONS, 1700, 2016-07-24 22:30:05.458, foo, 2016-07-24 22:30:05.458, foo, 0}
2016-07-24 22:30:05,460 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{8, Nylon Curtain, BILLYJOEL-08, MCD, ONS, 1800, 2016-07-24 22:30:05.46, foo, 2016-07-24 22:30:05.46, foo, 0}
2016-07-24 22:30:05,461 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{9, Bridge, BILLYJOEL-09, MCD, ONS, 1900, 2016-07-24 22:30:05.461, foo, 2016-07-24 22:30:05.461, foo, 0}
2016-07-24 22:30:05,462 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{10, Storm Front, BILLYJOEL-10, MCD, ONS, 2000, 2016-07-24 22:30:05.462, foo, 2016-07-24 22:30:05.462, foo, 0}
2016-07-24 22:30:05,463 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{11, River of Dreams, BILLYJOEL-11, MCD, ONS, 2100, 2016-07-24 22:30:05.463, foo, 2016-07-24 22:30:05.463, foo, 0}
2016-07-24 22:30:05,464 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{12, Grand Piano, PIANO-01, INS, ONS, 1400000, 2016-07-24 22:30:05.464, foo, 2016-07-24 22:30:05.464, foo, 0}
2016-07-24 22:30:05,465 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{13, Upright Piano, PIANO-02, INS, ONS, 1100000, 2016-07-24 22:30:05.465, foo, 2016-07-24 22:30:05.465, foo, 0}
2016-07-24 22:30:05,466 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{14, Low Price Flute, FLUTE-01, INS, ONS, 50000, 2016-07-24 22:30:05.465, foo, 2016-07-24 22:30:05.465, foo, 0}
2016-07-24 22:30:05,466 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{15, Silver Flute, FLUTE-02, INS, ONS, 500000, 2016-07-24 22:30:05.466, foo, 2016-07-24 22:30:05.466, foo, 0}
2016-07-24 22:30:05,467 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{16, Gold Flute, FLUTE-03, INS, ONS, 4000000, 2016-07-24 22:30:05.467, foo, 2016-07-24 22:30:05.467, foo, 0}
2016-07-24 22:30:05,468 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{17, Rosemary (100g), HARB-100-01, HEB, ONS, 400, 2016-07-24 22:30:05.468, foo, 2016-07-24 22:30:05.468, foo, 0}
2016-07-24 22:30:05,468 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{18, Lemon Grass (100g), HARB-100-02, HEB, ONS, 380, 2016-07-24 22:30:05.468, foo, 2016-07-24 22:30:05.468, foo, 0}
2016-07-24 22:30:05,469 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{19, Camomile (100g), HARB-100-03, HEB, ONS, 380, 2016-07-24 22:30:05.469, foo, 2016-07-24 22:30:05.469, foo, 0}
2016-07-24 22:30:05,470 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{20, Hatomugi (100g), HARB-100-04, HEB, ONS, 340, 2016-07-24 22:30:05.47, foo, 2016-07-24 22:30:05.47, foo, 0}
2016-07-24 22:30:05,486 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to PRODUCT
2016-07-24 22:30:05,488 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{1, 5, 3, 2006/12/24 23:59:59, 1, 1800, 1, 2016-07-24 22:30:05.488, foo, 2016-07-24 22:30:05.488, foo, 0}
2016-07-24 22:30:05,491 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{2, 15, 7, 2007/11/11 16:16:16, 1, 1700, 1, 2016-07-24 22:30:05.491, foo, 2016-07-24 22:30:05.491, foo, 0}
2016-07-24 22:30:05,492 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{3, 13, 3, 2006/12/23 22:56:29.235, 1, 1800, 1, 2016-07-24 22:30:05.492, foo, 2016-07-24 22:30:05.492, foo, 0}
2016-07-24 22:30:05,494 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{4, 2, 5, 2007/11/01 02:13:00, 2, 1700, 1, 2016-07-24 22:30:05.494, foo, 2016-07-24 22:30:05.494, foo, 0}
2016-07-24 22:30:05,496 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{5, 9, 11, 2008/01/04 23:12:59, 5, 1800, 1, 2016-07-24 22:30:05.496, foo, 2016-07-24 22:30:05.496, foo, 0}
2016-07-24 22:30:05,499 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{6, 20, 2, 2002/01/01 16:32:01, 1, 2000, 1, 2016-07-24 22:30:05.499, foo, 2016-07-24 22:30:05.499, foo, 0}
2016-07-24 22:30:05,501 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{7, 19, 9, 2006/01/28 23:59:59.999, 1, 1000, 0, 2016-07-24 22:30:05.5, foo, 2016-07-24 22:30:05.5, foo, 0}
2016-07-24 22:30:05,502 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{8, 4, 7, 2007/11/09 16:23:00, 1, 1535, 1, 2016-07-24 22:30:05.502, foo, 2016-07-24 22:30:05.502, foo, 0}
2016-07-24 22:30:05,503 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{9, 4, 10, 2006/12/22 23:59:59, 20, 1700, 1, 2016-07-24 22:30:05.503, foo, 2016-07-24 22:30:05.503, foo, 0}
2016-07-24 22:30:05,504 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{10, 2, 10, 2007/11/01 02:13:00.345, 1, 1700, 0, 2016-07-24 22:30:05.504, foo, 2016-07-24 22:30:05.504, foo, 0}
2016-07-24 22:30:05,505 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{11, 5, 2, 2007/11/09 16:23:01, 1, 1800, 1, 2016-07-24 22:30:05.505, foo, 2016-07-24 22:30:05.505, foo, 0}
2016-07-24 22:30:05,506 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{12, 15, 2, 2006/12/22 23:59:12, 1, 1700, 1, 2016-07-24 22:30:05.506, foo, 2016-07-24 22:30:05.506, foo, 0}
2016-07-24 22:30:05,507 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{13, 13, 8, 2007/11/01 02:13:00.346, 1, 1800, 1, 2016-07-24 22:30:05.507, foo, 2016-07-24 22:30:05.507, foo, 0}
2016-07-24 22:30:05,509 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{14, 2, 4, 2007/11/09 16:23:02, 2, 1700, 1, 2016-07-24 22:30:05.509, foo, 2016-07-24 22:30:05.509, foo, 0}
2016-07-24 22:30:05,511 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{15, 9, 11, 2006/12/22 23:59:32, 5, 1800, 1, 2016-07-24 22:30:05.511, foo, 2016-07-24 22:30:05.511, foo, 0}
2016-07-24 22:30:05,516 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{16, 20, 1, 2007/11/01 02:13:00.347, 1, 2000, 1, 2016-07-24 22:30:05.516, foo, 2016-07-24 22:30:05.516, foo, 0}
2016-07-24 22:30:05,538 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{17, 19, 11, 2006/12/22 23:59:33, 2, 1000, 0, 2016-07-24 22:30:05.538, foo, 2016-07-24 22:30:05.538, foo, 0}
2016-07-24 22:30:05,539 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{18, 4, 10, 2007/11/01 02:13:00.348, 1, 1535, 1, 2016-07-24 22:30:05.539, foo, 2016-07-24 22:30:05.539, foo, 0}
2016-07-24 22:30:05,540 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{19, 4, 11, 2007/11/01 02:13:00.348, 4, 1700, 1, 2016-07-24 22:30:05.54, foo, 2016-07-24 22:30:05.54, foo, 0}
2016-07-24 22:30:05,541 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{20, 2, 11, 2006/12/22 23:59:35, 1, 1700, 0, 2016-07-24 22:30:05.541, foo, 2016-07-24 22:30:05.541, foo, 0}
2016-07-24 22:30:05,542 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{21, 2, 15, 2006/12/22 23:59:35, 1, 400000, 0, 2016-07-24 22:30:05.542, foo, 2016-07-24 22:30:05.542, foo, 0}
2016-07-24 22:30:05,543 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{22, 3, 6, 2007/11/01 02:13:00.350, 4, 1800, 1, 2016-07-24 22:30:05.543, foo, 2016-07-24 22:30:05.543, foo, 0}
2016-07-24 22:30:05,545 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{23, 15, 7, 2006/12/22 23:59:36, 1, 1700, 1, 2016-07-24 22:30:05.545, foo, 2016-07-24 22:30:05.545, foo, 0}
2016-07-24 22:30:05,546 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{24, 13, 3, 2007/09/11 12:13:00.351, 1, 1800, 1, 2016-07-24 22:30:05.546, foo, 2016-07-24 22:30:05.546, foo, 0}
2016-07-24 22:30:05,547 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{25, 16, 2, 2006/12/22 23:59:37, 2, 1700, 1, 2016-07-24 22:30:05.547, foo, 2016-07-24 22:30:05.547, foo, 0}
2016-07-24 22:30:05,548 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{26, 3, 4, 2005/12/21 12:13:00.352, 1, 1800, 1, 2016-07-24 22:30:05.548, foo, 2016-07-24 22:30:05.548, foo, 0}
2016-07-24 22:30:05,549 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{27, 2, 8, 2006/12/22 23:59:38, 1, 2000, 1, 2016-07-24 22:30:05.549, foo, 2016-07-24 22:30:05.549, foo, 0}
2016-07-24 22:30:05,549 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{28, 6, 17, 2007/11/01 02:13:00.353, 2, 600, 0, 2016-07-24 22:30:05.549, foo, 2016-07-24 22:30:05.549, foo, 0}
2016-07-24 22:30:05,550 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{29, 4, 4, 2006/12/22 23:59:39, 1, 1535, 1, 2016-07-24 22:30:05.55, foo, 2016-07-24 22:30:05.55, foo, 0}
2016-07-24 22:30:05,551 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{30, 4, 3, 2007/11/01 02:13:00.354, 4, 1700, 1, 2016-07-24 22:30:05.551, foo, 2016-07-24 22:30:05.551, foo, 0}
2016-07-24 22:30:05,552 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{31, 4, 10, 2006/12/22 23:59:40, 1, 1700, 0, 2016-07-24 22:30:05.552, foo, 2016-07-24 22:30:05.552, foo, 0}
2016-07-24 22:30:05,554 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{32, 13, 3, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-07-24 22:30:05.554, foo, 2016-07-24 22:30:05.554, foo, 0}
2016-07-24 22:30:05,555 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{33, 16, 2, 2006/12/22 23:59:41, 2, 1700, 1, 2016-07-24 22:30:05.555, foo, 2016-07-24 22:30:05.555, foo, 0}
2016-07-24 22:30:05,557 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{34, 3, 4, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-07-24 22:30:05.557, foo, 2016-07-24 22:30:05.557, foo, 0}
2016-07-24 22:30:05,558 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{35, 2, 8, 2006/12/12 23:59:42, 1, 2000, 1, 2016-07-24 22:30:05.558, foo, 2016-07-24 22:30:05.558, foo, 0}
2016-07-24 22:30:05,559 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{36, 6, 3, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-07-24 22:30:05.559, foo, 2016-07-24 22:30:05.559, foo, 0}
2016-07-24 22:30:05,562 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{37, 4, 4, 2006/12/12 23:59:43, 1, 1535, 1, 2016-07-24 22:30:05.562, foo, 2016-07-24 22:30:05.562, foo, 0}
2016-07-24 22:30:05,563 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{38, 4, 3, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-07-24 22:30:05.563, foo, 2016-07-24 22:30:05.563, foo, 0}
2016-07-24 22:30:05,565 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{39, 4, 10, 2006/12/12 23:59:44, 1, 1700, 0, 2016-07-24 22:30:05.565, foo, 2016-07-24 22:30:05.565, foo, 0}
2016-07-24 22:30:05,566 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{40, 4, 10, 2007/05/01 12:13:00.359, 1, 1700, 0, 2016-07-24 22:30:05.566, foo, 2016-07-24 22:30:05.566, foo, 0}
2016-07-24 22:30:05,567 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{41, 4, 11, 2007/11/01 02:13:01.354, 4, 1700, 1, 2016-07-24 22:30:05.567, foo, 2016-07-24 22:30:05.567, foo, 0}
2016-07-24 22:30:05,569 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{42, 10, 16, 2006/12/22 23:59:40, 1, 2800000, 1, 2016-07-24 22:30:05.568, foo, 2016-07-24 22:30:05.568, foo, 0}
2016-07-24 22:30:05,570 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{43, 13, 17, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-07-24 22:30:05.569, foo, 2016-07-24 22:30:05.569, foo, 0}
2016-07-24 22:30:05,571 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{44, 16, 14, 2006/12/22 23:59:41, 2, 1700, 1, 2016-07-24 22:30:05.571, foo, 2016-07-24 22:30:05.571, foo, 0}
2016-07-24 22:30:05,572 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{45, 3, 18, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-07-24 22:30:05.571, foo, 2016-07-24 22:30:05.571, foo, 0}
2016-07-24 22:30:05,572 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{46, 2, 7, 2006/12/12 23:59:42, 1, 2000, 1, 2016-07-24 22:30:05.572, foo, 2016-07-24 22:30:05.572, foo, 0}
2016-07-24 22:30:05,573 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{47, 6, 14, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-07-24 22:30:05.573, foo, 2016-07-24 22:30:05.573, foo, 0}
2016-07-24 22:30:05,576 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{48, 16, 12, 2006/12/12 23:59:43, 1, 100000, 1, 2016-07-24 22:30:05.576, foo, 2016-07-24 22:30:05.576, foo, 0}
2016-07-24 22:30:05,577 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{49, 4, 20, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-07-24 22:30:05.577, foo, 2016-07-24 22:30:05.577, foo, 0}
2016-07-24 22:30:05,578 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{50, 4, 19, 2006/12/12 23:59:44, 1, 1700, 0, 2016-07-24 22:30:05.578, foo, 2016-07-24 22:30:05.578, foo, 0}
2016-07-24 22:30:05,579 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{51, 4, 11, 2007/11/21 02:13:00.354, 4, 1700, 1, 2016-07-24 22:30:05.579, foo, 2016-07-24 22:30:05.579, foo, 0}
2016-07-24 22:30:05,580 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{52, 20, 17, 2006/12/23 23:59:40, 1, 400, 0, 2016-07-24 22:30:05.58, foo, 2016-07-24 22:30:05.58, foo, 0}
2016-07-24 22:30:05,581 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{53, 13, 16, 2007/12/28 12:13:10.355, 1, 600000, 1, 2016-07-24 22:30:05.581, foo, 2016-07-24 22:30:05.581, foo, 0}
2016-07-24 22:30:05,581 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{54, 16, 14, 2006/02/22 23:59:41, 2, 1700, 1, 2016-07-24 22:30:05.581, foo, 2016-07-24 22:30:05.581, foo, 0}
2016-07-24 22:30:05,582 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{55, 3, 3, 2007/07/21 12:13:00.356, 1, 1800, 1, 2016-07-24 22:30:05.582, foo, 2016-07-24 22:30:05.582, foo, 0}
2016-07-24 22:30:05,583 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{56, 2, 8, 2006/12/22 23:59:42, 1, 2000, 1, 2016-07-24 22:30:05.583, foo, 2016-07-24 22:30:05.583, foo, 0}
2016-07-24 22:30:05,584 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{57, 6, 19, 2007/02/01 02:13:00.357, 2, 1000, 0, 2016-07-24 22:30:05.584, foo, 2016-07-24 22:30:05.584, foo, 0}
2016-07-24 22:30:05,585 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{58, 2, 12, 2006/12/12 23:59:43, 1, 4000000, 1, 2016-07-24 22:30:05.585, foo, 2016-07-24 22:30:05.585, foo, 0}
2016-07-24 22:30:05,586 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{59, 4, 18, 2007/05/01 02:03:00.358, 1, 380, 1, 2016-07-24 22:30:05.586, foo, 2016-07-24 22:30:05.586, foo, 0}
2016-07-24 22:30:05,588 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{60, 4, 20, 2006/12/12 23:59:44, 2, 680, 0, 2016-07-24 22:30:05.588, foo, 2016-07-24 22:30:05.588, foo, 0}
2016-07-24 22:30:05,589 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{61, 1, 16, 2008-03-03 06:34:56.000, 3, 12000000, 1, 2016-07-24 22:30:05.589, foo, 2016-07-24 22:30:05.589, foo, 0}
2016-07-24 22:30:05,591 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{62, 1, 2, 2009-06-04 06:34:56.000, 12, 20000, 1, 2016-07-24 22:30:05.591, foo, 2016-07-24 22:30:05.591, foo, 0}
2016-07-24 22:30:05,593 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{63, 1, 6, 2010-09-26 06:34:56.000, 2, 2000, 1, 2016-07-24 22:30:05.593, foo, 2016-07-24 22:30:05.593, foo, 0}
2016-07-24 22:30:05,595 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{64, 1, 8, 2011-03-03 09:45:29.000, 1, 50, 1, 2016-07-24 22:30:05.594, foo, 2016-07-24 22:30:05.594, foo, 0}
2016-07-24 22:30:05,596 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{65, 1, 13, 2012-06-04 09:45:29.000, 1, 1000000, 1, 2016-07-24 22:30:05.596, foo, 2016-07-24 22:30:05.596, foo, 0}
2016-07-24 22:30:05,597 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{66, 1, 13, 2013-09-26 09:45:29.000, 1, 900000, 1, 2016-07-24 22:30:05.597, foo, 2016-07-24 22:30:05.597, foo, 0}
2016-07-24 22:30:05,598 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{67, 1, 5, 2014-03-03 21:02:12.000, 2, 3000, 1, 2016-07-24 22:30:05.598, foo, 2016-07-24 22:30:05.598, foo, 0}
2016-07-24 22:30:05,599 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{68, 1, 17, 2015-06-04 21:02:12.000, 30, 3000, 1, 2016-07-24 22:30:05.599, foo, 2016-07-24 22:30:05.599, foo, 0}
2016-07-24 22:30:05,600 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{69, 1, 17, 2016-09-26 21:02:12.000, 1, 1000, 1, 2016-07-24 22:30:05.6, foo, 2016-07-24 22:30:05.6, foo, 0}
2016-07-24 22:30:05,601 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{70, 1, 17, 2017-03-03 01:11:00.000, 1, 1200, 1, 2016-07-24 22:30:05.601, foo, 2016-07-24 22:30:05.601, foo, 0}
2016-07-24 22:30:05,645 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 70 rows are loaded to PURCHASE
2016-07-24 22:30:05,646 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{1, 1, 1800, 2006/12/25 23:59:59, BAK, 2016-07-24 22:30:05.646, foo, 2016-07-24 22:30:05.646, foo}
2016-07-24 22:30:05,648 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{2, 2, 1700, 2007/11/13 16:16:16, BAK, 2016-07-24 22:30:05.647, foo, 2016-07-24 22:30:05.648, foo}
2016-07-24 22:30:05,649 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{3, 3, 900, 2006/12/23 23:56:29, CRC, 2016-07-24 22:30:05.648, foo, 2016-07-24 22:30:05.648, foo}
2016-07-24 22:30:05,650 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{4, 3, 900, 2006/12/23 23:56:30, HAN, 2016-07-24 22:30:05.649, foo, 2016-07-24 22:30:05.649, foo}
2016-07-24 22:30:05,650 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{5, 4, 1700, 2007/12/01 02:13:00, HAN, 2016-07-24 22:30:05.65, foo, 2016-07-24 22:30:05.65, foo}
2016-07-24 22:30:05,651 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{6, 5, 800.20, 2008/04/04 23:12:59, HAN, 2016-07-24 22:30:05.651, foo, 2016-07-24 22:30:05.651, foo}
2016-07-24 22:30:05,652 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{7, 5, 1000.90, 2008/05/04 23:12:59, CRC, 2016-07-24 22:30:05.652, foo, 2016-07-24 22:30:05.652, foo}
2016-07-24 22:30:05,653 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{8, 6, 1000, 2002/01/01 16:32:01, CRC, 2016-07-24 22:30:05.653, foo, 2016-07-24 22:30:05.653, foo}
2016-07-24 22:30:05,654 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{9, 6, 400.8, 2002/01/01 16:32:01, CRC, 2016-07-24 22:30:05.654, foo, 2016-07-24 22:30:05.654, foo}
2016-07-24 22:30:05,655 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{10, 6, 599.2, 2002/01/01 16:32:01, HAN, 2016-07-24 22:30:05.655, foo, 2016-07-24 22:30:05.655, foo}
2016-07-24 22:30:05,656 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{11, 7, 300, 2006/01/28 23:59:59, CRC, 2016-07-24 22:30:05.656, foo, 2016-07-24 22:30:05.656, foo}
2016-07-24 22:30:05,658 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{12, 8, 535.5, 2007/11/09 16:23:00, BAK, 2016-07-24 22:30:05.658, foo, 2016-07-24 22:30:05.658, foo}
2016-07-24 22:30:05,659 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{13, 8, 999.5, 2014/11/09 16:23:05, BAK, 2016-07-24 22:30:05.659, foo, 2016-07-24 22:30:05.659, foo}
2016-07-24 22:30:05,660 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{14, 9, 1700, 2006/12/22 23:59:59, BAK, 2016-07-24 22:30:05.66, foo, 2016-07-24 22:30:05.66, foo}
2016-07-24 22:30:05,661 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{15, 11, 1799.2, 2014/11/09 16:23:01, CRC, 2016-07-24 22:30:05.661, foo, 2016-07-24 22:30:05.661, foo}
2016-07-24 22:30:05,662 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{16, 11, 0.8, 2014/11/09 16:23:01, HAN, 2016-07-24 22:30:05.662, foo, 2016-07-24 22:30:05.662, foo}
2016-07-24 22:30:05,663 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{17, 12, 1690, 2011/12/22 23:59:12, HAN, 2016-07-24 22:30:05.663, foo, 2016-07-24 22:30:05.663, foo}
2016-07-24 22:30:05,664 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{18, 12, 10, 2011/12/22 23:59:12, CRC, 2016-07-24 22:30:05.664, foo, 2016-07-24 22:30:05.664, foo}
2016-07-24 22:30:05,665 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{19, 13, 1800.7, 2007/11/01 02:13:00, CRC, 2016-07-24 22:30:05.665, foo, 2016-07-24 22:30:05.665, foo}
2016-07-24 22:30:05,666 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{20, 14, 1700, 2008/11/09 16:23:02, BAK, 2016-07-24 22:30:05.666, foo, 2016-07-24 22:30:05.666, foo}
2016-07-24 22:30:05,667 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{21, 15, 300, 2006/12/22 23:59:32, HAN, 2016-07-24 22:30:05.667, foo, 2016-07-24 22:30:05.667, foo}
2016-07-24 22:30:05,668 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{22, 15, 600, 2007/12/22 23:59:32, BAK, 2016-07-24 22:30:05.668, foo, 2016-07-24 22:30:05.668, foo}
2016-07-24 22:30:05,669 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{23, 15, 900, 2008/12/22 23:59:32, HAN, 2016-07-24 22:30:05.669, foo, 2016-07-24 22:30:05.669, foo}
2016-07-24 22:30:05,670 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{24, 16, 2000, 2012/11/01 02:13:00, BAK, 2016-07-24 22:30:05.67, foo, 2016-07-24 22:30:05.67, foo}
2016-07-24 22:30:05,670 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{25, 18, 1535, 2013/11/01 02:13:00, HAN, 2016-07-24 22:30:05.67, foo, 2016-07-24 22:30:05.67, foo}
2016-07-24 22:30:05,671 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{26, 19, 1700, 2007/11/01 02:13:00, HAN, 2016-07-24 22:30:05.671, foo, 2016-07-24 22:30:05.671, foo}
2016-07-24 22:30:05,672 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{27, 20, 5, 2006/12/22 23:59:35, HAN, 2016-07-24 22:30:05.672, foo, 2016-07-24 22:30:05.672, foo}
2016-07-24 22:30:05,673 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{28, 21, 399999, 2006/12/22 23:59:35, BAK, 2016-07-24 22:30:05.673, foo, 2016-07-24 22:30:05.673, foo}
2016-07-24 22:30:05,675 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{29, 22, 1800, 2007/11/01 02:13:00, BAK, 2016-07-24 22:30:05.675, foo, 2016-07-24 22:30:05.675, foo}
2016-07-24 22:30:05,676 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{30, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-24 22:30:05.676, foo, 2016-07-24 22:30:05.676, foo}
2016-07-24 22:30:05,678 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{31, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-24 22:30:05.678, foo, 2016-07-24 22:30:05.678, foo}
2016-07-24 22:30:05,679 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{32, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-24 22:30:05.679, foo, 2016-07-24 22:30:05.679, foo}
2016-07-24 22:30:05,681 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{33, 24, 1000, 2012/09/11 12:13:00, BAK, 2016-07-24 22:30:05.68, foo, 2016-07-24 22:30:05.68, foo}
2016-07-24 22:30:05,682 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{34, 24, 800, 2015/09/11 12:13:00, BAK, 2016-07-24 22:30:05.682, foo, 2016-07-24 22:30:05.682, foo}
2016-07-24 22:30:05,683 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{35, 25, 1700, 2013/12/22 23:59:37, BAK, 2016-07-24 22:30:05.683, foo, 2016-07-24 22:30:05.683, foo}
2016-07-24 22:30:05,683 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{36, 26, 1800, 2005/12/21 12:13:00, BAK, 2016-07-24 22:30:05.683, foo, 2016-07-24 22:30:05.683, foo}
2016-07-24 22:30:05,684 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{37, 27, 2000, 2006/12/22 23:59:38, HAN, 2016-07-24 22:30:05.684, foo, 2016-07-24 22:30:05.684, foo}
2016-07-24 22:30:05,686 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{38, 28, 600, 2007/11/01 02:13:00, BAK, 2016-07-24 22:30:05.685, foo, 2016-07-24 22:30:05.685, foo}
2016-07-24 22:30:05,686 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{39, 29, 1535, 2006/12/22 23:59:39, BAK, 2016-07-24 22:30:05.686, foo, 2016-07-24 22:30:05.686, foo}
2016-07-24 22:30:05,687 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{40, 30, 100, 2010/09/01 02:13:00, HAN, 2016-07-24 22:30:05.687, foo, 2016-07-24 22:30:05.687, foo}
2016-07-24 22:30:05,688 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{41, 30, 200, 2011/10/31 02:13:00, CRC, 2016-07-24 22:30:05.688, foo, 2016-07-24 22:30:05.688, foo}
2016-07-24 22:30:05,690 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{42, 30, 300.75, 2012/11/01 02:13:00, CRC, 2016-07-24 22:30:05.69, foo, 2016-07-24 22:30:05.69, foo}
2016-07-24 22:30:05,692 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{43, 30, 400.25, 2013/12/01 02:13:00, HAN, 2016-07-24 22:30:05.692, foo, 2016-07-24 22:30:05.692, foo}
2016-07-24 22:30:05,693 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{44, 30, 300, 2014/09/01 02:13:00, HAN, 2016-07-24 22:30:05.693, foo, 2016-07-24 22:30:05.693, foo}
2016-07-24 22:30:05,694 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{45, 30, 700, 2014/10/01 02:13:00, HAN, 2016-07-24 22:30:05.694, foo, 2016-07-24 22:30:05.694, foo}
2016-07-24 22:30:05,696 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{46, 31, 1700.85, 2006/12/22 23:59:40, HAN, 2016-07-24 22:30:05.696, foo, 2016-07-24 22:30:05.696, foo}
2016-07-24 22:30:05,698 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{47, 32, 1800, 2009/12/28 12:13:10, HAN, 2016-07-24 22:30:05.698, foo, 2016-07-24 22:30:05.698, foo}
2016-07-24 22:30:05,700 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{48, 33, 1700, 2006/12/22 23:59:41, CRC, 2016-07-24 22:30:05.699, foo, 2016-07-24 22:30:05.699, foo}
2016-07-24 22:30:05,701 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{49, 34, 1800, 2007/05/21 12:13:00, BAK, 2016-07-24 22:30:05.701, foo, 2016-07-24 22:30:05.701, foo}
2016-07-24 22:30:05,702 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{50, 35, 2000, 2006/12/12 23:59:42, CRC, 2016-07-24 22:30:05.702, foo, 2016-07-24 22:30:05.702, foo}
2016-07-24 22:30:05,703 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{51, 36, 300.1, 2012/05/01 02:13:00, CRC, 2016-07-24 22:30:05.703, foo, 2016-07-24 22:30:05.703, foo}
2016-07-24 22:30:05,704 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{52, 36, 300.8, 2013/05/01 02:13:00, HAN, 2016-07-24 22:30:05.704, foo, 2016-07-24 22:30:05.704, foo}
2016-07-24 22:30:05,704 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{53, 36, 300.25, 2014/05/01 02:13:00, HAN, 2016-07-24 22:30:05.704, foo, 2016-07-24 22:30:05.704, foo}
2016-07-24 22:30:05,705 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{54, 37, 1535, 2006/12/12 23:59:43, HAN, 2016-07-24 22:30:05.705, foo, 2016-07-24 22:30:05.705, foo}
2016-07-24 22:30:05,706 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{55, 38, 1700, 2007/05/01 02:03:00, HAN, 2016-07-24 22:30:05.706, foo, 2016-07-24 22:30:05.706, foo}
2016-07-24 22:30:05,707 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{56, 40, 128, 2007/05/01 12:13:00, BAK, 2016-07-24 22:30:05.707, foo, 2016-07-24 22:30:05.707, foo}
2016-07-24 22:30:05,708 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{57, 40, 256, 2013/05/01 12:13:00, BAK, 2016-07-24 22:30:05.708, foo, 2016-07-24 22:30:05.708, foo}
2016-07-24 22:30:05,709 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{58, 40, 512, 2009/05/01 12:13:00, CRC, 2016-07-24 22:30:05.709, foo, 2016-07-24 22:30:05.709, foo}
2016-07-24 22:30:05,710 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{59, 41, 1700, 2007/11/01 02:13:00, HAN, 2016-07-24 22:30:05.71, foo, 2016-07-24 22:30:05.71, foo}
2016-07-24 22:30:05,711 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{60, 42, 30000000, 2014/03/22 21:59:40, HAN, 2016-07-24 22:30:05.711, foo, 2016-07-24 22:30:05.711, foo}
2016-07-24 22:30:05,712 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{61, 43, 1800, 2006/12/28 12:13:10, BAK, 2016-07-24 22:30:05.712, foo, 2016-07-24 22:30:05.712, foo}
2016-07-24 22:30:05,712 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{62, 44, 1700, 2006/12/22 23:59:41, BAK, 2016-07-24 22:30:05.712, foo, 2016-07-24 22:30:05.712, foo}
2016-07-24 22:30:05,713 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{63, 45, 1800, 2007/05/21 12:13:00, CRC, 2016-07-24 22:30:05.713, foo, 2016-07-24 22:30:05.713, foo}
2016-07-24 22:30:05,714 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{64, 46, 2000, 2010/12/12 23:59:42, BAK, 2016-07-24 22:30:05.714, foo, 2016-07-24 22:30:05.714, foo}
2016-07-24 22:30:05,715 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{65, 48, 90000, 2006/12/12 23:59:43, HAN, 2016-07-24 22:30:05.715, foo, 2016-07-24 22:30:05.715, foo}
2016-07-24 22:30:05,716 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{66, 48, 10000, 2006/12/12 23:59:43, BAK, 2016-07-24 22:30:05.716, foo, 2016-07-24 22:30:05.716, foo}
2016-07-24 22:30:05,716 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{67, 49, 1700.66, 2007/05/01 02:03:00, HAN, 2016-07-24 22:30:05.716, foo, 2016-07-24 22:30:05.716, foo}
2016-07-24 22:30:05,717 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{68, 51, 1700, 2007/11/21 02:13:00, BAK, 2016-07-24 22:30:05.717, foo, 2016-07-24 22:30:05.717, foo}
2016-07-24 22:30:05,718 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{69, 52, 100, 2006/12/23 23:59:40, BAK, 2016-07-24 22:30:05.718, foo, 2016-07-24 22:30:05.718, foo}
2016-07-24 22:30:05,719 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{70, 52, 40, 2007/12/23 23:59:40, HAN, 2016-07-24 22:30:05.719, foo, 2016-07-24 22:30:05.719, foo}
2016-07-24 22:30:05,719 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{71, 52, 40, 2008/12/23 23:59:40, HAN, 2016-07-24 22:30:05.719, foo, 2016-07-24 22:30:05.719, foo}
2016-07-24 22:30:05,721 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{72, 52, 40, 2009/12/23 23:59:40, HAN, 2016-07-24 22:30:05.72, foo, 2016-07-24 22:30:05.721, foo}
2016-07-24 22:30:05,721 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{73, 52, 40, 2010/12/23 23:59:40, BAK, 2016-07-24 22:30:05.721, foo, 2016-07-24 22:30:05.721, foo}
2016-07-24 22:30:05,722 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{74, 52, 40, 2011/12/23 23:59:40, CRC, 2016-07-24 22:30:05.722, foo, 2016-07-24 22:30:05.722, foo}
2016-07-24 22:30:05,723 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{75, 52, 40, 2012/12/23 23:59:40, BAK, 2016-07-24 22:30:05.723, foo, 2016-07-24 22:30:05.723, foo}
2016-07-24 22:30:05,723 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{76, 52, 40, 2013/12/23 23:59:40, HAN, 2016-07-24 22:30:05.723, foo, 2016-07-24 22:30:05.723, foo}
2016-07-24 22:30:05,729 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{77, 52, 40, 2014/12/23 23:59:40, HAN, 2016-07-24 22:30:05.729, foo, 2016-07-24 22:30:05.729, foo}
2016-07-24 22:30:05,731 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{78, 52, 40, 2015/12/23 23:59:40, HAN, 2016-07-24 22:30:05.731, foo, 2016-07-24 22:30:05.731, foo}
2016-07-24 22:30:05,732 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{79, 53, 600000, 2007/12/28 12:13:10, BAK, 2016-07-24 22:30:05.732, foo, 2016-07-24 22:30:05.732, foo}
2016-07-24 22:30:05,734 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{80, 54, 1700.42, 2008/02/22 23:59:41, CRC, 2016-07-24 22:30:05.734, foo, 2016-07-24 22:30:05.734, foo}
2016-07-24 22:30:05,735 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{81, 55, 1600, 2012/07/21 12:13:00, HAN, 2016-07-24 22:30:05.735, foo, 2016-07-24 22:30:05.735, foo}
2016-07-24 22:30:05,735 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{82, 55, 200, 2008/07/21 12:13:00, CRC, 2016-07-24 22:30:05.735, foo, 2016-07-24 22:30:05.735, foo}
2016-07-24 22:30:05,736 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{83, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-24 22:30:05.736, foo, 2016-07-24 22:30:05.736, foo}
2016-07-24 22:30:05,737 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{84, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-24 22:30:05.737, foo, 2016-07-24 22:30:05.737, foo}
2016-07-24 22:30:05,738 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{85, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-24 22:30:05.738, foo, 2016-07-24 22:30:05.738, foo}
2016-07-24 22:30:05,739 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{86, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-24 22:30:05.739, foo, 2016-07-24 22:30:05.739, foo}
2016-07-24 22:30:05,740 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{87, 57, 999, 2014/02/01 02:13:00, HAN, 2016-07-24 22:30:05.739, foo, 2016-07-24 22:30:05.739, foo}
2016-07-24 22:30:05,740 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{88, 58, 4000000, 2006/12/12 23:59:43, HAN, 2016-07-24 22:30:05.74, foo, 2016-07-24 22:30:05.74, foo}
2016-07-24 22:30:05,741 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{89, 59, 380.77, 2013/05/01 02:03:00, CRC, 2016-07-24 22:30:05.741, foo, 2016-07-24 22:30:05.741, foo}
2016-07-24 22:30:05,742 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{90, 60, 675.88, 2006/12/12 23:59:44, BAK, 2016-07-24 22:30:05.742, foo, 2016-07-24 22:30:05.742, foo}
2016-07-24 22:30:05,742 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{91, 61, 12000000, 2008/03/03 06:34:56, HAN, 2016-07-24 22:30:05.742, foo, 2016-07-24 22:30:05.742, foo}
2016-07-24 22:30:05,743 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{92, 62, 20000, 2009/06/04 06:34:56, HAN, 2016-07-24 22:30:05.743, foo, 2016-07-24 22:30:05.743, foo}
2016-07-24 22:30:05,744 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{93, 63, 2000, 2010/09/26 06:34:56, HAN, 2016-07-24 22:30:05.744, foo, 2016-07-24 22:30:05.744, foo}
2016-07-24 22:30:05,745 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{94, 64, 50, 2011/03/03 09:45:29, BAK, 2016-07-24 22:30:05.745, foo, 2016-07-24 22:30:05.745, foo}
2016-07-24 22:30:05,745 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{95, 65, 1000000, 2012/06/04 09:45:29, BAK, 2016-07-24 22:30:05.745, foo, 2016-07-24 22:30:05.745, foo}
2016-07-24 22:30:05,746 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{96, 66, 900000, 2013/09/26 09:45:29, BAK, 2016-07-24 22:30:05.746, foo, 2016-07-24 22:30:05.746, foo}
2016-07-24 22:30:05,747 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{97, 67, 3000, 2014/03/03 21:02:12, CRC, 2016-07-24 22:30:05.747, foo, 2016-07-24 22:30:05.747, foo}
2016-07-24 22:30:05,747 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{98, 68, 3000, 2015/06/04 21:02:12, CRC, 2016-07-24 22:30:05.747, foo, 2016-07-24 22:30:05.747, foo}
2016-07-24 22:30:05,748 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{99, 69, 1000, 2016/09/26 21:02:12, CRC, 2016-07-24 22:30:05.748, foo, 2016-07-24 22:30:05.748, foo}
2016-07-24 22:30:05,749 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{100, 70, 1200, 2017/03/03 01:11:00, HAN, 2016-07-24 22:30:05.749, foo, 2016-07-24 22:30:05.749, foo}
2016-07-24 22:30:05,813 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 100 rows are loaded to PURCHASE_PAYMENT
2016-07-24 22:30:05,814 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():378) - ...Checking implicit set of classification
2016-07-24 22:30:05,835 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-24 22:30:05,843 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-24 22:30:05,853 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-24 22:30:05,857 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-24 22:30:05,860 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-24 22:30:05,863 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-24 22:30:05,866 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-24 22:30:05,878 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-07-24 22:30:05,880 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-07-24 22:30:05,883 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct MOBILE_LOGIN_FLG from MEMBER_LOGIN where MOBILE_LOGIN_FLG not in (1, 0)
2016-07-24 22:30:05,887 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_COMPLETE_FLG from PURCHASE where PAYMENT_COMPLETE_FLG not in (1, 0)
2016-07-24 22:30:05,890 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_METHOD_CODE from PURCHASE_PAYMENT where PAYMENT_METHOD_CODE not in ('HAN', 'BAK', 'CRC')
2016-07-24 22:30:05,897 [main] INFO  (DfTakeFinallyProcess#takeFinally():219) - 
2016-07-24 22:30:05,898 [main] INFO  (DfTakeFinallyProcess#takeFinally():220) - * * * * * * * **
2016-07-24 22:30:05,898 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - *              *
2016-07-24 22:30:05,899 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * Take Finally *
2016-07-24 22:30:05,899 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2016-07-24 22:30:05,899 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * * * * * * * **
2016-07-24 22:30:05,905 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: take-finally.sql
2016-07-24 22:30:05,907 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Member addresses should be only one at any time.
-- - - - - - - - - - -/
select adr.MEMBER_ADDRESS_ID, adr.MEMBER_ID
     , adr.VALID_BEGIN_DATE, adr.VALID_END_DATE
     , adr.ADDRESS
  from MEMBER_ADDRESS adr
 where exists (select subadr.MEMBER_ADDRESS_ID
                 from MEMBER_ADDRESS subadr
                where subadr.MEMBER_ID = adr.MEMBER_ID
                  and subadr.VALID_BEGIN_DATE > adr.VALID_BEGIN_DATE
                  -- 有効期間が一日だけ重複しているパターンも検出
                  and subadr.VALID_BEGIN_DATE <= adr.VALID_END_DATE
       )
2016-07-24 22:30:05,911 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 正式会員日時を持ってる仮会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'PRV'
   and mem.FORMALIZED_DATETIME is not NULL
2016-07-24 22:30:05,913 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- まだ生まれていない会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.BIRTHDATE > now()
2016-07-24 22:30:05,914 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 退会会員が退会情報を持っていることをアサート
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'WDL'
   and not exists (select wdl.MEMBER_ID
                     from MEMBER_WITHDRAWAL wdl
                    where wdl.MEMBER_ID = mem.MEMBER_ID
       )
2016-07-24 22:30:05,915 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=4 failure=0
2016-07-24 22:30:05,916 [main] INFO  (DfSqlFileFireMan#fire():89) - {Take Finally}: success=4 failure=0 (in 1 files)
2016-07-24 22:30:05,917 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-24 22:30:05,922 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s952ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = root
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=49 failure=0 (in 3 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql
  o replace-schema-50-procedure.sql

 {Load Data}: loaded-files=3
  (common)
  o 10-master.xls
  (ut)
  o 20-member.xls
  o 30-product.xls

 {Take Finally}: success=4 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2016-07-24 22:32:06,949 [main] INFO  (DfReplaceSchemaTask#begin():91) - +------------------------------------------+
2016-07-24 22:32:06,952 [main] INFO  (DfReplaceSchemaTask#begin():92) - |                                          |
2016-07-24 22:32:06,953 [main] INFO  (DfReplaceSchemaTask#begin():93) - |              ReplaceSchema               |
2016-07-24 22:32:06,957 [main] INFO  (DfReplaceSchemaTask#begin():101) - |                                          |
2016-07-24 22:32:06,957 [main] INFO  (DfReplaceSchemaTask#begin():102) - +------------------------------------------+
2016-07-24 22:32:06,959 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():342) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2016-07-24 22:32:08,145 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-24 22:32:08,146 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-24 22:32:08,147 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/maihamadb
2016-07-24 22:32:08,147 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2016-07-24 22:32:08,155 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-24 22:32:08,539 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-24 22:32:08,540 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-24 22:32:08,553 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2016-07-24 22:32:08,553 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2016-07-24 22:32:08,554 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2016-07-24 22:32:08,555 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2016-07-24 22:32:08,556 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2016-07-24 22:32:08,556 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2016-07-24 22:32:08,568 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-24 22:32:08,568 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-24 22:32:08,569 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-24 22:32:08,711 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_ADDRESS
2016-07-24 22:32:08,716 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_FOLLOWING
2016-07-24 22:32:08,720 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_LOGIN
2016-07-24 22:32:08,724 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_SECURITY
2016-07-24 22:32:08,729 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_SERVICE
2016-07-24 22:32:08,737 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_WITHDRAWAL
2016-07-24 22:32:08,751 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table PURCHASE_PAYMENT
2016-07-24 22:32:08,769 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER drop foreign key FK_MEMBER_MEMBER_STATUS
2016-07-24 22:32:08,791 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_ADDRESS drop foreign key FK_MEMBER_ADDRESS_MEMBER
2016-07-24 22:32:08,810 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_ADDRESS drop foreign key FK_MEMBER_ADDRESS_REGION
2016-07-24 22:32:08,830 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_FOLLOWING drop foreign key FK_MEMBER_FOLLOWING_MY_MEMBER
2016-07-24 22:32:08,848 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_FOLLOWING drop foreign key FK_MEMBER_FOLLOWING_YOUR_MEMBER
2016-07-24 22:32:08,871 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_LOGIN drop foreign key FK_MEMBER_LOGIN_MEMBER_STATUS
2016-07-24 22:32:08,888 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_LOGIN drop foreign key FK_MEMBER_LOGIN_MEMBER
2016-07-24 22:32:08,911 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_SECURITY drop foreign key FK_MEMBER_SECURITY_MEMBER
2016-07-24 22:32:08,934 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_SERVICE drop foreign key FK_MEMBER_SERVICE_MEMBER
2016-07-24 22:32:08,949 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_SERVICE drop foreign key FK_MEMBER_SERVICE_SERVICE_RANK_CODE
2016-07-24 22:32:08,973 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_WITHDRAWAL drop foreign key FK_MEMBER_WITHDRAWAL_MEMBER
2016-07-24 22:32:08,987 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_WITHDRAWAL drop foreign key FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON
2016-07-24 22:32:09,001 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PRODUCT drop foreign key FK_PRODUCT_PRODUCT_CATEGORY
2016-07-24 22:32:09,018 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PRODUCT drop foreign key FK_PRODUCT_PRODUCT_STATUS
2016-07-24 22:32:09,030 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PRODUCT_CATEGORY drop foreign key FK_PRODUCT_CATEGORY_PARENT
2016-07-24 22:32:09,051 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PURCHASE drop foreign key FK_PURCHASE_MEMBER
2016-07-24 22:32:09,069 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PURCHASE drop foreign key FK_PURCHASE_PRODUCT
2016-07-24 22:32:09,090 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PURCHASE_PAYMENT drop foreign key FK_PURCHASE_PAYMENT_PURCHASE
2016-07-24 22:32:09,113 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER
2016-07-24 22:32:09,117 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_ADDRESS
2016-07-24 22:32:09,121 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_FOLLOWING
2016-07-24 22:32:09,125 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_LOGIN
2016-07-24 22:32:09,128 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_SECURITY
2016-07-24 22:32:09,133 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_SERVICE
2016-07-24 22:32:09,138 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_STATUS
2016-07-24 22:32:09,141 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_WITHDRAWAL
2016-07-24 22:32:09,144 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PRODUCT
2016-07-24 22:32:09,148 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PRODUCT_CATEGORY
2016-07-24 22:32:09,152 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PRODUCT_STATUS
2016-07-24 22:32:09,155 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PURCHASE
2016-07-24 22:32:09,158 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PURCHASE_PAYMENT
2016-07-24 22:32:09,161 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table REGION
2016-07-24 22:32:09,166 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table SERVICE_RANK
2016-07-24 22:32:09,170 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table WITHDRAWAL_REASON
2016-07-24 22:32:09,215 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop procedure SP_IN_OUT_PARAMETER
2016-07-24 22:32:09,217 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop procedure SP_RETURN_RESULT_SET
2016-07-24 22:32:09,219 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2016-07-24 22:32:09,220 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2016-07-24 22:32:09,220 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2016-07-24 22:32:09,221 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2016-07-24 22:32:09,221 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2016-07-24 22:32:09,221 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2016-07-24 22:32:09,225 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-00-system.sql
2016-07-24 22:32:09,229 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2016-07-24 22:32:09,230 [main] INFO  (DfCreateSchemaProcess$1#dispatch():295) - ...Creating a connection to system
2016-07-24 22:32:09,231 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():520) - ...Creating a connection for additional user: root
2016-07-24 22:32:09,247 [main] INFO  (DfCreateSchemaProcess$1#dispatch():321) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2016-07-24 22:32:09,248 [main] INFO  (DfCreateSchemaProcess$1#dispatch():323) -  -> Can't create database 'maihamadb'; database exists
2016-07-24 22:32:09,249 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():433) - ...Reviving the user 'system' until the end of this SQL file
2016-07-24 22:32:09,250 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on maihamadb.*
  to root@localhost identified by ''
2016-07-24 22:32:09,254 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2016-07-24 22:32:09,257 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-07-24 22:32:09,258 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-10-basic.sql
2016-07-24 22:32:09,258 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():370) - ...Saying good-bye to the user 'system' again
2016-07-24 22:32:09,259 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():374) - ...Clearing revived users
2016-07-24 22:32:09,259 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():381) - ...Coming back to the main user from the user 'system'
2016-07-24 22:32:09,264 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER(
    MEMBER_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員ID: 会員を識別するID。連番として基本的に自動採番される。
（会員IDだけに限らず）採番方法はDBMSによって変わる。',
    MEMBER_NAME VARCHAR(160) NOT NULL COMMENT '会員名称: 会員のフルネームの名称。',
    MEMBER_ACCOUNT VARCHAR(50) NOT NULL COMMENT '会員アカウント: 会員がログイン時に利用するアカウントNO。',
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード',
    FORMALIZED_DATETIME DATETIME COMMENT '正式会員日時: 会員が正式に確定した日時。一度確定したら更新されない。
仮会員のときはnull。',
    BIRTHDATE DATE COMMENT '生年月日: 必須項目ではないので、このデータがない会員もいる。',
    REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時: レコードが登録された日時。共通カラムの一つ。',
    REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ: レコードを登録したユーザ。共通カラムの一つ。',
    UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時: レコードが（最後に）更新された日時。共通カラムの一つ。',
    UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ: レコードを更新したユーザ。',
    VERSION_NO BIGINT NOT NULL COMMENT 'バージョンNO: レコードのバージョンを示すNO。
更新回数と等しく、主に排他制御のために利用される。',
    PRIMARY KEY (MEMBER_ID),
    UNIQUE (MEMBER_ACCOUNT)
) COMMENT='会員: 会員登録時にデータが登録される。
基本的に物理削除はなく、退会したらステータスが退会会員になる。'
2016-07-24 22:32:09,292 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_ADDRESS(
    MEMBER_ADDRESS_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員住所ID: 会員住所を識別するID。
履歴分も含むテーブルなので、これ自体はFKではない。',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
履歴分を含むため、これだけではユニークにはならない。',
    VALID_BEGIN_DATE DATE NOT NULL COMMENT '有効開始日: 一つの有効期間の開始を示す日付。
前の有効終了日の次の日の値が格納される。',
    VALID_END_DATE DATE NOT NULL COMMENT '有効終了日: 有効期間の終了日。
次の有効開始日の一日前の値が格納される。
ただし、次の有効期間がない場合は 9999/12/31 となる。',
    ADDRESS VARCHAR(200) NOT NULL COMMENT '住所: まるごと住所',
    REGION_ID INTEGER NOT NULL COMMENT '地域ID: 地域を参照するID。
ここでは特に住所の内容と連動しているわけではない。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ADDRESS_ID),
    UNIQUE (MEMBER_ID, VALID_BEGIN_DATE)
) COMMENT='会員住所情報: 会員の住所に関する情報。
同時に有効期間ごとに履歴管理されている。'
2016-07-24 22:32:09,314 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_LOGIN(
    MEMBER_LOGIN_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員ログインID',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID',
    LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時: ログインした瞬間の日時。',
    MOBILE_LOGIN_FLG INTEGER NOT NULL COMMENT 'モバイルログインフラグ: モバイル機器からのログインか否か。',
    LOGIN_MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT 'ログイン会員ステータスコード: ログイン時の会員ステータス',
    PRIMARY KEY (MEMBER_LOGIN_ID),
    UNIQUE (MEMBER_ID, LOGIN_DATETIME)
) COMMENT='会員ログイン情報: ログインするたびに登録されるログイン履歴。'
2016-07-24 22:32:09,330 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SECURITY(
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: そのまま one-to-one を構成するためのFKとなる。',
    LOGIN_PASSWORD VARCHAR(50) NOT NULL COMMENT 'ログインパスワード: ログイン時に利用するパスワード。
本当は良くないが、Exampleなのでひとまず暗号化していない。',
    REMINDER_QUESTION VARCHAR(50) NOT NULL COMMENT 'リマインダ質問: パスワードを忘れた際のリマインダ機能における質問の内容。',
    REMINDER_ANSWER VARCHAR(50) NOT NULL COMMENT 'リマインダ回答: パスワードを忘れた際のリマインダ機能における質問の答え。',
    REMINDER_USE_COUNT INTEGER NOT NULL COMMENT 'リマインダ回数: 忘れっぽい人を分析するためのもの。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある'
2016-07-24 22:32:09,354 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SERVICE(
	MEMBER_SERVICE_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員サービスID: 代理キー。律儀にIDの役割を分ける',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。ユニークなので、会員とは one-to-one の関係に。',
    SERVICE_POINT_COUNT INTEGER NOT NULL COMMENT 'サービスポイント数: 会員が現在利用できるサービスポイントの数。
基本的に、購入時には増えてポイントを使ったら減る。',
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを参照するコード。
どんなランクがあるのかドキドキですね。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_SERVICE_ID),
    UNIQUE (MEMBER_ID)
) COMMENT='会員サービス: 会員のサービス情報（ポイントサービスなど）。'
2016-07-24 22:32:09,371 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_WITHDRAWAL(
    MEMBER_ID INTEGER NOT NULL,
    WITHDRAWAL_REASON_CODE CHAR(3) COMMENT '退会理由コード: 退会した定型理由を参照するコード。
何も言わずに退会する会員もいるので必須項目ではない。',
    WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト: 会員がフリーテキストで入力できる退会理由。
もう言いたいこと言ってもらう感じ。',
    WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT '退会日時: 退会した瞬間の日時。
正式会員日時と違い、こっちはone-to-oneの別テーブルで。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員退会情報: 退会会員の退会に関する詳細な情報。
退会会員のみデータが存在する。'
2016-07-24 22:32:09,384 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE(
    PURCHASE_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入ID: 連番',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
購入を識別する自然キー（複合ユニーク制約）の筆頭要素。',
    PRODUCT_ID INTEGER NOT NULL COMMENT '商品ID: 商品を参照するID。',
    PURCHASE_DATETIME DATETIME NOT NULL COMMENT '購入日時: 購入した瞬間の日時。',
    PURCHASE_COUNT INTEGER NOT NULL COMMENT '購入数量: 購入した商品の（一回の購入における）数量。',
    PURCHASE_PRICE INTEGER NOT NULL COMMENT '購入価格: 購入によって実際に会員が支払った（支払う予定の）価格。
基本は商品の定価に購入数量を掛けたものになるが、
ポイント利用や割引があったりと必ずしもそうはならない。',
    PAYMENT_COMPLETE_FLG INTEGER NOT NULL COMMENT '支払完了フラグ: この購入に関しての支払いが完了しているか否か。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PURCHASE_ID),
    UNIQUE (MEMBER_ID, PRODUCT_ID, PURCHASE_DATETIME),
    KEY (MEMBER_ID),
    KEY (PRODUCT_ID)
) COMMENT='購入: 一つの商品に対する一回の購入を表現する。
一回の購入で一つの商品を複数個買うこともある。'
2016-07-24 22:32:09,398 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE_PAYMENT(
    PURCHASE_PAYMENT_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入支払ID: 連番',
    PURCHASE_ID BIGINT NOT NULL COMMENT '購入ID: 支払い対象の購入へのID',
    PAYMENT_AMOUNT DECIMAL(10,2) NOT NULL COMMENT '支払金額: 支払った金額。さて、小数点なのはなぜでしょう？',
    PAYMENT_DATETIME DATETIME NOT NULL COMMENT '支払日時: 支払ったときの日時',
    PAYMENT_METHOD_CODE CHAR(3) NOT NULL COMMENT '支払方法コード: 手渡しや銀行振込など',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (PURCHASE_PAYMENT_ID)
) COMMENT='購入支払: 購入に対する支払。
分割払いもできるのでmanyとなり、会員からの孫テーブルのテストができてうれしい。'
2016-07-24 22:32:09,407 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT(
    PRODUCT_ID INTEGER AUTO_INCREMENT NOT NULL,
    PRODUCT_NAME VARCHAR(50) NOT NULL COMMENT '商品名称',
    PRODUCT_HANDLE_CODE VARCHAR(100) NOT NULL COMMENT '商品ハンドルコード: 商品を識別する業務上のコード。',
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL,
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL,
    REGULAR_PRICE INTEGER NOT NULL COMMENT '定価',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PRODUCT_ID),
    UNIQUE (PRODUCT_HANDLE_CODE)
) COMMENT='商品'
2016-07-24 22:32:09,421 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_CATEGORY(
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL COMMENT '商品カテゴリコード',
    PRODUCT_CATEGORY_NAME VARCHAR(50) NOT NULL COMMENT '商品カテゴリ名称',
    PARENT_CATEGORY_CODE CHAR(3) COMMENT '親カテゴリコード: 最上位の場合はデータなし。',
    PRIMARY KEY (PRODUCT_CATEGORY_CODE)
) COMMENT='商品カテゴリ: 商品のカテゴリを表現するマスタ。
自己参照の階層になっている。'
2016-07-24 22:32:09,430 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_STATUS(
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL COMMENT '商品ステータスコード',
    PRODUCT_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '商品ステータス名称',
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (PRODUCT_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='商品ステータス'
2016-07-24 22:32:09,442 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table REGION(
    REGION_ID INTEGER NOT NULL COMMENT '地域ID',
    REGION_NAME VARCHAR(50) NOT NULL COMMENT '地域名称',
    PRIMARY KEY (REGION_ID)
) COMMENT='地域: 主に会員の住所に対応する地域。
かなりざっくりした感じではある。'
2016-07-24 22:32:09,452 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table SERVICE_RANK(
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを識別するコード。',
    SERVICE_RANK_NAME VARCHAR(50) NOT NULL COMMENT 'サービスランク名称: サービスランクの名称。
（ゴールドとかプラチナとか基本的には威厳のある名前）',
    SERVICE_POINT_INCIDENCE NUMERIC(5, 3) NOT NULL COMMENT 'サービスポイント発生率: 購入ごとのサービスポイントの発生率。
購入価格にこの値をかけた数が発生ポイント。',
    NEW_ACCEPTABLE_FLG INTEGER NOT NULL COMMENT '新規受け入れ可能フラグ: このランクへの新規受け入れができるかどうか。',
    DESCRIPTION VARCHAR(200) NOT NULL,
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (SERVICE_RANK_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='サービスランク: 会員のサービスレベルを表現するランク。
（ゴールドとかプラチナとか）'
2016-07-24 22:32:09,464 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_STATUS(
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード: 会員ステータスを識別するコード。',
    MEMBER_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '会員ステータス名称',
    DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明: 会員ステータスそれぞれの説明。
気の利いた説明があるとディベロッパーがとても助かる。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順: UI上のステータスの表示順を示すNO。
並べるときは、このカラムに対して昇順のソート条件にする。',
    PRIMARY KEY (MEMBER_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='会員ステータス'
2016-07-24 22:32:09,474 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table WITHDRAWAL_REASON(
    WITHDRAWAL_REASON_CODE CHAR(3) NOT NULL COMMENT '退会理由コード',
    WITHDRAWAL_REASON_TEXT TEXT NOT NULL COMMENT '退会理由テキスト: 退会理由の内容。テキスト形式なので目いっぱい書けるが、
そうするとUI側できれいに見せるのが大変でしょうね。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順',
    PRIMARY KEY (WITHDRAWAL_REASON_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='退会理由: 会員に選ばせる定型的な退会理由のマスタ。'
2016-07-24 22:32:09,487 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_FOLLOWING(
    MEMBER_FOLLOWING_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員フォローイングID: 連番',
    MY_MEMBER_ID INTEGER NOT NULL COMMENT 'わたし: 気になった人がいて...勇気を振り絞った会員のID。',
    YOUR_MEMBER_ID INTEGER NOT NULL COMMENT 'あなた: いきなりのアクションに...ちょっと心揺らいだ会員のID。',
    FOLLOW_DATETIME DATETIME NOT NULL COMMENT 'その瞬間: ふりかえるとちょっと恥ずかしい気持ちになる日時',
    PRIMARY KEY (MEMBER_FOLLOWING_ID),
    UNIQUE (MY_MEMBER_ID, YOUR_MEMBER_ID)
) COMMENT='会員フォローイング: とある会員が他の会員をフォローできる。すると、フォローした会員の購入履歴が閲覧できる。'
2016-07-24 22:32:09,497 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER add constraint FK_MEMBER_MEMBER_STATUS 
    foreign key (MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-07-24 22:32:09,514 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 22:32:09,533 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_REGION 
    foreign key (REGION_ID) references REGION (REGION_ID)
2016-07-24 22:32:09,554 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER_STATUS 
    foreign key (LOGIN_MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-07-24 22:32:09,588 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 22:32:09,627 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 22:32:09,659 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_SERVICE_RANK_CODE 
    foreign key (SERVICE_RANK_CODE) references SERVICE_RANK (SERVICE_RANK_CODE)
2016-07-24 22:32:09,687 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SECURITY add constraint FK_MEMBER_SECURITY_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 22:32:09,714 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 22:32:09,734 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON 
    foreign key (WITHDRAWAL_REASON_CODE) references WITHDRAWAL_REASON (WITHDRAWAL_REASON_CODE)
2016-07-24 22:32:09,754 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 22:32:09,778 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_PRODUCT 
    foreign key (PRODUCT_ID) references PRODUCT (PRODUCT_ID)
2016-07-24 22:32:09,808 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE_PAYMENT add constraint FK_PURCHASE_PAYMENT_PURCHASE 
    foreign key (PURCHASE_ID) references PURCHASE (PURCHASE_ID)
2016-07-24 22:32:09,826 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_CATEGORY 
    foreign key (PRODUCT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-07-24 22:32:09,860 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_STATUS 
    foreign key (PRODUCT_STATUS_CODE) references PRODUCT_STATUS (PRODUCT_STATUS_CODE)
2016-07-24 22:32:09,888 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT_CATEGORY add constraint FK_PRODUCT_CATEGORY_PARENT 
    foreign key (PARENT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-07-24 22:32:09,917 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_MY_MEMBER 
    foreign key (MY_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 22:32:09,935 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_YOUR_MEMBER 
    foreign key (YOUR_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-24 22:32:09,964 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_UNIQUE_REVERSE on MEMBER_FOLLOWING(YOUR_MEMBER_ID, MY_MEMBER_ID)
2016-07-24 22:32:09,979 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_FOLLOW_DATETIME on MEMBER_FOLLOWING(FOLLOW_DATETIME)
2016-07-24 22:32:09,999 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_MEMBER_NAME on MEMBER(MEMBER_NAME)
2016-07-24 22:32:10,019 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FORMALIZED_DATETIME on MEMBER(FORMALIZED_DATETIME)
2016-07-24 22:32:10,040 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_LOGIN_DATETIME on MEMBER_LOGIN(LOGIN_DATETIME)
2016-07-24 22:32:10,058 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_SERVICE_POINT_COUNT on MEMBER_SERVICE(SERVICE_POINT_COUNT)
2016-07-24 22:32:10,070 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRODUCT_DATETIME on PURCHASE(PRODUCT_ID, PURCHASE_DATETIME)
2016-07-24 22:32:10,089 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_DATETIME_MEMBER on PURCHASE(PURCHASE_DATETIME, MEMBER_ID)
2016-07-24 22:32:10,099 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRICE on PURCHASE(PURCHASE_PRICE)
2016-07-24 22:32:10,119 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PAYMENT_DATETIME on PURCHASE_PAYMENT(PAYMENT_DATETIME, PAYMENT_AMOUNT)
2016-07-24 22:32:10,140 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PRODUCT_PRODUCT_NAME on PRODUCT(PRODUCT_NAME)
2016-07-24 22:32:10,161 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=45 failure=0
2016-07-24 22:32:10,161 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-50-procedure.sql
2016-07-24 22:32:10,162 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_IN_OUT_PARAMETER(
	in v_in_varchar varchar(32)
	, out v_out_varchar varchar(32)
	, inout v_inout_varchar varchar(32)
)
begin
	set v_out_varchar = v_inout_varchar;
	set v_inout_varchar = v_in_varchar;
end;

2016-07-24 22:32:10,164 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_RETURN_RESULT_SET(in birthdateFrom DATE)
begin
  select MEMBER_NAME, BIRTHDATE, MEMBER_STATUS_CODE
    from MEMBER
   where BIRTHDATE >= birthdateFrom
   order by BIRTHDATE desc, MEMBER_ID asc;
  select MEMBER_STATUS_CODE, MEMBER_STATUS_NAME
    from MEMBER_STATUS
   order by DISPLAY_ORDER;
end;

2016-07-24 22:32:10,166 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-07-24 22:32:10,167 [main] INFO  (DfSqlFileFireMan#fire():89) - {Create Schema}: success=49 failure=0 (in 3 files)
2016-07-24 22:32:10,168 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():564) - ...Closing connections to change-users: [system]
2016-07-24 22:32:10,298 [main] INFO  (DfLoadDataProcess#execute():129) - 
2016-07-24 22:32:10,298 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2016-07-24 22:32:10,299 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2016-07-24 22:32:10,299 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2016-07-24 22:32:10,299 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2016-07-24 22:32:10,300 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2016-07-24 22:32:10,339 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-24 22:32:10,339 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/common/xls/10-master.xls)
2016-07-24 22:32:10,339 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-24 22:32:10,666 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-24 22:32:10,667 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-24 22:32:10,667 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-24 22:32:10,714 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{PRV, 仮会員, 入会直後のステータスで一部のサイトサービスが利用可能, 3}
2016-07-24 22:32:10,773 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{FML, 正式会員, 正式な会員としてサイトサービスが利用可能, 1}
2016-07-24 22:32:10,773 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{WDL, 退会会員, 退会が確定した会員でサイトサービスはダメ, 2}
2016-07-24 22:32:10,774 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():212) - ...Skipping the terminal garbage row
2016-07-24 22:32:10,780 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to MEMBER_STATUS
2016-07-24 22:32:10,782 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{1, アメリカ}
2016-07-24 22:32:10,783 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{2, カナダ}
2016-07-24 22:32:10,783 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{3, 中国}
2016-07-24 22:32:10,784 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{4, 千葉}
2016-07-24 22:32:10,789 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to REGION
2016-07-24 22:32:10,791 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLT, PLATINUM, 12.3, 1, platinum rank, 1}
2016-07-24 22:32:10,792 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{GLD, GOLD, 9.2, 1, gold rank, 2}
2016-07-24 22:32:10,793 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{SIL, SILVER, 6.74, 1, silver rank, 3}
2016-07-24 22:32:10,794 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{BRZ, BRONZE, 2, 1, bronze rank, 4}
2016-07-24 22:32:10,794 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLS, PLASTIC, 0.1, 0, plastic rank, 5}
2016-07-24 22:32:10,800 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to SERVICE_RANK
2016-07-24 22:32:10,801 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{SIT, サイトが使いにくいから, 1}
2016-07-24 22:32:10,802 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{OTH, その他理由, 4}
2016-07-24 22:32:10,802 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{FRT, フリテンだから, 3}
2016-07-24 22:32:10,803 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{PRD, 商品に魅力がないから, 2}
2016-07-24 22:32:10,811 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to WITHDRAWAL_REASON
2016-07-24 22:32:10,812 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MSC, 音楽, null}
2016-07-24 22:32:10,813 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{FOD, 食品, null}
2016-07-24 22:32:10,813 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MCD, 音楽CD, MSC}
2016-07-24 22:32:10,814 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{INS, 楽器, MSC}
2016-07-24 22:32:10,814 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{HEB, ハーブ, FOD}
2016-07-24 22:32:10,822 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to PRODUCT_CATEGORY
2016-07-24 22:32:10,823 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{ONS, 生産販売可能, 1}
2016-07-24 22:32:10,824 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{PST, 生産中止, 2}
2016-07-24 22:32:10,825 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{SST, 販売中止, 3}
2016-07-24 22:32:10,833 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to PRODUCT_STATUS
2016-07-24 22:32:10,836 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-24 22:32:10,836 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/20-member.xls)
2016-07-24 22:32:10,836 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-24 22:32:11,002 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{1, Stojkovic, Pixy, FML, 2007/12/01 11:01:10, 1965/03/03, 2016-07-24 22:32:11.002, foo, 2016-07-24 22:32:11.002, foo, 0}
2016-07-24 22:32:11,011 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{2, Savicevic, Genius, PRV, null, 1966/09/15, 2016-07-24 22:32:11.011, foo, 2016-07-24 22:32:11.011, foo, 0}
2016-07-24 22:32:11,013 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{3, Mijatovic, Mijato, WDL, 2005/10/03 13:03:30, null, 2016-07-24 22:32:11.013, foo, 2016-07-24 22:32:11.013, foo, 0}
2016-07-24 22:32:11,016 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{4, Stankovic, Stanko, FML, 2006/09/04 14:04:40, 1978/09/11, 2016-07-24 22:32:11.016, foo, 2016-07-24 22:32:11.016, foo, 0}
2016-07-24 22:32:11,018 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{5, Milosevic, Milose, FML, 2007/08/05 15:05:50, null, 2016-07-24 22:32:11.018, foo, 2016-07-24 22:32:11.018, foo, 0}
2016-07-24 22:32:11,020 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{6, Mihajlovic, FreeKick, WDL, 2006/07/06 16:06:40, 1969/02/20, 2016-07-24 22:32:11.019, foo, 2016-07-24 22:32:11.019, foo, 0}
2016-07-24 22:32:11,022 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{7, アカギ, Akagi, FML, 2005/06/07 17:07:30, null, 2016-07-24 22:32:11.022, foo, 2016-07-24 22:32:11.022, foo, 0}
2016-07-24 22:32:11,025 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{8, Kezman, RedCard, FML, 2006/05/08 18:08:20, null, 2016-07-24 22:32:11.025, foo, 2016-07-24 22:32:11.025, foo, 0}
2016-07-24 22:32:11,027 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{9, Maslovar, JEFUnited, FML, 2007/12/31 00:00:00, 1967/02/20, 2016-07-24 22:32:11.027, foo, 2016-07-24 22:32:11.027, foo, 0}
2016-07-24 22:32:11,029 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{10, 諸葛亮孔明, ShokatsuGoGo, PRV, null, null, 2016-07-24 22:32:11.029, foo, 2016-07-24 22:32:11.029, foo, 0}
2016-07-24 22:32:11,030 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{11, Boban, Boban, FML, 2007/12/01 11:01:10, 1968/10/08, 2016-07-24 22:32:11.03, foo, 2016-07-24 22:32:11.03, foo, 0}
2016-07-24 22:32:11,033 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{12, Suker, Suker, PRV, null, 1968/01/01, 2016-07-24 22:32:11.032, foo, 2016-07-24 22:32:11.032, foo, 0}
2016-07-24 22:32:11,036 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{13, Jarni, Jarni, WDL, 2005/10/03 13:03:30, 1968/10/26, 2016-07-24 22:32:11.036, foo, 2016-07-24 22:32:11.036, foo, 0}
2016-07-24 22:32:11,039 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{14, Boksic, Boksic, FML, 2006/09/04 14:04:40, 1970/01/21, 2016-07-24 22:32:11.038, foo, 2016-07-24 22:32:11.038, foo, 0}
2016-07-24 22:32:11,043 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{15, Prosinecki, Prosinecki, FML, 2004/08/05 15:05:50, 1969/01/12, 2016-07-24 22:32:11.043, foo, 2016-07-24 22:32:11.043, foo, 0}
2016-07-24 22:32:11,046 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{16, RobeltKovac, RobeltKovac, WDL, 2006/07/06 16:06:40, null, 2016-07-24 22:32:11.046, foo, 2016-07-24 22:32:11.046, foo, 0}
2016-07-24 22:32:11,049 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{17, NikoKovac, NikoKovac, FML, 2005/06/07 17:07:30, null, 2016-07-24 22:32:11.048, foo, 2016-07-24 22:32:11.048, foo, 0}
2016-07-24 22:32:11,051 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{18, Jovanovic, Jovano, FML, 2006/05/08 18:08:20, 1981/04/18, 2016-07-24 22:32:11.051, foo, 2016-07-24 22:32:11.051, foo, 0}
2016-07-24 22:32:11,054 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{19, Milko, Milko, FML, 2005/12/31 12:34:56, 1974/09/10, 2016-07-24 22:32:11.054, foo, 2016-07-24 22:32:11.054, foo, 0}
2016-07-24 22:32:11,057 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{20, 諸葛瑾子瑜, ShokatsuKinKin, FML, 2001/12/31 23:59:59, null, 2016-07-24 22:32:11.057, foo, 2016-07-24 22:32:11.057, foo, 0}
2016-07-24 22:32:11,081 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER
2016-07-24 22:32:11,082 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{1, 1, 2007/03/24, 2015/12/31, Nagara, 4, 2016-07-24 22:32:11.082, foo, 2016-07-24 22:32:11.082, foo, 0}
2016-07-24 22:32:11,086 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{2, 1, 1949/01/01, 1997/03/31, New York, 1, 2016-07-24 22:32:11.086, foo, 2016-07-24 22:32:11.086, foo, 0}
2016-07-24 22:32:11,089 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{3, 1, 1997/04/01, 2000/09/30, Los Angels, 1, 2016-07-24 22:32:11.089, foo, 2016-07-24 22:32:11.089, foo, 0}
2016-07-24 22:32:11,093 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{4, 1, 2000/10/01, 2003/08/31, New York, 1, 2016-07-24 22:32:11.093, foo, 2016-07-24 22:32:11.093, foo, 0}
2016-07-24 22:32:11,096 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{5, 1, 2003/09/01, 2004/12/22, San Francisco Powell, 1, 2016-07-24 22:32:11.095, foo, 2016-07-24 22:32:11.095, foo, 0}
2016-07-24 22:32:11,099 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{6, 1, 2004/12/23, 2006/03/23, San Francisco Daly City, 1, 2016-07-24 22:32:11.099, foo, 2016-07-24 22:32:11.099, foo, 0}
2016-07-24 22:32:11,103 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{7, 1, 2016/01/01, 9999/12/31, Victoria, 2, 2016-07-24 22:32:11.103, foo, 2016-07-24 22:32:11.103, foo, 0}
2016-07-24 22:32:11,106 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{8, 2, 2004/12/24, 9999/12/31, Ichihara, 4, 2016-07-24 22:32:11.106, foo, 2016-07-24 22:32:11.106, foo, 0}
2016-07-24 22:32:11,112 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{9, 3, 2004/12/24, 2007/03/23, Mobara, 4, 2016-07-24 22:32:11.112, foo, 2016-07-24 22:32:11.112, foo, 0}
2016-07-24 22:32:11,114 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{10, 4, 2002/11/01, 9999/12/31, Sousa, 4, 2016-07-24 22:32:11.114, foo, 2016-07-24 22:32:11.114, foo, 0}
2016-07-24 22:32:11,117 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{11, 6, 2002/11/01, 9999/12/31, Yokoshiba, 4, 2016-07-24 22:32:11.117, foo, 2016-07-24 22:32:11.117, foo, 0}
2016-07-24 22:32:11,119 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{12, 9, 2010/11/01, 9999/12/31, Tateyama, 4, 2016-07-24 22:32:11.119, foo, 2016-07-24 22:32:11.119, foo, 0}
2016-07-24 22:32:11,125 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{13, 10, 1970/01/01, 9999/12/31, Shoku, 3, 2016-07-24 22:32:11.125, foo, 2016-07-24 22:32:11.125, foo, 0}
2016-07-24 22:32:11,127 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{14, 12, 2000/11/01, 2001/11/01, Oohara, 4, 2016-07-24 22:32:11.127, foo, 2016-07-24 22:32:11.127, foo, 0}
2016-07-24 22:32:11,130 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{15, 15, 2002/11/01, 2006/10/30, MinamiBousou, 4, 2016-07-24 22:32:11.13, foo, 2016-07-24 22:32:11.13, foo, 0}
2016-07-24 22:32:11,133 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{16, 15, 2007/11/01, 9999/12/31, Tomisato, 4, 2016-07-24 22:32:11.133, foo, 2016-07-24 22:32:11.133, foo, 0}
2016-07-24 22:32:11,137 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{17, 18, 2001/03/21, 2007/11/21, Katsuura, 4, 2016-07-24 22:32:11.137, foo, 2016-07-24 22:32:11.137, foo, 0}
2016-07-24 22:32:11,140 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{18, 18, 2007/11/22, 9999/12/31, Kamogawa, 4, 2016-07-24 22:32:11.14, foo, 2016-07-24 22:32:11.14, foo, 0}
2016-07-24 22:32:11,142 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{19, 19, 2000/11/01, 9999/12/31, Yotsukaido, 4, 2016-07-24 22:32:11.142, foo, 2016-07-24 22:32:11.142, foo, 0}
2016-07-24 22:32:11,145 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{20, 20, 1970/01/01, 9999/12/31, Go, 3, 2016-07-24 22:32:11.145, foo, 2016-07-24 22:32:11.145, foo, 0}
2016-07-24 22:32:11,170 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_ADDRESS
2016-07-24 22:32:11,171 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{1, 3, 2006/12/24 23:59:59, 0, FML}
2016-07-24 22:32:11,173 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{2, 6, 2007/11/11 16:16:16, 0, FML}
2016-07-24 22:32:11,174 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{3, 1, 2006/12/23 22:56:29, 0, FML}
2016-07-24 22:32:11,176 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{4, 6, 2007/11/01 02:13:00, 0, FML}
2016-07-24 22:32:11,177 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{5, 7, 2006/05/24 23:12:59, 0, FML}
2016-07-24 22:32:11,178 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{6, 6, 2005/11/11 16:32:01, 0, PRV}
2016-07-24 22:32:11,179 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{7, 6, 2006/01/28 23:59:59, 1, FML}
2016-07-24 22:32:11,180 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{8, 6, 2007/11/09 16:23:00, 0, FML}
2016-07-24 22:32:11,181 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{9, 8, 2006/12/22 23:59:59, 0, FML}
2016-07-24 22:32:11,183 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{10, 6, 2007/11/11 09:01:00, 0, FML}
2016-07-24 22:32:11,184 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{11, 1, 2006/12/23 23:59:59, 0, FML}
2016-07-24 22:32:11,186 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{12, 9, 2007/11/15 12:43:00, 0, FML}
2016-07-24 22:32:11,188 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{13, 10, 2006/12/24 23:59:59, 0, FML}
2016-07-24 22:32:11,189 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{14, 6, 2007/04/01 16:23:01, 0, FML}
2016-07-24 22:32:11,190 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{15, 7, 2006/12/24 23:59:20, 1, FML}
2016-07-24 22:32:11,191 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{16, 6, 2007/05/01 12:23:02, 0, FML}
2016-07-24 22:32:11,193 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{17, 7, 2006/12/24 23:59:21, 0, FML}
2016-07-24 22:32:11,194 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{18, 6, 2007/06/11 17:23:03, 0, FML}
2016-07-24 22:32:11,196 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{19, 4, 2006/12/24 23:59:22, 0, FML}
2016-07-24 22:32:11,197 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{20, 3, 2007/11/01 16:12:04, 0, FML}
2016-07-24 22:32:11,199 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{21, 11, 2006/12/24 23:59:23, 0, FML}
2016-07-24 22:32:11,200 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{22, 1, 2007/11/01 16:23:05, 0, PRV}
2016-07-24 22:32:11,201 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{23, 9, 2006/12/24 23:59:24, 1, FML}
2016-07-24 22:32:11,203 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{24, 8, 2007/11/01 16:23:06, 0, FML}
2016-07-24 22:32:11,204 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{25, 7, 2007/12/24 11:59:25, 1, FML}
2016-07-24 22:32:11,205 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{26, 6, 2007/06/21 01:23:57, 0, FML}
2016-07-24 22:32:11,206 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{27, 5, 2006/12/24 23:59:26, 0, FML}
2016-07-24 22:32:11,208 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{28, 3, 2007/11/01 16:23:08, 0, FML}
2016-07-24 22:32:11,209 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{29, 3, 2006/12/24 23:59:27, 0, FML}
2016-07-24 22:32:11,210 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{30, 10, 2007/11/01 16:23:09, 0, FML}
2016-07-24 22:32:11,211 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{31, 15, 2006/07/24 23:59:28, 0, FML}
2016-07-24 22:32:11,213 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{32, 14, 2007/11/01 17:23:10, 0, FML}
2016-07-24 22:32:11,214 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{33, 15, 2007/11/01 16:23:10, 0, FML}
2016-07-24 22:32:11,215 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{34, 18, 2006/07/24 23:59:29, 0, FML}
2016-07-24 22:32:11,216 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{35, 3, 2007/11/01 17:23:11, 0, PRV}
2016-07-24 22:32:11,217 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{36, 5, 2007/11/01 16:23:11, 1, FML}
2016-07-24 22:32:11,218 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{37, 11, 2006/07/24 23:59:30, 0, FML}
2016-07-24 22:32:11,219 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{38, 20, 2007/11/01 17:23:12, 1, FML}
2016-07-24 22:32:11,221 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{39, 19, 2007/11/01 16:23:12, 0, FML}
2016-07-24 22:32:11,222 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{40, 4, 2006/07/24 23:59:31, 0, FML}
2016-07-24 22:32:11,223 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{41, 4, 2007/11/01 17:23:13, 0, FML}
2016-07-24 22:32:11,224 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{42, 4, 2007/11/01 16:23:13, 0, FML}
2016-07-24 22:32:11,226 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{43, 4, 2006/07/24 23:52:32, 0, FML}
2016-07-24 22:32:11,227 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{44, 4, 2007/11/01 11:23:14, 0, FML}
2016-07-24 22:32:11,228 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{45, 4, 2007/11/21 06:23:14, 0, FML}
2016-07-24 22:32:11,229 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{46, 12, 2006/07/24 23:52:33, 0, PRV}
2016-07-24 22:32:11,230 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{47, 13, 2007/11/01 11:23:15, 1, FML}
2016-07-24 22:32:11,231 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{48, 14, 2007/11/21 06:23:15, 0, FML}
2016-07-24 22:32:11,233 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{49, 17, 2006/07/24 23:52:34, 1, FML}
2016-07-24 22:32:11,234 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{50, 18, 2007/11/01 11:23:16, 0, FML}
2016-07-24 22:32:11,235 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{51, 16, 2007/11/21 06:23:16, 0, FML}
2016-07-24 22:32:11,236 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{52, 4, 2006/07/24 23:52:35, 0, FML}
2016-07-24 22:32:11,238 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{53, 5, 2007/11/01 11:23:17, 0, FML}
2016-07-24 22:32:11,239 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{54, 5, 2007/11/21 06:23:17, 0, FML}
2016-07-24 22:32:11,240 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{55, 11, 2006/07/24 23:52:36, 0, FML}
2016-07-24 22:32:11,241 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{56, 12, 2007/11/01 11:23:18, 0, FML}
2016-07-24 22:32:11,296 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 56 rows are loaded to MEMBER_LOGIN
2016-07-24 22:32:11,297 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{1, aaa, 30符3飜は？, 自分で数えろ, 1, 2016-07-24 22:32:11.297, foo, 2016-07-24 22:32:11.297, foo, 0}
2016-07-24 22:32:11,300 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{2, bbb, 50符2飜は？, 自分で数えろ, 2, 2016-07-24 22:32:11.3, foo, 2016-07-24 22:32:11.3, foo, 0}
2016-07-24 22:32:11,301 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{3, ccc, 110符2飜は？, 自分で数えろ, 3, 2016-07-24 22:32:11.301, foo, 2016-07-24 22:32:11.301, foo, 0}
2016-07-24 22:32:11,302 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{4, ddd, タンヤオ？, そう, 4, 2016-07-24 22:32:11.302, foo, 2016-07-24 22:32:11.302, foo, 0}
2016-07-24 22:32:11,304 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{5, eee2, ピンフ？, そう, 5, 2016-07-24 22:32:11.304, foo, 2016-07-24 22:32:11.304, foo, 0}
2016-07-24 22:32:11,305 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{6, fff, サンアンコウ？, そう, 6, 2016-07-24 22:32:11.305, foo, 2016-07-24 22:32:11.305, foo, 0}
2016-07-24 22:32:11,306 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{7, ggg3, イーペーコウ？, そう, 7, 2016-07-24 22:32:11.306, foo, 2016-07-24 22:32:11.306, foo, 0}
2016-07-24 22:32:11,307 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{8, hhh555, リャンペーコウ？, そう, 8, 2016-07-24 22:32:11.307, foo, 2016-07-24 22:32:11.307, foo, 0}
2016-07-24 22:32:11,308 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{9, iii, サンペーコウはないよね？, 当たり前だ, 9, 2016-07-24 22:32:11.308, foo, 2016-07-24 22:32:11.308, foo, 0}
2016-07-24 22:32:11,309 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{10, jjj, 私はイカサマしません, 実はする, 10, 2016-07-24 22:32:11.309, foo, 2016-07-24 22:32:11.309, foo, 0}
2016-07-24 22:32:11,310 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{11, qwe, 70符3飜は？, 自分で数えろ, 11, 2016-07-24 22:32:11.31, foo, 2016-07-24 22:32:11.31, foo, 0}
2016-07-24 22:32:11,311 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{12, sdf, 20符4飜は？, 自分で数えろ, 12, 2016-07-24 22:32:11.311, foo, 2016-07-24 22:32:11.311, foo, 0}
2016-07-24 22:32:11,312 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{13, dfgsf, 大三元は？, 役満だよ, 13, 2016-07-24 22:32:11.312, foo, 2016-07-24 22:32:11.312, foo, 0}
2016-07-24 22:32:11,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{14, ert, タンヤオ？, そう, 14, 2016-07-24 22:32:11.313, foo, 2016-07-24 22:32:11.313, foo, 0}
2016-07-24 22:32:11,314 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{15, fhgf, ピンフ？, そう, 15, 2016-07-24 22:32:11.313, foo, 2016-07-24 22:32:11.313, foo, 0}
2016-07-24 22:32:11,314 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{16, ghj, サンアンコウ？, そう, 16, 2016-07-24 22:32:11.314, foo, 2016-07-24 22:32:11.314, foo, 0}
2016-07-24 22:32:11,315 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{17, tyuffff, サンレンコウ？, そう, 17, 2016-07-24 22:32:11.315, foo, 2016-07-24 22:32:11.315, foo, 0}
2016-07-24 22:32:11,316 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{18, jkl, イーペーコウ？, そう, 18, 2016-07-24 22:32:11.316, foo, 2016-07-24 22:32:11.316, foo, 0}
2016-07-24 22:32:11,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{19, ghjfff, 左ハイは？, 痛い, 19, 2016-07-24 22:32:11.317, foo, 2016-07-24 22:32:11.317, foo, 0}
2016-07-24 22:32:11,319 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{20, cvb, 孫権は？, 呉, 20, 2016-07-24 22:32:11.318, foo, 2016-07-24 22:32:11.318, foo, 0}
2016-07-24 22:32:11,343 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SECURITY
2016-07-24 22:32:11,344 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{1, 1, 1234, PLT, 2016-07-24 22:32:11.344, foo, 2016-07-24 22:32:11.344, foo, 0}
2016-07-24 22:32:11,346 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{2, 2, 2345, GLD, 2016-07-24 22:32:11.346, foo, 2016-07-24 22:32:11.346, foo, 0}
2016-07-24 22:32:11,347 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{3, 3, 3456, GLD, 2016-07-24 22:32:11.347, foo, 2016-07-24 22:32:11.347, foo, 0}
2016-07-24 22:32:11,348 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{4, 4, 875, BRZ, 2016-07-24 22:32:11.348, foo, 2016-07-24 22:32:11.348, foo, 0}
2016-07-24 22:32:11,349 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{5, 5, 1111, BRZ, 2016-07-24 22:32:11.349, foo, 2016-07-24 22:32:11.349, foo, 0}
2016-07-24 22:32:11,350 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{6, 6, 5422, SIL, 2016-07-24 22:32:11.35, foo, 2016-07-24 22:32:11.35, foo, 0}
2016-07-24 22:32:11,351 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{7, 7, 24678, SIL, 2016-07-24 22:32:11.351, foo, 2016-07-24 22:32:11.351, foo, 0}
2016-07-24 22:32:11,352 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{8, 8, 234, SIL, 2016-07-24 22:32:11.352, foo, 2016-07-24 22:32:11.352, foo, 0}
2016-07-24 22:32:11,353 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{9, 9, 3, SIL, 2016-07-24 22:32:11.353, foo, 2016-07-24 22:32:11.353, foo, 0}
2016-07-24 22:32:11,354 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{10, 10, 98765, PLT, 2016-07-24 22:32:11.353, foo, 2016-07-24 22:32:11.353, foo, 0}
2016-07-24 22:32:11,354 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{11, 11, 34, GLD, 2016-07-24 22:32:11.354, foo, 2016-07-24 22:32:11.354, foo, 0}
2016-07-24 22:32:11,355 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{12, 12, 532, PLT, 2016-07-24 22:32:11.355, foo, 2016-07-24 22:32:11.355, foo, 0}
2016-07-24 22:32:11,356 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{13, 13, 23678, GLD, 2016-07-24 22:32:11.356, foo, 2016-07-24 22:32:11.356, foo, 0}
2016-07-24 22:32:11,357 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{14, 14, 432, GLD, 2016-07-24 22:32:11.357, foo, 2016-07-24 22:32:11.357, foo, 0}
2016-07-24 22:32:11,358 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{15, 15, 543, BRZ, 2016-07-24 22:32:11.358, foo, 2016-07-24 22:32:11.358, foo, 0}
2016-07-24 22:32:11,359 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{16, 16, 23545, PLT, 2016-07-24 22:32:11.359, foo, 2016-07-24 22:32:11.359, foo, 0}
2016-07-24 22:32:11,360 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{17, 17, 2345, GLD, 2016-07-24 22:32:11.36, foo, 2016-07-24 22:32:11.36, foo, 0}
2016-07-24 22:32:11,362 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{18, 18, 8763, SIL, 2016-07-24 22:32:11.361, foo, 2016-07-24 22:32:11.361, foo, 0}
2016-07-24 22:32:11,362 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{19, 19, 34567, SIL, 2016-07-24 22:32:11.362, foo, 2016-07-24 22:32:11.362, foo, 0}
2016-07-24 22:32:11,363 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{20, 20, 43, GLD, 2016-07-24 22:32:11.363, foo, 2016-07-24 22:32:11.363, foo, 0}
2016-07-24 22:32:11,384 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SERVICE
2016-07-24 22:32:11,385 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{3, null, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123, 2016-07-24 22:32:11.385, foo, 2016-07-24 22:32:11.385, foo}
2016-07-24 22:32:11,388 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{6, SIT, null, 2007/11/11 16:00:00.456, 2016-07-24 22:32:11.388, foo, 2016-07-24 22:32:11.388, foo}
2016-07-24 22:32:11,392 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{13, PRD, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789, 2016-07-24 22:32:11.392, foo, 2016-07-24 22:32:11.392, foo}
2016-07-24 22:32:11,393 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{16, SIT, コバチが２人いるため, 2007/11/13 16:00:00.456, 2016-07-24 22:32:11.393, foo, 2016-07-24 22:32:11.393, foo}
2016-07-24 22:32:11,401 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to MEMBER_WITHDRAWAL
2016-07-24 22:32:11,402 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{1, 1, 2, 2006/12/24 23:59:59}
2016-07-24 22:32:11,404 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{2, 1, 3, 2007/11/11 16:16:16}
2016-07-24 22:32:11,405 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{3, 1, 4, 2006/12/23 22:56:29}
2016-07-24 22:32:11,407 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{4, 1, 5, 2007/11/01 02:13:00}
2016-07-24 22:32:11,408 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{5, 1, 6, 2012/05/24 23:12:59}
2016-07-24 22:32:11,410 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{6, 1, 9, 2005/11/11 16:32:01}
2016-07-24 22:32:11,410 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{7, 1, 15, 2006/01/28 23:59:59}
2016-07-24 22:32:11,411 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{8, 1, 18, 2007/11/09 16:23:00}
2016-07-24 22:32:11,412 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{9, 2, 1, 2009/12/22 23:59:59}
2016-07-24 22:32:11,413 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{10, 2, 3, 2007/11/11 09:01:00}
2016-07-24 22:32:11,414 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{11, 2, 4, 2006/11/23 23:59:59}
2016-07-24 22:32:11,415 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{12, 2, 9, 2012/11/15 12:43:00}
2016-07-24 22:32:11,417 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{13, 2, 14, 2006/12/24 23:59:59}
2016-07-24 22:32:11,418 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{14, 2, 19, 2011/04/01 16:23:01}
2016-07-24 22:32:11,419 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{15, 3, 1, 2006/12/24 23:59:20}
2016-07-24 22:32:11,421 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{16, 3, 2, 2008/05/01 12:23:02}
2016-07-24 22:32:11,422 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{17, 3, 4, 2006/12/24 23:59:21}
2016-07-24 22:32:11,422 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{18, 3, 6, 2009/06/11 17:23:03}
2016-07-24 22:32:11,423 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{19, 3, 9, 2010/12/24 23:59:22}
2016-07-24 22:32:11,424 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{20, 3, 10, 2007/11/01 16:12:04}
2016-07-24 22:32:11,425 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{21, 4, 1, 2006/12/24 23:59:23}
2016-07-24 22:32:11,426 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{22, 4, 2, 2007/11/01 16:23:05}
2016-07-24 22:32:11,427 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{23, 4, 3, 2011/12/24 23:59:24}
2016-07-24 22:32:11,427 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{24, 4, 4, 2007/11/01 16:23:06}
2016-07-24 22:32:11,428 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{25, 4, 5, 2013/05/24 11:59:25}
2016-07-24 22:32:11,429 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{26, 4, 6, 2007/06/21 01:23:57}
2016-07-24 22:32:11,430 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{27, 4, 9, 2006/12/24 23:59:26}
2016-07-24 22:32:11,431 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{28, 4, 11, 2007/11/01 16:23:08}
2016-07-24 22:32:11,432 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{29, 4, 12, 2013/02/24 23:59:27}
2016-07-24 22:32:11,433 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{30, 4, 13, 2012/11/01 16:23:03}
2016-07-24 22:32:11,433 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{31, 4, 14, 2006/07/24 23:59:28}
2016-07-24 22:32:11,434 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{32, 4, 15, 2007/11/01 17:23:10}
2016-07-24 22:32:11,437 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{33, 4, 16, 2007/11/01 16:23:10}
2016-07-24 22:32:11,444 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{34, 4, 17, 2006/07/24 23:59:29}
2016-07-24 22:32:11,445 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{35, 4, 18, 2011/11/01 17:23:11}
2016-07-24 22:32:11,446 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{36, 4, 19, 2007/11/01 16:23:11}
2016-07-24 22:32:11,447 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{37, 5, 1, 2008/07/24 23:59:30}
2016-07-24 22:32:11,448 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{38, 5, 3, 2007/11/01 17:23:12}
2016-07-24 22:32:11,449 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{39, 5, 6, 2007/11/01 16:23:12}
2016-07-24 22:32:11,450 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{40, 6, 1, 2006/07/24 23:59:31}
2016-07-24 22:32:11,451 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{41, 6, 2, 2007/11/01 17:23:13}
2016-07-24 22:32:11,453 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{42, 6, 3, 2007/11/01 16:23:13}
2016-07-24 22:32:11,454 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{43, 6, 4, 2006/07/24 23:52:32}
2016-07-24 22:32:11,457 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{44, 6, 5, 2007/11/01 11:23:14}
2016-07-24 22:32:11,458 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{45, 6, 6, 2007/11/21 06:23:14}
2016-07-24 22:32:11,459 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{46, 8, 1, 2011/07/24 23:52:33}
2016-07-24 22:32:11,460 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{47, 8, 2, 2007/11/01 11:23:15}
2016-07-24 22:32:11,460 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{48, 8, 3, 2007/11/21 06:23:15}
2016-07-24 22:32:11,461 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{49, 9, 1, 2006/07/24 23:52:34}
2016-07-24 22:32:11,462 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{50, 9, 2, 208/11/01 11:23:16}
2016-07-24 22:32:11,468 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{51, 9, 3, 2007/11/21 06:23:16}
2016-07-24 22:32:11,469 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{52, 9, 10, 2006/07/24 23:52:35}
2016-07-24 22:32:11,470 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{53, 9, 20, 2009/11/01 11:23:17}
2016-07-24 22:32:11,471 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{54, 10, 1, 2007/11/21 06:23:17}
2016-07-24 22:32:11,476 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{55, 10, 2, 2006/07/24 23:52:36}
2016-07-24 22:32:11,478 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{56, 10, 3, 2010/11/01 11:23:18}
2016-07-24 22:32:11,479 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{57, 10, 4, 2006/12/21 23:59:59}
2016-07-24 22:32:11,480 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{58, 10, 5, 2007/11/1 16:16:16}
2016-07-24 22:32:11,482 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{59, 10, 6, 2006/08/23 22:56:29}
2016-07-24 22:32:11,485 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{60, 10, 9, 2007/11/01 02:11:00}
2016-07-24 22:32:11,487 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{61, 10, 11, 2012/05/24 23:12:59}
2016-07-24 22:32:11,488 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{62, 10, 12, 2005/11/10 16:32:01}
2016-07-24 22:32:11,489 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{63, 10, 13, 2006/01/28 23:59:59}
2016-07-24 22:32:11,490 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{64, 10, 14, 2007/10/09 16:23:00}
2016-07-24 22:32:11,491 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{65, 10, 15, 2009/12/22 23:59:59}
2016-07-24 22:32:11,492 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{66, 10, 16, 2007/11/01 09:01:00}
2016-07-24 22:32:11,493 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{67, 10, 17, 2006/11/23 23:59:59}
2016-07-24 22:32:11,494 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{68, 10, 18, 2011/11/15 12:43:00}
2016-07-24 22:32:11,500 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{69, 10, 19, 2006/07/24 23:59:59}
2016-07-24 22:32:11,501 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{70, 10, 20, 2011/08/01 16:23:01}
2016-07-24 22:32:11,501 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{71, 11, 12, 2006/09/24 23:59:20}
2016-07-24 22:32:11,503 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{72, 11, 13, 2008/01/01 12:23:02}
2016-07-24 22:32:11,504 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{73, 11, 14, 2006/12/24 23:59:21}
2016-07-24 22:32:11,507 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{74, 11, 15, 2009/02/11 17:23:03}
2016-07-24 22:32:11,508 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{75, 11, 16, 2010/03/24 23:59:22}
2016-07-24 22:32:11,508 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{76, 11, 17, 2007/09/01 16:12:04}
2016-07-24 22:32:11,509 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{77, 11, 19, 2006/12/24 23:59:23}
2016-07-24 22:32:11,510 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{78, 12, 1, 2007/11/01 16:23:05}
2016-07-24 22:32:11,510 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{79, 12, 11, 2011/05/24 23:59:24}
2016-07-24 22:32:11,519 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{80, 12, 13, 2007/11/01 16:23:06}
2016-07-24 22:32:11,522 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{81, 12, 14, 2013/06/24 11:59:25}
2016-07-24 22:32:11,523 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{82, 12, 15, 2007/06/21 01:23:57}
2016-07-24 22:32:11,524 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{83, 12, 19, 2006/12/24 23:59:26}
2016-07-24 22:32:11,525 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{84, 13, 11, 2007/08/01 16:23:08}
2016-07-24 22:32:11,526 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{85, 13, 12, 2013/02/24 23:59:27}
2016-07-24 22:32:11,527 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{86, 13, 14, 2012/11/01 16:23:03}
2016-07-24 22:32:11,528 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{87, 14, 1, 2006/07/24 23:59:28}
2016-07-24 22:32:11,529 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{88, 14, 10, 2012/05/24 23:12:59}
2016-07-24 22:32:11,531 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{89, 14, 11, 2005/11/10 16:32:01}
2016-07-24 22:32:11,533 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{90, 14, 20, 2006/01/28 23:59:59}
2016-07-24 22:32:11,536 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{91, 16, 17, 2007/10/09 16:23:00}
2016-07-24 22:32:11,539 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{92, 17, 16, 2009/12/22 23:59:59}
2016-07-24 22:32:11,540 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{93, 18, 1, 2007/11/01 09:01:00}
2016-07-24 22:32:11,540 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{94, 18, 2, 2006/11/23 23:59:59}
2016-07-24 22:32:11,542 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{95, 18, 3, 2011/11/15 12:43:00}
2016-07-24 22:32:11,553 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{96, 18, 4, 2006/07/24 23:59:59}
2016-07-24 22:32:11,554 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{97, 18, 5, 2011/08/01 16:23:01}
2016-07-24 22:32:11,556 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{98, 18, 6, 2006/09/24 23:59:20}
2016-07-24 22:32:11,557 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{99, 18, 9, 2008/01/01 12:23:02}
2016-07-24 22:32:11,558 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{100, 18, 11, 2006/12/24 23:59:21}
2016-07-24 22:32:11,559 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{101, 18, 12, 2009/02/11 17:23:03}
2016-07-24 22:32:11,561 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{102, 18, 13, 2010/03/24 23:59:22}
2016-07-24 22:32:11,562 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{103, 18, 14, 2007/09/01 16:12:04}
2016-07-24 22:32:11,563 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{104, 18, 15, 2006/12/24 23:59:23}
2016-07-24 22:32:11,565 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{105, 19, 1, 2007/11/01 16:23:05}
2016-07-24 22:32:11,566 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{106, 19, 10, 2011/05/24 23:59:24}
2016-07-24 22:32:11,567 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{107, 19, 11, 2007/11/01 16:23:06}
2016-07-24 22:32:11,569 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{108, 19, 12, 2013/06/24 11:59:25}
2016-07-24 22:32:11,570 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{109, 19, 20, 2013/06/24 11:59:25}
2016-07-24 22:32:11,572 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{110, 20, 10, 2013/06/24 11:59:25}
2016-07-24 22:32:11,572 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{111, 20, 19, 2013/06/24 11:59:25}
2016-07-24 22:32:11,693 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 111 rows are loaded to MEMBER_FOLLOWING
2016-07-24 22:32:11,694 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-24 22:32:11,695 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/30-product.xls)
2016-07-24 22:32:11,695 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-24 22:32:11,759 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{1, Cold Spring Harbor, BILLYJOEL-01, MCD, PST, 1100, 2016-07-24 22:32:11.759, foo, 2016-07-24 22:32:11.759, foo, 0}
2016-07-24 22:32:11,762 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{2, Piano Man, BILLYJOEL-02, MCD, ONS, 1200, 2016-07-24 22:32:11.761, foo, 2016-07-24 22:32:11.761, foo, 0}
2016-07-24 22:32:11,763 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{3, Streetlife Serenade, BILLYJOEL-03, MCD, ONS, 1300, 2016-07-24 22:32:11.763, foo, 2016-07-24 22:32:11.763, foo, 0}
2016-07-24 22:32:11,765 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{4, Turnstiles, BILLYJOEL-04, MCD, ONS, 1400, 2016-07-24 22:32:11.765, foo, 2016-07-24 22:32:11.765, foo, 0}
2016-07-24 22:32:11,767 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{5, The Stranger, BILLYJOEL-05, MCD, ONS, 1500, 2016-07-24 22:32:11.767, foo, 2016-07-24 22:32:11.767, foo, 0}
2016-07-24 22:32:11,768 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{6, 52nd Street, BILLYJOEL-06, MCD, ONS, 1600, 2016-07-24 22:32:11.767, foo, 2016-07-24 22:32:11.767, foo, 0}
2016-07-24 22:32:11,769 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{7, Glass House, BILLYJOEL-07, MCD, ONS, 1700, 2016-07-24 22:32:11.769, foo, 2016-07-24 22:32:11.769, foo, 0}
2016-07-24 22:32:11,770 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{8, Nylon Curtain, BILLYJOEL-08, MCD, ONS, 1800, 2016-07-24 22:32:11.77, foo, 2016-07-24 22:32:11.77, foo, 0}
2016-07-24 22:32:11,771 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{9, Bridge, BILLYJOEL-09, MCD, ONS, 1900, 2016-07-24 22:32:11.771, foo, 2016-07-24 22:32:11.771, foo, 0}
2016-07-24 22:32:11,772 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{10, Storm Front, BILLYJOEL-10, MCD, ONS, 2000, 2016-07-24 22:32:11.772, foo, 2016-07-24 22:32:11.772, foo, 0}
2016-07-24 22:32:11,773 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{11, River of Dreams, BILLYJOEL-11, MCD, ONS, 2100, 2016-07-24 22:32:11.773, foo, 2016-07-24 22:32:11.773, foo, 0}
2016-07-24 22:32:11,774 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{12, Grand Piano, PIANO-01, INS, ONS, 1400000, 2016-07-24 22:32:11.774, foo, 2016-07-24 22:32:11.774, foo, 0}
2016-07-24 22:32:11,775 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{13, Upright Piano, PIANO-02, INS, ONS, 1100000, 2016-07-24 22:32:11.775, foo, 2016-07-24 22:32:11.775, foo, 0}
2016-07-24 22:32:11,776 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{14, Low Price Flute, FLUTE-01, INS, ONS, 50000, 2016-07-24 22:32:11.776, foo, 2016-07-24 22:32:11.776, foo, 0}
2016-07-24 22:32:11,777 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{15, Silver Flute, FLUTE-02, INS, ONS, 500000, 2016-07-24 22:32:11.777, foo, 2016-07-24 22:32:11.777, foo, 0}
2016-07-24 22:32:11,778 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{16, Gold Flute, FLUTE-03, INS, ONS, 4000000, 2016-07-24 22:32:11.777, foo, 2016-07-24 22:32:11.777, foo, 0}
2016-07-24 22:32:11,779 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{17, Rosemary (100g), HARB-100-01, HEB, ONS, 400, 2016-07-24 22:32:11.779, foo, 2016-07-24 22:32:11.779, foo, 0}
2016-07-24 22:32:11,779 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{18, Lemon Grass (100g), HARB-100-02, HEB, ONS, 380, 2016-07-24 22:32:11.779, foo, 2016-07-24 22:32:11.779, foo, 0}
2016-07-24 22:32:11,780 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{19, Camomile (100g), HARB-100-03, HEB, ONS, 380, 2016-07-24 22:32:11.78, foo, 2016-07-24 22:32:11.78, foo, 0}
2016-07-24 22:32:11,781 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{20, Hatomugi (100g), HARB-100-04, HEB, ONS, 340, 2016-07-24 22:32:11.781, foo, 2016-07-24 22:32:11.781, foo, 0}
2016-07-24 22:32:11,804 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to PRODUCT
2016-07-24 22:32:11,809 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{1, 5, 3, 2006/12/24 23:59:59, 1, 1800, 1, 2016-07-24 22:32:11.809, foo, 2016-07-24 22:32:11.809, foo, 0}
2016-07-24 22:32:11,821 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{2, 15, 7, 2007/11/11 16:16:16, 1, 1700, 1, 2016-07-24 22:32:11.817, foo, 2016-07-24 22:32:11.817, foo, 0}
2016-07-24 22:32:11,822 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{3, 13, 3, 2006/12/23 22:56:29.235, 1, 1800, 1, 2016-07-24 22:32:11.822, foo, 2016-07-24 22:32:11.822, foo, 0}
2016-07-24 22:32:11,824 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{4, 2, 5, 2007/11/01 02:13:00, 2, 1700, 1, 2016-07-24 22:32:11.824, foo, 2016-07-24 22:32:11.824, foo, 0}
2016-07-24 22:32:11,825 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{5, 9, 11, 2008/01/04 23:12:59, 5, 1800, 1, 2016-07-24 22:32:11.825, foo, 2016-07-24 22:32:11.825, foo, 0}
2016-07-24 22:32:11,826 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{6, 20, 2, 2002/01/01 16:32:01, 1, 2000, 1, 2016-07-24 22:32:11.826, foo, 2016-07-24 22:32:11.826, foo, 0}
2016-07-24 22:32:11,828 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{7, 19, 9, 2006/01/28 23:59:59.999, 1, 1000, 0, 2016-07-24 22:32:11.828, foo, 2016-07-24 22:32:11.828, foo, 0}
2016-07-24 22:32:11,829 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{8, 4, 7, 2007/11/09 16:23:00, 1, 1535, 1, 2016-07-24 22:32:11.829, foo, 2016-07-24 22:32:11.829, foo, 0}
2016-07-24 22:32:11,830 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{9, 4, 10, 2006/12/22 23:59:59, 20, 1700, 1, 2016-07-24 22:32:11.83, foo, 2016-07-24 22:32:11.83, foo, 0}
2016-07-24 22:32:11,832 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{10, 2, 10, 2007/11/01 02:13:00.345, 1, 1700, 0, 2016-07-24 22:32:11.832, foo, 2016-07-24 22:32:11.832, foo, 0}
2016-07-24 22:32:11,834 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{11, 5, 2, 2007/11/09 16:23:01, 1, 1800, 1, 2016-07-24 22:32:11.834, foo, 2016-07-24 22:32:11.834, foo, 0}
2016-07-24 22:32:11,837 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{12, 15, 2, 2006/12/22 23:59:12, 1, 1700, 1, 2016-07-24 22:32:11.836, foo, 2016-07-24 22:32:11.836, foo, 0}
2016-07-24 22:32:11,841 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{13, 13, 8, 2007/11/01 02:13:00.346, 1, 1800, 1, 2016-07-24 22:32:11.841, foo, 2016-07-24 22:32:11.841, foo, 0}
2016-07-24 22:32:11,843 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{14, 2, 4, 2007/11/09 16:23:02, 2, 1700, 1, 2016-07-24 22:32:11.843, foo, 2016-07-24 22:32:11.843, foo, 0}
2016-07-24 22:32:11,848 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{15, 9, 11, 2006/12/22 23:59:32, 5, 1800, 1, 2016-07-24 22:32:11.848, foo, 2016-07-24 22:32:11.848, foo, 0}
2016-07-24 22:32:11,856 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{16, 20, 1, 2007/11/01 02:13:00.347, 1, 2000, 1, 2016-07-24 22:32:11.856, foo, 2016-07-24 22:32:11.856, foo, 0}
2016-07-24 22:32:11,858 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{17, 19, 11, 2006/12/22 23:59:33, 2, 1000, 0, 2016-07-24 22:32:11.858, foo, 2016-07-24 22:32:11.858, foo, 0}
2016-07-24 22:32:11,860 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{18, 4, 10, 2007/11/01 02:13:00.348, 1, 1535, 1, 2016-07-24 22:32:11.86, foo, 2016-07-24 22:32:11.86, foo, 0}
2016-07-24 22:32:11,862 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{19, 4, 11, 2007/11/01 02:13:00.348, 4, 1700, 1, 2016-07-24 22:32:11.862, foo, 2016-07-24 22:32:11.862, foo, 0}
2016-07-24 22:32:11,863 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{20, 2, 11, 2006/12/22 23:59:35, 1, 1700, 0, 2016-07-24 22:32:11.863, foo, 2016-07-24 22:32:11.863, foo, 0}
2016-07-24 22:32:11,864 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{21, 2, 15, 2006/12/22 23:59:35, 1, 400000, 0, 2016-07-24 22:32:11.864, foo, 2016-07-24 22:32:11.864, foo, 0}
2016-07-24 22:32:11,866 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{22, 3, 6, 2007/11/01 02:13:00.350, 4, 1800, 1, 2016-07-24 22:32:11.866, foo, 2016-07-24 22:32:11.866, foo, 0}
2016-07-24 22:32:11,867 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{23, 15, 7, 2006/12/22 23:59:36, 1, 1700, 1, 2016-07-24 22:32:11.867, foo, 2016-07-24 22:32:11.867, foo, 0}
2016-07-24 22:32:11,869 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{24, 13, 3, 2007/09/11 12:13:00.351, 1, 1800, 1, 2016-07-24 22:32:11.869, foo, 2016-07-24 22:32:11.869, foo, 0}
2016-07-24 22:32:11,871 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{25, 16, 2, 2006/12/22 23:59:37, 2, 1700, 1, 2016-07-24 22:32:11.871, foo, 2016-07-24 22:32:11.871, foo, 0}
2016-07-24 22:32:11,873 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{26, 3, 4, 2005/12/21 12:13:00.352, 1, 1800, 1, 2016-07-24 22:32:11.873, foo, 2016-07-24 22:32:11.873, foo, 0}
2016-07-24 22:32:11,875 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{27, 2, 8, 2006/12/22 23:59:38, 1, 2000, 1, 2016-07-24 22:32:11.875, foo, 2016-07-24 22:32:11.875, foo, 0}
2016-07-24 22:32:11,877 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{28, 6, 17, 2007/11/01 02:13:00.353, 2, 600, 0, 2016-07-24 22:32:11.877, foo, 2016-07-24 22:32:11.877, foo, 0}
2016-07-24 22:32:11,879 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{29, 4, 4, 2006/12/22 23:59:39, 1, 1535, 1, 2016-07-24 22:32:11.879, foo, 2016-07-24 22:32:11.879, foo, 0}
2016-07-24 22:32:11,880 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{30, 4, 3, 2007/11/01 02:13:00.354, 4, 1700, 1, 2016-07-24 22:32:11.88, foo, 2016-07-24 22:32:11.88, foo, 0}
2016-07-24 22:32:11,881 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{31, 4, 10, 2006/12/22 23:59:40, 1, 1700, 0, 2016-07-24 22:32:11.881, foo, 2016-07-24 22:32:11.881, foo, 0}
2016-07-24 22:32:11,882 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{32, 13, 3, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-07-24 22:32:11.882, foo, 2016-07-24 22:32:11.882, foo, 0}
2016-07-24 22:32:11,883 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{33, 16, 2, 2006/12/22 23:59:41, 2, 1700, 1, 2016-07-24 22:32:11.883, foo, 2016-07-24 22:32:11.883, foo, 0}
2016-07-24 22:32:11,884 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{34, 3, 4, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-07-24 22:32:11.884, foo, 2016-07-24 22:32:11.884, foo, 0}
2016-07-24 22:32:11,888 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{35, 2, 8, 2006/12/12 23:59:42, 1, 2000, 1, 2016-07-24 22:32:11.887, foo, 2016-07-24 22:32:11.887, foo, 0}
2016-07-24 22:32:11,889 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{36, 6, 3, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-07-24 22:32:11.889, foo, 2016-07-24 22:32:11.889, foo, 0}
2016-07-24 22:32:11,890 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{37, 4, 4, 2006/12/12 23:59:43, 1, 1535, 1, 2016-07-24 22:32:11.89, foo, 2016-07-24 22:32:11.89, foo, 0}
2016-07-24 22:32:11,891 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{38, 4, 3, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-07-24 22:32:11.891, foo, 2016-07-24 22:32:11.891, foo, 0}
2016-07-24 22:32:11,892 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{39, 4, 10, 2006/12/12 23:59:44, 1, 1700, 0, 2016-07-24 22:32:11.892, foo, 2016-07-24 22:32:11.892, foo, 0}
2016-07-24 22:32:11,893 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{40, 4, 10, 2007/05/01 12:13:00.359, 1, 1700, 0, 2016-07-24 22:32:11.893, foo, 2016-07-24 22:32:11.893, foo, 0}
2016-07-24 22:32:11,894 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{41, 4, 11, 2007/11/01 02:13:01.354, 4, 1700, 1, 2016-07-24 22:32:11.894, foo, 2016-07-24 22:32:11.894, foo, 0}
2016-07-24 22:32:11,896 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{42, 10, 16, 2006/12/22 23:59:40, 1, 2800000, 1, 2016-07-24 22:32:11.896, foo, 2016-07-24 22:32:11.896, foo, 0}
2016-07-24 22:32:11,898 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{43, 13, 17, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-07-24 22:32:11.898, foo, 2016-07-24 22:32:11.898, foo, 0}
2016-07-24 22:32:11,900 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{44, 16, 14, 2006/12/22 23:59:41, 2, 1700, 1, 2016-07-24 22:32:11.9, foo, 2016-07-24 22:32:11.9, foo, 0}
2016-07-24 22:32:11,901 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{45, 3, 18, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-07-24 22:32:11.901, foo, 2016-07-24 22:32:11.901, foo, 0}
2016-07-24 22:32:11,903 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{46, 2, 7, 2006/12/12 23:59:42, 1, 2000, 1, 2016-07-24 22:32:11.903, foo, 2016-07-24 22:32:11.903, foo, 0}
2016-07-24 22:32:11,905 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{47, 6, 14, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-07-24 22:32:11.905, foo, 2016-07-24 22:32:11.905, foo, 0}
2016-07-24 22:32:11,911 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{48, 16, 12, 2006/12/12 23:59:43, 1, 100000, 1, 2016-07-24 22:32:11.911, foo, 2016-07-24 22:32:11.911, foo, 0}
2016-07-24 22:32:11,913 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{49, 4, 20, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-07-24 22:32:11.913, foo, 2016-07-24 22:32:11.913, foo, 0}
2016-07-24 22:32:11,914 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{50, 4, 19, 2006/12/12 23:59:44, 1, 1700, 0, 2016-07-24 22:32:11.914, foo, 2016-07-24 22:32:11.914, foo, 0}
2016-07-24 22:32:11,915 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{51, 4, 11, 2007/11/21 02:13:00.354, 4, 1700, 1, 2016-07-24 22:32:11.915, foo, 2016-07-24 22:32:11.915, foo, 0}
2016-07-24 22:32:11,916 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{52, 20, 17, 2006/12/23 23:59:40, 1, 400, 0, 2016-07-24 22:32:11.916, foo, 2016-07-24 22:32:11.916, foo, 0}
2016-07-24 22:32:11,916 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{53, 13, 16, 2007/12/28 12:13:10.355, 1, 600000, 1, 2016-07-24 22:32:11.916, foo, 2016-07-24 22:32:11.916, foo, 0}
2016-07-24 22:32:11,917 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{54, 16, 14, 2006/02/22 23:59:41, 2, 1700, 1, 2016-07-24 22:32:11.917, foo, 2016-07-24 22:32:11.917, foo, 0}
2016-07-24 22:32:11,917 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{55, 3, 3, 2007/07/21 12:13:00.356, 1, 1800, 1, 2016-07-24 22:32:11.917, foo, 2016-07-24 22:32:11.917, foo, 0}
2016-07-24 22:32:11,918 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{56, 2, 8, 2006/12/22 23:59:42, 1, 2000, 1, 2016-07-24 22:32:11.918, foo, 2016-07-24 22:32:11.918, foo, 0}
2016-07-24 22:32:11,920 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{57, 6, 19, 2007/02/01 02:13:00.357, 2, 1000, 0, 2016-07-24 22:32:11.92, foo, 2016-07-24 22:32:11.92, foo, 0}
2016-07-24 22:32:11,921 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{58, 2, 12, 2006/12/12 23:59:43, 1, 4000000, 1, 2016-07-24 22:32:11.921, foo, 2016-07-24 22:32:11.921, foo, 0}
2016-07-24 22:32:11,921 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{59, 4, 18, 2007/05/01 02:03:00.358, 1, 380, 1, 2016-07-24 22:32:11.921, foo, 2016-07-24 22:32:11.921, foo, 0}
2016-07-24 22:32:11,922 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{60, 4, 20, 2006/12/12 23:59:44, 2, 680, 0, 2016-07-24 22:32:11.922, foo, 2016-07-24 22:32:11.922, foo, 0}
2016-07-24 22:32:11,923 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{61, 1, 16, 2008-03-03 06:34:56.000, 3, 12000000, 1, 2016-07-24 22:32:11.923, foo, 2016-07-24 22:32:11.923, foo, 0}
2016-07-24 22:32:11,924 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{62, 1, 2, 2009-06-04 06:34:56.000, 12, 20000, 1, 2016-07-24 22:32:11.924, foo, 2016-07-24 22:32:11.924, foo, 0}
2016-07-24 22:32:11,926 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{63, 1, 6, 2010-09-26 06:34:56.000, 2, 2000, 1, 2016-07-24 22:32:11.925, foo, 2016-07-24 22:32:11.925, foo, 0}
2016-07-24 22:32:11,927 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{64, 1, 8, 2011-03-03 09:45:29.000, 1, 50, 1, 2016-07-24 22:32:11.926, foo, 2016-07-24 22:32:11.926, foo, 0}
2016-07-24 22:32:11,928 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{65, 1, 13, 2012-06-04 09:45:29.000, 1, 1000000, 1, 2016-07-24 22:32:11.928, foo, 2016-07-24 22:32:11.928, foo, 0}
2016-07-24 22:32:11,929 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{66, 1, 13, 2013-09-26 09:45:29.000, 1, 900000, 1, 2016-07-24 22:32:11.928, foo, 2016-07-24 22:32:11.928, foo, 0}
2016-07-24 22:32:11,929 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{67, 1, 5, 2014-03-03 21:02:12.000, 2, 3000, 1, 2016-07-24 22:32:11.929, foo, 2016-07-24 22:32:11.929, foo, 0}
2016-07-24 22:32:11,930 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{68, 1, 17, 2015-06-04 21:02:12.000, 30, 3000, 1, 2016-07-24 22:32:11.93, foo, 2016-07-24 22:32:11.93, foo, 0}
2016-07-24 22:32:11,931 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{69, 1, 17, 2016-09-26 21:02:12.000, 1, 1000, 1, 2016-07-24 22:32:11.931, foo, 2016-07-24 22:32:11.931, foo, 0}
2016-07-24 22:32:11,933 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{70, 1, 17, 2017-03-03 01:11:00.000, 1, 1200, 1, 2016-07-24 22:32:11.933, foo, 2016-07-24 22:32:11.933, foo, 0}
2016-07-24 22:32:11,985 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 70 rows are loaded to PURCHASE
2016-07-24 22:32:11,987 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{1, 1, 1800, 2006/12/25 23:59:59, BAK, 2016-07-24 22:32:11.987, foo, 2016-07-24 22:32:11.987, foo}
2016-07-24 22:32:11,988 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{2, 2, 1700, 2007/11/13 16:16:16, BAK, 2016-07-24 22:32:11.988, foo, 2016-07-24 22:32:11.988, foo}
2016-07-24 22:32:11,989 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{3, 3, 900, 2006/12/23 23:56:29, CRC, 2016-07-24 22:32:11.989, foo, 2016-07-24 22:32:11.989, foo}
2016-07-24 22:32:11,990 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{4, 3, 900, 2006/12/23 23:56:30, HAN, 2016-07-24 22:32:11.99, foo, 2016-07-24 22:32:11.99, foo}
2016-07-24 22:32:11,991 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{5, 4, 1700, 2007/12/01 02:13:00, HAN, 2016-07-24 22:32:11.991, foo, 2016-07-24 22:32:11.991, foo}
2016-07-24 22:32:11,992 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{6, 5, 800.20, 2008/04/04 23:12:59, HAN, 2016-07-24 22:32:11.992, foo, 2016-07-24 22:32:11.992, foo}
2016-07-24 22:32:11,993 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{7, 5, 1000.90, 2008/05/04 23:12:59, CRC, 2016-07-24 22:32:11.993, foo, 2016-07-24 22:32:11.993, foo}
2016-07-24 22:32:11,994 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{8, 6, 1000, 2002/01/01 16:32:01, CRC, 2016-07-24 22:32:11.994, foo, 2016-07-24 22:32:11.994, foo}
2016-07-24 22:32:11,995 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{9, 6, 400.8, 2002/01/01 16:32:01, CRC, 2016-07-24 22:32:11.995, foo, 2016-07-24 22:32:11.995, foo}
2016-07-24 22:32:11,996 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{10, 6, 599.2, 2002/01/01 16:32:01, HAN, 2016-07-24 22:32:11.996, foo, 2016-07-24 22:32:11.996, foo}
2016-07-24 22:32:11,998 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{11, 7, 300, 2006/01/28 23:59:59, CRC, 2016-07-24 22:32:11.998, foo, 2016-07-24 22:32:11.998, foo}
2016-07-24 22:32:11,999 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{12, 8, 535.5, 2007/11/09 16:23:00, BAK, 2016-07-24 22:32:11.999, foo, 2016-07-24 22:32:11.999, foo}
2016-07-24 22:32:12,001 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{13, 8, 999.5, 2014/11/09 16:23:05, BAK, 2016-07-24 22:32:12.0, foo, 2016-07-24 22:32:12.0, foo}
2016-07-24 22:32:12,002 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{14, 9, 1700, 2006/12/22 23:59:59, BAK, 2016-07-24 22:32:12.002, foo, 2016-07-24 22:32:12.002, foo}
2016-07-24 22:32:12,002 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{15, 11, 1799.2, 2014/11/09 16:23:01, CRC, 2016-07-24 22:32:12.002, foo, 2016-07-24 22:32:12.002, foo}
2016-07-24 22:32:12,003 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{16, 11, 0.8, 2014/11/09 16:23:01, HAN, 2016-07-24 22:32:12.003, foo, 2016-07-24 22:32:12.003, foo}
2016-07-24 22:32:12,004 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{17, 12, 1690, 2011/12/22 23:59:12, HAN, 2016-07-24 22:32:12.004, foo, 2016-07-24 22:32:12.004, foo}
2016-07-24 22:32:12,005 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{18, 12, 10, 2011/12/22 23:59:12, CRC, 2016-07-24 22:32:12.005, foo, 2016-07-24 22:32:12.005, foo}
2016-07-24 22:32:12,008 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{19, 13, 1800.7, 2007/11/01 02:13:00, CRC, 2016-07-24 22:32:12.006, foo, 2016-07-24 22:32:12.006, foo}
2016-07-24 22:32:12,009 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{20, 14, 1700, 2008/11/09 16:23:02, BAK, 2016-07-24 22:32:12.009, foo, 2016-07-24 22:32:12.009, foo}
2016-07-24 22:32:12,010 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{21, 15, 300, 2006/12/22 23:59:32, HAN, 2016-07-24 22:32:12.01, foo, 2016-07-24 22:32:12.01, foo}
2016-07-24 22:32:12,011 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{22, 15, 600, 2007/12/22 23:59:32, BAK, 2016-07-24 22:32:12.011, foo, 2016-07-24 22:32:12.011, foo}
2016-07-24 22:32:12,012 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{23, 15, 900, 2008/12/22 23:59:32, HAN, 2016-07-24 22:32:12.012, foo, 2016-07-24 22:32:12.012, foo}
2016-07-24 22:32:12,013 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{24, 16, 2000, 2012/11/01 02:13:00, BAK, 2016-07-24 22:32:12.013, foo, 2016-07-24 22:32:12.013, foo}
2016-07-24 22:32:12,014 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{25, 18, 1535, 2013/11/01 02:13:00, HAN, 2016-07-24 22:32:12.014, foo, 2016-07-24 22:32:12.014, foo}
2016-07-24 22:32:12,016 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{26, 19, 1700, 2007/11/01 02:13:00, HAN, 2016-07-24 22:32:12.016, foo, 2016-07-24 22:32:12.016, foo}
2016-07-24 22:32:12,016 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{27, 20, 5, 2006/12/22 23:59:35, HAN, 2016-07-24 22:32:12.016, foo, 2016-07-24 22:32:12.016, foo}
2016-07-24 22:32:12,017 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{28, 21, 399999, 2006/12/22 23:59:35, BAK, 2016-07-24 22:32:12.017, foo, 2016-07-24 22:32:12.017, foo}
2016-07-24 22:32:12,018 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{29, 22, 1800, 2007/11/01 02:13:00, BAK, 2016-07-24 22:32:12.018, foo, 2016-07-24 22:32:12.018, foo}
2016-07-24 22:32:12,019 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{30, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-24 22:32:12.019, foo, 2016-07-24 22:32:12.019, foo}
2016-07-24 22:32:12,019 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{31, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-24 22:32:12.019, foo, 2016-07-24 22:32:12.019, foo}
2016-07-24 22:32:12,022 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{32, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-24 22:32:12.022, foo, 2016-07-24 22:32:12.022, foo}
2016-07-24 22:32:12,023 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{33, 24, 1000, 2012/09/11 12:13:00, BAK, 2016-07-24 22:32:12.023, foo, 2016-07-24 22:32:12.023, foo}
2016-07-24 22:32:12,025 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{34, 24, 800, 2015/09/11 12:13:00, BAK, 2016-07-24 22:32:12.024, foo, 2016-07-24 22:32:12.024, foo}
2016-07-24 22:32:12,026 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{35, 25, 1700, 2013/12/22 23:59:37, BAK, 2016-07-24 22:32:12.026, foo, 2016-07-24 22:32:12.026, foo}
2016-07-24 22:32:12,027 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{36, 26, 1800, 2005/12/21 12:13:00, BAK, 2016-07-24 22:32:12.027, foo, 2016-07-24 22:32:12.027, foo}
2016-07-24 22:32:12,028 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{37, 27, 2000, 2006/12/22 23:59:38, HAN, 2016-07-24 22:32:12.027, foo, 2016-07-24 22:32:12.027, foo}
2016-07-24 22:32:12,028 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{38, 28, 600, 2007/11/01 02:13:00, BAK, 2016-07-24 22:32:12.028, foo, 2016-07-24 22:32:12.028, foo}
2016-07-24 22:32:12,029 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{39, 29, 1535, 2006/12/22 23:59:39, BAK, 2016-07-24 22:32:12.029, foo, 2016-07-24 22:32:12.029, foo}
2016-07-24 22:32:12,030 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{40, 30, 100, 2010/09/01 02:13:00, HAN, 2016-07-24 22:32:12.03, foo, 2016-07-24 22:32:12.03, foo}
2016-07-24 22:32:12,031 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{41, 30, 200, 2011/10/31 02:13:00, CRC, 2016-07-24 22:32:12.031, foo, 2016-07-24 22:32:12.031, foo}
2016-07-24 22:32:12,033 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{42, 30, 300.75, 2012/11/01 02:13:00, CRC, 2016-07-24 22:32:12.033, foo, 2016-07-24 22:32:12.033, foo}
2016-07-24 22:32:12,034 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{43, 30, 400.25, 2013/12/01 02:13:00, HAN, 2016-07-24 22:32:12.034, foo, 2016-07-24 22:32:12.034, foo}
2016-07-24 22:32:12,035 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{44, 30, 300, 2014/09/01 02:13:00, HAN, 2016-07-24 22:32:12.035, foo, 2016-07-24 22:32:12.035, foo}
2016-07-24 22:32:12,036 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{45, 30, 700, 2014/10/01 02:13:00, HAN, 2016-07-24 22:32:12.036, foo, 2016-07-24 22:32:12.036, foo}
2016-07-24 22:32:12,037 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{46, 31, 1700.85, 2006/12/22 23:59:40, HAN, 2016-07-24 22:32:12.037, foo, 2016-07-24 22:32:12.037, foo}
2016-07-24 22:32:12,039 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{47, 32, 1800, 2009/12/28 12:13:10, HAN, 2016-07-24 22:32:12.039, foo, 2016-07-24 22:32:12.039, foo}
2016-07-24 22:32:12,040 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{48, 33, 1700, 2006/12/22 23:59:41, CRC, 2016-07-24 22:32:12.039, foo, 2016-07-24 22:32:12.039, foo}
2016-07-24 22:32:12,041 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{49, 34, 1800, 2007/05/21 12:13:00, BAK, 2016-07-24 22:32:12.041, foo, 2016-07-24 22:32:12.041, foo}
2016-07-24 22:32:12,042 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{50, 35, 2000, 2006/12/12 23:59:42, CRC, 2016-07-24 22:32:12.042, foo, 2016-07-24 22:32:12.042, foo}
2016-07-24 22:32:12,043 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{51, 36, 300.1, 2012/05/01 02:13:00, CRC, 2016-07-24 22:32:12.043, foo, 2016-07-24 22:32:12.043, foo}
2016-07-24 22:32:12,044 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{52, 36, 300.8, 2013/05/01 02:13:00, HAN, 2016-07-24 22:32:12.044, foo, 2016-07-24 22:32:12.044, foo}
2016-07-24 22:32:12,045 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{53, 36, 300.25, 2014/05/01 02:13:00, HAN, 2016-07-24 22:32:12.045, foo, 2016-07-24 22:32:12.045, foo}
2016-07-24 22:32:12,046 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{54, 37, 1535, 2006/12/12 23:59:43, HAN, 2016-07-24 22:32:12.046, foo, 2016-07-24 22:32:12.046, foo}
2016-07-24 22:32:12,047 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{55, 38, 1700, 2007/05/01 02:03:00, HAN, 2016-07-24 22:32:12.047, foo, 2016-07-24 22:32:12.047, foo}
2016-07-24 22:32:12,048 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{56, 40, 128, 2007/05/01 12:13:00, BAK, 2016-07-24 22:32:12.048, foo, 2016-07-24 22:32:12.048, foo}
2016-07-24 22:32:12,049 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{57, 40, 256, 2013/05/01 12:13:00, BAK, 2016-07-24 22:32:12.049, foo, 2016-07-24 22:32:12.049, foo}
2016-07-24 22:32:12,050 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{58, 40, 512, 2009/05/01 12:13:00, CRC, 2016-07-24 22:32:12.05, foo, 2016-07-24 22:32:12.05, foo}
2016-07-24 22:32:12,051 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{59, 41, 1700, 2007/11/01 02:13:00, HAN, 2016-07-24 22:32:12.051, foo, 2016-07-24 22:32:12.051, foo}
2016-07-24 22:32:12,052 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{60, 42, 30000000, 2014/03/22 21:59:40, HAN, 2016-07-24 22:32:12.052, foo, 2016-07-24 22:32:12.052, foo}
2016-07-24 22:32:12,053 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{61, 43, 1800, 2006/12/28 12:13:10, BAK, 2016-07-24 22:32:12.053, foo, 2016-07-24 22:32:12.053, foo}
2016-07-24 22:32:12,054 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{62, 44, 1700, 2006/12/22 23:59:41, BAK, 2016-07-24 22:32:12.054, foo, 2016-07-24 22:32:12.054, foo}
2016-07-24 22:32:12,056 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{63, 45, 1800, 2007/05/21 12:13:00, CRC, 2016-07-24 22:32:12.056, foo, 2016-07-24 22:32:12.056, foo}
2016-07-24 22:32:12,057 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{64, 46, 2000, 2010/12/12 23:59:42, BAK, 2016-07-24 22:32:12.057, foo, 2016-07-24 22:32:12.057, foo}
2016-07-24 22:32:12,058 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{65, 48, 90000, 2006/12/12 23:59:43, HAN, 2016-07-24 22:32:12.058, foo, 2016-07-24 22:32:12.058, foo}
2016-07-24 22:32:12,059 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{66, 48, 10000, 2006/12/12 23:59:43, BAK, 2016-07-24 22:32:12.059, foo, 2016-07-24 22:32:12.059, foo}
2016-07-24 22:32:12,060 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{67, 49, 1700.66, 2007/05/01 02:03:00, HAN, 2016-07-24 22:32:12.06, foo, 2016-07-24 22:32:12.06, foo}
2016-07-24 22:32:12,061 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{68, 51, 1700, 2007/11/21 02:13:00, BAK, 2016-07-24 22:32:12.061, foo, 2016-07-24 22:32:12.061, foo}
2016-07-24 22:32:12,062 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{69, 52, 100, 2006/12/23 23:59:40, BAK, 2016-07-24 22:32:12.062, foo, 2016-07-24 22:32:12.062, foo}
2016-07-24 22:32:12,063 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{70, 52, 40, 2007/12/23 23:59:40, HAN, 2016-07-24 22:32:12.063, foo, 2016-07-24 22:32:12.063, foo}
2016-07-24 22:32:12,064 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{71, 52, 40, 2008/12/23 23:59:40, HAN, 2016-07-24 22:32:12.064, foo, 2016-07-24 22:32:12.064, foo}
2016-07-24 22:32:12,064 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{72, 52, 40, 2009/12/23 23:59:40, HAN, 2016-07-24 22:32:12.064, foo, 2016-07-24 22:32:12.064, foo}
2016-07-24 22:32:12,065 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{73, 52, 40, 2010/12/23 23:59:40, BAK, 2016-07-24 22:32:12.065, foo, 2016-07-24 22:32:12.065, foo}
2016-07-24 22:32:12,067 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{74, 52, 40, 2011/12/23 23:59:40, CRC, 2016-07-24 22:32:12.067, foo, 2016-07-24 22:32:12.067, foo}
2016-07-24 22:32:12,069 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{75, 52, 40, 2012/12/23 23:59:40, BAK, 2016-07-24 22:32:12.069, foo, 2016-07-24 22:32:12.069, foo}
2016-07-24 22:32:12,071 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{76, 52, 40, 2013/12/23 23:59:40, HAN, 2016-07-24 22:32:12.071, foo, 2016-07-24 22:32:12.071, foo}
2016-07-24 22:32:12,074 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{77, 52, 40, 2014/12/23 23:59:40, HAN, 2016-07-24 22:32:12.074, foo, 2016-07-24 22:32:12.074, foo}
2016-07-24 22:32:12,075 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{78, 52, 40, 2015/12/23 23:59:40, HAN, 2016-07-24 22:32:12.074, foo, 2016-07-24 22:32:12.074, foo}
2016-07-24 22:32:12,076 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{79, 53, 600000, 2007/12/28 12:13:10, BAK, 2016-07-24 22:32:12.075, foo, 2016-07-24 22:32:12.075, foo}
2016-07-24 22:32:12,078 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{80, 54, 1700.42, 2008/02/22 23:59:41, CRC, 2016-07-24 22:32:12.077, foo, 2016-07-24 22:32:12.077, foo}
2016-07-24 22:32:12,079 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{81, 55, 1600, 2012/07/21 12:13:00, HAN, 2016-07-24 22:32:12.078, foo, 2016-07-24 22:32:12.078, foo}
2016-07-24 22:32:12,079 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{82, 55, 200, 2008/07/21 12:13:00, CRC, 2016-07-24 22:32:12.079, foo, 2016-07-24 22:32:12.079, foo}
2016-07-24 22:32:12,080 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{83, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-24 22:32:12.08, foo, 2016-07-24 22:32:12.08, foo}
2016-07-24 22:32:12,081 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{84, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-24 22:32:12.081, foo, 2016-07-24 22:32:12.081, foo}
2016-07-24 22:32:12,082 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{85, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-24 22:32:12.082, foo, 2016-07-24 22:32:12.082, foo}
2016-07-24 22:32:12,083 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{86, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-24 22:32:12.083, foo, 2016-07-24 22:32:12.083, foo}
2016-07-24 22:32:12,083 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{87, 57, 999, 2014/02/01 02:13:00, HAN, 2016-07-24 22:32:12.083, foo, 2016-07-24 22:32:12.083, foo}
2016-07-24 22:32:12,084 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{88, 58, 4000000, 2006/12/12 23:59:43, HAN, 2016-07-24 22:32:12.084, foo, 2016-07-24 22:32:12.084, foo}
2016-07-24 22:32:12,085 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{89, 59, 380.77, 2013/05/01 02:03:00, CRC, 2016-07-24 22:32:12.085, foo, 2016-07-24 22:32:12.085, foo}
2016-07-24 22:32:12,086 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{90, 60, 675.88, 2006/12/12 23:59:44, BAK, 2016-07-24 22:32:12.086, foo, 2016-07-24 22:32:12.086, foo}
2016-07-24 22:32:12,087 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{91, 61, 12000000, 2008/03/03 06:34:56, HAN, 2016-07-24 22:32:12.087, foo, 2016-07-24 22:32:12.087, foo}
2016-07-24 22:32:12,088 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{92, 62, 20000, 2009/06/04 06:34:56, HAN, 2016-07-24 22:32:12.088, foo, 2016-07-24 22:32:12.088, foo}
2016-07-24 22:32:12,090 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{93, 63, 2000, 2010/09/26 06:34:56, HAN, 2016-07-24 22:32:12.09, foo, 2016-07-24 22:32:12.09, foo}
2016-07-24 22:32:12,092 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{94, 64, 50, 2011/03/03 09:45:29, BAK, 2016-07-24 22:32:12.092, foo, 2016-07-24 22:32:12.092, foo}
2016-07-24 22:32:12,092 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{95, 65, 1000000, 2012/06/04 09:45:29, BAK, 2016-07-24 22:32:12.092, foo, 2016-07-24 22:32:12.092, foo}
2016-07-24 22:32:12,093 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{96, 66, 900000, 2013/09/26 09:45:29, BAK, 2016-07-24 22:32:12.093, foo, 2016-07-24 22:32:12.093, foo}
2016-07-24 22:32:12,094 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{97, 67, 3000, 2014/03/03 21:02:12, CRC, 2016-07-24 22:32:12.094, foo, 2016-07-24 22:32:12.094, foo}
2016-07-24 22:32:12,095 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{98, 68, 3000, 2015/06/04 21:02:12, CRC, 2016-07-24 22:32:12.095, foo, 2016-07-24 22:32:12.095, foo}
2016-07-24 22:32:12,096 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{99, 69, 1000, 2016/09/26 21:02:12, CRC, 2016-07-24 22:32:12.096, foo, 2016-07-24 22:32:12.096, foo}
2016-07-24 22:32:12,097 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{100, 70, 1200, 2017/03/03 01:11:00, HAN, 2016-07-24 22:32:12.097, foo, 2016-07-24 22:32:12.097, foo}
2016-07-24 22:32:12,170 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 100 rows are loaded to PURCHASE_PAYMENT
2016-07-24 22:32:12,171 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():378) - ...Checking implicit set of classification
2016-07-24 22:32:12,192 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-24 22:32:12,203 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-24 22:32:12,214 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-24 22:32:12,222 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-24 22:32:12,224 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-24 22:32:12,227 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-24 22:32:12,230 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-24 22:32:12,244 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-07-24 22:32:12,248 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-07-24 22:32:12,253 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct MOBILE_LOGIN_FLG from MEMBER_LOGIN where MOBILE_LOGIN_FLG not in (1, 0)
2016-07-24 22:32:12,257 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_COMPLETE_FLG from PURCHASE where PAYMENT_COMPLETE_FLG not in (1, 0)
2016-07-24 22:32:12,259 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_METHOD_CODE from PURCHASE_PAYMENT where PAYMENT_METHOD_CODE not in ('HAN', 'BAK', 'CRC')
2016-07-24 22:32:12,265 [main] INFO  (DfTakeFinallyProcess#takeFinally():219) - 
2016-07-24 22:32:12,266 [main] INFO  (DfTakeFinallyProcess#takeFinally():220) - * * * * * * * **
2016-07-24 22:32:12,266 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - *              *
2016-07-24 22:32:12,267 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * Take Finally *
2016-07-24 22:32:12,268 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2016-07-24 22:32:12,268 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * * * * * * * **
2016-07-24 22:32:12,279 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: take-finally.sql
2016-07-24 22:32:12,281 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Member addresses should be only one at any time.
-- - - - - - - - - - -/
select adr.MEMBER_ADDRESS_ID, adr.MEMBER_ID
     , adr.VALID_BEGIN_DATE, adr.VALID_END_DATE
     , adr.ADDRESS
  from MEMBER_ADDRESS adr
 where exists (select subadr.MEMBER_ADDRESS_ID
                 from MEMBER_ADDRESS subadr
                where subadr.MEMBER_ID = adr.MEMBER_ID
                  and subadr.VALID_BEGIN_DATE > adr.VALID_BEGIN_DATE
                  -- 有効期間が一日だけ重複しているパターンも検出
                  and subadr.VALID_BEGIN_DATE <= adr.VALID_END_DATE
       )
2016-07-24 22:32:12,286 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 正式会員日時を持ってる仮会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'PRV'
   and mem.FORMALIZED_DATETIME is not NULL
2016-07-24 22:32:12,287 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- まだ生まれていない会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.BIRTHDATE > now()
2016-07-24 22:32:12,289 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 退会会員が退会情報を持っていることをアサート
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'WDL'
   and not exists (select wdl.MEMBER_ID
                     from MEMBER_WITHDRAWAL wdl
                    where wdl.MEMBER_ID = mem.MEMBER_ID
       )
2016-07-24 22:32:12,290 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=4 failure=0
2016-07-24 22:32:12,291 [main] INFO  (DfSqlFileFireMan#fire():89) - {Take Finally}: success=4 failure=0 (in 1 files)
2016-07-24 22:32:12,292 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-24 22:32:12,297 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m05s362ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = root
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=49 failure=0 (in 3 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql
  o replace-schema-50-procedure.sql

 {Load Data}: loaded-files=3
  (common)
  o 10-master.xls
  (ut)
  o 20-member.xls
  o 30-product.xls

 {Take Finally}: success=4 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2016-07-31 12:52:04,999 [main] INFO  (DfReplaceSchemaTask#begin():91) - +------------------------------------------+
2016-07-31 12:52:05,003 [main] INFO  (DfReplaceSchemaTask#begin():92) - |                                          |
2016-07-31 12:52:05,003 [main] INFO  (DfReplaceSchemaTask#begin():93) - |              ReplaceSchema               |
2016-07-31 12:52:05,009 [main] INFO  (DfReplaceSchemaTask#begin():101) - |                                          |
2016-07-31 12:52:05,010 [main] INFO  (DfReplaceSchemaTask#begin():102) - +------------------------------------------+
2016-07-31 12:52:05,012 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():342) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2016-07-31 12:52:06,393 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-07-31 12:52:06,394 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-07-31 12:52:06,394 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/maihamadb
2016-07-31 12:52:06,394 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2016-07-31 12:52:06,409 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-07-31 12:52:06,837 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-07-31 12:52:06,837 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-07-31 12:52:06,855 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2016-07-31 12:52:06,856 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2016-07-31 12:52:06,856 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2016-07-31 12:52:06,858 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2016-07-31 12:52:06,858 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2016-07-31 12:52:06,859 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2016-07-31 12:52:06,879 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-31 12:52:06,880 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-31 12:52:06,880 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-31 12:52:07,010 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_ADDRESS
2016-07-31 12:52:07,021 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_FOLLOWING
2016-07-31 12:52:07,041 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_LOGIN
2016-07-31 12:52:07,065 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_SECURITY
2016-07-31 12:52:07,073 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_SERVICE
2016-07-31 12:52:07,085 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_WITHDRAWAL
2016-07-31 12:52:07,104 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table PURCHASE_PAYMENT
2016-07-31 12:52:07,149 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER drop foreign key FK_MEMBER_MEMBER_STATUS
2016-07-31 12:52:07,199 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_ADDRESS drop foreign key FK_MEMBER_ADDRESS_MEMBER
2016-07-31 12:52:07,222 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_ADDRESS drop foreign key FK_MEMBER_ADDRESS_REGION
2016-07-31 12:52:07,254 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_FOLLOWING drop foreign key FK_MEMBER_FOLLOWING_MY_MEMBER
2016-07-31 12:52:07,272 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_FOLLOWING drop foreign key FK_MEMBER_FOLLOWING_YOUR_MEMBER
2016-07-31 12:52:07,294 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_LOGIN drop foreign key FK_MEMBER_LOGIN_MEMBER_STATUS
2016-07-31 12:52:07,315 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_LOGIN drop foreign key FK_MEMBER_LOGIN_MEMBER
2016-07-31 12:52:07,333 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_SECURITY drop foreign key FK_MEMBER_SECURITY_MEMBER
2016-07-31 12:52:07,353 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_SERVICE drop foreign key FK_MEMBER_SERVICE_MEMBER
2016-07-31 12:52:07,372 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_SERVICE drop foreign key FK_MEMBER_SERVICE_SERVICE_RANK_CODE
2016-07-31 12:52:07,398 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_WITHDRAWAL drop foreign key FK_MEMBER_WITHDRAWAL_MEMBER
2016-07-31 12:52:07,412 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_WITHDRAWAL drop foreign key FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON
2016-07-31 12:52:07,434 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PRODUCT drop foreign key FK_PRODUCT_PRODUCT_CATEGORY
2016-07-31 12:52:07,451 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PRODUCT drop foreign key FK_PRODUCT_PRODUCT_STATUS
2016-07-31 12:52:07,474 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PRODUCT_CATEGORY drop foreign key FK_PRODUCT_CATEGORY_PARENT
2016-07-31 12:52:07,495 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PURCHASE drop foreign key FK_PURCHASE_MEMBER
2016-07-31 12:52:07,512 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PURCHASE drop foreign key FK_PURCHASE_PRODUCT
2016-07-31 12:52:07,534 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PURCHASE_PAYMENT drop foreign key FK_PURCHASE_PAYMENT_PURCHASE
2016-07-31 12:52:07,566 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER
2016-07-31 12:52:07,571 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_ADDRESS
2016-07-31 12:52:07,576 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_FOLLOWING
2016-07-31 12:52:07,580 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_LOGIN
2016-07-31 12:52:07,585 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_SECURITY
2016-07-31 12:52:07,589 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_SERVICE
2016-07-31 12:52:07,593 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_STATUS
2016-07-31 12:52:07,597 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_WITHDRAWAL
2016-07-31 12:52:07,602 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PRODUCT
2016-07-31 12:52:07,607 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PRODUCT_CATEGORY
2016-07-31 12:52:07,611 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PRODUCT_STATUS
2016-07-31 12:52:07,614 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PURCHASE
2016-07-31 12:52:07,618 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PURCHASE_PAYMENT
2016-07-31 12:52:07,621 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table REGION
2016-07-31 12:52:07,624 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table SERVICE_RANK
2016-07-31 12:52:07,628 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table WITHDRAWAL_REASON
2016-07-31 12:52:07,738 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop procedure SP_IN_OUT_PARAMETER
2016-07-31 12:52:07,752 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop procedure SP_RETURN_RESULT_SET
2016-07-31 12:52:07,754 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2016-07-31 12:52:07,754 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2016-07-31 12:52:07,755 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2016-07-31 12:52:07,755 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2016-07-31 12:52:07,756 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2016-07-31 12:52:07,756 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2016-07-31 12:52:07,761 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-00-system.sql
2016-07-31 12:52:07,766 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2016-07-31 12:52:07,768 [main] INFO  (DfCreateSchemaProcess$1#dispatch():295) - ...Creating a connection to system
2016-07-31 12:52:07,770 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():520) - ...Creating a connection for additional user: root
2016-07-31 12:52:07,785 [main] INFO  (DfCreateSchemaProcess$1#dispatch():321) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2016-07-31 12:52:07,786 [main] INFO  (DfCreateSchemaProcess$1#dispatch():323) -  -> Can't create database 'maihamadb'; database exists
2016-07-31 12:52:07,787 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():433) - ...Reviving the user 'system' until the end of this SQL file
2016-07-31 12:52:07,788 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on maihamadb.*
  to root@localhost identified by ''
2016-07-31 12:52:07,819 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2016-07-31 12:52:07,826 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-07-31 12:52:07,827 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-10-basic.sql
2016-07-31 12:52:07,828 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():370) - ...Saying good-bye to the user 'system' again
2016-07-31 12:52:07,829 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():374) - ...Clearing revived users
2016-07-31 12:52:07,829 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():381) - ...Coming back to the main user from the user 'system'
2016-07-31 12:52:07,839 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER(
    MEMBER_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員ID: 会員を識別するID。連番として基本的に自動採番される。
（会員IDだけに限らず）採番方法はDBMSによって変わる。',
    MEMBER_NAME VARCHAR(160) NOT NULL COMMENT '会員名称: 会員のフルネームの名称。',
    MEMBER_ACCOUNT VARCHAR(50) NOT NULL COMMENT '会員アカウント: 会員がログイン時に利用するアカウントNO。',
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード',
    FORMALIZED_DATETIME DATETIME COMMENT '正式会員日時: 会員が正式に確定した日時。一度確定したら更新されない。
仮会員のときはnull。',
    BIRTHDATE DATE COMMENT '生年月日: 必須項目ではないので、このデータがない会員もいる。',
    REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時: レコードが登録された日時。共通カラムの一つ。',
    REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ: レコードを登録したユーザ。共通カラムの一つ。',
    UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時: レコードが（最後に）更新された日時。共通カラムの一つ。',
    UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ: レコードを更新したユーザ。',
    VERSION_NO BIGINT NOT NULL COMMENT 'バージョンNO: レコードのバージョンを示すNO。
更新回数と等しく、主に排他制御のために利用される。',
    PRIMARY KEY (MEMBER_ID),
    UNIQUE (MEMBER_ACCOUNT)
) COMMENT='会員: 会員登録時にデータが登録される。
基本的に物理削除はなく、退会したらステータスが退会会員になる。'
2016-07-31 12:52:07,888 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_ADDRESS(
    MEMBER_ADDRESS_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員住所ID: 会員住所を識別するID。
履歴分も含むテーブルなので、これ自体はFKではない。',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
履歴分を含むため、これだけではユニークにはならない。',
    VALID_BEGIN_DATE DATE NOT NULL COMMENT '有効開始日: 一つの有効期間の開始を示す日付。
前の有効終了日の次の日の値が格納される。',
    VALID_END_DATE DATE NOT NULL COMMENT '有効終了日: 有効期間の終了日。
次の有効開始日の一日前の値が格納される。
ただし、次の有効期間がない場合は 9999/12/31 となる。',
    ADDRESS VARCHAR(200) NOT NULL COMMENT '住所: まるごと住所',
    REGION_ID INTEGER NOT NULL COMMENT '地域ID: 地域を参照するID。
ここでは特に住所の内容と連動しているわけではない。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ADDRESS_ID),
    UNIQUE (MEMBER_ID, VALID_BEGIN_DATE)
) COMMENT='会員住所情報: 会員の住所に関する情報。
同時に有効期間ごとに履歴管理されている。'
2016-07-31 12:52:07,912 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_LOGIN(
    MEMBER_LOGIN_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員ログインID',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID',
    LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時: ログインした瞬間の日時。',
    MOBILE_LOGIN_FLG INTEGER NOT NULL COMMENT 'モバイルログインフラグ: モバイル機器からのログインか否か。',
    LOGIN_MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT 'ログイン会員ステータスコード: ログイン時の会員ステータス',
    PRIMARY KEY (MEMBER_LOGIN_ID),
    UNIQUE (MEMBER_ID, LOGIN_DATETIME)
) COMMENT='会員ログイン情報: ログインするたびに登録されるログイン履歴。'
2016-07-31 12:52:07,924 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SECURITY(
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: そのまま one-to-one を構成するためのFKとなる。',
    LOGIN_PASSWORD VARCHAR(50) NOT NULL COMMENT 'ログインパスワード: ログイン時に利用するパスワード。
本当は良くないが、Exampleなのでひとまず暗号化していない。',
    REMINDER_QUESTION VARCHAR(50) NOT NULL COMMENT 'リマインダ質問: パスワードを忘れた際のリマインダ機能における質問の内容。',
    REMINDER_ANSWER VARCHAR(50) NOT NULL COMMENT 'リマインダ回答: パスワードを忘れた際のリマインダ機能における質問の答え。',
    REMINDER_USE_COUNT INTEGER NOT NULL COMMENT 'リマインダ回数: 忘れっぽい人を分析するためのもの。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある'
2016-07-31 12:52:07,938 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SERVICE(
	MEMBER_SERVICE_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員サービスID: 代理キー。律儀にIDの役割を分ける',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。ユニークなので、会員とは one-to-one の関係に。',
    SERVICE_POINT_COUNT INTEGER NOT NULL COMMENT 'サービスポイント数: 会員が現在利用できるサービスポイントの数。
基本的に、購入時には増えてポイントを使ったら減る。',
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを参照するコード。
どんなランクがあるのかドキドキですね。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_SERVICE_ID),
    UNIQUE (MEMBER_ID)
) COMMENT='会員サービス: 会員のサービス情報（ポイントサービスなど）。'
2016-07-31 12:52:07,950 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_WITHDRAWAL(
    MEMBER_ID INTEGER NOT NULL,
    WITHDRAWAL_REASON_CODE CHAR(3) COMMENT '退会理由コード: 退会した定型理由を参照するコード。
何も言わずに退会する会員もいるので必須項目ではない。',
    WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト: 会員がフリーテキストで入力できる退会理由。
もう言いたいこと言ってもらう感じ。',
    WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT '退会日時: 退会した瞬間の日時。
正式会員日時と違い、こっちはone-to-oneの別テーブルで。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員退会情報: 退会会員の退会に関する詳細な情報。
退会会員のみデータが存在する。'
2016-07-31 12:52:07,961 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE(
    PURCHASE_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入ID: 連番',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
購入を識別する自然キー（複合ユニーク制約）の筆頭要素。',
    PRODUCT_ID INTEGER NOT NULL COMMENT '商品ID: 商品を参照するID。',
    PURCHASE_DATETIME DATETIME NOT NULL COMMENT '購入日時: 購入した瞬間の日時。',
    PURCHASE_COUNT INTEGER NOT NULL COMMENT '購入数量: 購入した商品の（一回の購入における）数量。',
    PURCHASE_PRICE INTEGER NOT NULL COMMENT '購入価格: 購入によって実際に会員が支払った（支払う予定の）価格。
基本は商品の定価に購入数量を掛けたものになるが、
ポイント利用や割引があったりと必ずしもそうはならない。',
    PAYMENT_COMPLETE_FLG INTEGER NOT NULL COMMENT '支払完了フラグ: この購入に関しての支払いが完了しているか否か。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PURCHASE_ID),
    UNIQUE (MEMBER_ID, PRODUCT_ID, PURCHASE_DATETIME),
    KEY (MEMBER_ID),
    KEY (PRODUCT_ID)
) COMMENT='購入: 一つの商品に対する一回の購入を表現する。
一回の購入で一つの商品を複数個買うこともある。'
2016-07-31 12:52:08,018 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE_PAYMENT(
    PURCHASE_PAYMENT_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入支払ID: 連番',
    PURCHASE_ID BIGINT NOT NULL COMMENT '購入ID: 支払い対象の購入へのID',
    PAYMENT_AMOUNT DECIMAL(10,2) NOT NULL COMMENT '支払金額: 支払った金額。さて、小数点なのはなぜでしょう？',
    PAYMENT_DATETIME DATETIME NOT NULL COMMENT '支払日時: 支払ったときの日時',
    PAYMENT_METHOD_CODE CHAR(3) NOT NULL COMMENT '支払方法コード: 手渡しや銀行振込など',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (PURCHASE_PAYMENT_ID)
) COMMENT='購入支払: 購入に対する支払。
分割払いもできるのでmanyとなり、会員からの孫テーブルのテストができてうれしい。'
2016-07-31 12:52:08,029 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT(
    PRODUCT_ID INTEGER AUTO_INCREMENT NOT NULL,
    PRODUCT_NAME VARCHAR(50) NOT NULL COMMENT '商品名称',
    PRODUCT_HANDLE_CODE VARCHAR(100) NOT NULL COMMENT '商品ハンドルコード: 商品を識別する業務上のコード。',
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL,
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL,
    REGULAR_PRICE INTEGER NOT NULL COMMENT '定価',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PRODUCT_ID),
    UNIQUE (PRODUCT_HANDLE_CODE)
) COMMENT='商品'
2016-07-31 12:52:08,076 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_CATEGORY(
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL COMMENT '商品カテゴリコード',
    PRODUCT_CATEGORY_NAME VARCHAR(50) NOT NULL COMMENT '商品カテゴリ名称',
    PARENT_CATEGORY_CODE CHAR(3) COMMENT '親カテゴリコード: 最上位の場合はデータなし。',
    PRIMARY KEY (PRODUCT_CATEGORY_CODE)
) COMMENT='商品カテゴリ: 商品のカテゴリを表現するマスタ。
自己参照の階層になっている。'
2016-07-31 12:52:08,087 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_STATUS(
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL COMMENT '商品ステータスコード',
    PRODUCT_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '商品ステータス名称',
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (PRODUCT_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='商品ステータス'
2016-07-31 12:52:08,099 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table REGION(
    REGION_ID INTEGER NOT NULL COMMENT '地域ID',
    REGION_NAME VARCHAR(50) NOT NULL COMMENT '地域名称',
    PRIMARY KEY (REGION_ID)
) COMMENT='地域: 主に会員の住所に対応する地域。
かなりざっくりした感じではある。'
2016-07-31 12:52:08,109 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table SERVICE_RANK(
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを識別するコード。',
    SERVICE_RANK_NAME VARCHAR(50) NOT NULL COMMENT 'サービスランク名称: サービスランクの名称。
（ゴールドとかプラチナとか基本的には威厳のある名前）',
    SERVICE_POINT_INCIDENCE NUMERIC(5, 3) NOT NULL COMMENT 'サービスポイント発生率: 購入ごとのサービスポイントの発生率。
購入価格にこの値をかけた数が発生ポイント。',
    NEW_ACCEPTABLE_FLG INTEGER NOT NULL COMMENT '新規受け入れ可能フラグ: このランクへの新規受け入れができるかどうか。',
    DESCRIPTION VARCHAR(200) NOT NULL,
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (SERVICE_RANK_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='サービスランク: 会員のサービスレベルを表現するランク。
（ゴールドとかプラチナとか）'
2016-07-31 12:52:08,157 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_STATUS(
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード: 会員ステータスを識別するコード。',
    MEMBER_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '会員ステータス名称',
    DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明: 会員ステータスそれぞれの説明。
気の利いた説明があるとディベロッパーがとても助かる。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順: UI上のステータスの表示順を示すNO。
並べるときは、このカラムに対して昇順のソート条件にする。',
    PRIMARY KEY (MEMBER_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='会員ステータス'
2016-07-31 12:52:08,172 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table WITHDRAWAL_REASON(
    WITHDRAWAL_REASON_CODE CHAR(3) NOT NULL COMMENT '退会理由コード',
    WITHDRAWAL_REASON_TEXT TEXT NOT NULL COMMENT '退会理由テキスト: 退会理由の内容。テキスト形式なので目いっぱい書けるが、
そうするとUI側できれいに見せるのが大変でしょうね。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順',
    PRIMARY KEY (WITHDRAWAL_REASON_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='退会理由: 会員に選ばせる定型的な退会理由のマスタ。'
2016-07-31 12:52:08,185 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_FOLLOWING(
    MEMBER_FOLLOWING_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員フォローイングID: 連番',
    MY_MEMBER_ID INTEGER NOT NULL COMMENT 'わたし: 気になった人がいて...勇気を振り絞った会員のID。',
    YOUR_MEMBER_ID INTEGER NOT NULL COMMENT 'あなた: いきなりのアクションに...ちょっと心揺らいだ会員のID。',
    FOLLOW_DATETIME DATETIME NOT NULL COMMENT 'その瞬間: ふりかえるとちょっと恥ずかしい気持ちになる日時',
    PRIMARY KEY (MEMBER_FOLLOWING_ID),
    UNIQUE (MY_MEMBER_ID, YOUR_MEMBER_ID)
) COMMENT='会員フォローイング: とある会員が他の会員をフォローできる。すると、フォローした会員の購入履歴が閲覧できる。'
2016-07-31 12:52:08,202 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER add constraint FK_MEMBER_MEMBER_STATUS 
    foreign key (MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-07-31 12:52:08,224 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-31 12:52:08,257 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_REGION 
    foreign key (REGION_ID) references REGION (REGION_ID)
2016-07-31 12:52:08,279 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER_STATUS 
    foreign key (LOGIN_MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-07-31 12:52:08,309 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-31 12:52:08,359 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-31 12:52:08,377 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_SERVICE_RANK_CODE 
    foreign key (SERVICE_RANK_CODE) references SERVICE_RANK (SERVICE_RANK_CODE)
2016-07-31 12:52:08,399 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SECURITY add constraint FK_MEMBER_SECURITY_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-31 12:52:08,426 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-31 12:52:08,446 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON 
    foreign key (WITHDRAWAL_REASON_CODE) references WITHDRAWAL_REASON (WITHDRAWAL_REASON_CODE)
2016-07-31 12:52:08,466 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-31 12:52:08,493 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_PRODUCT 
    foreign key (PRODUCT_ID) references PRODUCT (PRODUCT_ID)
2016-07-31 12:52:08,521 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE_PAYMENT add constraint FK_PURCHASE_PAYMENT_PURCHASE 
    foreign key (PURCHASE_ID) references PURCHASE (PURCHASE_ID)
2016-07-31 12:52:08,547 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_CATEGORY 
    foreign key (PRODUCT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-07-31 12:52:08,572 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_STATUS 
    foreign key (PRODUCT_STATUS_CODE) references PRODUCT_STATUS (PRODUCT_STATUS_CODE)
2016-07-31 12:52:08,600 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT_CATEGORY add constraint FK_PRODUCT_CATEGORY_PARENT 
    foreign key (PARENT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-07-31 12:52:08,628 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_MY_MEMBER 
    foreign key (MY_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-31 12:52:08,665 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_YOUR_MEMBER 
    foreign key (YOUR_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-07-31 12:52:08,690 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_UNIQUE_REVERSE on MEMBER_FOLLOWING(YOUR_MEMBER_ID, MY_MEMBER_ID)
2016-07-31 12:52:08,707 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_FOLLOW_DATETIME on MEMBER_FOLLOWING(FOLLOW_DATETIME)
2016-07-31 12:52:08,721 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_MEMBER_NAME on MEMBER(MEMBER_NAME)
2016-07-31 12:52:08,734 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FORMALIZED_DATETIME on MEMBER(FORMALIZED_DATETIME)
2016-07-31 12:52:08,753 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_LOGIN_DATETIME on MEMBER_LOGIN(LOGIN_DATETIME)
2016-07-31 12:52:08,773 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_SERVICE_POINT_COUNT on MEMBER_SERVICE(SERVICE_POINT_COUNT)
2016-07-31 12:52:08,792 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRODUCT_DATETIME on PURCHASE(PRODUCT_ID, PURCHASE_DATETIME)
2016-07-31 12:52:08,813 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_DATETIME_MEMBER on PURCHASE(PURCHASE_DATETIME, MEMBER_ID)
2016-07-31 12:52:08,833 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRICE on PURCHASE(PURCHASE_PRICE)
2016-07-31 12:52:08,854 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PAYMENT_DATETIME on PURCHASE_PAYMENT(PAYMENT_DATETIME, PAYMENT_AMOUNT)
2016-07-31 12:52:08,874 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PRODUCT_PRODUCT_NAME on PRODUCT(PRODUCT_NAME)
2016-07-31 12:52:08,892 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=45 failure=0
2016-07-31 12:52:08,893 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-50-procedure.sql
2016-07-31 12:52:08,900 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_IN_OUT_PARAMETER(
	in v_in_varchar varchar(32)
	, out v_out_varchar varchar(32)
	, inout v_inout_varchar varchar(32)
)
begin
	set v_out_varchar = v_inout_varchar;
	set v_inout_varchar = v_in_varchar;
end;

2016-07-31 12:52:08,907 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_RETURN_RESULT_SET(in birthdateFrom DATE)
begin
  select MEMBER_NAME, BIRTHDATE, MEMBER_STATUS_CODE
    from MEMBER
   where BIRTHDATE >= birthdateFrom
   order by BIRTHDATE desc, MEMBER_ID asc;
  select MEMBER_STATUS_CODE, MEMBER_STATUS_NAME
    from MEMBER_STATUS
   order by DISPLAY_ORDER;
end;

2016-07-31 12:52:08,910 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-07-31 12:52:08,910 [main] INFO  (DfSqlFileFireMan#fire():89) - {Create Schema}: success=49 failure=0 (in 3 files)
2016-07-31 12:52:08,910 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():564) - ...Closing connections to change-users: [system]
2016-07-31 12:52:09,052 [main] INFO  (DfLoadDataProcess#execute():129) - 
2016-07-31 12:52:09,053 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2016-07-31 12:52:09,053 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2016-07-31 12:52:09,053 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2016-07-31 12:52:09,054 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2016-07-31 12:52:09,054 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2016-07-31 12:52:09,090 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-31 12:52:09,090 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/common/xls/10-master.xls)
2016-07-31 12:52:09,090 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-31 12:52:09,440 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-07-31 12:52:09,441 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-07-31 12:52:09,441 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-07-31 12:52:09,483 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{PRV, 仮会員, 入会直後のステータスで一部のサイトサービスが利用可能, 3}
2016-07-31 12:52:09,540 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{FML, 正式会員, 正式な会員としてサイトサービスが利用可能, 1}
2016-07-31 12:52:09,540 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{WDL, 退会会員, 退会が確定した会員でサイトサービスはダメ, 2}
2016-07-31 12:52:09,541 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():212) - ...Skipping the terminal garbage row
2016-07-31 12:52:09,561 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to MEMBER_STATUS
2016-07-31 12:52:09,563 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{1, アメリカ}
2016-07-31 12:52:09,563 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{2, カナダ}
2016-07-31 12:52:09,564 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{3, 中国}
2016-07-31 12:52:09,564 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{4, 千葉}
2016-07-31 12:52:09,570 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to REGION
2016-07-31 12:52:09,571 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLT, PLATINUM, 12.3, 1, platinum rank, 1}
2016-07-31 12:52:09,572 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{GLD, GOLD, 9.2, 1, gold rank, 2}
2016-07-31 12:52:09,573 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{SIL, SILVER, 6.74, 1, silver rank, 3}
2016-07-31 12:52:09,574 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{BRZ, BRONZE, 2, 1, bronze rank, 4}
2016-07-31 12:52:09,574 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLS, PLASTIC, 0.1, 0, plastic rank, 5}
2016-07-31 12:52:09,581 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to SERVICE_RANK
2016-07-31 12:52:09,582 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{SIT, サイトが使いにくいから, 1}
2016-07-31 12:52:09,583 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{OTH, その他理由, 4}
2016-07-31 12:52:09,583 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{FRT, フリテンだから, 3}
2016-07-31 12:52:09,583 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{PRD, 商品に魅力がないから, 2}
2016-07-31 12:52:09,590 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to WITHDRAWAL_REASON
2016-07-31 12:52:09,592 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MSC, 音楽, null}
2016-07-31 12:52:09,593 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{FOD, 食品, null}
2016-07-31 12:52:09,593 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MCD, 音楽CD, MSC}
2016-07-31 12:52:09,594 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{INS, 楽器, MSC}
2016-07-31 12:52:09,594 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{HEB, ハーブ, FOD}
2016-07-31 12:52:09,600 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to PRODUCT_CATEGORY
2016-07-31 12:52:09,601 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{ONS, 生産販売可能, 1}
2016-07-31 12:52:09,601 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{PST, 生産中止, 2}
2016-07-31 12:52:09,602 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{SST, 販売中止, 3}
2016-07-31 12:52:09,607 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to PRODUCT_STATUS
2016-07-31 12:52:09,609 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-31 12:52:09,610 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/20-member.xls)
2016-07-31 12:52:09,610 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-31 12:52:09,795 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{1, Stojkovic, Pixy, FML, 2007/12/01 11:01:10, 1965/03/03, 2016-07-31 12:52:09.794, foo, 2016-07-31 12:52:09.794, foo, 0}
2016-07-31 12:52:09,809 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{2, Savicevic, Genius, PRV, null, 1966/09/15, 2016-07-31 12:52:09.809, foo, 2016-07-31 12:52:09.809, foo, 0}
2016-07-31 12:52:09,811 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{3, Mijatovic, Mijato, WDL, 2005/10/03 13:03:30, null, 2016-07-31 12:52:09.811, foo, 2016-07-31 12:52:09.811, foo, 0}
2016-07-31 12:52:09,813 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{4, Stankovic, Stanko, FML, 2006/09/04 14:04:40, 1978/09/11, 2016-07-31 12:52:09.813, foo, 2016-07-31 12:52:09.813, foo, 0}
2016-07-31 12:52:09,817 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{5, Milosevic, Milose, FML, 2007/08/05 15:05:50, null, 2016-07-31 12:52:09.816, foo, 2016-07-31 12:52:09.816, foo, 0}
2016-07-31 12:52:09,818 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{6, Mihajlovic, FreeKick, WDL, 2006/07/06 16:06:40, 1969/02/20, 2016-07-31 12:52:09.818, foo, 2016-07-31 12:52:09.818, foo, 0}
2016-07-31 12:52:09,821 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{7, アカギ, Akagi, FML, 2005/06/07 17:07:30, null, 2016-07-31 12:52:09.821, foo, 2016-07-31 12:52:09.821, foo, 0}
2016-07-31 12:52:09,822 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{8, Kezman, RedCard, FML, 2006/05/08 18:08:20, null, 2016-07-31 12:52:09.822, foo, 2016-07-31 12:52:09.822, foo, 0}
2016-07-31 12:52:09,824 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{9, Maslovar, JEFUnited, FML, 2007/12/31 00:00:00, 1967/02/20, 2016-07-31 12:52:09.824, foo, 2016-07-31 12:52:09.824, foo, 0}
2016-07-31 12:52:09,827 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{10, 諸葛亮孔明, ShokatsuGoGo, PRV, null, null, 2016-07-31 12:52:09.827, foo, 2016-07-31 12:52:09.827, foo, 0}
2016-07-31 12:52:09,829 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{11, Boban, Boban, FML, 2007/12/01 11:01:10, 1968/10/08, 2016-07-31 12:52:09.828, foo, 2016-07-31 12:52:09.828, foo, 0}
2016-07-31 12:52:09,831 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{12, Suker, Suker, PRV, null, 1968/01/01, 2016-07-31 12:52:09.831, foo, 2016-07-31 12:52:09.831, foo, 0}
2016-07-31 12:52:09,833 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{13, Jarni, Jarni, WDL, 2005/10/03 13:03:30, 1968/10/26, 2016-07-31 12:52:09.833, foo, 2016-07-31 12:52:09.833, foo, 0}
2016-07-31 12:52:09,836 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{14, Boksic, Boksic, FML, 2006/09/04 14:04:40, 1970/01/21, 2016-07-31 12:52:09.836, foo, 2016-07-31 12:52:09.836, foo, 0}
2016-07-31 12:52:09,839 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{15, Prosinecki, Prosinecki, FML, 2004/08/05 15:05:50, 1969/01/12, 2016-07-31 12:52:09.838, foo, 2016-07-31 12:52:09.838, foo, 0}
2016-07-31 12:52:09,841 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{16, RobeltKovac, RobeltKovac, WDL, 2006/07/06 16:06:40, null, 2016-07-31 12:52:09.841, foo, 2016-07-31 12:52:09.841, foo, 0}
2016-07-31 12:52:09,844 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{17, NikoKovac, NikoKovac, FML, 2005/06/07 17:07:30, null, 2016-07-31 12:52:09.843, foo, 2016-07-31 12:52:09.843, foo, 0}
2016-07-31 12:52:09,846 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{18, Jovanovic, Jovano, FML, 2006/05/08 18:08:20, 1981/04/18, 2016-07-31 12:52:09.845, foo, 2016-07-31 12:52:09.845, foo, 0}
2016-07-31 12:52:09,850 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{19, Milko, Milko, FML, 2005/12/31 12:34:56, 1974/09/10, 2016-07-31 12:52:09.85, foo, 2016-07-31 12:52:09.85, foo, 0}
2016-07-31 12:52:09,853 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{20, 諸葛瑾子瑜, ShokatsuKinKin, FML, 2001/12/31 23:59:59, null, 2016-07-31 12:52:09.852, foo, 2016-07-31 12:52:09.852, foo, 0}
2016-07-31 12:52:09,879 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER
2016-07-31 12:52:09,881 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{1, 1, 2007/03/24, 2015/12/31, Nagara, 4, 2016-07-31 12:52:09.881, foo, 2016-07-31 12:52:09.881, foo, 0}
2016-07-31 12:52:09,885 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{2, 1, 1949/01/01, 1997/03/31, New York, 1, 2016-07-31 12:52:09.885, foo, 2016-07-31 12:52:09.885, foo, 0}
2016-07-31 12:52:09,888 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{3, 1, 1997/04/01, 2000/09/30, Los Angels, 1, 2016-07-31 12:52:09.888, foo, 2016-07-31 12:52:09.888, foo, 0}
2016-07-31 12:52:09,893 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{4, 1, 2000/10/01, 2003/08/31, New York, 1, 2016-07-31 12:52:09.893, foo, 2016-07-31 12:52:09.893, foo, 0}
2016-07-31 12:52:09,896 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{5, 1, 2003/09/01, 2004/12/22, San Francisco Powell, 1, 2016-07-31 12:52:09.896, foo, 2016-07-31 12:52:09.896, foo, 0}
2016-07-31 12:52:09,898 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{6, 1, 2004/12/23, 2006/03/23, San Francisco Daly City, 1, 2016-07-31 12:52:09.898, foo, 2016-07-31 12:52:09.898, foo, 0}
2016-07-31 12:52:09,912 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{7, 1, 2016/01/01, 9999/12/31, Victoria, 2, 2016-07-31 12:52:09.912, foo, 2016-07-31 12:52:09.912, foo, 0}
2016-07-31 12:52:09,914 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{8, 2, 2004/12/24, 9999/12/31, Ichihara, 4, 2016-07-31 12:52:09.914, foo, 2016-07-31 12:52:09.914, foo, 0}
2016-07-31 12:52:09,916 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{9, 3, 2004/12/24, 2007/03/23, Mobara, 4, 2016-07-31 12:52:09.916, foo, 2016-07-31 12:52:09.916, foo, 0}
2016-07-31 12:52:09,918 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{10, 4, 2002/11/01, 9999/12/31, Sousa, 4, 2016-07-31 12:52:09.918, foo, 2016-07-31 12:52:09.918, foo, 0}
2016-07-31 12:52:09,920 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{11, 6, 2002/11/01, 9999/12/31, Yokoshiba, 4, 2016-07-31 12:52:09.92, foo, 2016-07-31 12:52:09.92, foo, 0}
2016-07-31 12:52:09,923 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{12, 9, 2010/11/01, 9999/12/31, Tateyama, 4, 2016-07-31 12:52:09.923, foo, 2016-07-31 12:52:09.923, foo, 0}
2016-07-31 12:52:09,927 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{13, 10, 1970/01/01, 9999/12/31, Shoku, 3, 2016-07-31 12:52:09.927, foo, 2016-07-31 12:52:09.927, foo, 0}
2016-07-31 12:52:09,933 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{14, 12, 2000/11/01, 2001/11/01, Oohara, 4, 2016-07-31 12:52:09.933, foo, 2016-07-31 12:52:09.933, foo, 0}
2016-07-31 12:52:09,936 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{15, 15, 2002/11/01, 2006/10/30, MinamiBousou, 4, 2016-07-31 12:52:09.936, foo, 2016-07-31 12:52:09.936, foo, 0}
2016-07-31 12:52:09,938 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{16, 15, 2007/11/01, 9999/12/31, Tomisato, 4, 2016-07-31 12:52:09.938, foo, 2016-07-31 12:52:09.938, foo, 0}
2016-07-31 12:52:09,940 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{17, 18, 2001/03/21, 2007/11/21, Katsuura, 4, 2016-07-31 12:52:09.94, foo, 2016-07-31 12:52:09.94, foo, 0}
2016-07-31 12:52:09,943 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{18, 18, 2007/11/22, 9999/12/31, Kamogawa, 4, 2016-07-31 12:52:09.943, foo, 2016-07-31 12:52:09.943, foo, 0}
2016-07-31 12:52:09,945 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{19, 19, 2000/11/01, 9999/12/31, Yotsukaido, 4, 2016-07-31 12:52:09.945, foo, 2016-07-31 12:52:09.945, foo, 0}
2016-07-31 12:52:09,947 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{20, 20, 1970/01/01, 9999/12/31, Go, 3, 2016-07-31 12:52:09.947, foo, 2016-07-31 12:52:09.947, foo, 0}
2016-07-31 12:52:09,966 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_ADDRESS
2016-07-31 12:52:09,967 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{1, 3, 2006/12/24 23:59:59, 0, FML}
2016-07-31 12:52:09,970 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{2, 6, 2007/11/11 16:16:16, 0, FML}
2016-07-31 12:52:09,972 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{3, 1, 2006/12/23 22:56:29, 0, FML}
2016-07-31 12:52:09,974 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{4, 6, 2007/11/01 02:13:00, 0, FML}
2016-07-31 12:52:09,975 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{5, 7, 2006/05/24 23:12:59, 0, FML}
2016-07-31 12:52:09,977 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{6, 6, 2005/11/11 16:32:01, 0, PRV}
2016-07-31 12:52:09,978 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{7, 6, 2006/01/28 23:59:59, 1, FML}
2016-07-31 12:52:09,979 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{8, 6, 2007/11/09 16:23:00, 0, FML}
2016-07-31 12:52:09,980 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{9, 8, 2006/12/22 23:59:59, 0, FML}
2016-07-31 12:52:09,981 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{10, 6, 2007/11/11 09:01:00, 0, FML}
2016-07-31 12:52:09,982 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{11, 1, 2006/12/23 23:59:59, 0, FML}
2016-07-31 12:52:09,983 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{12, 9, 2007/11/15 12:43:00, 0, FML}
2016-07-31 12:52:09,984 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{13, 10, 2006/12/24 23:59:59, 0, FML}
2016-07-31 12:52:09,985 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{14, 6, 2007/04/01 16:23:01, 0, FML}
2016-07-31 12:52:09,986 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{15, 7, 2006/12/24 23:59:20, 1, FML}
2016-07-31 12:52:09,987 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{16, 6, 2007/05/01 12:23:02, 0, FML}
2016-07-31 12:52:09,988 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{17, 7, 2006/12/24 23:59:21, 0, FML}
2016-07-31 12:52:09,989 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{18, 6, 2007/06/11 17:23:03, 0, FML}
2016-07-31 12:52:09,990 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{19, 4, 2006/12/24 23:59:22, 0, FML}
2016-07-31 12:52:09,991 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{20, 3, 2007/11/01 16:12:04, 0, FML}
2016-07-31 12:52:09,992 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{21, 11, 2006/12/24 23:59:23, 0, FML}
2016-07-31 12:52:09,993 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{22, 1, 2007/11/01 16:23:05, 0, PRV}
2016-07-31 12:52:09,994 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{23, 9, 2006/12/24 23:59:24, 1, FML}
2016-07-31 12:52:09,995 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{24, 8, 2007/11/01 16:23:06, 0, FML}
2016-07-31 12:52:09,996 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{25, 7, 2007/12/24 11:59:25, 1, FML}
2016-07-31 12:52:09,997 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{26, 6, 2007/06/21 01:23:57, 0, FML}
2016-07-31 12:52:09,998 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{27, 5, 2006/12/24 23:59:26, 0, FML}
2016-07-31 12:52:09,999 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{28, 3, 2007/11/01 16:23:08, 0, FML}
2016-07-31 12:52:09,999 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{29, 3, 2006/12/24 23:59:27, 0, FML}
2016-07-31 12:52:10,000 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{30, 10, 2007/11/01 16:23:09, 0, FML}
2016-07-31 12:52:10,001 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{31, 15, 2006/07/24 23:59:28, 0, FML}
2016-07-31 12:52:10,002 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{32, 14, 2007/11/01 17:23:10, 0, FML}
2016-07-31 12:52:10,004 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{33, 15, 2007/11/01 16:23:10, 0, FML}
2016-07-31 12:52:10,005 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{34, 18, 2006/07/24 23:59:29, 0, FML}
2016-07-31 12:52:10,006 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{35, 3, 2007/11/01 17:23:11, 0, PRV}
2016-07-31 12:52:10,006 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{36, 5, 2007/11/01 16:23:11, 1, FML}
2016-07-31 12:52:10,007 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{37, 11, 2006/07/24 23:59:30, 0, FML}
2016-07-31 12:52:10,008 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{38, 20, 2007/11/01 17:23:12, 1, FML}
2016-07-31 12:52:10,009 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{39, 19, 2007/11/01 16:23:12, 0, FML}
2016-07-31 12:52:10,009 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{40, 4, 2006/07/24 23:59:31, 0, FML}
2016-07-31 12:52:10,010 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{41, 4, 2007/11/01 17:23:13, 0, FML}
2016-07-31 12:52:10,011 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{42, 4, 2007/11/01 16:23:13, 0, FML}
2016-07-31 12:52:10,012 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{43, 4, 2006/07/24 23:52:32, 0, FML}
2016-07-31 12:52:10,013 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{44, 4, 2007/11/01 11:23:14, 0, FML}
2016-07-31 12:52:10,014 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{45, 4, 2007/11/21 06:23:14, 0, FML}
2016-07-31 12:52:10,014 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{46, 12, 2006/07/24 23:52:33, 0, PRV}
2016-07-31 12:52:10,015 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{47, 13, 2007/11/01 11:23:15, 1, FML}
2016-07-31 12:52:10,016 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{48, 14, 2007/11/21 06:23:15, 0, FML}
2016-07-31 12:52:10,017 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{49, 17, 2006/07/24 23:52:34, 1, FML}
2016-07-31 12:52:10,017 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{50, 18, 2007/11/01 11:23:16, 0, FML}
2016-07-31 12:52:10,018 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{51, 16, 2007/11/21 06:23:16, 0, FML}
2016-07-31 12:52:10,019 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{52, 4, 2006/07/24 23:52:35, 0, FML}
2016-07-31 12:52:10,020 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{53, 5, 2007/11/01 11:23:17, 0, FML}
2016-07-31 12:52:10,022 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{54, 5, 2007/11/21 06:23:17, 0, FML}
2016-07-31 12:52:10,024 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{55, 11, 2006/07/24 23:52:36, 0, FML}
2016-07-31 12:52:10,026 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{56, 12, 2007/11/01 11:23:18, 0, FML}
2016-07-31 12:52:10,077 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 56 rows are loaded to MEMBER_LOGIN
2016-07-31 12:52:10,078 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{1, aaa, 30符3飜は？, 自分で数えろ, 1, 2016-07-31 12:52:10.078, foo, 2016-07-31 12:52:10.078, foo, 0}
2016-07-31 12:52:10,080 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{2, bbb, 50符2飜は？, 自分で数えろ, 2, 2016-07-31 12:52:10.08, foo, 2016-07-31 12:52:10.08, foo, 0}
2016-07-31 12:52:10,081 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{3, ccc, 110符2飜は？, 自分で数えろ, 3, 2016-07-31 12:52:10.081, foo, 2016-07-31 12:52:10.081, foo, 0}
2016-07-31 12:52:10,082 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{4, ddd, タンヤオ？, そう, 4, 2016-07-31 12:52:10.082, foo, 2016-07-31 12:52:10.082, foo, 0}
2016-07-31 12:52:10,082 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{5, eee2, ピンフ？, そう, 5, 2016-07-31 12:52:10.082, foo, 2016-07-31 12:52:10.082, foo, 0}
2016-07-31 12:52:10,083 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{6, fff, サンアンコウ？, そう, 6, 2016-07-31 12:52:10.083, foo, 2016-07-31 12:52:10.083, foo, 0}
2016-07-31 12:52:10,084 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{7, ggg3, イーペーコウ？, そう, 7, 2016-07-31 12:52:10.084, foo, 2016-07-31 12:52:10.084, foo, 0}
2016-07-31 12:52:10,085 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{8, hhh555, リャンペーコウ？, そう, 8, 2016-07-31 12:52:10.085, foo, 2016-07-31 12:52:10.085, foo, 0}
2016-07-31 12:52:10,086 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{9, iii, サンペーコウはないよね？, 当たり前だ, 9, 2016-07-31 12:52:10.086, foo, 2016-07-31 12:52:10.086, foo, 0}
2016-07-31 12:52:10,086 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{10, jjj, 私はイカサマしません, 実はする, 10, 2016-07-31 12:52:10.086, foo, 2016-07-31 12:52:10.086, foo, 0}
2016-07-31 12:52:10,088 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{11, qwe, 70符3飜は？, 自分で数えろ, 11, 2016-07-31 12:52:10.088, foo, 2016-07-31 12:52:10.088, foo, 0}
2016-07-31 12:52:10,089 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{12, sdf, 20符4飜は？, 自分で数えろ, 12, 2016-07-31 12:52:10.089, foo, 2016-07-31 12:52:10.089, foo, 0}
2016-07-31 12:52:10,091 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{13, dfgsf, 大三元は？, 役満だよ, 13, 2016-07-31 12:52:10.091, foo, 2016-07-31 12:52:10.091, foo, 0}
2016-07-31 12:52:10,092 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{14, ert, タンヤオ？, そう, 14, 2016-07-31 12:52:10.092, foo, 2016-07-31 12:52:10.092, foo, 0}
2016-07-31 12:52:10,094 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{15, fhgf, ピンフ？, そう, 15, 2016-07-31 12:52:10.093, foo, 2016-07-31 12:52:10.093, foo, 0}
2016-07-31 12:52:10,095 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{16, ghj, サンアンコウ？, そう, 16, 2016-07-31 12:52:10.095, foo, 2016-07-31 12:52:10.095, foo, 0}
2016-07-31 12:52:10,096 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{17, tyuffff, サンレンコウ？, そう, 17, 2016-07-31 12:52:10.096, foo, 2016-07-31 12:52:10.096, foo, 0}
2016-07-31 12:52:10,097 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{18, jkl, イーペーコウ？, そう, 18, 2016-07-31 12:52:10.096, foo, 2016-07-31 12:52:10.096, foo, 0}
2016-07-31 12:52:10,097 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{19, ghjfff, 左ハイは？, 痛い, 19, 2016-07-31 12:52:10.097, foo, 2016-07-31 12:52:10.097, foo, 0}
2016-07-31 12:52:10,098 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{20, cvb, 孫権は？, 呉, 20, 2016-07-31 12:52:10.098, foo, 2016-07-31 12:52:10.098, foo, 0}
2016-07-31 12:52:10,132 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SECURITY
2016-07-31 12:52:10,133 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{1, 1, 1234, PLT, 2016-07-31 12:52:10.133, foo, 2016-07-31 12:52:10.133, foo, 0}
2016-07-31 12:52:10,134 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{2, 2, 2345, GLD, 2016-07-31 12:52:10.134, foo, 2016-07-31 12:52:10.134, foo, 0}
2016-07-31 12:52:10,135 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{3, 3, 3456, GLD, 2016-07-31 12:52:10.135, foo, 2016-07-31 12:52:10.135, foo, 0}
2016-07-31 12:52:10,136 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{4, 4, 875, BRZ, 2016-07-31 12:52:10.136, foo, 2016-07-31 12:52:10.136, foo, 0}
2016-07-31 12:52:10,137 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{5, 5, 1111, BRZ, 2016-07-31 12:52:10.137, foo, 2016-07-31 12:52:10.137, foo, 0}
2016-07-31 12:52:10,138 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{6, 6, 5422, SIL, 2016-07-31 12:52:10.138, foo, 2016-07-31 12:52:10.138, foo, 0}
2016-07-31 12:52:10,139 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{7, 7, 24678, SIL, 2016-07-31 12:52:10.139, foo, 2016-07-31 12:52:10.139, foo, 0}
2016-07-31 12:52:10,140 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{8, 8, 234, SIL, 2016-07-31 12:52:10.14, foo, 2016-07-31 12:52:10.14, foo, 0}
2016-07-31 12:52:10,141 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{9, 9, 3, SIL, 2016-07-31 12:52:10.141, foo, 2016-07-31 12:52:10.141, foo, 0}
2016-07-31 12:52:10,142 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{10, 10, 98765, PLT, 2016-07-31 12:52:10.142, foo, 2016-07-31 12:52:10.142, foo, 0}
2016-07-31 12:52:10,143 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{11, 11, 34, GLD, 2016-07-31 12:52:10.143, foo, 2016-07-31 12:52:10.143, foo, 0}
2016-07-31 12:52:10,144 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{12, 12, 532, PLT, 2016-07-31 12:52:10.144, foo, 2016-07-31 12:52:10.144, foo, 0}
2016-07-31 12:52:10,144 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{13, 13, 23678, GLD, 2016-07-31 12:52:10.144, foo, 2016-07-31 12:52:10.144, foo, 0}
2016-07-31 12:52:10,146 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{14, 14, 432, GLD, 2016-07-31 12:52:10.146, foo, 2016-07-31 12:52:10.146, foo, 0}
2016-07-31 12:52:10,147 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{15, 15, 543, BRZ, 2016-07-31 12:52:10.146, foo, 2016-07-31 12:52:10.146, foo, 0}
2016-07-31 12:52:10,147 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{16, 16, 23545, PLT, 2016-07-31 12:52:10.147, foo, 2016-07-31 12:52:10.147, foo, 0}
2016-07-31 12:52:10,148 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{17, 17, 2345, GLD, 2016-07-31 12:52:10.148, foo, 2016-07-31 12:52:10.148, foo, 0}
2016-07-31 12:52:10,149 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{18, 18, 8763, SIL, 2016-07-31 12:52:10.149, foo, 2016-07-31 12:52:10.149, foo, 0}
2016-07-31 12:52:10,150 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{19, 19, 34567, SIL, 2016-07-31 12:52:10.15, foo, 2016-07-31 12:52:10.15, foo, 0}
2016-07-31 12:52:10,151 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{20, 20, 43, GLD, 2016-07-31 12:52:10.151, foo, 2016-07-31 12:52:10.151, foo, 0}
2016-07-31 12:52:10,174 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SERVICE
2016-07-31 12:52:10,175 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{3, null, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123, 2016-07-31 12:52:10.175, foo, 2016-07-31 12:52:10.175, foo}
2016-07-31 12:52:10,177 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{6, SIT, null, 2007/11/11 16:00:00.456, 2016-07-31 12:52:10.177, foo, 2016-07-31 12:52:10.177, foo}
2016-07-31 12:52:10,178 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{13, PRD, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789, 2016-07-31 12:52:10.178, foo, 2016-07-31 12:52:10.178, foo}
2016-07-31 12:52:10,180 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{16, SIT, コバチが２人いるため, 2007/11/13 16:00:00.456, 2016-07-31 12:52:10.18, foo, 2016-07-31 12:52:10.18, foo}
2016-07-31 12:52:10,191 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to MEMBER_WITHDRAWAL
2016-07-31 12:52:10,193 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{1, 1, 2, 2006/12/24 23:59:59}
2016-07-31 12:52:10,194 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{2, 1, 3, 2007/11/11 16:16:16}
2016-07-31 12:52:10,195 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{3, 1, 4, 2006/12/23 22:56:29}
2016-07-31 12:52:10,196 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{4, 1, 5, 2007/11/01 02:13:00}
2016-07-31 12:52:10,197 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{5, 1, 6, 2012/05/24 23:12:59}
2016-07-31 12:52:10,198 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{6, 1, 9, 2005/11/11 16:32:01}
2016-07-31 12:52:10,199 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{7, 1, 15, 2006/01/28 23:59:59}
2016-07-31 12:52:10,200 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{8, 1, 18, 2007/11/09 16:23:00}
2016-07-31 12:52:10,200 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{9, 2, 1, 2009/12/22 23:59:59}
2016-07-31 12:52:10,201 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{10, 2, 3, 2007/11/11 09:01:00}
2016-07-31 12:52:10,202 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{11, 2, 4, 2006/11/23 23:59:59}
2016-07-31 12:52:10,202 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{12, 2, 9, 2012/11/15 12:43:00}
2016-07-31 12:52:10,219 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{13, 2, 14, 2006/12/24 23:59:59}
2016-07-31 12:52:10,220 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{14, 2, 19, 2011/04/01 16:23:01}
2016-07-31 12:52:10,221 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{15, 3, 1, 2006/12/24 23:59:20}
2016-07-31 12:52:10,278 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{16, 3, 2, 2008/05/01 12:23:02}
2016-07-31 12:52:10,281 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{17, 3, 4, 2006/12/24 23:59:21}
2016-07-31 12:52:10,288 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{18, 3, 6, 2009/06/11 17:23:03}
2016-07-31 12:52:10,290 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{19, 3, 9, 2010/12/24 23:59:22}
2016-07-31 12:52:10,298 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{20, 3, 10, 2007/11/01 16:12:04}
2016-07-31 12:52:10,299 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{21, 4, 1, 2006/12/24 23:59:23}
2016-07-31 12:52:10,300 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{22, 4, 2, 2007/11/01 16:23:05}
2016-07-31 12:52:10,301 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{23, 4, 3, 2011/12/24 23:59:24}
2016-07-31 12:52:10,302 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{24, 4, 4, 2007/11/01 16:23:06}
2016-07-31 12:52:10,302 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{25, 4, 5, 2013/05/24 11:59:25}
2016-07-31 12:52:10,303 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{26, 4, 6, 2007/06/21 01:23:57}
2016-07-31 12:52:10,304 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{27, 4, 9, 2006/12/24 23:59:26}
2016-07-31 12:52:10,305 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{28, 4, 11, 2007/11/01 16:23:08}
2016-07-31 12:52:10,305 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{29, 4, 12, 2013/02/24 23:59:27}
2016-07-31 12:52:10,306 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{30, 4, 13, 2012/11/01 16:23:03}
2016-07-31 12:52:10,307 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{31, 4, 14, 2006/07/24 23:59:28}
2016-07-31 12:52:10,308 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{32, 4, 15, 2007/11/01 17:23:10}
2016-07-31 12:52:10,309 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{33, 4, 16, 2007/11/01 16:23:10}
2016-07-31 12:52:10,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{34, 4, 17, 2006/07/24 23:59:29}
2016-07-31 12:52:10,315 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{35, 4, 18, 2011/11/01 17:23:11}
2016-07-31 12:52:10,316 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{36, 4, 19, 2007/11/01 16:23:11}
2016-07-31 12:52:10,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{37, 5, 1, 2008/07/24 23:59:30}
2016-07-31 12:52:10,323 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{38, 5, 3, 2007/11/01 17:23:12}
2016-07-31 12:52:10,326 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{39, 5, 6, 2007/11/01 16:23:12}
2016-07-31 12:52:10,329 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{40, 6, 1, 2006/07/24 23:59:31}
2016-07-31 12:52:10,330 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{41, 6, 2, 2007/11/01 17:23:13}
2016-07-31 12:52:10,331 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{42, 6, 3, 2007/11/01 16:23:13}
2016-07-31 12:52:10,334 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{43, 6, 4, 2006/07/24 23:52:32}
2016-07-31 12:52:10,335 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{44, 6, 5, 2007/11/01 11:23:14}
2016-07-31 12:52:10,336 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{45, 6, 6, 2007/11/21 06:23:14}
2016-07-31 12:52:10,337 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{46, 8, 1, 2011/07/24 23:52:33}
2016-07-31 12:52:10,337 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{47, 8, 2, 2007/11/01 11:23:15}
2016-07-31 12:52:10,339 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{48, 8, 3, 2007/11/21 06:23:15}
2016-07-31 12:52:10,340 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{49, 9, 1, 2006/07/24 23:52:34}
2016-07-31 12:52:10,341 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{50, 9, 2, 208/11/01 11:23:16}
2016-07-31 12:52:10,345 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{51, 9, 3, 2007/11/21 06:23:16}
2016-07-31 12:52:10,345 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{52, 9, 10, 2006/07/24 23:52:35}
2016-07-31 12:52:10,346 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{53, 9, 20, 2009/11/01 11:23:17}
2016-07-31 12:52:10,347 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{54, 10, 1, 2007/11/21 06:23:17}
2016-07-31 12:52:10,349 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{55, 10, 2, 2006/07/24 23:52:36}
2016-07-31 12:52:10,350 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{56, 10, 3, 2010/11/01 11:23:18}
2016-07-31 12:52:10,350 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{57, 10, 4, 2006/12/21 23:59:59}
2016-07-31 12:52:10,351 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{58, 10, 5, 2007/11/1 16:16:16}
2016-07-31 12:52:10,353 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{59, 10, 6, 2006/08/23 22:56:29}
2016-07-31 12:52:10,354 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{60, 10, 9, 2007/11/01 02:11:00}
2016-07-31 12:52:10,354 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{61, 10, 11, 2012/05/24 23:12:59}
2016-07-31 12:52:10,357 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{62, 10, 12, 2005/11/10 16:32:01}
2016-07-31 12:52:10,359 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{63, 10, 13, 2006/01/28 23:59:59}
2016-07-31 12:52:10,361 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{64, 10, 14, 2007/10/09 16:23:00}
2016-07-31 12:52:10,362 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{65, 10, 15, 2009/12/22 23:59:59}
2016-07-31 12:52:10,363 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{66, 10, 16, 2007/11/01 09:01:00}
2016-07-31 12:52:10,364 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{67, 10, 17, 2006/11/23 23:59:59}
2016-07-31 12:52:10,365 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{68, 10, 18, 2011/11/15 12:43:00}
2016-07-31 12:52:10,366 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{69, 10, 19, 2006/07/24 23:59:59}
2016-07-31 12:52:10,367 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{70, 10, 20, 2011/08/01 16:23:01}
2016-07-31 12:52:10,367 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{71, 11, 12, 2006/09/24 23:59:20}
2016-07-31 12:52:10,368 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{72, 11, 13, 2008/01/01 12:23:02}
2016-07-31 12:52:10,369 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{73, 11, 14, 2006/12/24 23:59:21}
2016-07-31 12:52:10,369 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{74, 11, 15, 2009/02/11 17:23:03}
2016-07-31 12:52:10,370 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{75, 11, 16, 2010/03/24 23:59:22}
2016-07-31 12:52:10,372 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{76, 11, 17, 2007/09/01 16:12:04}
2016-07-31 12:52:10,374 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{77, 11, 19, 2006/12/24 23:59:23}
2016-07-31 12:52:10,375 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{78, 12, 1, 2007/11/01 16:23:05}
2016-07-31 12:52:10,376 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{79, 12, 11, 2011/05/24 23:59:24}
2016-07-31 12:52:10,377 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{80, 12, 13, 2007/11/01 16:23:06}
2016-07-31 12:52:10,378 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{81, 12, 14, 2013/06/24 11:59:25}
2016-07-31 12:52:10,379 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{82, 12, 15, 2007/06/21 01:23:57}
2016-07-31 12:52:10,380 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{83, 12, 19, 2006/12/24 23:59:26}
2016-07-31 12:52:10,381 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{84, 13, 11, 2007/08/01 16:23:08}
2016-07-31 12:52:10,382 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{85, 13, 12, 2013/02/24 23:59:27}
2016-07-31 12:52:10,383 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{86, 13, 14, 2012/11/01 16:23:03}
2016-07-31 12:52:10,384 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{87, 14, 1, 2006/07/24 23:59:28}
2016-07-31 12:52:10,385 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{88, 14, 10, 2012/05/24 23:12:59}
2016-07-31 12:52:10,385 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{89, 14, 11, 2005/11/10 16:32:01}
2016-07-31 12:52:10,386 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{90, 14, 20, 2006/01/28 23:59:59}
2016-07-31 12:52:10,387 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{91, 16, 17, 2007/10/09 16:23:00}
2016-07-31 12:52:10,399 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{92, 17, 16, 2009/12/22 23:59:59}
2016-07-31 12:52:10,400 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{93, 18, 1, 2007/11/01 09:01:00}
2016-07-31 12:52:10,401 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{94, 18, 2, 2006/11/23 23:59:59}
2016-07-31 12:52:10,401 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{95, 18, 3, 2011/11/15 12:43:00}
2016-07-31 12:52:10,402 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{96, 18, 4, 2006/07/24 23:59:59}
2016-07-31 12:52:10,403 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{97, 18, 5, 2011/08/01 16:23:01}
2016-07-31 12:52:10,411 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{98, 18, 6, 2006/09/24 23:59:20}
2016-07-31 12:52:10,413 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{99, 18, 9, 2008/01/01 12:23:02}
2016-07-31 12:52:10,414 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{100, 18, 11, 2006/12/24 23:59:21}
2016-07-31 12:52:10,415 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{101, 18, 12, 2009/02/11 17:23:03}
2016-07-31 12:52:10,416 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{102, 18, 13, 2010/03/24 23:59:22}
2016-07-31 12:52:10,417 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{103, 18, 14, 2007/09/01 16:12:04}
2016-07-31 12:52:10,418 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{104, 18, 15, 2006/12/24 23:59:23}
2016-07-31 12:52:10,419 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{105, 19, 1, 2007/11/01 16:23:05}
2016-07-31 12:52:10,420 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{106, 19, 10, 2011/05/24 23:59:24}
2016-07-31 12:52:10,420 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{107, 19, 11, 2007/11/01 16:23:06}
2016-07-31 12:52:10,424 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{108, 19, 12, 2013/06/24 11:59:25}
2016-07-31 12:52:10,426 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{109, 19, 20, 2013/06/24 11:59:25}
2016-07-31 12:52:10,428 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{110, 20, 10, 2013/06/24 11:59:25}
2016-07-31 12:52:10,430 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{111, 20, 19, 2013/06/24 11:59:25}
2016-07-31 12:52:10,543 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 111 rows are loaded to MEMBER_FOLLOWING
2016-07-31 12:52:10,544 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-07-31 12:52:10,544 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/30-product.xls)
2016-07-31 12:52:10,545 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-07-31 12:52:10,596 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{1, Cold Spring Harbor, BILLYJOEL-01, MCD, PST, 1100, 2016-07-31 12:52:10.596, foo, 2016-07-31 12:52:10.596, foo, 0}
2016-07-31 12:52:10,597 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{2, Piano Man, BILLYJOEL-02, MCD, ONS, 1200, 2016-07-31 12:52:10.597, foo, 2016-07-31 12:52:10.597, foo, 0}
2016-07-31 12:52:10,598 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{3, Streetlife Serenade, BILLYJOEL-03, MCD, ONS, 1300, 2016-07-31 12:52:10.598, foo, 2016-07-31 12:52:10.598, foo, 0}
2016-07-31 12:52:10,599 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{4, Turnstiles, BILLYJOEL-04, MCD, ONS, 1400, 2016-07-31 12:52:10.599, foo, 2016-07-31 12:52:10.599, foo, 0}
2016-07-31 12:52:10,599 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{5, The Stranger, BILLYJOEL-05, MCD, ONS, 1500, 2016-07-31 12:52:10.599, foo, 2016-07-31 12:52:10.599, foo, 0}
2016-07-31 12:52:10,600 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{6, 52nd Street, BILLYJOEL-06, MCD, ONS, 1600, 2016-07-31 12:52:10.6, foo, 2016-07-31 12:52:10.6, foo, 0}
2016-07-31 12:52:10,601 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{7, Glass House, BILLYJOEL-07, MCD, ONS, 1700, 2016-07-31 12:52:10.6, foo, 2016-07-31 12:52:10.601, foo, 0}
2016-07-31 12:52:10,601 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{8, Nylon Curtain, BILLYJOEL-08, MCD, ONS, 1800, 2016-07-31 12:52:10.601, foo, 2016-07-31 12:52:10.601, foo, 0}
2016-07-31 12:52:10,602 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{9, Bridge, BILLYJOEL-09, MCD, ONS, 1900, 2016-07-31 12:52:10.602, foo, 2016-07-31 12:52:10.602, foo, 0}
2016-07-31 12:52:10,603 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{10, Storm Front, BILLYJOEL-10, MCD, ONS, 2000, 2016-07-31 12:52:10.603, foo, 2016-07-31 12:52:10.603, foo, 0}
2016-07-31 12:52:10,604 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{11, River of Dreams, BILLYJOEL-11, MCD, ONS, 2100, 2016-07-31 12:52:10.603, foo, 2016-07-31 12:52:10.603, foo, 0}
2016-07-31 12:52:10,604 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{12, Grand Piano, PIANO-01, INS, ONS, 1400000, 2016-07-31 12:52:10.604, foo, 2016-07-31 12:52:10.604, foo, 0}
2016-07-31 12:52:10,605 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{13, Upright Piano, PIANO-02, INS, ONS, 1100000, 2016-07-31 12:52:10.605, foo, 2016-07-31 12:52:10.605, foo, 0}
2016-07-31 12:52:10,606 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{14, Low Price Flute, FLUTE-01, INS, ONS, 50000, 2016-07-31 12:52:10.606, foo, 2016-07-31 12:52:10.606, foo, 0}
2016-07-31 12:52:10,606 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{15, Silver Flute, FLUTE-02, INS, ONS, 500000, 2016-07-31 12:52:10.606, foo, 2016-07-31 12:52:10.606, foo, 0}
2016-07-31 12:52:10,607 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{16, Gold Flute, FLUTE-03, INS, ONS, 4000000, 2016-07-31 12:52:10.607, foo, 2016-07-31 12:52:10.607, foo, 0}
2016-07-31 12:52:10,608 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{17, Rosemary (100g), HARB-100-01, HEB, ONS, 400, 2016-07-31 12:52:10.608, foo, 2016-07-31 12:52:10.608, foo, 0}
2016-07-31 12:52:10,608 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{18, Lemon Grass (100g), HARB-100-02, HEB, ONS, 380, 2016-07-31 12:52:10.608, foo, 2016-07-31 12:52:10.608, foo, 0}
2016-07-31 12:52:10,609 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{19, Camomile (100g), HARB-100-03, HEB, ONS, 380, 2016-07-31 12:52:10.609, foo, 2016-07-31 12:52:10.609, foo, 0}
2016-07-31 12:52:10,610 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{20, Hatomugi (100g), HARB-100-04, HEB, ONS, 340, 2016-07-31 12:52:10.61, foo, 2016-07-31 12:52:10.61, foo, 0}
2016-07-31 12:52:10,630 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to PRODUCT
2016-07-31 12:52:10,631 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{1, 5, 3, 2006/12/24 23:59:59, 1, 1800, 1, 2016-07-31 12:52:10.631, foo, 2016-07-31 12:52:10.631, foo, 0}
2016-07-31 12:52:10,633 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{2, 15, 7, 2007/11/11 16:16:16, 1, 1700, 1, 2016-07-31 12:52:10.633, foo, 2016-07-31 12:52:10.633, foo, 0}
2016-07-31 12:52:10,634 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{3, 13, 3, 2006/12/23 22:56:29.235, 1, 1800, 1, 2016-07-31 12:52:10.634, foo, 2016-07-31 12:52:10.634, foo, 0}
2016-07-31 12:52:10,635 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{4, 2, 5, 2007/11/01 02:13:00, 2, 1700, 1, 2016-07-31 12:52:10.635, foo, 2016-07-31 12:52:10.635, foo, 0}
2016-07-31 12:52:10,638 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{5, 9, 11, 2008/01/04 23:12:59, 5, 1800, 1, 2016-07-31 12:52:10.638, foo, 2016-07-31 12:52:10.638, foo, 0}
2016-07-31 12:52:10,639 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{6, 20, 2, 2002/01/01 16:32:01, 1, 2000, 1, 2016-07-31 12:52:10.639, foo, 2016-07-31 12:52:10.639, foo, 0}
2016-07-31 12:52:10,640 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{7, 19, 9, 2006/01/28 23:59:59.999, 1, 1000, 0, 2016-07-31 12:52:10.64, foo, 2016-07-31 12:52:10.64, foo, 0}
2016-07-31 12:52:10,641 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{8, 4, 7, 2007/11/09 16:23:00, 1, 1535, 1, 2016-07-31 12:52:10.641, foo, 2016-07-31 12:52:10.641, foo, 0}
2016-07-31 12:52:10,642 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{9, 4, 10, 2006/12/22 23:59:59, 20, 1700, 1, 2016-07-31 12:52:10.642, foo, 2016-07-31 12:52:10.642, foo, 0}
2016-07-31 12:52:10,643 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{10, 2, 10, 2007/11/01 02:13:00.345, 1, 1700, 0, 2016-07-31 12:52:10.643, foo, 2016-07-31 12:52:10.643, foo, 0}
2016-07-31 12:52:10,644 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{11, 5, 2, 2007/11/09 16:23:01, 1, 1800, 1, 2016-07-31 12:52:10.644, foo, 2016-07-31 12:52:10.644, foo, 0}
2016-07-31 12:52:10,645 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{12, 15, 2, 2006/12/22 23:59:12, 1, 1700, 1, 2016-07-31 12:52:10.645, foo, 2016-07-31 12:52:10.645, foo, 0}
2016-07-31 12:52:10,646 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{13, 13, 8, 2007/11/01 02:13:00.346, 1, 1800, 1, 2016-07-31 12:52:10.646, foo, 2016-07-31 12:52:10.646, foo, 0}
2016-07-31 12:52:10,647 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{14, 2, 4, 2007/11/09 16:23:02, 2, 1700, 1, 2016-07-31 12:52:10.647, foo, 2016-07-31 12:52:10.647, foo, 0}
2016-07-31 12:52:10,648 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{15, 9, 11, 2006/12/22 23:59:32, 5, 1800, 1, 2016-07-31 12:52:10.648, foo, 2016-07-31 12:52:10.648, foo, 0}
2016-07-31 12:52:10,650 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{16, 20, 1, 2007/11/01 02:13:00.347, 1, 2000, 1, 2016-07-31 12:52:10.65, foo, 2016-07-31 12:52:10.65, foo, 0}
2016-07-31 12:52:10,651 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{17, 19, 11, 2006/12/22 23:59:33, 2, 1000, 0, 2016-07-31 12:52:10.651, foo, 2016-07-31 12:52:10.651, foo, 0}
2016-07-31 12:52:10,652 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{18, 4, 10, 2007/11/01 02:13:00.348, 1, 1535, 1, 2016-07-31 12:52:10.652, foo, 2016-07-31 12:52:10.652, foo, 0}
2016-07-31 12:52:10,655 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{19, 4, 11, 2007/11/01 02:13:00.348, 4, 1700, 1, 2016-07-31 12:52:10.654, foo, 2016-07-31 12:52:10.654, foo, 0}
2016-07-31 12:52:10,663 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{20, 2, 11, 2006/12/22 23:59:35, 1, 1700, 0, 2016-07-31 12:52:10.663, foo, 2016-07-31 12:52:10.663, foo, 0}
2016-07-31 12:52:10,664 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{21, 2, 15, 2006/12/22 23:59:35, 1, 400000, 0, 2016-07-31 12:52:10.664, foo, 2016-07-31 12:52:10.664, foo, 0}
2016-07-31 12:52:10,665 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{22, 3, 6, 2007/11/01 02:13:00.350, 4, 1800, 1, 2016-07-31 12:52:10.665, foo, 2016-07-31 12:52:10.665, foo, 0}
2016-07-31 12:52:10,667 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{23, 15, 7, 2006/12/22 23:59:36, 1, 1700, 1, 2016-07-31 12:52:10.666, foo, 2016-07-31 12:52:10.666, foo, 0}
2016-07-31 12:52:10,670 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{24, 13, 3, 2007/09/11 12:13:00.351, 1, 1800, 1, 2016-07-31 12:52:10.67, foo, 2016-07-31 12:52:10.67, foo, 0}
2016-07-31 12:52:10,671 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{25, 16, 2, 2006/12/22 23:59:37, 2, 1700, 1, 2016-07-31 12:52:10.671, foo, 2016-07-31 12:52:10.671, foo, 0}
2016-07-31 12:52:10,672 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{26, 3, 4, 2005/12/21 12:13:00.352, 1, 1800, 1, 2016-07-31 12:52:10.672, foo, 2016-07-31 12:52:10.672, foo, 0}
2016-07-31 12:52:10,674 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{27, 2, 8, 2006/12/22 23:59:38, 1, 2000, 1, 2016-07-31 12:52:10.674, foo, 2016-07-31 12:52:10.674, foo, 0}
2016-07-31 12:52:10,675 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{28, 6, 17, 2007/11/01 02:13:00.353, 2, 600, 0, 2016-07-31 12:52:10.675, foo, 2016-07-31 12:52:10.675, foo, 0}
2016-07-31 12:52:10,676 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{29, 4, 4, 2006/12/22 23:59:39, 1, 1535, 1, 2016-07-31 12:52:10.676, foo, 2016-07-31 12:52:10.676, foo, 0}
2016-07-31 12:52:10,677 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{30, 4, 3, 2007/11/01 02:13:00.354, 4, 1700, 1, 2016-07-31 12:52:10.677, foo, 2016-07-31 12:52:10.677, foo, 0}
2016-07-31 12:52:10,678 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{31, 4, 10, 2006/12/22 23:59:40, 1, 1700, 0, 2016-07-31 12:52:10.678, foo, 2016-07-31 12:52:10.678, foo, 0}
2016-07-31 12:52:10,679 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{32, 13, 3, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-07-31 12:52:10.679, foo, 2016-07-31 12:52:10.679, foo, 0}
2016-07-31 12:52:10,680 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{33, 16, 2, 2006/12/22 23:59:41, 2, 1700, 1, 2016-07-31 12:52:10.68, foo, 2016-07-31 12:52:10.68, foo, 0}
2016-07-31 12:52:10,682 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{34, 3, 4, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-07-31 12:52:10.681, foo, 2016-07-31 12:52:10.681, foo, 0}
2016-07-31 12:52:10,683 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{35, 2, 8, 2006/12/12 23:59:42, 1, 2000, 1, 2016-07-31 12:52:10.683, foo, 2016-07-31 12:52:10.683, foo, 0}
2016-07-31 12:52:10,684 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{36, 6, 3, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-07-31 12:52:10.684, foo, 2016-07-31 12:52:10.684, foo, 0}
2016-07-31 12:52:10,685 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{37, 4, 4, 2006/12/12 23:59:43, 1, 1535, 1, 2016-07-31 12:52:10.685, foo, 2016-07-31 12:52:10.685, foo, 0}
2016-07-31 12:52:10,686 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{38, 4, 3, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-07-31 12:52:10.686, foo, 2016-07-31 12:52:10.686, foo, 0}
2016-07-31 12:52:10,687 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{39, 4, 10, 2006/12/12 23:59:44, 1, 1700, 0, 2016-07-31 12:52:10.687, foo, 2016-07-31 12:52:10.687, foo, 0}
2016-07-31 12:52:10,690 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{40, 4, 10, 2007/05/01 12:13:00.359, 1, 1700, 0, 2016-07-31 12:52:10.69, foo, 2016-07-31 12:52:10.69, foo, 0}
2016-07-31 12:52:10,693 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{41, 4, 11, 2007/11/01 02:13:01.354, 4, 1700, 1, 2016-07-31 12:52:10.693, foo, 2016-07-31 12:52:10.693, foo, 0}
2016-07-31 12:52:10,696 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{42, 10, 16, 2006/12/22 23:59:40, 1, 2800000, 1, 2016-07-31 12:52:10.696, foo, 2016-07-31 12:52:10.696, foo, 0}
2016-07-31 12:52:10,697 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{43, 13, 17, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-07-31 12:52:10.697, foo, 2016-07-31 12:52:10.697, foo, 0}
2016-07-31 12:52:10,698 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{44, 16, 14, 2006/12/22 23:59:41, 2, 1700, 1, 2016-07-31 12:52:10.698, foo, 2016-07-31 12:52:10.698, foo, 0}
2016-07-31 12:52:10,699 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{45, 3, 18, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-07-31 12:52:10.699, foo, 2016-07-31 12:52:10.699, foo, 0}
2016-07-31 12:52:10,700 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{46, 2, 7, 2006/12/12 23:59:42, 1, 2000, 1, 2016-07-31 12:52:10.7, foo, 2016-07-31 12:52:10.7, foo, 0}
2016-07-31 12:52:10,701 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{47, 6, 14, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-07-31 12:52:10.701, foo, 2016-07-31 12:52:10.701, foo, 0}
2016-07-31 12:52:10,702 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{48, 16, 12, 2006/12/12 23:59:43, 1, 100000, 1, 2016-07-31 12:52:10.702, foo, 2016-07-31 12:52:10.702, foo, 0}
2016-07-31 12:52:10,703 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{49, 4, 20, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-07-31 12:52:10.703, foo, 2016-07-31 12:52:10.703, foo, 0}
2016-07-31 12:52:10,704 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{50, 4, 19, 2006/12/12 23:59:44, 1, 1700, 0, 2016-07-31 12:52:10.703, foo, 2016-07-31 12:52:10.703, foo, 0}
2016-07-31 12:52:10,705 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{51, 4, 11, 2007/11/21 02:13:00.354, 4, 1700, 1, 2016-07-31 12:52:10.705, foo, 2016-07-31 12:52:10.705, foo, 0}
2016-07-31 12:52:10,706 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{52, 20, 17, 2006/12/23 23:59:40, 1, 400, 0, 2016-07-31 12:52:10.706, foo, 2016-07-31 12:52:10.706, foo, 0}
2016-07-31 12:52:10,707 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{53, 13, 16, 2007/12/28 12:13:10.355, 1, 600000, 1, 2016-07-31 12:52:10.707, foo, 2016-07-31 12:52:10.707, foo, 0}
2016-07-31 12:52:10,708 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{54, 16, 14, 2006/02/22 23:59:41, 2, 1700, 1, 2016-07-31 12:52:10.708, foo, 2016-07-31 12:52:10.708, foo, 0}
2016-07-31 12:52:10,709 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{55, 3, 3, 2007/07/21 12:13:00.356, 1, 1800, 1, 2016-07-31 12:52:10.709, foo, 2016-07-31 12:52:10.709, foo, 0}
2016-07-31 12:52:10,710 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{56, 2, 8, 2006/12/22 23:59:42, 1, 2000, 1, 2016-07-31 12:52:10.71, foo, 2016-07-31 12:52:10.71, foo, 0}
2016-07-31 12:52:10,711 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{57, 6, 19, 2007/02/01 02:13:00.357, 2, 1000, 0, 2016-07-31 12:52:10.711, foo, 2016-07-31 12:52:10.711, foo, 0}
2016-07-31 12:52:10,712 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{58, 2, 12, 2006/12/12 23:59:43, 1, 4000000, 1, 2016-07-31 12:52:10.712, foo, 2016-07-31 12:52:10.712, foo, 0}
2016-07-31 12:52:10,713 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{59, 4, 18, 2007/05/01 02:03:00.358, 1, 380, 1, 2016-07-31 12:52:10.713, foo, 2016-07-31 12:52:10.713, foo, 0}
2016-07-31 12:52:10,714 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{60, 4, 20, 2006/12/12 23:59:44, 2, 680, 0, 2016-07-31 12:52:10.714, foo, 2016-07-31 12:52:10.714, foo, 0}
2016-07-31 12:52:10,715 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{61, 1, 16, 2008-03-03 06:34:56.000, 3, 12000000, 1, 2016-07-31 12:52:10.715, foo, 2016-07-31 12:52:10.715, foo, 0}
2016-07-31 12:52:10,716 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{62, 1, 2, 2009-06-04 06:34:56.000, 12, 20000, 1, 2016-07-31 12:52:10.716, foo, 2016-07-31 12:52:10.716, foo, 0}
2016-07-31 12:52:10,717 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{63, 1, 6, 2010-09-26 06:34:56.000, 2, 2000, 1, 2016-07-31 12:52:10.716, foo, 2016-07-31 12:52:10.716, foo, 0}
2016-07-31 12:52:10,718 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{64, 1, 8, 2011-03-03 09:45:29.000, 1, 50, 1, 2016-07-31 12:52:10.717, foo, 2016-07-31 12:52:10.717, foo, 0}
2016-07-31 12:52:10,719 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{65, 1, 13, 2012-06-04 09:45:29.000, 1, 1000000, 1, 2016-07-31 12:52:10.718, foo, 2016-07-31 12:52:10.718, foo, 0}
2016-07-31 12:52:10,720 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{66, 1, 13, 2013-09-26 09:45:29.000, 1, 900000, 1, 2016-07-31 12:52:10.72, foo, 2016-07-31 12:52:10.72, foo, 0}
2016-07-31 12:52:10,721 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{67, 1, 5, 2014-03-03 21:02:12.000, 2, 3000, 1, 2016-07-31 12:52:10.72, foo, 2016-07-31 12:52:10.72, foo, 0}
2016-07-31 12:52:10,721 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{68, 1, 17, 2015-06-04 21:02:12.000, 30, 3000, 1, 2016-07-31 12:52:10.721, foo, 2016-07-31 12:52:10.721, foo, 0}
2016-07-31 12:52:10,723 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{69, 1, 17, 2016-09-26 21:02:12.000, 1, 1000, 1, 2016-07-31 12:52:10.722, foo, 2016-07-31 12:52:10.722, foo, 0}
2016-07-31 12:52:10,724 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{70, 1, 17, 2017-03-03 01:11:00.000, 1, 1200, 1, 2016-07-31 12:52:10.724, foo, 2016-07-31 12:52:10.724, foo, 0}
2016-07-31 12:52:10,774 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 70 rows are loaded to PURCHASE
2016-07-31 12:52:10,775 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{1, 1, 1800, 2006/12/25 23:59:59, BAK, 2016-07-31 12:52:10.775, foo, 2016-07-31 12:52:10.775, foo}
2016-07-31 12:52:10,778 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{2, 2, 1700, 2007/11/13 16:16:16, BAK, 2016-07-31 12:52:10.778, foo, 2016-07-31 12:52:10.778, foo}
2016-07-31 12:52:10,779 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{3, 3, 900, 2006/12/23 23:56:29, CRC, 2016-07-31 12:52:10.779, foo, 2016-07-31 12:52:10.779, foo}
2016-07-31 12:52:10,780 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{4, 3, 900, 2006/12/23 23:56:30, HAN, 2016-07-31 12:52:10.78, foo, 2016-07-31 12:52:10.78, foo}
2016-07-31 12:52:10,781 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{5, 4, 1700, 2007/12/01 02:13:00, HAN, 2016-07-31 12:52:10.781, foo, 2016-07-31 12:52:10.781, foo}
2016-07-31 12:52:10,782 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{6, 5, 800.20, 2008/04/04 23:12:59, HAN, 2016-07-31 12:52:10.782, foo, 2016-07-31 12:52:10.782, foo}
2016-07-31 12:52:10,783 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{7, 5, 1000.90, 2008/05/04 23:12:59, CRC, 2016-07-31 12:52:10.783, foo, 2016-07-31 12:52:10.783, foo}
2016-07-31 12:52:10,784 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{8, 6, 1000, 2002/01/01 16:32:01, CRC, 2016-07-31 12:52:10.784, foo, 2016-07-31 12:52:10.784, foo}
2016-07-31 12:52:10,785 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{9, 6, 400.8, 2002/01/01 16:32:01, CRC, 2016-07-31 12:52:10.785, foo, 2016-07-31 12:52:10.785, foo}
2016-07-31 12:52:10,786 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{10, 6, 599.2, 2002/01/01 16:32:01, HAN, 2016-07-31 12:52:10.786, foo, 2016-07-31 12:52:10.786, foo}
2016-07-31 12:52:10,788 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{11, 7, 300, 2006/01/28 23:59:59, CRC, 2016-07-31 12:52:10.788, foo, 2016-07-31 12:52:10.788, foo}
2016-07-31 12:52:10,791 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{12, 8, 535.5, 2007/11/09 16:23:00, BAK, 2016-07-31 12:52:10.791, foo, 2016-07-31 12:52:10.791, foo}
2016-07-31 12:52:10,792 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{13, 8, 999.5, 2014/11/09 16:23:05, BAK, 2016-07-31 12:52:10.792, foo, 2016-07-31 12:52:10.792, foo}
2016-07-31 12:52:10,793 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{14, 9, 1700, 2006/12/22 23:59:59, BAK, 2016-07-31 12:52:10.793, foo, 2016-07-31 12:52:10.793, foo}
2016-07-31 12:52:10,794 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{15, 11, 1799.2, 2014/11/09 16:23:01, CRC, 2016-07-31 12:52:10.794, foo, 2016-07-31 12:52:10.794, foo}
2016-07-31 12:52:10,795 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{16, 11, 0.8, 2014/11/09 16:23:01, HAN, 2016-07-31 12:52:10.795, foo, 2016-07-31 12:52:10.795, foo}
2016-07-31 12:52:10,796 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{17, 12, 1690, 2011/12/22 23:59:12, HAN, 2016-07-31 12:52:10.796, foo, 2016-07-31 12:52:10.796, foo}
2016-07-31 12:52:10,797 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{18, 12, 10, 2011/12/22 23:59:12, CRC, 2016-07-31 12:52:10.797, foo, 2016-07-31 12:52:10.797, foo}
2016-07-31 12:52:10,798 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{19, 13, 1800.7, 2007/11/01 02:13:00, CRC, 2016-07-31 12:52:10.798, foo, 2016-07-31 12:52:10.798, foo}
2016-07-31 12:52:10,799 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{20, 14, 1700, 2008/11/09 16:23:02, BAK, 2016-07-31 12:52:10.799, foo, 2016-07-31 12:52:10.799, foo}
2016-07-31 12:52:10,800 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{21, 15, 300, 2006/12/22 23:59:32, HAN, 2016-07-31 12:52:10.8, foo, 2016-07-31 12:52:10.8, foo}
2016-07-31 12:52:10,801 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{22, 15, 600, 2007/12/22 23:59:32, BAK, 2016-07-31 12:52:10.801, foo, 2016-07-31 12:52:10.801, foo}
2016-07-31 12:52:10,802 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{23, 15, 900, 2008/12/22 23:59:32, HAN, 2016-07-31 12:52:10.802, foo, 2016-07-31 12:52:10.802, foo}
2016-07-31 12:52:10,804 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{24, 16, 2000, 2012/11/01 02:13:00, BAK, 2016-07-31 12:52:10.803, foo, 2016-07-31 12:52:10.803, foo}
2016-07-31 12:52:10,806 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{25, 18, 1535, 2013/11/01 02:13:00, HAN, 2016-07-31 12:52:10.806, foo, 2016-07-31 12:52:10.806, foo}
2016-07-31 12:52:10,808 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{26, 19, 1700, 2007/11/01 02:13:00, HAN, 2016-07-31 12:52:10.808, foo, 2016-07-31 12:52:10.808, foo}
2016-07-31 12:52:10,810 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{27, 20, 5, 2006/12/22 23:59:35, HAN, 2016-07-31 12:52:10.809, foo, 2016-07-31 12:52:10.809, foo}
2016-07-31 12:52:10,811 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{28, 21, 399999, 2006/12/22 23:59:35, BAK, 2016-07-31 12:52:10.811, foo, 2016-07-31 12:52:10.811, foo}
2016-07-31 12:52:10,813 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{29, 22, 1800, 2007/11/01 02:13:00, BAK, 2016-07-31 12:52:10.813, foo, 2016-07-31 12:52:10.813, foo}
2016-07-31 12:52:10,814 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{30, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-31 12:52:10.814, foo, 2016-07-31 12:52:10.814, foo}
2016-07-31 12:52:10,815 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{31, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-31 12:52:10.815, foo, 2016-07-31 12:52:10.815, foo}
2016-07-31 12:52:10,816 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{32, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-07-31 12:52:10.816, foo, 2016-07-31 12:52:10.816, foo}
2016-07-31 12:52:10,817 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{33, 24, 1000, 2012/09/11 12:13:00, BAK, 2016-07-31 12:52:10.817, foo, 2016-07-31 12:52:10.817, foo}
2016-07-31 12:52:10,818 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{34, 24, 800, 2015/09/11 12:13:00, BAK, 2016-07-31 12:52:10.818, foo, 2016-07-31 12:52:10.818, foo}
2016-07-31 12:52:10,819 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{35, 25, 1700, 2013/12/22 23:59:37, BAK, 2016-07-31 12:52:10.818, foo, 2016-07-31 12:52:10.818, foo}
2016-07-31 12:52:10,820 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{36, 26, 1800, 2005/12/21 12:13:00, BAK, 2016-07-31 12:52:10.82, foo, 2016-07-31 12:52:10.82, foo}
2016-07-31 12:52:10,821 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{37, 27, 2000, 2006/12/22 23:59:38, HAN, 2016-07-31 12:52:10.82, foo, 2016-07-31 12:52:10.82, foo}
2016-07-31 12:52:10,822 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{38, 28, 600, 2007/11/01 02:13:00, BAK, 2016-07-31 12:52:10.822, foo, 2016-07-31 12:52:10.822, foo}
2016-07-31 12:52:10,823 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{39, 29, 1535, 2006/12/22 23:59:39, BAK, 2016-07-31 12:52:10.823, foo, 2016-07-31 12:52:10.823, foo}
2016-07-31 12:52:10,825 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{40, 30, 100, 2010/09/01 02:13:00, HAN, 2016-07-31 12:52:10.825, foo, 2016-07-31 12:52:10.825, foo}
2016-07-31 12:52:10,827 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{41, 30, 200, 2011/10/31 02:13:00, CRC, 2016-07-31 12:52:10.827, foo, 2016-07-31 12:52:10.827, foo}
2016-07-31 12:52:10,828 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{42, 30, 300.75, 2012/11/01 02:13:00, CRC, 2016-07-31 12:52:10.828, foo, 2016-07-31 12:52:10.828, foo}
2016-07-31 12:52:10,829 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{43, 30, 400.25, 2013/12/01 02:13:00, HAN, 2016-07-31 12:52:10.829, foo, 2016-07-31 12:52:10.829, foo}
2016-07-31 12:52:10,830 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{44, 30, 300, 2014/09/01 02:13:00, HAN, 2016-07-31 12:52:10.83, foo, 2016-07-31 12:52:10.83, foo}
2016-07-31 12:52:10,831 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{45, 30, 700, 2014/10/01 02:13:00, HAN, 2016-07-31 12:52:10.83, foo, 2016-07-31 12:52:10.83, foo}
2016-07-31 12:52:10,831 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{46, 31, 1700.85, 2006/12/22 23:59:40, HAN, 2016-07-31 12:52:10.831, foo, 2016-07-31 12:52:10.831, foo}
2016-07-31 12:52:10,832 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{47, 32, 1800, 2009/12/28 12:13:10, HAN, 2016-07-31 12:52:10.832, foo, 2016-07-31 12:52:10.832, foo}
2016-07-31 12:52:10,833 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{48, 33, 1700, 2006/12/22 23:59:41, CRC, 2016-07-31 12:52:10.833, foo, 2016-07-31 12:52:10.833, foo}
2016-07-31 12:52:10,834 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{49, 34, 1800, 2007/05/21 12:13:00, BAK, 2016-07-31 12:52:10.834, foo, 2016-07-31 12:52:10.834, foo}
2016-07-31 12:52:10,835 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{50, 35, 2000, 2006/12/12 23:59:42, CRC, 2016-07-31 12:52:10.835, foo, 2016-07-31 12:52:10.835, foo}
2016-07-31 12:52:10,836 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{51, 36, 300.1, 2012/05/01 02:13:00, CRC, 2016-07-31 12:52:10.836, foo, 2016-07-31 12:52:10.836, foo}
2016-07-31 12:52:10,837 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{52, 36, 300.8, 2013/05/01 02:13:00, HAN, 2016-07-31 12:52:10.837, foo, 2016-07-31 12:52:10.837, foo}
2016-07-31 12:52:10,838 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{53, 36, 300.25, 2014/05/01 02:13:00, HAN, 2016-07-31 12:52:10.838, foo, 2016-07-31 12:52:10.838, foo}
2016-07-31 12:52:10,839 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{54, 37, 1535, 2006/12/12 23:59:43, HAN, 2016-07-31 12:52:10.839, foo, 2016-07-31 12:52:10.839, foo}
2016-07-31 12:52:10,841 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{55, 38, 1700, 2007/05/01 02:03:00, HAN, 2016-07-31 12:52:10.841, foo, 2016-07-31 12:52:10.841, foo}
2016-07-31 12:52:10,841 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{56, 40, 128, 2007/05/01 12:13:00, BAK, 2016-07-31 12:52:10.841, foo, 2016-07-31 12:52:10.841, foo}
2016-07-31 12:52:10,842 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{57, 40, 256, 2013/05/01 12:13:00, BAK, 2016-07-31 12:52:10.842, foo, 2016-07-31 12:52:10.842, foo}
2016-07-31 12:52:10,843 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{58, 40, 512, 2009/05/01 12:13:00, CRC, 2016-07-31 12:52:10.843, foo, 2016-07-31 12:52:10.843, foo}
2016-07-31 12:52:10,844 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{59, 41, 1700, 2007/11/01 02:13:00, HAN, 2016-07-31 12:52:10.844, foo, 2016-07-31 12:52:10.844, foo}
2016-07-31 12:52:10,845 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{60, 42, 30000000, 2014/03/22 21:59:40, HAN, 2016-07-31 12:52:10.845, foo, 2016-07-31 12:52:10.845, foo}
2016-07-31 12:52:10,846 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{61, 43, 1800, 2006/12/28 12:13:10, BAK, 2016-07-31 12:52:10.846, foo, 2016-07-31 12:52:10.846, foo}
2016-07-31 12:52:10,847 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{62, 44, 1700, 2006/12/22 23:59:41, BAK, 2016-07-31 12:52:10.847, foo, 2016-07-31 12:52:10.847, foo}
2016-07-31 12:52:10,847 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{63, 45, 1800, 2007/05/21 12:13:00, CRC, 2016-07-31 12:52:10.847, foo, 2016-07-31 12:52:10.847, foo}
2016-07-31 12:52:10,848 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{64, 46, 2000, 2010/12/12 23:59:42, BAK, 2016-07-31 12:52:10.848, foo, 2016-07-31 12:52:10.848, foo}
2016-07-31 12:52:10,849 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{65, 48, 90000, 2006/12/12 23:59:43, HAN, 2016-07-31 12:52:10.849, foo, 2016-07-31 12:52:10.849, foo}
2016-07-31 12:52:10,850 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{66, 48, 10000, 2006/12/12 23:59:43, BAK, 2016-07-31 12:52:10.85, foo, 2016-07-31 12:52:10.85, foo}
2016-07-31 12:52:10,851 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{67, 49, 1700.66, 2007/05/01 02:03:00, HAN, 2016-07-31 12:52:10.851, foo, 2016-07-31 12:52:10.851, foo}
2016-07-31 12:52:10,852 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{68, 51, 1700, 2007/11/21 02:13:00, BAK, 2016-07-31 12:52:10.852, foo, 2016-07-31 12:52:10.852, foo}
2016-07-31 12:52:10,852 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{69, 52, 100, 2006/12/23 23:59:40, BAK, 2016-07-31 12:52:10.852, foo, 2016-07-31 12:52:10.852, foo}
2016-07-31 12:52:10,853 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{70, 52, 40, 2007/12/23 23:59:40, HAN, 2016-07-31 12:52:10.853, foo, 2016-07-31 12:52:10.853, foo}
2016-07-31 12:52:10,854 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{71, 52, 40, 2008/12/23 23:59:40, HAN, 2016-07-31 12:52:10.854, foo, 2016-07-31 12:52:10.854, foo}
2016-07-31 12:52:10,857 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{72, 52, 40, 2009/12/23 23:59:40, HAN, 2016-07-31 12:52:10.857, foo, 2016-07-31 12:52:10.857, foo}
2016-07-31 12:52:10,860 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{73, 52, 40, 2010/12/23 23:59:40, BAK, 2016-07-31 12:52:10.86, foo, 2016-07-31 12:52:10.86, foo}
2016-07-31 12:52:10,862 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{74, 52, 40, 2011/12/23 23:59:40, CRC, 2016-07-31 12:52:10.862, foo, 2016-07-31 12:52:10.862, foo}
2016-07-31 12:52:10,864 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{75, 52, 40, 2012/12/23 23:59:40, BAK, 2016-07-31 12:52:10.864, foo, 2016-07-31 12:52:10.864, foo}
2016-07-31 12:52:10,865 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{76, 52, 40, 2013/12/23 23:59:40, HAN, 2016-07-31 12:52:10.865, foo, 2016-07-31 12:52:10.865, foo}
2016-07-31 12:52:10,866 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{77, 52, 40, 2014/12/23 23:59:40, HAN, 2016-07-31 12:52:10.865, foo, 2016-07-31 12:52:10.865, foo}
2016-07-31 12:52:10,866 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{78, 52, 40, 2015/12/23 23:59:40, HAN, 2016-07-31 12:52:10.866, foo, 2016-07-31 12:52:10.866, foo}
2016-07-31 12:52:10,867 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{79, 53, 600000, 2007/12/28 12:13:10, BAK, 2016-07-31 12:52:10.867, foo, 2016-07-31 12:52:10.867, foo}
2016-07-31 12:52:10,868 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{80, 54, 1700.42, 2008/02/22 23:59:41, CRC, 2016-07-31 12:52:10.868, foo, 2016-07-31 12:52:10.868, foo}
2016-07-31 12:52:10,869 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{81, 55, 1600, 2012/07/21 12:13:00, HAN, 2016-07-31 12:52:10.868, foo, 2016-07-31 12:52:10.869, foo}
2016-07-31 12:52:10,869 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{82, 55, 200, 2008/07/21 12:13:00, CRC, 2016-07-31 12:52:10.869, foo, 2016-07-31 12:52:10.869, foo}
2016-07-31 12:52:10,870 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{83, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-31 12:52:10.87, foo, 2016-07-31 12:52:10.87, foo}
2016-07-31 12:52:10,871 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{84, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-31 12:52:10.871, foo, 2016-07-31 12:52:10.871, foo}
2016-07-31 12:52:10,872 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{85, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-31 12:52:10.872, foo, 2016-07-31 12:52:10.872, foo}
2016-07-31 12:52:10,874 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{86, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-07-31 12:52:10.873, foo, 2016-07-31 12:52:10.874, foo}
2016-07-31 12:52:10,876 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{87, 57, 999, 2014/02/01 02:13:00, HAN, 2016-07-31 12:52:10.876, foo, 2016-07-31 12:52:10.876, foo}
2016-07-31 12:52:10,877 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{88, 58, 4000000, 2006/12/12 23:59:43, HAN, 2016-07-31 12:52:10.877, foo, 2016-07-31 12:52:10.877, foo}
2016-07-31 12:52:10,878 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{89, 59, 380.77, 2013/05/01 02:03:00, CRC, 2016-07-31 12:52:10.878, foo, 2016-07-31 12:52:10.878, foo}
2016-07-31 12:52:10,879 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{90, 60, 675.88, 2006/12/12 23:59:44, BAK, 2016-07-31 12:52:10.879, foo, 2016-07-31 12:52:10.879, foo}
2016-07-31 12:52:10,880 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{91, 61, 12000000, 2008/03/03 06:34:56, HAN, 2016-07-31 12:52:10.88, foo, 2016-07-31 12:52:10.88, foo}
2016-07-31 12:52:10,881 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{92, 62, 20000, 2009/06/04 06:34:56, HAN, 2016-07-31 12:52:10.881, foo, 2016-07-31 12:52:10.881, foo}
2016-07-31 12:52:10,881 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{93, 63, 2000, 2010/09/26 06:34:56, HAN, 2016-07-31 12:52:10.881, foo, 2016-07-31 12:52:10.881, foo}
2016-07-31 12:52:10,882 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{94, 64, 50, 2011/03/03 09:45:29, BAK, 2016-07-31 12:52:10.882, foo, 2016-07-31 12:52:10.882, foo}
2016-07-31 12:52:10,883 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{95, 65, 1000000, 2012/06/04 09:45:29, BAK, 2016-07-31 12:52:10.883, foo, 2016-07-31 12:52:10.883, foo}
2016-07-31 12:52:10,884 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{96, 66, 900000, 2013/09/26 09:45:29, BAK, 2016-07-31 12:52:10.884, foo, 2016-07-31 12:52:10.884, foo}
2016-07-31 12:52:10,885 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{97, 67, 3000, 2014/03/03 21:02:12, CRC, 2016-07-31 12:52:10.885, foo, 2016-07-31 12:52:10.885, foo}
2016-07-31 12:52:10,886 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{98, 68, 3000, 2015/06/04 21:02:12, CRC, 2016-07-31 12:52:10.886, foo, 2016-07-31 12:52:10.886, foo}
2016-07-31 12:52:10,886 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{99, 69, 1000, 2016/09/26 21:02:12, CRC, 2016-07-31 12:52:10.886, foo, 2016-07-31 12:52:10.886, foo}
2016-07-31 12:52:10,887 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{100, 70, 1200, 2017/03/03 01:11:00, HAN, 2016-07-31 12:52:10.887, foo, 2016-07-31 12:52:10.887, foo}
2016-07-31 12:52:10,960 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 100 rows are loaded to PURCHASE_PAYMENT
2016-07-31 12:52:10,962 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():378) - ...Checking implicit set of classification
2016-07-31 12:52:10,980 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-07-31 12:52:10,988 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-07-31 12:52:11,006 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-07-31 12:52:11,010 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-07-31 12:52:11,013 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-07-31 12:52:11,016 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-07-31 12:52:11,030 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-07-31 12:52:11,045 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-07-31 12:52:11,071 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-07-31 12:52:11,072 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct MOBILE_LOGIN_FLG from MEMBER_LOGIN where MOBILE_LOGIN_FLG not in (1, 0)
2016-07-31 12:52:11,073 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_COMPLETE_FLG from PURCHASE where PAYMENT_COMPLETE_FLG not in (1, 0)
2016-07-31 12:52:11,075 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_METHOD_CODE from PURCHASE_PAYMENT where PAYMENT_METHOD_CODE not in ('HAN', 'BAK', 'CRC')
2016-07-31 12:52:11,081 [main] INFO  (DfTakeFinallyProcess#takeFinally():219) - 
2016-07-31 12:52:11,082 [main] INFO  (DfTakeFinallyProcess#takeFinally():220) - * * * * * * * **
2016-07-31 12:52:11,082 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - *              *
2016-07-31 12:52:11,082 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * Take Finally *
2016-07-31 12:52:11,082 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2016-07-31 12:52:11,083 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * * * * * * * **
2016-07-31 12:52:11,089 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: take-finally.sql
2016-07-31 12:52:11,091 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Member addresses should be only one at any time.
-- - - - - - - - - - -/
select adr.MEMBER_ADDRESS_ID, adr.MEMBER_ID
     , adr.VALID_BEGIN_DATE, adr.VALID_END_DATE
     , adr.ADDRESS
  from MEMBER_ADDRESS adr
 where exists (select subadr.MEMBER_ADDRESS_ID
                 from MEMBER_ADDRESS subadr
                where subadr.MEMBER_ID = adr.MEMBER_ID
                  and subadr.VALID_BEGIN_DATE > adr.VALID_BEGIN_DATE
                  -- 有効期間が一日だけ重複しているパターンも検出
                  and subadr.VALID_BEGIN_DATE <= adr.VALID_END_DATE
       )
2016-07-31 12:52:11,117 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 正式会員日時を持ってる仮会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'PRV'
   and mem.FORMALIZED_DATETIME is not NULL
2016-07-31 12:52:11,119 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- まだ生まれていない会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.BIRTHDATE > now()
2016-07-31 12:52:11,121 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 退会会員が退会情報を持っていることをアサート
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'WDL'
   and not exists (select wdl.MEMBER_ID
                     from MEMBER_WITHDRAWAL wdl
                    where wdl.MEMBER_ID = mem.MEMBER_ID
       )
2016-07-31 12:52:11,127 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=4 failure=0
2016-07-31 12:52:11,127 [main] INFO  (DfSqlFileFireMan#fire():89) - {Take Finally}: success=4 failure=0 (in 1 files)
2016-07-31 12:52:11,130 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-07-31 12:52:11,138 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m06s156ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = root
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=49 failure=0 (in 3 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql
  o replace-schema-50-procedure.sql

 {Load Data}: loaded-files=3
  (common)
  o 10-master.xls
  (ut)
  o 20-member.xls
  o 30-product.xls

 {Take Finally}: success=4 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2016-08-01 10:17:43,226 [main] INFO  (DfReplaceSchemaTask#begin():91) - +------------------------------------------+
2016-08-01 10:17:43,235 [main] INFO  (DfReplaceSchemaTask#begin():92) - |                                          |
2016-08-01 10:17:43,235 [main] INFO  (DfReplaceSchemaTask#begin():93) - |              ReplaceSchema               |
2016-08-01 10:17:43,239 [main] INFO  (DfReplaceSchemaTask#begin():101) - |                                          |
2016-08-01 10:17:43,240 [main] INFO  (DfReplaceSchemaTask#begin():102) - +------------------------------------------+
2016-08-01 10:17:43,241 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():342) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2016-08-01 10:17:44,470 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-08-01 10:17:44,470 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-08-01 10:17:44,470 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/maihamadb
2016-08-01 10:17:44,471 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2016-08-01 10:17:44,481 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-08-01 10:17:44,740 [main] INFO  (DfReplaceSchemaTask#setupLazyConnection():143) - ...Being a lazy connection: Failed to connect: url=jdbc:mysql://localhost:3...
2016-08-01 10:17:44,754 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2016-08-01 10:17:44,755 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2016-08-01 10:17:44,755 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2016-08-01 10:17:44,755 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2016-08-01 10:17:44,756 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2016-08-01 10:17:44,756 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2016-08-01 10:17:44,757 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():236) - *Passed because it's a lazy connection
2016-08-01 10:17:44,758 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2016-08-01 10:17:44,758 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2016-08-01 10:17:44,758 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2016-08-01 10:17:44,759 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2016-08-01 10:17:44,759 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2016-08-01 10:17:44,759 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2016-08-01 10:17:44,763 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-00-system.sql
2016-08-01 10:17:44,768 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2016-08-01 10:17:44,768 [main] INFO  (DfCreateSchemaProcess$1#dispatch():295) - ...Creating a connection to system
2016-08-01 10:17:44,769 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():520) - ...Creating a connection for additional user: root
2016-08-01 10:17:44,785 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.
* * * * * * * * * */
java.lang.IllegalStateException: Failed to connect: url=jdbc:mysql://localhost:3306 info={user=root, password=}
	at org.dbflute.properties.DfAbstractHelperProperties.createConnection(DfAbstractHelperProperties.java:692)
	at org.dbflute.properties.DfReplaceSchemaProperties.createAdditionalUserConnection(DfReplaceSchemaProperties.java:521)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$1.dispatch(DfCreateSchemaProcess.java:296)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.dispatch(DfSqlFileRunnerExecute.java:89)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:58)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:169)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:67)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:274)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:143)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:261)
	at org.dbflute.task.DfReplaceSchemaTask.doExecuteCoreProcess(DfReplaceSchemaTask.java:246)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:237)
	at org.dbflute.task.DfReplaceSchemaTask.processMain(DfReplaceSchemaTask.java:230)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:157)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:183)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:77)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: NO)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:870)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1659)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1206)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2234)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2265)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2064)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:790)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:395)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.dbflute.properties.DfAbstractHelperProperties.createConnection(DfAbstractHelperProperties.java:687)
	... 34 more
2016-08-01 10:17:44,809 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s590ms *Abort

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = root
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$


_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2016-08-01 10:31:21,736 [main] INFO  (DfReplaceSchemaTask#begin():91) - +------------------------------------------+
2016-08-01 10:31:21,738 [main] INFO  (DfReplaceSchemaTask#begin():92) - |                                          |
2016-08-01 10:31:21,738 [main] INFO  (DfReplaceSchemaTask#begin():93) - |              ReplaceSchema               |
2016-08-01 10:31:21,741 [main] INFO  (DfReplaceSchemaTask#begin():101) - |                                          |
2016-08-01 10:31:21,742 [main] INFO  (DfReplaceSchemaTask#begin():102) - +------------------------------------------+
2016-08-01 10:31:21,743 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():342) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2016-08-01 10:31:23,201 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-08-01 10:31:23,202 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-08-01 10:31:23,203 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/maihamadb
2016-08-01 10:31:23,203 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2016-08-01 10:31:23,213 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-08-01 10:31:23,468 [main] INFO  (DfReplaceSchemaTask#setupLazyConnection():143) - ...Being a lazy connection: Failed to connect: url=jdbc:mysql://localhost:3...
2016-08-01 10:31:23,480 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2016-08-01 10:31:23,481 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2016-08-01 10:31:23,481 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2016-08-01 10:31:23,481 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2016-08-01 10:31:23,482 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2016-08-01 10:31:23,482 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2016-08-01 10:31:23,482 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():236) - *Passed because it's a lazy connection
2016-08-01 10:31:23,483 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2016-08-01 10:31:23,484 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2016-08-01 10:31:23,484 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2016-08-01 10:31:23,484 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2016-08-01 10:31:23,484 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2016-08-01 10:31:23,484 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2016-08-01 10:31:23,488 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-00-system.sql
2016-08-01 10:31:23,496 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2016-08-01 10:31:23,499 [main] INFO  (DfCreateSchemaProcess$1#dispatch():295) - ...Creating a connection to system
2016-08-01 10:31:23,500 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():520) - ...Creating a connection for additional user: root
2016-08-01 10:31:23,511 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.
* * * * * * * * * */
java.lang.IllegalStateException: Failed to connect: url=jdbc:mysql://localhost:3306 info={user=root, password= Hy19920423}
	at org.dbflute.properties.DfAbstractHelperProperties.createConnection(DfAbstractHelperProperties.java:692)
	at org.dbflute.properties.DfReplaceSchemaProperties.createAdditionalUserConnection(DfReplaceSchemaProperties.java:521)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$1.dispatch(DfCreateSchemaProcess.java:296)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.dispatch(DfSqlFileRunnerExecute.java:89)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:58)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:169)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:67)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:274)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:143)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:261)
	at org.dbflute.task.DfReplaceSchemaTask.doExecuteCoreProcess(DfReplaceSchemaTask.java:246)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:237)
	at org.dbflute.task.DfReplaceSchemaTask.processMain(DfReplaceSchemaTask.java:230)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:157)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:183)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:77)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:870)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1659)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1206)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2234)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2265)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2064)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:790)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:395)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.dbflute.properties.DfAbstractHelperProperties.createConnection(DfAbstractHelperProperties.java:687)
	... 34 more
2016-08-01 10:31:23,538 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s800ms *Abort

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = root
    props  = {user=root, password= Hy19920423}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$


_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2016-08-01 10:35:41,612 [main] INFO  (DfReplaceSchemaTask#begin():91) - +------------------------------------------+
2016-08-01 10:35:41,616 [main] INFO  (DfReplaceSchemaTask#begin():92) - |                                          |
2016-08-01 10:35:41,617 [main] INFO  (DfReplaceSchemaTask#begin():93) - |              ReplaceSchema               |
2016-08-01 10:35:41,620 [main] INFO  (DfReplaceSchemaTask#begin():101) - |                                          |
2016-08-01 10:35:41,620 [main] INFO  (DfReplaceSchemaTask#begin():102) - +------------------------------------------+
2016-08-01 10:35:41,621 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():342) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2016-08-01 10:35:42,331 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-08-01 10:35:42,332 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-08-01 10:35:42,332 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/maihamadb
2016-08-01 10:35:42,332 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2016-08-01 10:35:42,337 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-08-01 10:35:42,588 [main] INFO  (DfReplaceSchemaTask#setupLazyConnection():143) - ...Being a lazy connection: Failed to connect: url=jdbc:mysql://localhost:3...
2016-08-01 10:35:42,599 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2016-08-01 10:35:42,599 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2016-08-01 10:35:42,599 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2016-08-01 10:35:42,600 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2016-08-01 10:35:42,601 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2016-08-01 10:35:42,601 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2016-08-01 10:35:42,601 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():236) - *Passed because it's a lazy connection
2016-08-01 10:35:42,602 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2016-08-01 10:35:42,602 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2016-08-01 10:35:42,603 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2016-08-01 10:35:42,603 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2016-08-01 10:35:42,603 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2016-08-01 10:35:42,603 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2016-08-01 10:35:42,606 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-00-system.sql
2016-08-01 10:35:42,610 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2016-08-01 10:35:42,611 [main] INFO  (DfCreateSchemaProcess$1#dispatch():295) - ...Creating a connection to system
2016-08-01 10:35:42,611 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():520) - ...Creating a connection for additional user: root
2016-08-01 10:35:42,671 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on maihamadb.*
  to root@localhost identified by 'Hy19920423'
2016-08-01 10:35:42,698 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2016-08-01 10:35:42,705 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=3 failure=0
2016-08-01 10:35:42,705 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-10-basic.sql
2016-08-01 10:35:42,705 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():381) - ...Coming back to the main user from the user 'system'
2016-08-01 10:35:42,712 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER(
    MEMBER_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員ID: 会員を識別するID。連番として基本的に自動採番される。
（会員IDだけに限らず）採番方法はDBMSによって変わる。',
    MEMBER_NAME VARCHAR(160) NOT NULL COMMENT '会員名称: 会員のフルネームの名称。',
    MEMBER_ACCOUNT VARCHAR(50) NOT NULL COMMENT '会員アカウント: 会員がログイン時に利用するアカウントNO。',
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード',
    FORMALIZED_DATETIME DATETIME COMMENT '正式会員日時: 会員が正式に確定した日時。一度確定したら更新されない。
仮会員のときはnull。',
    BIRTHDATE DATE COMMENT '生年月日: 必須項目ではないので、このデータがない会員もいる。',
    REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時: レコードが登録された日時。共通カラムの一つ。',
    REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ: レコードを登録したユーザ。共通カラムの一つ。',
    UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時: レコードが（最後に）更新された日時。共通カラムの一つ。',
    UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ: レコードを更新したユーザ。',
    VERSION_NO BIGINT NOT NULL COMMENT 'バージョンNO: レコードのバージョンを示すNO。
更新回数と等しく、主に排他制御のために利用される。',
    PRIMARY KEY (MEMBER_ID),
    UNIQUE (MEMBER_ACCOUNT)
) COMMENT='会員: 会員登録時にデータが登録される。
基本的に物理削除はなく、退会したらステータスが退会会員になる。'
2016-08-01 10:35:42,716 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#lazyConnectIfNeeds():466) - ...Connecting by main user lazily
2016-08-01 10:35:42,717 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-08-01 10:35:42,717 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-08-01 10:35:42,718 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/maihamadb
2016-08-01 10:35:42,718 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2016-08-01 10:35:42,718 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-08-01 10:35:42,728 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-08-01 10:35:42,728 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-08-01 10:35:42,769 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_ADDRESS(
    MEMBER_ADDRESS_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員住所ID: 会員住所を識別するID。
履歴分も含むテーブルなので、これ自体はFKではない。',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
履歴分を含むため、これだけではユニークにはならない。',
    VALID_BEGIN_DATE DATE NOT NULL COMMENT '有効開始日: 一つの有効期間の開始を示す日付。
前の有効終了日の次の日の値が格納される。',
    VALID_END_DATE DATE NOT NULL COMMENT '有効終了日: 有効期間の終了日。
次の有効開始日の一日前の値が格納される。
ただし、次の有効期間がない場合は 9999/12/31 となる。',
    ADDRESS VARCHAR(200) NOT NULL COMMENT '住所: まるごと住所',
    REGION_ID INTEGER NOT NULL COMMENT '地域ID: 地域を参照するID。
ここでは特に住所の内容と連動しているわけではない。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ADDRESS_ID),
    UNIQUE (MEMBER_ID, VALID_BEGIN_DATE)
) COMMENT='会員住所情報: 会員の住所に関する情報。
同時に有効期間ごとに履歴管理されている。'
2016-08-01 10:35:42,787 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_LOGIN(
    MEMBER_LOGIN_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員ログインID',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID',
    LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時: ログインした瞬間の日時。',
    MOBILE_LOGIN_FLG INTEGER NOT NULL COMMENT 'モバイルログインフラグ: モバイル機器からのログインか否か。',
    LOGIN_MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT 'ログイン会員ステータスコード: ログイン時の会員ステータス',
    PRIMARY KEY (MEMBER_LOGIN_ID),
    UNIQUE (MEMBER_ID, LOGIN_DATETIME)
) COMMENT='会員ログイン情報: ログインするたびに登録されるログイン履歴。'
2016-08-01 10:35:42,801 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SECURITY(
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: そのまま one-to-one を構成するためのFKとなる。',
    LOGIN_PASSWORD VARCHAR(50) NOT NULL COMMENT 'ログインパスワード: ログイン時に利用するパスワード。
本当は良くないが、Exampleなのでひとまず暗号化していない。',
    REMINDER_QUESTION VARCHAR(50) NOT NULL COMMENT 'リマインダ質問: パスワードを忘れた際のリマインダ機能における質問の内容。',
    REMINDER_ANSWER VARCHAR(50) NOT NULL COMMENT 'リマインダ回答: パスワードを忘れた際のリマインダ機能における質問の答え。',
    REMINDER_USE_COUNT INTEGER NOT NULL COMMENT 'リマインダ回数: 忘れっぽい人を分析するためのもの。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある'
2016-08-01 10:35:42,816 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SERVICE(
	MEMBER_SERVICE_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員サービスID: 代理キー。律儀にIDの役割を分ける',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。ユニークなので、会員とは one-to-one の関係に。',
    SERVICE_POINT_COUNT INTEGER NOT NULL COMMENT 'サービスポイント数: 会員が現在利用できるサービスポイントの数。
基本的に、購入時には増えてポイントを使ったら減る。',
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを参照するコード。
どんなランクがあるのかドキドキですね。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_SERVICE_ID),
    UNIQUE (MEMBER_ID)
) COMMENT='会員サービス: 会員のサービス情報（ポイントサービスなど）。'
2016-08-01 10:35:42,831 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_WITHDRAWAL(
    MEMBER_ID INTEGER NOT NULL,
    WITHDRAWAL_REASON_CODE CHAR(3) COMMENT '退会理由コード: 退会した定型理由を参照するコード。
何も言わずに退会する会員もいるので必須項目ではない。',
    WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト: 会員がフリーテキストで入力できる退会理由。
もう言いたいこと言ってもらう感じ。',
    WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT '退会日時: 退会した瞬間の日時。
正式会員日時と違い、こっちはone-to-oneの別テーブルで。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員退会情報: 退会会員の退会に関する詳細な情報。
退会会員のみデータが存在する。'
2016-08-01 10:35:42,851 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE(
    PURCHASE_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入ID: 連番',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
購入を識別する自然キー（複合ユニーク制約）の筆頭要素。',
    PRODUCT_ID INTEGER NOT NULL COMMENT '商品ID: 商品を参照するID。',
    PURCHASE_DATETIME DATETIME NOT NULL COMMENT '購入日時: 購入した瞬間の日時。',
    PURCHASE_COUNT INTEGER NOT NULL COMMENT '購入数量: 購入した商品の（一回の購入における）数量。',
    PURCHASE_PRICE INTEGER NOT NULL COMMENT '購入価格: 購入によって実際に会員が支払った（支払う予定の）価格。
基本は商品の定価に購入数量を掛けたものになるが、
ポイント利用や割引があったりと必ずしもそうはならない。',
    PAYMENT_COMPLETE_FLG INTEGER NOT NULL COMMENT '支払完了フラグ: この購入に関しての支払いが完了しているか否か。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PURCHASE_ID),
    UNIQUE (MEMBER_ID, PRODUCT_ID, PURCHASE_DATETIME),
    KEY (MEMBER_ID),
    KEY (PRODUCT_ID)
) COMMENT='購入: 一つの商品に対する一回の購入を表現する。
一回の購入で一つの商品を複数個買うこともある。'
2016-08-01 10:35:42,869 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE_PAYMENT(
    PURCHASE_PAYMENT_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入支払ID: 連番',
    PURCHASE_ID BIGINT NOT NULL COMMENT '購入ID: 支払い対象の購入へのID',
    PAYMENT_AMOUNT DECIMAL(10,2) NOT NULL COMMENT '支払金額: 支払った金額。さて、小数点なのはなぜでしょう？',
    PAYMENT_DATETIME DATETIME NOT NULL COMMENT '支払日時: 支払ったときの日時',
    PAYMENT_METHOD_CODE CHAR(3) NOT NULL COMMENT '支払方法コード: 手渡しや銀行振込など',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (PURCHASE_PAYMENT_ID)
) COMMENT='購入支払: 購入に対する支払。
分割払いもできるのでmanyとなり、会員からの孫テーブルのテストができてうれしい。'
2016-08-01 10:35:42,888 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT(
    PRODUCT_ID INTEGER AUTO_INCREMENT NOT NULL,
    PRODUCT_NAME VARCHAR(50) NOT NULL COMMENT '商品名称',
    PRODUCT_HANDLE_CODE VARCHAR(100) NOT NULL COMMENT '商品ハンドルコード: 商品を識別する業務上のコード。',
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL,
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL,
    REGULAR_PRICE INTEGER NOT NULL COMMENT '定価',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PRODUCT_ID),
    UNIQUE (PRODUCT_HANDLE_CODE)
) COMMENT='商品'
2016-08-01 10:35:42,910 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_CATEGORY(
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL COMMENT '商品カテゴリコード',
    PRODUCT_CATEGORY_NAME VARCHAR(50) NOT NULL COMMENT '商品カテゴリ名称',
    PARENT_CATEGORY_CODE CHAR(3) COMMENT '親カテゴリコード: 最上位の場合はデータなし。',
    PRIMARY KEY (PRODUCT_CATEGORY_CODE)
) COMMENT='商品カテゴリ: 商品のカテゴリを表現するマスタ。
自己参照の階層になっている。'
2016-08-01 10:35:42,927 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_STATUS(
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL COMMENT '商品ステータスコード',
    PRODUCT_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '商品ステータス名称',
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (PRODUCT_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='商品ステータス'
2016-08-01 10:35:42,943 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table REGION(
    REGION_ID INTEGER NOT NULL COMMENT '地域ID',
    REGION_NAME VARCHAR(50) NOT NULL COMMENT '地域名称',
    PRIMARY KEY (REGION_ID)
) COMMENT='地域: 主に会員の住所に対応する地域。
かなりざっくりした感じではある。'
2016-08-01 10:35:42,967 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table SERVICE_RANK(
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを識別するコード。',
    SERVICE_RANK_NAME VARCHAR(50) NOT NULL COMMENT 'サービスランク名称: サービスランクの名称。
（ゴールドとかプラチナとか基本的には威厳のある名前）',
    SERVICE_POINT_INCIDENCE NUMERIC(5, 3) NOT NULL COMMENT 'サービスポイント発生率: 購入ごとのサービスポイントの発生率。
購入価格にこの値をかけた数が発生ポイント。',
    NEW_ACCEPTABLE_FLG INTEGER NOT NULL COMMENT '新規受け入れ可能フラグ: このランクへの新規受け入れができるかどうか。',
    DESCRIPTION VARCHAR(200) NOT NULL,
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (SERVICE_RANK_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='サービスランク: 会員のサービスレベルを表現するランク。
（ゴールドとかプラチナとか）'
2016-08-01 10:35:42,987 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_STATUS(
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード: 会員ステータスを識別するコード。',
    MEMBER_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '会員ステータス名称',
    DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明: 会員ステータスそれぞれの説明。
気の利いた説明があるとディベロッパーがとても助かる。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順: UI上のステータスの表示順を示すNO。
並べるときは、このカラムに対して昇順のソート条件にする。',
    PRIMARY KEY (MEMBER_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='会員ステータス'
2016-08-01 10:35:43,005 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table WITHDRAWAL_REASON(
    WITHDRAWAL_REASON_CODE CHAR(3) NOT NULL COMMENT '退会理由コード',
    WITHDRAWAL_REASON_TEXT TEXT NOT NULL COMMENT '退会理由テキスト: 退会理由の内容。テキスト形式なので目いっぱい書けるが、
そうするとUI側できれいに見せるのが大変でしょうね。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順',
    PRIMARY KEY (WITHDRAWAL_REASON_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='退会理由: 会員に選ばせる定型的な退会理由のマスタ。'
2016-08-01 10:35:43,020 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_FOLLOWING(
    MEMBER_FOLLOWING_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員フォローイングID: 連番',
    MY_MEMBER_ID INTEGER NOT NULL COMMENT 'わたし: 気になった人がいて...勇気を振り絞った会員のID。',
    YOUR_MEMBER_ID INTEGER NOT NULL COMMENT 'あなた: いきなりのアクションに...ちょっと心揺らいだ会員のID。',
    FOLLOW_DATETIME DATETIME NOT NULL COMMENT 'その瞬間: ふりかえるとちょっと恥ずかしい気持ちになる日時',
    PRIMARY KEY (MEMBER_FOLLOWING_ID),
    UNIQUE (MY_MEMBER_ID, YOUR_MEMBER_ID)
) COMMENT='会員フォローイング: とある会員が他の会員をフォローできる。すると、フォローした会員の購入履歴が閲覧できる。'
2016-08-01 10:35:43,042 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER add constraint FK_MEMBER_MEMBER_STATUS 
    foreign key (MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-08-01 10:35:43,079 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-08-01 10:35:43,104 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_REGION 
    foreign key (REGION_ID) references REGION (REGION_ID)
2016-08-01 10:35:43,126 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER_STATUS 
    foreign key (LOGIN_MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-08-01 10:35:43,149 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-08-01 10:35:43,173 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-08-01 10:35:43,197 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_SERVICE_RANK_CODE 
    foreign key (SERVICE_RANK_CODE) references SERVICE_RANK (SERVICE_RANK_CODE)
2016-08-01 10:35:43,232 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SECURITY add constraint FK_MEMBER_SECURITY_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-08-01 10:35:43,264 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-08-01 10:35:43,292 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON 
    foreign key (WITHDRAWAL_REASON_CODE) references WITHDRAWAL_REASON (WITHDRAWAL_REASON_CODE)
2016-08-01 10:35:43,319 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-08-01 10:35:43,349 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_PRODUCT 
    foreign key (PRODUCT_ID) references PRODUCT (PRODUCT_ID)
2016-08-01 10:35:43,376 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE_PAYMENT add constraint FK_PURCHASE_PAYMENT_PURCHASE 
    foreign key (PURCHASE_ID) references PURCHASE (PURCHASE_ID)
2016-08-01 10:35:43,410 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_CATEGORY 
    foreign key (PRODUCT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-08-01 10:35:43,449 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_STATUS 
    foreign key (PRODUCT_STATUS_CODE) references PRODUCT_STATUS (PRODUCT_STATUS_CODE)
2016-08-01 10:35:43,477 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT_CATEGORY add constraint FK_PRODUCT_CATEGORY_PARENT 
    foreign key (PARENT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-08-01 10:35:43,508 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_MY_MEMBER 
    foreign key (MY_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-08-01 10:35:43,537 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_YOUR_MEMBER 
    foreign key (YOUR_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-08-01 10:35:43,561 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_UNIQUE_REVERSE on MEMBER_FOLLOWING(YOUR_MEMBER_ID, MY_MEMBER_ID)
2016-08-01 10:35:43,584 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_FOLLOW_DATETIME on MEMBER_FOLLOWING(FOLLOW_DATETIME)
2016-08-01 10:35:43,604 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_MEMBER_NAME on MEMBER(MEMBER_NAME)
2016-08-01 10:35:43,725 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FORMALIZED_DATETIME on MEMBER(FORMALIZED_DATETIME)
2016-08-01 10:35:43,744 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_LOGIN_DATETIME on MEMBER_LOGIN(LOGIN_DATETIME)
2016-08-01 10:35:43,762 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_SERVICE_POINT_COUNT on MEMBER_SERVICE(SERVICE_POINT_COUNT)
2016-08-01 10:35:43,783 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRODUCT_DATETIME on PURCHASE(PRODUCT_ID, PURCHASE_DATETIME)
2016-08-01 10:35:43,801 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_DATETIME_MEMBER on PURCHASE(PURCHASE_DATETIME, MEMBER_ID)
2016-08-01 10:35:43,819 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRICE on PURCHASE(PURCHASE_PRICE)
2016-08-01 10:35:43,836 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PAYMENT_DATETIME on PURCHASE_PAYMENT(PAYMENT_DATETIME, PAYMENT_AMOUNT)
2016-08-01 10:35:43,854 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PRODUCT_PRODUCT_NAME on PRODUCT(PRODUCT_NAME)
2016-08-01 10:35:43,874 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=45 failure=0
2016-08-01 10:35:43,875 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-50-procedure.sql
2016-08-01 10:35:43,877 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_IN_OUT_PARAMETER(
	in v_in_varchar varchar(32)
	, out v_out_varchar varchar(32)
	, inout v_inout_varchar varchar(32)
)
begin
	set v_out_varchar = v_inout_varchar;
	set v_inout_varchar = v_in_varchar;
end;

2016-08-01 10:35:43,916 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_RETURN_RESULT_SET(in birthdateFrom DATE)
begin
  select MEMBER_NAME, BIRTHDATE, MEMBER_STATUS_CODE
    from MEMBER
   where BIRTHDATE >= birthdateFrom
   order by BIRTHDATE desc, MEMBER_ID asc;
  select MEMBER_STATUS_CODE, MEMBER_STATUS_NAME
    from MEMBER_STATUS
   order by DISPLAY_ORDER;
end;

2016-08-01 10:35:43,918 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-08-01 10:35:43,918 [main] INFO  (DfSqlFileFireMan#fire():89) - {Create Schema}: success=50 failure=0 (in 3 files)
2016-08-01 10:35:43,918 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():564) - ...Closing connections to change-users: [system]
2016-08-01 10:35:44,017 [main] INFO  (DfLoadDataProcess#execute():129) - 
2016-08-01 10:35:44,018 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2016-08-01 10:35:44,018 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2016-08-01 10:35:44,018 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2016-08-01 10:35:44,019 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2016-08-01 10:35:44,019 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2016-08-01 10:35:44,062 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-08-01 10:35:44,063 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/common/xls/10-master.xls)
2016-08-01 10:35:44,063 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-08-01 10:35:44,405 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-08-01 10:35:44,405 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-08-01 10:35:44,405 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-08-01 10:35:44,480 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{PRV, 仮会員, 入会直後のステータスで一部のサイトサービスが利用可能, 3}
2016-08-01 10:35:44,526 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{FML, 正式会員, 正式な会員としてサイトサービスが利用可能, 1}
2016-08-01 10:35:44,527 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{WDL, 退会会員, 退会が確定した会員でサイトサービスはダメ, 2}
2016-08-01 10:35:44,527 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():212) - ...Skipping the terminal garbage row
2016-08-01 10:35:44,530 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to MEMBER_STATUS
2016-08-01 10:35:44,532 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{1, アメリカ}
2016-08-01 10:35:44,532 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{2, カナダ}
2016-08-01 10:35:44,532 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{3, 中国}
2016-08-01 10:35:44,533 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{4, 千葉}
2016-08-01 10:35:44,536 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to REGION
2016-08-01 10:35:44,537 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLT, PLATINUM, 12.3, 1, platinum rank, 1}
2016-08-01 10:35:44,537 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{GLD, GOLD, 9.2, 1, gold rank, 2}
2016-08-01 10:35:44,538 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{SIL, SILVER, 6.74, 1, silver rank, 3}
2016-08-01 10:35:44,538 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{BRZ, BRONZE, 2, 1, bronze rank, 4}
2016-08-01 10:35:44,539 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLS, PLASTIC, 0.1, 0, plastic rank, 5}
2016-08-01 10:35:44,542 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to SERVICE_RANK
2016-08-01 10:35:44,542 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{SIT, サイトが使いにくいから, 1}
2016-08-01 10:35:44,543 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{OTH, その他理由, 4}
2016-08-01 10:35:44,543 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{FRT, フリテンだから, 3}
2016-08-01 10:35:44,544 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{PRD, 商品に魅力がないから, 2}
2016-08-01 10:35:44,548 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to WITHDRAWAL_REASON
2016-08-01 10:35:44,549 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MSC, 音楽, null}
2016-08-01 10:35:44,550 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{FOD, 食品, null}
2016-08-01 10:35:44,550 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MCD, 音楽CD, MSC}
2016-08-01 10:35:44,550 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{INS, 楽器, MSC}
2016-08-01 10:35:44,550 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{HEB, ハーブ, FOD}
2016-08-01 10:35:44,555 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to PRODUCT_CATEGORY
2016-08-01 10:35:44,556 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{ONS, 生産販売可能, 1}
2016-08-01 10:35:44,556 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{PST, 生産中止, 2}
2016-08-01 10:35:44,557 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{SST, 販売中止, 3}
2016-08-01 10:35:44,561 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to PRODUCT_STATUS
2016-08-01 10:35:44,564 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-08-01 10:35:44,564 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/20-member.xls)
2016-08-01 10:35:44,564 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-08-01 10:35:44,668 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{1, Stojkovic, Pixy, FML, 2007/12/01 11:01:10, 1965/03/03, 2016-08-01 10:35:44.668, foo, 2016-08-01 10:35:44.668, foo, 0}
2016-08-01 10:35:44,673 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{2, Savicevic, Genius, PRV, null, 1966/09/15, 2016-08-01 10:35:44.673, foo, 2016-08-01 10:35:44.673, foo, 0}
2016-08-01 10:35:44,675 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{3, Mijatovic, Mijato, WDL, 2005/10/03 13:03:30, null, 2016-08-01 10:35:44.675, foo, 2016-08-01 10:35:44.675, foo, 0}
2016-08-01 10:35:44,676 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{4, Stankovic, Stanko, FML, 2006/09/04 14:04:40, 1978/09/11, 2016-08-01 10:35:44.676, foo, 2016-08-01 10:35:44.676, foo, 0}
2016-08-01 10:35:44,678 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{5, Milosevic, Milose, FML, 2007/08/05 15:05:50, null, 2016-08-01 10:35:44.677, foo, 2016-08-01 10:35:44.677, foo, 0}
2016-08-01 10:35:44,679 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{6, Mihajlovic, FreeKick, WDL, 2006/07/06 16:06:40, 1969/02/20, 2016-08-01 10:35:44.679, foo, 2016-08-01 10:35:44.679, foo, 0}
2016-08-01 10:35:44,680 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{7, アカギ, Akagi, FML, 2005/06/07 17:07:30, null, 2016-08-01 10:35:44.68, foo, 2016-08-01 10:35:44.68, foo, 0}
2016-08-01 10:35:44,681 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{8, Kezman, RedCard, FML, 2006/05/08 18:08:20, null, 2016-08-01 10:35:44.681, foo, 2016-08-01 10:35:44.681, foo, 0}
2016-08-01 10:35:44,683 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{9, Maslovar, JEFUnited, FML, 2007/12/31 00:00:00, 1967/02/20, 2016-08-01 10:35:44.682, foo, 2016-08-01 10:35:44.682, foo, 0}
2016-08-01 10:35:44,684 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{10, 諸葛亮孔明, ShokatsuGoGo, PRV, null, null, 2016-08-01 10:35:44.684, foo, 2016-08-01 10:35:44.684, foo, 0}
2016-08-01 10:35:44,685 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{11, Boban, Boban, FML, 2007/12/01 11:01:10, 1968/10/08, 2016-08-01 10:35:44.685, foo, 2016-08-01 10:35:44.685, foo, 0}
2016-08-01 10:35:44,686 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{12, Suker, Suker, PRV, null, 1968/01/01, 2016-08-01 10:35:44.686, foo, 2016-08-01 10:35:44.686, foo, 0}
2016-08-01 10:35:44,688 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{13, Jarni, Jarni, WDL, 2005/10/03 13:03:30, 1968/10/26, 2016-08-01 10:35:44.688, foo, 2016-08-01 10:35:44.688, foo, 0}
2016-08-01 10:35:44,690 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{14, Boksic, Boksic, FML, 2006/09/04 14:04:40, 1970/01/21, 2016-08-01 10:35:44.69, foo, 2016-08-01 10:35:44.69, foo, 0}
2016-08-01 10:35:44,691 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{15, Prosinecki, Prosinecki, FML, 2004/08/05 15:05:50, 1969/01/12, 2016-08-01 10:35:44.691, foo, 2016-08-01 10:35:44.691, foo, 0}
2016-08-01 10:35:44,693 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{16, RobeltKovac, RobeltKovac, WDL, 2006/07/06 16:06:40, null, 2016-08-01 10:35:44.693, foo, 2016-08-01 10:35:44.693, foo, 0}
2016-08-01 10:35:44,695 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{17, NikoKovac, NikoKovac, FML, 2005/06/07 17:07:30, null, 2016-08-01 10:35:44.694, foo, 2016-08-01 10:35:44.694, foo, 0}
2016-08-01 10:35:44,696 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{18, Jovanovic, Jovano, FML, 2006/05/08 18:08:20, 1981/04/18, 2016-08-01 10:35:44.696, foo, 2016-08-01 10:35:44.696, foo, 0}
2016-08-01 10:35:44,697 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{19, Milko, Milko, FML, 2005/12/31 12:34:56, 1974/09/10, 2016-08-01 10:35:44.697, foo, 2016-08-01 10:35:44.697, foo, 0}
2016-08-01 10:35:44,699 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{20, 諸葛瑾子瑜, ShokatsuKinKin, FML, 2001/12/31 23:59:59, null, 2016-08-01 10:35:44.698, foo, 2016-08-01 10:35:44.698, foo, 0}
2016-08-01 10:35:44,719 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER
2016-08-01 10:35:44,719 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{1, 1, 2007/03/24, 2015/12/31, Nagara, 4, 2016-08-01 10:35:44.719, foo, 2016-08-01 10:35:44.719, foo, 0}
2016-08-01 10:35:44,721 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{2, 1, 1949/01/01, 1997/03/31, New York, 1, 2016-08-01 10:35:44.721, foo, 2016-08-01 10:35:44.721, foo, 0}
2016-08-01 10:35:44,723 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{3, 1, 1997/04/01, 2000/09/30, Los Angels, 1, 2016-08-01 10:35:44.723, foo, 2016-08-01 10:35:44.723, foo, 0}
2016-08-01 10:35:44,784 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{4, 1, 2000/10/01, 2003/08/31, New York, 1, 2016-08-01 10:35:44.784, foo, 2016-08-01 10:35:44.784, foo, 0}
2016-08-01 10:35:44,786 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{5, 1, 2003/09/01, 2004/12/22, San Francisco Powell, 1, 2016-08-01 10:35:44.785, foo, 2016-08-01 10:35:44.786, foo, 0}
2016-08-01 10:35:44,787 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{6, 1, 2004/12/23, 2006/03/23, San Francisco Daly City, 1, 2016-08-01 10:35:44.787, foo, 2016-08-01 10:35:44.787, foo, 0}
2016-08-01 10:35:44,788 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{7, 1, 2016/01/01, 9999/12/31, Victoria, 2, 2016-08-01 10:35:44.788, foo, 2016-08-01 10:35:44.788, foo, 0}
2016-08-01 10:35:44,790 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{8, 2, 2004/12/24, 9999/12/31, Ichihara, 4, 2016-08-01 10:35:44.79, foo, 2016-08-01 10:35:44.79, foo, 0}
2016-08-01 10:35:44,794 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{9, 3, 2004/12/24, 2007/03/23, Mobara, 4, 2016-08-01 10:35:44.794, foo, 2016-08-01 10:35:44.794, foo, 0}
2016-08-01 10:35:44,796 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{10, 4, 2002/11/01, 9999/12/31, Sousa, 4, 2016-08-01 10:35:44.796, foo, 2016-08-01 10:35:44.796, foo, 0}
2016-08-01 10:35:44,802 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{11, 6, 2002/11/01, 9999/12/31, Yokoshiba, 4, 2016-08-01 10:35:44.801, foo, 2016-08-01 10:35:44.801, foo, 0}
2016-08-01 10:35:44,806 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{12, 9, 2010/11/01, 9999/12/31, Tateyama, 4, 2016-08-01 10:35:44.806, foo, 2016-08-01 10:35:44.806, foo, 0}
2016-08-01 10:35:44,807 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{13, 10, 1970/01/01, 9999/12/31, Shoku, 3, 2016-08-01 10:35:44.807, foo, 2016-08-01 10:35:44.807, foo, 0}
2016-08-01 10:35:44,808 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{14, 12, 2000/11/01, 2001/11/01, Oohara, 4, 2016-08-01 10:35:44.808, foo, 2016-08-01 10:35:44.808, foo, 0}
2016-08-01 10:35:44,809 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{15, 15, 2002/11/01, 2006/10/30, MinamiBousou, 4, 2016-08-01 10:35:44.809, foo, 2016-08-01 10:35:44.809, foo, 0}
2016-08-01 10:35:44,811 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{16, 15, 2007/11/01, 9999/12/31, Tomisato, 4, 2016-08-01 10:35:44.811, foo, 2016-08-01 10:35:44.811, foo, 0}
2016-08-01 10:35:44,814 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{17, 18, 2001/03/21, 2007/11/21, Katsuura, 4, 2016-08-01 10:35:44.814, foo, 2016-08-01 10:35:44.814, foo, 0}
2016-08-01 10:35:44,817 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{18, 18, 2007/11/22, 9999/12/31, Kamogawa, 4, 2016-08-01 10:35:44.817, foo, 2016-08-01 10:35:44.817, foo, 0}
2016-08-01 10:35:44,819 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{19, 19, 2000/11/01, 9999/12/31, Yotsukaido, 4, 2016-08-01 10:35:44.819, foo, 2016-08-01 10:35:44.819, foo, 0}
2016-08-01 10:35:44,820 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{20, 20, 1970/01/01, 9999/12/31, Go, 3, 2016-08-01 10:35:44.82, foo, 2016-08-01 10:35:44.82, foo, 0}
2016-08-01 10:35:44,835 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_ADDRESS
2016-08-01 10:35:44,836 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{1, 3, 2006/12/24 23:59:59, 0, FML}
2016-08-01 10:35:44,837 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{2, 6, 2007/11/11 16:16:16, 0, FML}
2016-08-01 10:35:44,837 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{3, 1, 2006/12/23 22:56:29, 0, FML}
2016-08-01 10:35:44,838 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{4, 6, 2007/11/01 02:13:00, 0, FML}
2016-08-01 10:35:44,839 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{5, 7, 2006/05/24 23:12:59, 0, FML}
2016-08-01 10:35:44,840 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{6, 6, 2005/11/11 16:32:01, 0, PRV}
2016-08-01 10:35:44,840 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{7, 6, 2006/01/28 23:59:59, 1, FML}
2016-08-01 10:35:44,841 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{8, 6, 2007/11/09 16:23:00, 0, FML}
2016-08-01 10:35:44,842 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{9, 8, 2006/12/22 23:59:59, 0, FML}
2016-08-01 10:35:44,843 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{10, 6, 2007/11/11 09:01:00, 0, FML}
2016-08-01 10:35:44,845 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{11, 1, 2006/12/23 23:59:59, 0, FML}
2016-08-01 10:35:44,846 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{12, 9, 2007/11/15 12:43:00, 0, FML}
2016-08-01 10:35:44,848 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{13, 10, 2006/12/24 23:59:59, 0, FML}
2016-08-01 10:35:44,849 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{14, 6, 2007/04/01 16:23:01, 0, FML}
2016-08-01 10:35:44,851 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{15, 7, 2006/12/24 23:59:20, 1, FML}
2016-08-01 10:35:44,852 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{16, 6, 2007/05/01 12:23:02, 0, FML}
2016-08-01 10:35:44,853 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{17, 7, 2006/12/24 23:59:21, 0, FML}
2016-08-01 10:35:44,853 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{18, 6, 2007/06/11 17:23:03, 0, FML}
2016-08-01 10:35:44,854 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{19, 4, 2006/12/24 23:59:22, 0, FML}
2016-08-01 10:35:44,854 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{20, 3, 2007/11/01 16:12:04, 0, FML}
2016-08-01 10:35:44,855 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{21, 11, 2006/12/24 23:59:23, 0, FML}
2016-08-01 10:35:44,856 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{22, 1, 2007/11/01 16:23:05, 0, PRV}
2016-08-01 10:35:44,857 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{23, 9, 2006/12/24 23:59:24, 1, FML}
2016-08-01 10:35:44,858 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{24, 8, 2007/11/01 16:23:06, 0, FML}
2016-08-01 10:35:44,859 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{25, 7, 2007/12/24 11:59:25, 1, FML}
2016-08-01 10:35:44,860 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{26, 6, 2007/06/21 01:23:57, 0, FML}
2016-08-01 10:35:44,860 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{27, 5, 2006/12/24 23:59:26, 0, FML}
2016-08-01 10:35:44,861 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{28, 3, 2007/11/01 16:23:08, 0, FML}
2016-08-01 10:35:44,861 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{29, 3, 2006/12/24 23:59:27, 0, FML}
2016-08-01 10:35:44,862 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{30, 10, 2007/11/01 16:23:09, 0, FML}
2016-08-01 10:35:44,862 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{31, 15, 2006/07/24 23:59:28, 0, FML}
2016-08-01 10:35:44,863 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{32, 14, 2007/11/01 17:23:10, 0, FML}
2016-08-01 10:35:44,863 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{33, 15, 2007/11/01 16:23:10, 0, FML}
2016-08-01 10:35:44,866 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{34, 18, 2006/07/24 23:59:29, 0, FML}
2016-08-01 10:35:44,866 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{35, 3, 2007/11/01 17:23:11, 0, PRV}
2016-08-01 10:35:44,867 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{36, 5, 2007/11/01 16:23:11, 1, FML}
2016-08-01 10:35:44,871 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{37, 11, 2006/07/24 23:59:30, 0, FML}
2016-08-01 10:35:44,871 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{38, 20, 2007/11/01 17:23:12, 1, FML}
2016-08-01 10:35:44,872 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{39, 19, 2007/11/01 16:23:12, 0, FML}
2016-08-01 10:35:44,873 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{40, 4, 2006/07/24 23:59:31, 0, FML}
2016-08-01 10:35:44,874 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{41, 4, 2007/11/01 17:23:13, 0, FML}
2016-08-01 10:35:44,875 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{42, 4, 2007/11/01 16:23:13, 0, FML}
2016-08-01 10:35:44,876 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{43, 4, 2006/07/24 23:52:32, 0, FML}
2016-08-01 10:35:44,878 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{44, 4, 2007/11/01 11:23:14, 0, FML}
2016-08-01 10:35:44,880 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{45, 4, 2007/11/21 06:23:14, 0, FML}
2016-08-01 10:35:44,882 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{46, 12, 2006/07/24 23:52:33, 0, PRV}
2016-08-01 10:35:44,884 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{47, 13, 2007/11/01 11:23:15, 1, FML}
2016-08-01 10:35:44,885 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{48, 14, 2007/11/21 06:23:15, 0, FML}
2016-08-01 10:35:44,886 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{49, 17, 2006/07/24 23:52:34, 1, FML}
2016-08-01 10:35:44,899 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{50, 18, 2007/11/01 11:23:16, 0, FML}
2016-08-01 10:35:44,899 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{51, 16, 2007/11/21 06:23:16, 0, FML}
2016-08-01 10:35:44,900 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{52, 4, 2006/07/24 23:52:35, 0, FML}
2016-08-01 10:35:44,901 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{53, 5, 2007/11/01 11:23:17, 0, FML}
2016-08-01 10:35:44,902 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{54, 5, 2007/11/21 06:23:17, 0, FML}
2016-08-01 10:35:44,905 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{55, 11, 2006/07/24 23:52:36, 0, FML}
2016-08-01 10:35:44,906 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{56, 12, 2007/11/01 11:23:18, 0, FML}
2016-08-01 10:35:44,959 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 56 rows are loaded to MEMBER_LOGIN
2016-08-01 10:35:44,960 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{1, aaa, 30符3飜は？, 自分で数えろ, 1, 2016-08-01 10:35:44.96, foo, 2016-08-01 10:35:44.96, foo, 0}
2016-08-01 10:35:44,961 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{2, bbb, 50符2飜は？, 自分で数えろ, 2, 2016-08-01 10:35:44.961, foo, 2016-08-01 10:35:44.961, foo, 0}
2016-08-01 10:35:44,962 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{3, ccc, 110符2飜は？, 自分で数えろ, 3, 2016-08-01 10:35:44.962, foo, 2016-08-01 10:35:44.962, foo, 0}
2016-08-01 10:35:44,965 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{4, ddd, タンヤオ？, そう, 4, 2016-08-01 10:35:44.965, foo, 2016-08-01 10:35:44.965, foo, 0}
2016-08-01 10:35:44,966 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{5, eee2, ピンフ？, そう, 5, 2016-08-01 10:35:44.966, foo, 2016-08-01 10:35:44.966, foo, 0}
2016-08-01 10:35:44,968 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{6, fff, サンアンコウ？, そう, 6, 2016-08-01 10:35:44.968, foo, 2016-08-01 10:35:44.968, foo, 0}
2016-08-01 10:35:44,970 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{7, ggg3, イーペーコウ？, そう, 7, 2016-08-01 10:35:44.969, foo, 2016-08-01 10:35:44.969, foo, 0}
2016-08-01 10:35:44,970 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{8, hhh555, リャンペーコウ？, そう, 8, 2016-08-01 10:35:44.97, foo, 2016-08-01 10:35:44.97, foo, 0}
2016-08-01 10:35:44,971 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{9, iii, サンペーコウはないよね？, 当たり前だ, 9, 2016-08-01 10:35:44.971, foo, 2016-08-01 10:35:44.971, foo, 0}
2016-08-01 10:35:44,971 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{10, jjj, 私はイカサマしません, 実はする, 10, 2016-08-01 10:35:44.971, foo, 2016-08-01 10:35:44.971, foo, 0}
2016-08-01 10:35:44,972 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{11, qwe, 70符3飜は？, 自分で数えろ, 11, 2016-08-01 10:35:44.972, foo, 2016-08-01 10:35:44.972, foo, 0}
2016-08-01 10:35:44,973 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{12, sdf, 20符4飜は？, 自分で数えろ, 12, 2016-08-01 10:35:44.973, foo, 2016-08-01 10:35:44.973, foo, 0}
2016-08-01 10:35:44,973 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{13, dfgsf, 大三元は？, 役満だよ, 13, 2016-08-01 10:35:44.973, foo, 2016-08-01 10:35:44.973, foo, 0}
2016-08-01 10:35:44,974 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{14, ert, タンヤオ？, そう, 14, 2016-08-01 10:35:44.974, foo, 2016-08-01 10:35:44.974, foo, 0}
2016-08-01 10:35:44,974 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{15, fhgf, ピンフ？, そう, 15, 2016-08-01 10:35:44.974, foo, 2016-08-01 10:35:44.974, foo, 0}
2016-08-01 10:35:44,975 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{16, ghj, サンアンコウ？, そう, 16, 2016-08-01 10:35:44.975, foo, 2016-08-01 10:35:44.975, foo, 0}
2016-08-01 10:35:44,975 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{17, tyuffff, サンレンコウ？, そう, 17, 2016-08-01 10:35:44.975, foo, 2016-08-01 10:35:44.975, foo, 0}
2016-08-01 10:35:44,976 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{18, jkl, イーペーコウ？, そう, 18, 2016-08-01 10:35:44.976, foo, 2016-08-01 10:35:44.976, foo, 0}
2016-08-01 10:35:44,977 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{19, ghjfff, 左ハイは？, 痛い, 19, 2016-08-01 10:35:44.977, foo, 2016-08-01 10:35:44.977, foo, 0}
2016-08-01 10:35:44,978 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{20, cvb, 孫権は？, 呉, 20, 2016-08-01 10:35:44.978, foo, 2016-08-01 10:35:44.978, foo, 0}
2016-08-01 10:35:44,988 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SECURITY
2016-08-01 10:35:44,989 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{1, 1, 1234, PLT, 2016-08-01 10:35:44.989, foo, 2016-08-01 10:35:44.989, foo, 0}
2016-08-01 10:35:44,991 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{2, 2, 2345, GLD, 2016-08-01 10:35:44.991, foo, 2016-08-01 10:35:44.991, foo, 0}
2016-08-01 10:35:44,992 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{3, 3, 3456, GLD, 2016-08-01 10:35:44.992, foo, 2016-08-01 10:35:44.992, foo, 0}
2016-08-01 10:35:44,992 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{4, 4, 875, BRZ, 2016-08-01 10:35:44.992, foo, 2016-08-01 10:35:44.992, foo, 0}
2016-08-01 10:35:44,993 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{5, 5, 1111, BRZ, 2016-08-01 10:35:44.993, foo, 2016-08-01 10:35:44.993, foo, 0}
2016-08-01 10:35:44,994 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{6, 6, 5422, SIL, 2016-08-01 10:35:44.993, foo, 2016-08-01 10:35:44.993, foo, 0}
2016-08-01 10:35:44,994 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{7, 7, 24678, SIL, 2016-08-01 10:35:44.994, foo, 2016-08-01 10:35:44.994, foo, 0}
2016-08-01 10:35:44,995 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{8, 8, 234, SIL, 2016-08-01 10:35:44.995, foo, 2016-08-01 10:35:44.995, foo, 0}
2016-08-01 10:35:44,995 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{9, 9, 3, SIL, 2016-08-01 10:35:44.995, foo, 2016-08-01 10:35:44.995, foo, 0}
2016-08-01 10:35:44,996 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{10, 10, 98765, PLT, 2016-08-01 10:35:44.996, foo, 2016-08-01 10:35:44.996, foo, 0}
2016-08-01 10:35:44,996 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{11, 11, 34, GLD, 2016-08-01 10:35:44.996, foo, 2016-08-01 10:35:44.996, foo, 0}
2016-08-01 10:35:44,997 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{12, 12, 532, PLT, 2016-08-01 10:35:44.997, foo, 2016-08-01 10:35:44.997, foo, 0}
2016-08-01 10:35:44,997 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{13, 13, 23678, GLD, 2016-08-01 10:35:44.997, foo, 2016-08-01 10:35:44.997, foo, 0}
2016-08-01 10:35:44,998 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{14, 14, 432, GLD, 2016-08-01 10:35:44.998, foo, 2016-08-01 10:35:44.998, foo, 0}
2016-08-01 10:35:44,998 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{15, 15, 543, BRZ, 2016-08-01 10:35:44.998, foo, 2016-08-01 10:35:44.998, foo, 0}
2016-08-01 10:35:44,999 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{16, 16, 23545, PLT, 2016-08-01 10:35:44.999, foo, 2016-08-01 10:35:44.999, foo, 0}
2016-08-01 10:35:44,999 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{17, 17, 2345, GLD, 2016-08-01 10:35:44.999, foo, 2016-08-01 10:35:44.999, foo, 0}
2016-08-01 10:35:45,000 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{18, 18, 8763, SIL, 2016-08-01 10:35:45.0, foo, 2016-08-01 10:35:45.0, foo, 0}
2016-08-01 10:35:45,000 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{19, 19, 34567, SIL, 2016-08-01 10:35:45.0, foo, 2016-08-01 10:35:45.0, foo, 0}
2016-08-01 10:35:45,001 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{20, 20, 43, GLD, 2016-08-01 10:35:45.001, foo, 2016-08-01 10:35:45.001, foo, 0}
2016-08-01 10:35:45,014 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SERVICE
2016-08-01 10:35:45,014 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{3, null, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123, 2016-08-01 10:35:45.014, foo, 2016-08-01 10:35:45.014, foo}
2016-08-01 10:35:45,015 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{6, SIT, null, 2007/11/11 16:00:00.456, 2016-08-01 10:35:45.015, foo, 2016-08-01 10:35:45.015, foo}
2016-08-01 10:35:45,016 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{13, PRD, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789, 2016-08-01 10:35:45.016, foo, 2016-08-01 10:35:45.016, foo}
2016-08-01 10:35:45,022 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{16, SIT, コバチが２人いるため, 2007/11/13 16:00:00.456, 2016-08-01 10:35:45.022, foo, 2016-08-01 10:35:45.022, foo}
2016-08-01 10:35:45,033 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to MEMBER_WITHDRAWAL
2016-08-01 10:35:45,033 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{1, 1, 2, 2006/12/24 23:59:59}
2016-08-01 10:35:45,034 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{2, 1, 3, 2007/11/11 16:16:16}
2016-08-01 10:35:45,035 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{3, 1, 4, 2006/12/23 22:56:29}
2016-08-01 10:35:45,035 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{4, 1, 5, 2007/11/01 02:13:00}
2016-08-01 10:35:45,036 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{5, 1, 6, 2012/05/24 23:12:59}
2016-08-01 10:35:45,036 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{6, 1, 9, 2005/11/11 16:32:01}
2016-08-01 10:35:45,040 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{7, 1, 15, 2006/01/28 23:59:59}
2016-08-01 10:35:45,042 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{8, 1, 18, 2007/11/09 16:23:00}
2016-08-01 10:35:45,043 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{9, 2, 1, 2009/12/22 23:59:59}
2016-08-01 10:35:45,044 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{10, 2, 3, 2007/11/11 09:01:00}
2016-08-01 10:35:45,046 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{11, 2, 4, 2006/11/23 23:59:59}
2016-08-01 10:35:45,047 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{12, 2, 9, 2012/11/15 12:43:00}
2016-08-01 10:35:45,047 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{13, 2, 14, 2006/12/24 23:59:59}
2016-08-01 10:35:45,050 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{14, 2, 19, 2011/04/01 16:23:01}
2016-08-01 10:35:45,051 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{15, 3, 1, 2006/12/24 23:59:20}
2016-08-01 10:35:45,051 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{16, 3, 2, 2008/05/01 12:23:02}
2016-08-01 10:35:45,052 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{17, 3, 4, 2006/12/24 23:59:21}
2016-08-01 10:35:45,052 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{18, 3, 6, 2009/06/11 17:23:03}
2016-08-01 10:35:45,053 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{19, 3, 9, 2010/12/24 23:59:22}
2016-08-01 10:35:45,053 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{20, 3, 10, 2007/11/01 16:12:04}
2016-08-01 10:35:45,054 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{21, 4, 1, 2006/12/24 23:59:23}
2016-08-01 10:35:45,055 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{22, 4, 2, 2007/11/01 16:23:05}
2016-08-01 10:35:45,057 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{23, 4, 3, 2011/12/24 23:59:24}
2016-08-01 10:35:45,059 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{24, 4, 4, 2007/11/01 16:23:06}
2016-08-01 10:35:45,060 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{25, 4, 5, 2013/05/24 11:59:25}
2016-08-01 10:35:45,062 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{26, 4, 6, 2007/06/21 01:23:57}
2016-08-01 10:35:45,064 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{27, 4, 9, 2006/12/24 23:59:26}
2016-08-01 10:35:45,065 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{28, 4, 11, 2007/11/01 16:23:08}
2016-08-01 10:35:45,066 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{29, 4, 12, 2013/02/24 23:59:27}
2016-08-01 10:35:45,066 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{30, 4, 13, 2012/11/01 16:23:03}
2016-08-01 10:35:45,066 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{31, 4, 14, 2006/07/24 23:59:28}
2016-08-01 10:35:45,067 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{32, 4, 15, 2007/11/01 17:23:10}
2016-08-01 10:35:45,067 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{33, 4, 16, 2007/11/01 16:23:10}
2016-08-01 10:35:45,068 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{34, 4, 17, 2006/07/24 23:59:29}
2016-08-01 10:35:45,069 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{35, 4, 18, 2011/11/01 17:23:11}
2016-08-01 10:35:45,070 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{36, 4, 19, 2007/11/01 16:23:11}
2016-08-01 10:35:45,070 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{37, 5, 1, 2008/07/24 23:59:30}
2016-08-01 10:35:45,071 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{38, 5, 3, 2007/11/01 17:23:12}
2016-08-01 10:35:45,071 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{39, 5, 6, 2007/11/01 16:23:12}
2016-08-01 10:35:45,072 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{40, 6, 1, 2006/07/24 23:59:31}
2016-08-01 10:35:45,072 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{41, 6, 2, 2007/11/01 17:23:13}
2016-08-01 10:35:45,073 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{42, 6, 3, 2007/11/01 16:23:13}
2016-08-01 10:35:45,073 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{43, 6, 4, 2006/07/24 23:52:32}
2016-08-01 10:35:45,074 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{44, 6, 5, 2007/11/01 11:23:14}
2016-08-01 10:35:45,074 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{45, 6, 6, 2007/11/21 06:23:14}
2016-08-01 10:35:45,074 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{46, 8, 1, 2011/07/24 23:52:33}
2016-08-01 10:35:45,075 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{47, 8, 2, 2007/11/01 11:23:15}
2016-08-01 10:35:45,075 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{48, 8, 3, 2007/11/21 06:23:15}
2016-08-01 10:35:45,076 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{49, 9, 1, 2006/07/24 23:52:34}
2016-08-01 10:35:45,076 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{50, 9, 2, 208/11/01 11:23:16}
2016-08-01 10:35:45,077 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{51, 9, 3, 2007/11/21 06:23:16}
2016-08-01 10:35:45,078 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{52, 9, 10, 2006/07/24 23:52:35}
2016-08-01 10:35:45,081 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{53, 9, 20, 2009/11/01 11:23:17}
2016-08-01 10:35:45,081 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{54, 10, 1, 2007/11/21 06:23:17}
2016-08-01 10:35:45,082 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{55, 10, 2, 2006/07/24 23:52:36}
2016-08-01 10:35:45,083 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{56, 10, 3, 2010/11/01 11:23:18}
2016-08-01 10:35:45,083 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{57, 10, 4, 2006/12/21 23:59:59}
2016-08-01 10:35:45,084 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{58, 10, 5, 2007/11/1 16:16:16}
2016-08-01 10:35:45,084 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{59, 10, 6, 2006/08/23 22:56:29}
2016-08-01 10:35:45,085 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{60, 10, 9, 2007/11/01 02:11:00}
2016-08-01 10:35:45,085 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{61, 10, 11, 2012/05/24 23:12:59}
2016-08-01 10:35:45,086 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{62, 10, 12, 2005/11/10 16:32:01}
2016-08-01 10:35:45,086 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{63, 10, 13, 2006/01/28 23:59:59}
2016-08-01 10:35:45,087 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{64, 10, 14, 2007/10/09 16:23:00}
2016-08-01 10:35:45,087 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{65, 10, 15, 2009/12/22 23:59:59}
2016-08-01 10:35:45,090 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{66, 10, 16, 2007/11/01 09:01:00}
2016-08-01 10:35:45,093 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{67, 10, 17, 2006/11/23 23:59:59}
2016-08-01 10:35:45,094 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{68, 10, 18, 2011/11/15 12:43:00}
2016-08-01 10:35:45,098 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{69, 10, 19, 2006/07/24 23:59:59}
2016-08-01 10:35:45,098 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{70, 10, 20, 2011/08/01 16:23:01}
2016-08-01 10:35:45,099 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{71, 11, 12, 2006/09/24 23:59:20}
2016-08-01 10:35:45,099 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{72, 11, 13, 2008/01/01 12:23:02}
2016-08-01 10:35:45,099 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{73, 11, 14, 2006/12/24 23:59:21}
2016-08-01 10:35:45,100 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{74, 11, 15, 2009/02/11 17:23:03}
2016-08-01 10:35:45,100 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{75, 11, 16, 2010/03/24 23:59:22}
2016-08-01 10:35:45,100 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{76, 11, 17, 2007/09/01 16:12:04}
2016-08-01 10:35:45,101 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{77, 11, 19, 2006/12/24 23:59:23}
2016-08-01 10:35:45,101 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{78, 12, 1, 2007/11/01 16:23:05}
2016-08-01 10:35:45,102 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{79, 12, 11, 2011/05/24 23:59:24}
2016-08-01 10:35:45,102 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{80, 12, 13, 2007/11/01 16:23:06}
2016-08-01 10:35:45,102 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{81, 12, 14, 2013/06/24 11:59:25}
2016-08-01 10:35:45,103 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{82, 12, 15, 2007/06/21 01:23:57}
2016-08-01 10:35:45,103 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{83, 12, 19, 2006/12/24 23:59:26}
2016-08-01 10:35:45,103 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{84, 13, 11, 2007/08/01 16:23:08}
2016-08-01 10:35:45,104 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{85, 13, 12, 2013/02/24 23:59:27}
2016-08-01 10:35:45,104 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{86, 13, 14, 2012/11/01 16:23:03}
2016-08-01 10:35:45,105 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{87, 14, 1, 2006/07/24 23:59:28}
2016-08-01 10:35:45,106 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{88, 14, 10, 2012/05/24 23:12:59}
2016-08-01 10:35:45,109 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{89, 14, 11, 2005/11/10 16:32:01}
2016-08-01 10:35:45,110 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{90, 14, 20, 2006/01/28 23:59:59}
2016-08-01 10:35:45,111 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{91, 16, 17, 2007/10/09 16:23:00}
2016-08-01 10:35:45,112 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{92, 17, 16, 2009/12/22 23:59:59}
2016-08-01 10:35:45,112 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{93, 18, 1, 2007/11/01 09:01:00}
2016-08-01 10:35:45,113 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{94, 18, 2, 2006/11/23 23:59:59}
2016-08-01 10:35:45,114 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{95, 18, 3, 2011/11/15 12:43:00}
2016-08-01 10:35:45,115 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{96, 18, 4, 2006/07/24 23:59:59}
2016-08-01 10:35:45,116 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{97, 18, 5, 2011/08/01 16:23:01}
2016-08-01 10:35:45,116 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{98, 18, 6, 2006/09/24 23:59:20}
2016-08-01 10:35:45,117 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{99, 18, 9, 2008/01/01 12:23:02}
2016-08-01 10:35:45,117 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{100, 18, 11, 2006/12/24 23:59:21}
2016-08-01 10:35:45,118 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{101, 18, 12, 2009/02/11 17:23:03}
2016-08-01 10:35:45,118 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{102, 18, 13, 2010/03/24 23:59:22}
2016-08-01 10:35:45,118 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{103, 18, 14, 2007/09/01 16:12:04}
2016-08-01 10:35:45,119 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{104, 18, 15, 2006/12/24 23:59:23}
2016-08-01 10:35:45,119 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{105, 19, 1, 2007/11/01 16:23:05}
2016-08-01 10:35:45,119 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{106, 19, 10, 2011/05/24 23:59:24}
2016-08-01 10:35:45,120 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{107, 19, 11, 2007/11/01 16:23:06}
2016-08-01 10:35:45,120 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{108, 19, 12, 2013/06/24 11:59:25}
2016-08-01 10:35:45,122 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{109, 19, 20, 2013/06/24 11:59:25}
2016-08-01 10:35:45,123 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{110, 20, 10, 2013/06/24 11:59:25}
2016-08-01 10:35:45,125 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{111, 20, 19, 2013/06/24 11:59:25}
2016-08-01 10:35:45,185 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 111 rows are loaded to MEMBER_FOLLOWING
2016-08-01 10:35:45,186 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-08-01 10:35:45,186 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/30-product.xls)
2016-08-01 10:35:45,186 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-08-01 10:35:45,239 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{1, Cold Spring Harbor, BILLYJOEL-01, MCD, PST, 1100, 2016-08-01 10:35:45.239, foo, 2016-08-01 10:35:45.239, foo, 0}
2016-08-01 10:35:45,240 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{2, Piano Man, BILLYJOEL-02, MCD, ONS, 1200, 2016-08-01 10:35:45.24, foo, 2016-08-01 10:35:45.24, foo, 0}
2016-08-01 10:35:45,240 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{3, Streetlife Serenade, BILLYJOEL-03, MCD, ONS, 1300, 2016-08-01 10:35:45.24, foo, 2016-08-01 10:35:45.24, foo, 0}
2016-08-01 10:35:45,241 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{4, Turnstiles, BILLYJOEL-04, MCD, ONS, 1400, 2016-08-01 10:35:45.241, foo, 2016-08-01 10:35:45.241, foo, 0}
2016-08-01 10:35:45,241 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{5, The Stranger, BILLYJOEL-05, MCD, ONS, 1500, 2016-08-01 10:35:45.241, foo, 2016-08-01 10:35:45.241, foo, 0}
2016-08-01 10:35:45,241 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{6, 52nd Street, BILLYJOEL-06, MCD, ONS, 1600, 2016-08-01 10:35:45.241, foo, 2016-08-01 10:35:45.241, foo, 0}
2016-08-01 10:35:45,242 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{7, Glass House, BILLYJOEL-07, MCD, ONS, 1700, 2016-08-01 10:35:45.242, foo, 2016-08-01 10:35:45.242, foo, 0}
2016-08-01 10:35:45,242 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{8, Nylon Curtain, BILLYJOEL-08, MCD, ONS, 1800, 2016-08-01 10:35:45.242, foo, 2016-08-01 10:35:45.242, foo, 0}
2016-08-01 10:35:45,243 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{9, Bridge, BILLYJOEL-09, MCD, ONS, 1900, 2016-08-01 10:35:45.243, foo, 2016-08-01 10:35:45.243, foo, 0}
2016-08-01 10:35:45,243 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{10, Storm Front, BILLYJOEL-10, MCD, ONS, 2000, 2016-08-01 10:35:45.243, foo, 2016-08-01 10:35:45.243, foo, 0}
2016-08-01 10:35:45,244 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{11, River of Dreams, BILLYJOEL-11, MCD, ONS, 2100, 2016-08-01 10:35:45.244, foo, 2016-08-01 10:35:45.244, foo, 0}
2016-08-01 10:35:45,244 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{12, Grand Piano, PIANO-01, INS, ONS, 1400000, 2016-08-01 10:35:45.244, foo, 2016-08-01 10:35:45.244, foo, 0}
2016-08-01 10:35:45,244 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{13, Upright Piano, PIANO-02, INS, ONS, 1100000, 2016-08-01 10:35:45.244, foo, 2016-08-01 10:35:45.244, foo, 0}
2016-08-01 10:35:45,245 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{14, Low Price Flute, FLUTE-01, INS, ONS, 50000, 2016-08-01 10:35:45.245, foo, 2016-08-01 10:35:45.245, foo, 0}
2016-08-01 10:35:45,245 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{15, Silver Flute, FLUTE-02, INS, ONS, 500000, 2016-08-01 10:35:45.245, foo, 2016-08-01 10:35:45.245, foo, 0}
2016-08-01 10:35:45,246 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{16, Gold Flute, FLUTE-03, INS, ONS, 4000000, 2016-08-01 10:35:45.245, foo, 2016-08-01 10:35:45.245, foo, 0}
2016-08-01 10:35:45,246 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{17, Rosemary (100g), HARB-100-01, HEB, ONS, 400, 2016-08-01 10:35:45.246, foo, 2016-08-01 10:35:45.246, foo, 0}
2016-08-01 10:35:45,246 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{18, Lemon Grass (100g), HARB-100-02, HEB, ONS, 380, 2016-08-01 10:35:45.246, foo, 2016-08-01 10:35:45.246, foo, 0}
2016-08-01 10:35:45,247 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{19, Camomile (100g), HARB-100-03, HEB, ONS, 380, 2016-08-01 10:35:45.247, foo, 2016-08-01 10:35:45.247, foo, 0}
2016-08-01 10:35:45,247 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{20, Hatomugi (100g), HARB-100-04, HEB, ONS, 340, 2016-08-01 10:35:45.247, foo, 2016-08-01 10:35:45.247, foo, 0}
2016-08-01 10:35:45,261 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to PRODUCT
2016-08-01 10:35:45,263 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{1, 5, 3, 2006/12/24 23:59:59, 1, 1800, 1, 2016-08-01 10:35:45.263, foo, 2016-08-01 10:35:45.263, foo, 0}
2016-08-01 10:35:45,265 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{2, 15, 7, 2007/11/11 16:16:16, 1, 1700, 1, 2016-08-01 10:35:45.265, foo, 2016-08-01 10:35:45.265, foo, 0}
2016-08-01 10:35:45,266 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{3, 13, 3, 2006/12/23 22:56:29.235, 1, 1800, 1, 2016-08-01 10:35:45.266, foo, 2016-08-01 10:35:45.266, foo, 0}
2016-08-01 10:35:45,266 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{4, 2, 5, 2007/11/01 02:13:00, 2, 1700, 1, 2016-08-01 10:35:45.266, foo, 2016-08-01 10:35:45.266, foo, 0}
2016-08-01 10:35:45,267 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{5, 9, 11, 2008/01/04 23:12:59, 5, 1800, 1, 2016-08-01 10:35:45.267, foo, 2016-08-01 10:35:45.267, foo, 0}
2016-08-01 10:35:45,268 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{6, 20, 2, 2002/01/01 16:32:01, 1, 2000, 1, 2016-08-01 10:35:45.268, foo, 2016-08-01 10:35:45.268, foo, 0}
2016-08-01 10:35:45,271 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{7, 19, 9, 2006/01/28 23:59:59.999, 1, 1000, 0, 2016-08-01 10:35:45.271, foo, 2016-08-01 10:35:45.271, foo, 0}
2016-08-01 10:35:45,271 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{8, 4, 7, 2007/11/09 16:23:00, 1, 1535, 1, 2016-08-01 10:35:45.271, foo, 2016-08-01 10:35:45.271, foo, 0}
2016-08-01 10:35:45,272 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{9, 4, 10, 2006/12/22 23:59:59, 20, 1700, 1, 2016-08-01 10:35:45.272, foo, 2016-08-01 10:35:45.272, foo, 0}
2016-08-01 10:35:45,272 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{10, 2, 10, 2007/11/01 02:13:00.345, 1, 1700, 0, 2016-08-01 10:35:45.272, foo, 2016-08-01 10:35:45.272, foo, 0}
2016-08-01 10:35:45,273 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{11, 5, 2, 2007/11/09 16:23:01, 1, 1800, 1, 2016-08-01 10:35:45.273, foo, 2016-08-01 10:35:45.273, foo, 0}
2016-08-01 10:35:45,273 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{12, 15, 2, 2006/12/22 23:59:12, 1, 1700, 1, 2016-08-01 10:35:45.273, foo, 2016-08-01 10:35:45.273, foo, 0}
2016-08-01 10:35:45,274 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{13, 13, 8, 2007/11/01 02:13:00.346, 1, 1800, 1, 2016-08-01 10:35:45.274, foo, 2016-08-01 10:35:45.274, foo, 0}
2016-08-01 10:35:45,274 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{14, 2, 4, 2007/11/09 16:23:02, 2, 1700, 1, 2016-08-01 10:35:45.274, foo, 2016-08-01 10:35:45.274, foo, 0}
2016-08-01 10:35:45,275 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{15, 9, 11, 2006/12/22 23:59:32, 5, 1800, 1, 2016-08-01 10:35:45.275, foo, 2016-08-01 10:35:45.275, foo, 0}
2016-08-01 10:35:45,275 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{16, 20, 1, 2007/11/01 02:13:00.347, 1, 2000, 1, 2016-08-01 10:35:45.275, foo, 2016-08-01 10:35:45.275, foo, 0}
2016-08-01 10:35:45,276 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{17, 19, 11, 2006/12/22 23:59:33, 2, 1000, 0, 2016-08-01 10:35:45.276, foo, 2016-08-01 10:35:45.276, foo, 0}
2016-08-01 10:35:45,276 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{18, 4, 10, 2007/11/01 02:13:00.348, 1, 1535, 1, 2016-08-01 10:35:45.276, foo, 2016-08-01 10:35:45.276, foo, 0}
2016-08-01 10:35:45,277 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{19, 4, 11, 2007/11/01 02:13:00.348, 4, 1700, 1, 2016-08-01 10:35:45.277, foo, 2016-08-01 10:35:45.277, foo, 0}
2016-08-01 10:35:45,278 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{20, 2, 11, 2006/12/22 23:59:35, 1, 1700, 0, 2016-08-01 10:35:45.278, foo, 2016-08-01 10:35:45.278, foo, 0}
2016-08-01 10:35:45,278 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{21, 2, 15, 2006/12/22 23:59:35, 1, 400000, 0, 2016-08-01 10:35:45.278, foo, 2016-08-01 10:35:45.278, foo, 0}
2016-08-01 10:35:45,279 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{22, 3, 6, 2007/11/01 02:13:00.350, 4, 1800, 1, 2016-08-01 10:35:45.279, foo, 2016-08-01 10:35:45.279, foo, 0}
2016-08-01 10:35:45,280 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{23, 15, 7, 2006/12/22 23:59:36, 1, 1700, 1, 2016-08-01 10:35:45.28, foo, 2016-08-01 10:35:45.28, foo, 0}
2016-08-01 10:35:45,280 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{24, 13, 3, 2007/09/11 12:13:00.351, 1, 1800, 1, 2016-08-01 10:35:45.28, foo, 2016-08-01 10:35:45.28, foo, 0}
2016-08-01 10:35:45,281 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{25, 16, 2, 2006/12/22 23:59:37, 2, 1700, 1, 2016-08-01 10:35:45.281, foo, 2016-08-01 10:35:45.281, foo, 0}
2016-08-01 10:35:45,282 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{26, 3, 4, 2005/12/21 12:13:00.352, 1, 1800, 1, 2016-08-01 10:35:45.282, foo, 2016-08-01 10:35:45.282, foo, 0}
2016-08-01 10:35:45,282 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{27, 2, 8, 2006/12/22 23:59:38, 1, 2000, 1, 2016-08-01 10:35:45.282, foo, 2016-08-01 10:35:45.282, foo, 0}
2016-08-01 10:35:45,283 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{28, 6, 17, 2007/11/01 02:13:00.353, 2, 600, 0, 2016-08-01 10:35:45.283, foo, 2016-08-01 10:35:45.283, foo, 0}
2016-08-01 10:35:45,284 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{29, 4, 4, 2006/12/22 23:59:39, 1, 1535, 1, 2016-08-01 10:35:45.284, foo, 2016-08-01 10:35:45.284, foo, 0}
2016-08-01 10:35:45,284 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{30, 4, 3, 2007/11/01 02:13:00.354, 4, 1700, 1, 2016-08-01 10:35:45.284, foo, 2016-08-01 10:35:45.284, foo, 0}
2016-08-01 10:35:45,285 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{31, 4, 10, 2006/12/22 23:59:40, 1, 1700, 0, 2016-08-01 10:35:45.285, foo, 2016-08-01 10:35:45.285, foo, 0}
2016-08-01 10:35:45,286 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{32, 13, 3, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-08-01 10:35:45.286, foo, 2016-08-01 10:35:45.286, foo, 0}
2016-08-01 10:35:45,286 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{33, 16, 2, 2006/12/22 23:59:41, 2, 1700, 1, 2016-08-01 10:35:45.286, foo, 2016-08-01 10:35:45.286, foo, 0}
2016-08-01 10:35:45,287 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{34, 3, 4, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-08-01 10:35:45.287, foo, 2016-08-01 10:35:45.287, foo, 0}
2016-08-01 10:35:45,293 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{35, 2, 8, 2006/12/12 23:59:42, 1, 2000, 1, 2016-08-01 10:35:45.293, foo, 2016-08-01 10:35:45.293, foo, 0}
2016-08-01 10:35:45,298 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{36, 6, 3, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-08-01 10:35:45.298, foo, 2016-08-01 10:35:45.298, foo, 0}
2016-08-01 10:35:45,300 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{37, 4, 4, 2006/12/12 23:59:43, 1, 1535, 1, 2016-08-01 10:35:45.3, foo, 2016-08-01 10:35:45.3, foo, 0}
2016-08-01 10:35:45,300 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{38, 4, 3, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-08-01 10:35:45.3, foo, 2016-08-01 10:35:45.3, foo, 0}
2016-08-01 10:35:45,301 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{39, 4, 10, 2006/12/12 23:59:44, 1, 1700, 0, 2016-08-01 10:35:45.301, foo, 2016-08-01 10:35:45.301, foo, 0}
2016-08-01 10:35:45,302 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{40, 4, 10, 2007/05/01 12:13:00.359, 1, 1700, 0, 2016-08-01 10:35:45.301, foo, 2016-08-01 10:35:45.301, foo, 0}
2016-08-01 10:35:45,302 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{41, 4, 11, 2007/11/01 02:13:01.354, 4, 1700, 1, 2016-08-01 10:35:45.302, foo, 2016-08-01 10:35:45.302, foo, 0}
2016-08-01 10:35:45,303 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{42, 10, 16, 2006/12/22 23:59:40, 1, 2800000, 1, 2016-08-01 10:35:45.303, foo, 2016-08-01 10:35:45.303, foo, 0}
2016-08-01 10:35:45,314 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{43, 13, 17, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-08-01 10:35:45.314, foo, 2016-08-01 10:35:45.314, foo, 0}
2016-08-01 10:35:45,316 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{44, 16, 14, 2006/12/22 23:59:41, 2, 1700, 1, 2016-08-01 10:35:45.316, foo, 2016-08-01 10:35:45.316, foo, 0}
2016-08-01 10:35:45,316 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{45, 3, 18, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-08-01 10:35:45.316, foo, 2016-08-01 10:35:45.316, foo, 0}
2016-08-01 10:35:45,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{46, 2, 7, 2006/12/12 23:59:42, 1, 2000, 1, 2016-08-01 10:35:45.317, foo, 2016-08-01 10:35:45.317, foo, 0}
2016-08-01 10:35:45,318 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{47, 6, 14, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-08-01 10:35:45.318, foo, 2016-08-01 10:35:45.318, foo, 0}
2016-08-01 10:35:45,318 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{48, 16, 12, 2006/12/12 23:59:43, 1, 100000, 1, 2016-08-01 10:35:45.318, foo, 2016-08-01 10:35:45.318, foo, 0}
2016-08-01 10:35:45,319 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{49, 4, 20, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-08-01 10:35:45.319, foo, 2016-08-01 10:35:45.319, foo, 0}
2016-08-01 10:35:45,320 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{50, 4, 19, 2006/12/12 23:59:44, 1, 1700, 0, 2016-08-01 10:35:45.32, foo, 2016-08-01 10:35:45.32, foo, 0}
2016-08-01 10:35:45,324 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{51, 4, 11, 2007/11/21 02:13:00.354, 4, 1700, 1, 2016-08-01 10:35:45.324, foo, 2016-08-01 10:35:45.324, foo, 0}
2016-08-01 10:35:45,329 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{52, 20, 17, 2006/12/23 23:59:40, 1, 400, 0, 2016-08-01 10:35:45.329, foo, 2016-08-01 10:35:45.329, foo, 0}
2016-08-01 10:35:45,331 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{53, 13, 16, 2007/12/28 12:13:10.355, 1, 600000, 1, 2016-08-01 10:35:45.331, foo, 2016-08-01 10:35:45.331, foo, 0}
2016-08-01 10:35:45,332 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{54, 16, 14, 2006/02/22 23:59:41, 2, 1700, 1, 2016-08-01 10:35:45.332, foo, 2016-08-01 10:35:45.332, foo, 0}
2016-08-01 10:35:45,333 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{55, 3, 3, 2007/07/21 12:13:00.356, 1, 1800, 1, 2016-08-01 10:35:45.333, foo, 2016-08-01 10:35:45.333, foo, 0}
2016-08-01 10:35:45,333 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{56, 2, 8, 2006/12/22 23:59:42, 1, 2000, 1, 2016-08-01 10:35:45.333, foo, 2016-08-01 10:35:45.333, foo, 0}
2016-08-01 10:35:45,333 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{57, 6, 19, 2007/02/01 02:13:00.357, 2, 1000, 0, 2016-08-01 10:35:45.333, foo, 2016-08-01 10:35:45.333, foo, 0}
2016-08-01 10:35:45,334 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{58, 2, 12, 2006/12/12 23:59:43, 1, 4000000, 1, 2016-08-01 10:35:45.334, foo, 2016-08-01 10:35:45.334, foo, 0}
2016-08-01 10:35:45,334 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{59, 4, 18, 2007/05/01 02:03:00.358, 1, 380, 1, 2016-08-01 10:35:45.334, foo, 2016-08-01 10:35:45.334, foo, 0}
2016-08-01 10:35:45,335 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{60, 4, 20, 2006/12/12 23:59:44, 2, 680, 0, 2016-08-01 10:35:45.335, foo, 2016-08-01 10:35:45.335, foo, 0}
2016-08-01 10:35:45,335 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{61, 1, 16, 2008-03-03 06:34:56.000, 3, 12000000, 1, 2016-08-01 10:35:45.335, foo, 2016-08-01 10:35:45.335, foo, 0}
2016-08-01 10:35:45,336 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{62, 1, 2, 2009-06-04 06:34:56.000, 12, 20000, 1, 2016-08-01 10:35:45.336, foo, 2016-08-01 10:35:45.336, foo, 0}
2016-08-01 10:35:45,337 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{63, 1, 6, 2010-09-26 06:34:56.000, 2, 2000, 1, 2016-08-01 10:35:45.337, foo, 2016-08-01 10:35:45.337, foo, 0}
2016-08-01 10:35:45,337 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{64, 1, 8, 2011-03-03 09:45:29.000, 1, 50, 1, 2016-08-01 10:35:45.337, foo, 2016-08-01 10:35:45.337, foo, 0}
2016-08-01 10:35:45,341 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{65, 1, 13, 2012-06-04 09:45:29.000, 1, 1000000, 1, 2016-08-01 10:35:45.341, foo, 2016-08-01 10:35:45.341, foo, 0}
2016-08-01 10:35:45,341 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{66, 1, 13, 2013-09-26 09:45:29.000, 1, 900000, 1, 2016-08-01 10:35:45.341, foo, 2016-08-01 10:35:45.341, foo, 0}
2016-08-01 10:35:45,341 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{67, 1, 5, 2014-03-03 21:02:12.000, 2, 3000, 1, 2016-08-01 10:35:45.341, foo, 2016-08-01 10:35:45.341, foo, 0}
2016-08-01 10:35:45,342 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{68, 1, 17, 2015-06-04 21:02:12.000, 30, 3000, 1, 2016-08-01 10:35:45.342, foo, 2016-08-01 10:35:45.342, foo, 0}
2016-08-01 10:35:45,342 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{69, 1, 17, 2016-09-26 21:02:12.000, 1, 1000, 1, 2016-08-01 10:35:45.342, foo, 2016-08-01 10:35:45.342, foo, 0}
2016-08-01 10:35:45,343 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{70, 1, 17, 2017-03-03 01:11:00.000, 1, 1200, 1, 2016-08-01 10:35:45.343, foo, 2016-08-01 10:35:45.343, foo, 0}
2016-08-01 10:35:45,381 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 70 rows are loaded to PURCHASE
2016-08-01 10:35:45,383 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{1, 1, 1800, 2006/12/25 23:59:59, BAK, 2016-08-01 10:35:45.382, foo, 2016-08-01 10:35:45.382, foo}
2016-08-01 10:35:45,385 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{2, 2, 1700, 2007/11/13 16:16:16, BAK, 2016-08-01 10:35:45.385, foo, 2016-08-01 10:35:45.385, foo}
2016-08-01 10:35:45,385 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{3, 3, 900, 2006/12/23 23:56:29, CRC, 2016-08-01 10:35:45.385, foo, 2016-08-01 10:35:45.385, foo}
2016-08-01 10:35:45,386 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{4, 3, 900, 2006/12/23 23:56:30, HAN, 2016-08-01 10:35:45.386, foo, 2016-08-01 10:35:45.386, foo}
2016-08-01 10:35:45,386 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{5, 4, 1700, 2007/12/01 02:13:00, HAN, 2016-08-01 10:35:45.386, foo, 2016-08-01 10:35:45.386, foo}
2016-08-01 10:35:45,387 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{6, 5, 800.20, 2008/04/04 23:12:59, HAN, 2016-08-01 10:35:45.387, foo, 2016-08-01 10:35:45.387, foo}
2016-08-01 10:35:45,389 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{7, 5, 1000.90, 2008/05/04 23:12:59, CRC, 2016-08-01 10:35:45.389, foo, 2016-08-01 10:35:45.389, foo}
2016-08-01 10:35:45,390 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{8, 6, 1000, 2002/01/01 16:32:01, CRC, 2016-08-01 10:35:45.39, foo, 2016-08-01 10:35:45.39, foo}
2016-08-01 10:35:45,392 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{9, 6, 400.8, 2002/01/01 16:32:01, CRC, 2016-08-01 10:35:45.392, foo, 2016-08-01 10:35:45.392, foo}
2016-08-01 10:35:45,393 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{10, 6, 599.2, 2002/01/01 16:32:01, HAN, 2016-08-01 10:35:45.393, foo, 2016-08-01 10:35:45.393, foo}
2016-08-01 10:35:45,395 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{11, 7, 300, 2006/01/28 23:59:59, CRC, 2016-08-01 10:35:45.395, foo, 2016-08-01 10:35:45.395, foo}
2016-08-01 10:35:45,398 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{12, 8, 535.5, 2007/11/09 16:23:00, BAK, 2016-08-01 10:35:45.398, foo, 2016-08-01 10:35:45.398, foo}
2016-08-01 10:35:45,399 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{13, 8, 999.5, 2014/11/09 16:23:05, BAK, 2016-08-01 10:35:45.399, foo, 2016-08-01 10:35:45.399, foo}
2016-08-01 10:35:45,399 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{14, 9, 1700, 2006/12/22 23:59:59, BAK, 2016-08-01 10:35:45.399, foo, 2016-08-01 10:35:45.399, foo}
2016-08-01 10:35:45,400 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{15, 11, 1799.2, 2014/11/09 16:23:01, CRC, 2016-08-01 10:35:45.4, foo, 2016-08-01 10:35:45.4, foo}
2016-08-01 10:35:45,400 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{16, 11, 0.8, 2014/11/09 16:23:01, HAN, 2016-08-01 10:35:45.4, foo, 2016-08-01 10:35:45.4, foo}
2016-08-01 10:35:45,401 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{17, 12, 1690, 2011/12/22 23:59:12, HAN, 2016-08-01 10:35:45.401, foo, 2016-08-01 10:35:45.401, foo}
2016-08-01 10:35:45,401 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{18, 12, 10, 2011/12/22 23:59:12, CRC, 2016-08-01 10:35:45.401, foo, 2016-08-01 10:35:45.401, foo}
2016-08-01 10:35:45,402 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{19, 13, 1800.7, 2007/11/01 02:13:00, CRC, 2016-08-01 10:35:45.402, foo, 2016-08-01 10:35:45.402, foo}
2016-08-01 10:35:45,403 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{20, 14, 1700, 2008/11/09 16:23:02, BAK, 2016-08-01 10:35:45.403, foo, 2016-08-01 10:35:45.403, foo}
2016-08-01 10:35:45,403 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{21, 15, 300, 2006/12/22 23:59:32, HAN, 2016-08-01 10:35:45.403, foo, 2016-08-01 10:35:45.403, foo}
2016-08-01 10:35:45,403 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{22, 15, 600, 2007/12/22 23:59:32, BAK, 2016-08-01 10:35:45.403, foo, 2016-08-01 10:35:45.403, foo}
2016-08-01 10:35:45,404 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{23, 15, 900, 2008/12/22 23:59:32, HAN, 2016-08-01 10:35:45.404, foo, 2016-08-01 10:35:45.404, foo}
2016-08-01 10:35:45,404 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{24, 16, 2000, 2012/11/01 02:13:00, BAK, 2016-08-01 10:35:45.404, foo, 2016-08-01 10:35:45.404, foo}
2016-08-01 10:35:45,405 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{25, 18, 1535, 2013/11/01 02:13:00, HAN, 2016-08-01 10:35:45.405, foo, 2016-08-01 10:35:45.405, foo}
2016-08-01 10:35:45,405 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{26, 19, 1700, 2007/11/01 02:13:00, HAN, 2016-08-01 10:35:45.405, foo, 2016-08-01 10:35:45.405, foo}
2016-08-01 10:35:45,408 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{27, 20, 5, 2006/12/22 23:59:35, HAN, 2016-08-01 10:35:45.408, foo, 2016-08-01 10:35:45.408, foo}
2016-08-01 10:35:45,409 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{28, 21, 399999, 2006/12/22 23:59:35, BAK, 2016-08-01 10:35:45.409, foo, 2016-08-01 10:35:45.409, foo}
2016-08-01 10:35:45,411 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{29, 22, 1800, 2007/11/01 02:13:00, BAK, 2016-08-01 10:35:45.41, foo, 2016-08-01 10:35:45.41, foo}
2016-08-01 10:35:45,411 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{30, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-08-01 10:35:45.411, foo, 2016-08-01 10:35:45.411, foo}
2016-08-01 10:35:45,412 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{31, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-08-01 10:35:45.411, foo, 2016-08-01 10:35:45.411, foo}
2016-08-01 10:35:45,412 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{32, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-08-01 10:35:45.412, foo, 2016-08-01 10:35:45.412, foo}
2016-08-01 10:35:45,412 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{33, 24, 1000, 2012/09/11 12:13:00, BAK, 2016-08-01 10:35:45.412, foo, 2016-08-01 10:35:45.412, foo}
2016-08-01 10:35:45,414 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{34, 24, 800, 2015/09/11 12:13:00, BAK, 2016-08-01 10:35:45.414, foo, 2016-08-01 10:35:45.414, foo}
2016-08-01 10:35:45,415 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{35, 25, 1700, 2013/12/22 23:59:37, BAK, 2016-08-01 10:35:45.415, foo, 2016-08-01 10:35:45.415, foo}
2016-08-01 10:35:45,415 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{36, 26, 1800, 2005/12/21 12:13:00, BAK, 2016-08-01 10:35:45.415, foo, 2016-08-01 10:35:45.415, foo}
2016-08-01 10:35:45,416 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{37, 27, 2000, 2006/12/22 23:59:38, HAN, 2016-08-01 10:35:45.416, foo, 2016-08-01 10:35:45.416, foo}
2016-08-01 10:35:45,416 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{38, 28, 600, 2007/11/01 02:13:00, BAK, 2016-08-01 10:35:45.416, foo, 2016-08-01 10:35:45.416, foo}
2016-08-01 10:35:45,417 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{39, 29, 1535, 2006/12/22 23:59:39, BAK, 2016-08-01 10:35:45.417, foo, 2016-08-01 10:35:45.417, foo}
2016-08-01 10:35:45,418 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{40, 30, 100, 2010/09/01 02:13:00, HAN, 2016-08-01 10:35:45.418, foo, 2016-08-01 10:35:45.418, foo}
2016-08-01 10:35:45,418 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{41, 30, 200, 2011/10/31 02:13:00, CRC, 2016-08-01 10:35:45.418, foo, 2016-08-01 10:35:45.418, foo}
2016-08-01 10:35:45,419 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{42, 30, 300.75, 2012/11/01 02:13:00, CRC, 2016-08-01 10:35:45.419, foo, 2016-08-01 10:35:45.419, foo}
2016-08-01 10:35:45,419 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{43, 30, 400.25, 2013/12/01 02:13:00, HAN, 2016-08-01 10:35:45.419, foo, 2016-08-01 10:35:45.419, foo}
2016-08-01 10:35:45,420 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{44, 30, 300, 2014/09/01 02:13:00, HAN, 2016-08-01 10:35:45.42, foo, 2016-08-01 10:35:45.42, foo}
2016-08-01 10:35:45,420 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{45, 30, 700, 2014/10/01 02:13:00, HAN, 2016-08-01 10:35:45.42, foo, 2016-08-01 10:35:45.42, foo}
2016-08-01 10:35:45,421 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{46, 31, 1700.85, 2006/12/22 23:59:40, HAN, 2016-08-01 10:35:45.421, foo, 2016-08-01 10:35:45.421, foo}
2016-08-01 10:35:45,423 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{47, 32, 1800, 2009/12/28 12:13:10, HAN, 2016-08-01 10:35:45.423, foo, 2016-08-01 10:35:45.423, foo}
2016-08-01 10:35:45,433 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{48, 33, 1700, 2006/12/22 23:59:41, CRC, 2016-08-01 10:35:45.433, foo, 2016-08-01 10:35:45.433, foo}
2016-08-01 10:35:45,434 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{49, 34, 1800, 2007/05/21 12:13:00, BAK, 2016-08-01 10:35:45.434, foo, 2016-08-01 10:35:45.434, foo}
2016-08-01 10:35:45,435 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{50, 35, 2000, 2006/12/12 23:59:42, CRC, 2016-08-01 10:35:45.435, foo, 2016-08-01 10:35:45.435, foo}
2016-08-01 10:35:45,435 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{51, 36, 300.1, 2012/05/01 02:13:00, CRC, 2016-08-01 10:35:45.435, foo, 2016-08-01 10:35:45.435, foo}
2016-08-01 10:35:45,436 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{52, 36, 300.8, 2013/05/01 02:13:00, HAN, 2016-08-01 10:35:45.436, foo, 2016-08-01 10:35:45.436, foo}
2016-08-01 10:35:45,436 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{53, 36, 300.25, 2014/05/01 02:13:00, HAN, 2016-08-01 10:35:45.436, foo, 2016-08-01 10:35:45.436, foo}
2016-08-01 10:35:45,437 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{54, 37, 1535, 2006/12/12 23:59:43, HAN, 2016-08-01 10:35:45.437, foo, 2016-08-01 10:35:45.437, foo}
2016-08-01 10:35:45,437 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{55, 38, 1700, 2007/05/01 02:03:00, HAN, 2016-08-01 10:35:45.437, foo, 2016-08-01 10:35:45.437, foo}
2016-08-01 10:35:45,438 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{56, 40, 128, 2007/05/01 12:13:00, BAK, 2016-08-01 10:35:45.438, foo, 2016-08-01 10:35:45.438, foo}
2016-08-01 10:35:45,439 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{57, 40, 256, 2013/05/01 12:13:00, BAK, 2016-08-01 10:35:45.439, foo, 2016-08-01 10:35:45.439, foo}
2016-08-01 10:35:45,442 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{58, 40, 512, 2009/05/01 12:13:00, CRC, 2016-08-01 10:35:45.442, foo, 2016-08-01 10:35:45.442, foo}
2016-08-01 10:35:45,443 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{59, 41, 1700, 2007/11/01 02:13:00, HAN, 2016-08-01 10:35:45.443, foo, 2016-08-01 10:35:45.443, foo}
2016-08-01 10:35:45,443 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{60, 42, 30000000, 2014/03/22 21:59:40, HAN, 2016-08-01 10:35:45.443, foo, 2016-08-01 10:35:45.443, foo}
2016-08-01 10:35:45,444 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{61, 43, 1800, 2006/12/28 12:13:10, BAK, 2016-08-01 10:35:45.444, foo, 2016-08-01 10:35:45.444, foo}
2016-08-01 10:35:45,444 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{62, 44, 1700, 2006/12/22 23:59:41, BAK, 2016-08-01 10:35:45.444, foo, 2016-08-01 10:35:45.444, foo}
2016-08-01 10:35:45,445 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{63, 45, 1800, 2007/05/21 12:13:00, CRC, 2016-08-01 10:35:45.445, foo, 2016-08-01 10:35:45.445, foo}
2016-08-01 10:35:45,445 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{64, 46, 2000, 2010/12/12 23:59:42, BAK, 2016-08-01 10:35:45.445, foo, 2016-08-01 10:35:45.445, foo}
2016-08-01 10:35:45,446 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{65, 48, 90000, 2006/12/12 23:59:43, HAN, 2016-08-01 10:35:45.446, foo, 2016-08-01 10:35:45.446, foo}
2016-08-01 10:35:45,446 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{66, 48, 10000, 2006/12/12 23:59:43, BAK, 2016-08-01 10:35:45.446, foo, 2016-08-01 10:35:45.446, foo}
2016-08-01 10:35:45,447 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{67, 49, 1700.66, 2007/05/01 02:03:00, HAN, 2016-08-01 10:35:45.447, foo, 2016-08-01 10:35:45.447, foo}
2016-08-01 10:35:45,447 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{68, 51, 1700, 2007/11/21 02:13:00, BAK, 2016-08-01 10:35:45.447, foo, 2016-08-01 10:35:45.447, foo}
2016-08-01 10:35:45,448 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{69, 52, 100, 2006/12/23 23:59:40, BAK, 2016-08-01 10:35:45.448, foo, 2016-08-01 10:35:45.448, foo}
2016-08-01 10:35:45,448 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{70, 52, 40, 2007/12/23 23:59:40, HAN, 2016-08-01 10:35:45.448, foo, 2016-08-01 10:35:45.448, foo}
2016-08-01 10:35:45,449 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{71, 52, 40, 2008/12/23 23:59:40, HAN, 2016-08-01 10:35:45.449, foo, 2016-08-01 10:35:45.449, foo}
2016-08-01 10:35:45,449 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{72, 52, 40, 2009/12/23 23:59:40, HAN, 2016-08-01 10:35:45.449, foo, 2016-08-01 10:35:45.449, foo}
2016-08-01 10:35:45,450 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{73, 52, 40, 2010/12/23 23:59:40, BAK, 2016-08-01 10:35:45.45, foo, 2016-08-01 10:35:45.45, foo}
2016-08-01 10:35:45,450 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{74, 52, 40, 2011/12/23 23:59:40, CRC, 2016-08-01 10:35:45.45, foo, 2016-08-01 10:35:45.45, foo}
2016-08-01 10:35:45,450 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{75, 52, 40, 2012/12/23 23:59:40, BAK, 2016-08-01 10:35:45.45, foo, 2016-08-01 10:35:45.45, foo}
2016-08-01 10:35:45,451 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{76, 52, 40, 2013/12/23 23:59:40, HAN, 2016-08-01 10:35:45.451, foo, 2016-08-01 10:35:45.451, foo}
2016-08-01 10:35:45,451 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{77, 52, 40, 2014/12/23 23:59:40, HAN, 2016-08-01 10:35:45.451, foo, 2016-08-01 10:35:45.451, foo}
2016-08-01 10:35:45,457 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{78, 52, 40, 2015/12/23 23:59:40, HAN, 2016-08-01 10:35:45.457, foo, 2016-08-01 10:35:45.457, foo}
2016-08-01 10:35:45,460 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{79, 53, 600000, 2007/12/28 12:13:10, BAK, 2016-08-01 10:35:45.46, foo, 2016-08-01 10:35:45.46, foo}
2016-08-01 10:35:45,462 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{80, 54, 1700.42, 2008/02/22 23:59:41, CRC, 2016-08-01 10:35:45.462, foo, 2016-08-01 10:35:45.462, foo}
2016-08-01 10:35:45,465 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{81, 55, 1600, 2012/07/21 12:13:00, HAN, 2016-08-01 10:35:45.465, foo, 2016-08-01 10:35:45.465, foo}
2016-08-01 10:35:45,465 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{82, 55, 200, 2008/07/21 12:13:00, CRC, 2016-08-01 10:35:45.465, foo, 2016-08-01 10:35:45.465, foo}
2016-08-01 10:35:45,466 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{83, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-08-01 10:35:45.466, foo, 2016-08-01 10:35:45.466, foo}
2016-08-01 10:35:45,466 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{84, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-08-01 10:35:45.466, foo, 2016-08-01 10:35:45.466, foo}
2016-08-01 10:35:45,467 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{85, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-08-01 10:35:45.467, foo, 2016-08-01 10:35:45.467, foo}
2016-08-01 10:35:45,468 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{86, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-08-01 10:35:45.467, foo, 2016-08-01 10:35:45.467, foo}
2016-08-01 10:35:45,468 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{87, 57, 999, 2014/02/01 02:13:00, HAN, 2016-08-01 10:35:45.468, foo, 2016-08-01 10:35:45.468, foo}
2016-08-01 10:35:45,468 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{88, 58, 4000000, 2006/12/12 23:59:43, HAN, 2016-08-01 10:35:45.468, foo, 2016-08-01 10:35:45.468, foo}
2016-08-01 10:35:45,469 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{89, 59, 380.77, 2013/05/01 02:03:00, CRC, 2016-08-01 10:35:45.469, foo, 2016-08-01 10:35:45.469, foo}
2016-08-01 10:35:45,469 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{90, 60, 675.88, 2006/12/12 23:59:44, BAK, 2016-08-01 10:35:45.469, foo, 2016-08-01 10:35:45.469, foo}
2016-08-01 10:35:45,470 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{91, 61, 12000000, 2008/03/03 06:34:56, HAN, 2016-08-01 10:35:45.469, foo, 2016-08-01 10:35:45.469, foo}
2016-08-01 10:35:45,470 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{92, 62, 20000, 2009/06/04 06:34:56, HAN, 2016-08-01 10:35:45.47, foo, 2016-08-01 10:35:45.47, foo}
2016-08-01 10:35:45,472 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{93, 63, 2000, 2010/09/26 06:34:56, HAN, 2016-08-01 10:35:45.472, foo, 2016-08-01 10:35:45.472, foo}
2016-08-01 10:35:45,473 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{94, 64, 50, 2011/03/03 09:45:29, BAK, 2016-08-01 10:35:45.472, foo, 2016-08-01 10:35:45.472, foo}
2016-08-01 10:35:45,473 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{95, 65, 1000000, 2012/06/04 09:45:29, BAK, 2016-08-01 10:35:45.473, foo, 2016-08-01 10:35:45.473, foo}
2016-08-01 10:35:45,473 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{96, 66, 900000, 2013/09/26 09:45:29, BAK, 2016-08-01 10:35:45.473, foo, 2016-08-01 10:35:45.473, foo}
2016-08-01 10:35:45,476 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{97, 67, 3000, 2014/03/03 21:02:12, CRC, 2016-08-01 10:35:45.476, foo, 2016-08-01 10:35:45.476, foo}
2016-08-01 10:35:45,477 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{98, 68, 3000, 2015/06/04 21:02:12, CRC, 2016-08-01 10:35:45.477, foo, 2016-08-01 10:35:45.477, foo}
2016-08-01 10:35:45,477 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{99, 69, 1000, 2016/09/26 21:02:12, CRC, 2016-08-01 10:35:45.477, foo, 2016-08-01 10:35:45.477, foo}
2016-08-01 10:35:45,478 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{100, 70, 1200, 2017/03/03 01:11:00, HAN, 2016-08-01 10:35:45.478, foo, 2016-08-01 10:35:45.478, foo}
2016-08-01 10:35:45,529 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 100 rows are loaded to PURCHASE_PAYMENT
2016-08-01 10:35:45,531 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():378) - ...Checking implicit set of classification
2016-08-01 10:35:45,542 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-08-01 10:35:45,549 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-08-01 10:35:45,569 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-08-01 10:35:45,572 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-08-01 10:35:45,575 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-08-01 10:35:45,578 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-08-01 10:35:45,587 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-08-01 10:35:45,595 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-08-01 10:35:45,604 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-08-01 10:35:45,605 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct MOBILE_LOGIN_FLG from MEMBER_LOGIN where MOBILE_LOGIN_FLG not in (1, 0)
2016-08-01 10:35:45,606 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_COMPLETE_FLG from PURCHASE where PAYMENT_COMPLETE_FLG not in (1, 0)
2016-08-01 10:35:45,607 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_METHOD_CODE from PURCHASE_PAYMENT where PAYMENT_METHOD_CODE not in ('HAN', 'BAK', 'CRC')
2016-08-01 10:35:45,610 [main] INFO  (DfTakeFinallyProcess#takeFinally():219) - 
2016-08-01 10:35:45,610 [main] INFO  (DfTakeFinallyProcess#takeFinally():220) - * * * * * * * **
2016-08-01 10:35:45,610 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - *              *
2016-08-01 10:35:45,611 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * Take Finally *
2016-08-01 10:35:45,611 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2016-08-01 10:35:45,611 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * * * * * * * **
2016-08-01 10:35:45,616 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: take-finally.sql
2016-08-01 10:35:45,617 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Member addresses should be only one at any time.
-- - - - - - - - - - -/
select adr.MEMBER_ADDRESS_ID, adr.MEMBER_ID
     , adr.VALID_BEGIN_DATE, adr.VALID_END_DATE
     , adr.ADDRESS
  from MEMBER_ADDRESS adr
 where exists (select subadr.MEMBER_ADDRESS_ID
                 from MEMBER_ADDRESS subadr
                where subadr.MEMBER_ID = adr.MEMBER_ID
                  and subadr.VALID_BEGIN_DATE > adr.VALID_BEGIN_DATE
                  -- 有効期間が一日だけ重複しているパターンも検出
                  and subadr.VALID_BEGIN_DATE <= adr.VALID_END_DATE
       )
2016-08-01 10:35:45,619 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 正式会員日時を持ってる仮会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'PRV'
   and mem.FORMALIZED_DATETIME is not NULL
2016-08-01 10:35:45,626 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- まだ生まれていない会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.BIRTHDATE > now()
2016-08-01 10:35:45,629 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 退会会員が退会情報を持っていることをアサート
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'WDL'
   and not exists (select wdl.MEMBER_ID
                     from MEMBER_WITHDRAWAL wdl
                    where wdl.MEMBER_ID = mem.MEMBER_ID
       )
2016-08-01 10:35:45,631 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=4 failure=0
2016-08-01 10:35:45,631 [main] INFO  (DfSqlFileFireMan#fire():89) - {Take Finally}: success=4 failure=0 (in 1 files)
2016-08-01 10:35:45,632 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-08-01 10:35:45,635 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s038ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = root
    props  = {user=root, password=Hy19920423}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=50 failure=0 (in 3 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql
  o replace-schema-50-procedure.sql

 {Load Data}: loaded-files=3
  (common)
  o 10-master.xls
  (ut)
  o 20-member.xls
  o 30-product.xls

 {Take Finally}: success=4 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2016-08-01 10:40:52,250 [main] INFO  (DfReplaceSchemaTask#begin():91) - +------------------------------------------+
2016-08-01 10:40:52,252 [main] INFO  (DfReplaceSchemaTask#begin():92) - |                                          |
2016-08-01 10:40:52,252 [main] INFO  (DfReplaceSchemaTask#begin():93) - |              ReplaceSchema               |
2016-08-01 10:40:52,255 [main] INFO  (DfReplaceSchemaTask#begin():101) - |                                          |
2016-08-01 10:40:52,255 [main] INFO  (DfReplaceSchemaTask#begin():102) - +------------------------------------------+
2016-08-01 10:40:52,257 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():342) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2016-08-01 10:40:52,952 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2016-08-01 10:40:52,952 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2016-08-01 10:40:52,952 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/maihamadb
2016-08-01 10:40:52,952 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = root
2016-08-01 10:40:52,958 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2016-08-01 10:40:53,219 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.7.13
2016-08-01 10:40:53,219 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.33 ( Revision: alexander.soklakov@oracle.com-20140908134200-8ukofe1izi0r2b63 ) for JDBC 4.0
2016-08-01 10:40:53,236 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2016-08-01 10:40:53,237 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2016-08-01 10:40:53,237 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2016-08-01 10:40:53,238 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2016-08-01 10:40:53,238 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2016-08-01 10:40:53,239 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2016-08-01 10:40:53,260 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-08-01 10:40:53,261 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-08-01 10:40:53,261 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-08-01 10:40:53,301 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_ADDRESS
2016-08-01 10:40:53,306 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_FOLLOWING
2016-08-01 10:40:53,317 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_LOGIN
2016-08-01 10:40:53,327 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_SECURITY
2016-08-01 10:40:53,331 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_SERVICE
2016-08-01 10:40:53,341 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table MEMBER_WITHDRAWAL
2016-08-01 10:40:53,366 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - truncate table PURCHASE_PAYMENT
2016-08-01 10:40:53,394 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER drop foreign key FK_MEMBER_MEMBER_STATUS
2016-08-01 10:40:53,424 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_ADDRESS drop foreign key FK_MEMBER_ADDRESS_MEMBER
2016-08-01 10:40:53,440 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_ADDRESS drop foreign key FK_MEMBER_ADDRESS_REGION
2016-08-01 10:40:53,461 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_FOLLOWING drop foreign key FK_MEMBER_FOLLOWING_MY_MEMBER
2016-08-01 10:40:53,481 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_FOLLOWING drop foreign key FK_MEMBER_FOLLOWING_YOUR_MEMBER
2016-08-01 10:40:53,501 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_LOGIN drop foreign key FK_MEMBER_LOGIN_MEMBER_STATUS
2016-08-01 10:40:53,523 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_LOGIN drop foreign key FK_MEMBER_LOGIN_MEMBER
2016-08-01 10:40:53,550 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_SECURITY drop foreign key FK_MEMBER_SECURITY_MEMBER
2016-08-01 10:40:53,567 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_SERVICE drop foreign key FK_MEMBER_SERVICE_MEMBER
2016-08-01 10:40:53,585 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_SERVICE drop foreign key FK_MEMBER_SERVICE_SERVICE_RANK_CODE
2016-08-01 10:40:53,602 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_WITHDRAWAL drop foreign key FK_MEMBER_WITHDRAWAL_MEMBER
2016-08-01 10:40:53,620 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table MEMBER_WITHDRAWAL drop foreign key FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON
2016-08-01 10:40:53,637 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PRODUCT drop foreign key FK_PRODUCT_PRODUCT_CATEGORY
2016-08-01 10:40:53,653 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PRODUCT drop foreign key FK_PRODUCT_PRODUCT_STATUS
2016-08-01 10:40:53,669 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PRODUCT_CATEGORY drop foreign key FK_PRODUCT_CATEGORY_PARENT
2016-08-01 10:40:53,689 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PURCHASE drop foreign key FK_PURCHASE_MEMBER
2016-08-01 10:40:53,709 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PURCHASE drop foreign key FK_PURCHASE_PRODUCT
2016-08-01 10:40:53,730 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - alter table PURCHASE_PAYMENT drop foreign key FK_PURCHASE_PAYMENT_PURCHASE
2016-08-01 10:40:53,754 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER
2016-08-01 10:40:53,761 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_ADDRESS
2016-08-01 10:40:53,764 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_FOLLOWING
2016-08-01 10:40:53,769 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_LOGIN
2016-08-01 10:40:53,772 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_SECURITY
2016-08-01 10:40:53,781 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_SERVICE
2016-08-01 10:40:53,787 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_STATUS
2016-08-01 10:40:53,791 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table MEMBER_WITHDRAWAL
2016-08-01 10:40:53,797 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PRODUCT
2016-08-01 10:40:53,800 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PRODUCT_CATEGORY
2016-08-01 10:40:53,804 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PRODUCT_STATUS
2016-08-01 10:40:53,807 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PURCHASE
2016-08-01 10:40:53,819 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table PURCHASE_PAYMENT
2016-08-01 10:40:53,823 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table REGION
2016-08-01 10:40:53,828 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table SERVICE_RANK
2016-08-01 10:40:53,831 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop table WITHDRAWAL_REASON
2016-08-01 10:40:53,891 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop procedure SP_IN_OUT_PARAMETER
2016-08-01 10:40:53,897 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():609) - drop procedure SP_RETURN_RESULT_SET
2016-08-01 10:40:53,898 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2016-08-01 10:40:53,899 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2016-08-01 10:40:53,899 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2016-08-01 10:40:53,899 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2016-08-01 10:40:53,899 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2016-08-01 10:40:53,900 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2016-08-01 10:40:53,903 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-00-system.sql
2016-08-01 10:40:53,905 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2016-08-01 10:40:53,906 [main] INFO  (DfCreateSchemaProcess$1#dispatch():295) - ...Creating a connection to system
2016-08-01 10:40:53,907 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():520) - ...Creating a connection for additional user: root
2016-08-01 10:40:53,919 [main] INFO  (DfCreateSchemaProcess$1#dispatch():321) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2016-08-01 10:40:53,921 [main] INFO  (DfCreateSchemaProcess$1#dispatch():323) -  -> Can't create database 'maihamadb'; database exists
2016-08-01 10:40:53,923 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():433) - ...Reviving the user 'system' until the end of this SQL file
2016-08-01 10:40:53,923 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on maihamadb.*
  to root@localhost identified by 'Hy19920423'
2016-08-01 10:40:53,932 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2016-08-01 10:40:53,937 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-08-01 10:40:53,937 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-10-basic.sql
2016-08-01 10:40:53,938 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():370) - ...Saying good-bye to the user 'system' again
2016-08-01 10:40:53,938 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():374) - ...Clearing revived users
2016-08-01 10:40:53,938 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():381) - ...Coming back to the main user from the user 'system'
2016-08-01 10:40:53,944 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER(
    MEMBER_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員ID: 会員を識別するID。連番として基本的に自動採番される。
（会員IDだけに限らず）採番方法はDBMSによって変わる。',
    MEMBER_NAME VARCHAR(160) NOT NULL COMMENT '会員名称: 会員のフルネームの名称。',
    MEMBER_ACCOUNT VARCHAR(50) NOT NULL COMMENT '会員アカウント: 会員がログイン時に利用するアカウントNO。',
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード',
    FORMALIZED_DATETIME DATETIME COMMENT '正式会員日時: 会員が正式に確定した日時。一度確定したら更新されない。
仮会員のときはnull。',
    BIRTHDATE DATE COMMENT '生年月日: 必須項目ではないので、このデータがない会員もいる。',
    REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時: レコードが登録された日時。共通カラムの一つ。',
    REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ: レコードを登録したユーザ。共通カラムの一つ。',
    UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時: レコードが（最後に）更新された日時。共通カラムの一つ。',
    UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ: レコードを更新したユーザ。',
    VERSION_NO BIGINT NOT NULL COMMENT 'バージョンNO: レコードのバージョンを示すNO。
更新回数と等しく、主に排他制御のために利用される。',
    PRIMARY KEY (MEMBER_ID),
    UNIQUE (MEMBER_ACCOUNT)
) COMMENT='会員: 会員登録時にデータが登録される。
基本的に物理削除はなく、退会したらステータスが退会会員になる。'
2016-08-01 10:40:53,972 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_ADDRESS(
    MEMBER_ADDRESS_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員住所ID: 会員住所を識別するID。
履歴分も含むテーブルなので、これ自体はFKではない。',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
履歴分を含むため、これだけではユニークにはならない。',
    VALID_BEGIN_DATE DATE NOT NULL COMMENT '有効開始日: 一つの有効期間の開始を示す日付。
前の有効終了日の次の日の値が格納される。',
    VALID_END_DATE DATE NOT NULL COMMENT '有効終了日: 有効期間の終了日。
次の有効開始日の一日前の値が格納される。
ただし、次の有効期間がない場合は 9999/12/31 となる。',
    ADDRESS VARCHAR(200) NOT NULL COMMENT '住所: まるごと住所',
    REGION_ID INTEGER NOT NULL COMMENT '地域ID: 地域を参照するID。
ここでは特に住所の内容と連動しているわけではない。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ADDRESS_ID),
    UNIQUE (MEMBER_ID, VALID_BEGIN_DATE)
) COMMENT='会員住所情報: 会員の住所に関する情報。
同時に有効期間ごとに履歴管理されている。'
2016-08-01 10:40:53,999 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_LOGIN(
    MEMBER_LOGIN_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員ログインID',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID',
    LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時: ログインした瞬間の日時。',
    MOBILE_LOGIN_FLG INTEGER NOT NULL COMMENT 'モバイルログインフラグ: モバイル機器からのログインか否か。',
    LOGIN_MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT 'ログイン会員ステータスコード: ログイン時の会員ステータス',
    PRIMARY KEY (MEMBER_LOGIN_ID),
    UNIQUE (MEMBER_ID, LOGIN_DATETIME)
) COMMENT='会員ログイン情報: ログインするたびに登録されるログイン履歴。'
2016-08-01 10:40:54,031 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SECURITY(
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: そのまま one-to-one を構成するためのFKとなる。',
    LOGIN_PASSWORD VARCHAR(50) NOT NULL COMMENT 'ログインパスワード: ログイン時に利用するパスワード。
本当は良くないが、Exampleなのでひとまず暗号化していない。',
    REMINDER_QUESTION VARCHAR(50) NOT NULL COMMENT 'リマインダ質問: パスワードを忘れた際のリマインダ機能における質問の内容。',
    REMINDER_ANSWER VARCHAR(50) NOT NULL COMMENT 'リマインダ回答: パスワードを忘れた際のリマインダ機能における質問の答え。',
    REMINDER_USE_COUNT INTEGER NOT NULL COMMENT 'リマインダ回数: 忘れっぽい人を分析するためのもの。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある'
2016-08-01 10:40:54,053 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SERVICE(
	MEMBER_SERVICE_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員サービスID: 代理キー。律儀にIDの役割を分ける',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。ユニークなので、会員とは one-to-one の関係に。',
    SERVICE_POINT_COUNT INTEGER NOT NULL COMMENT 'サービスポイント数: 会員が現在利用できるサービスポイントの数。
基本的に、購入時には増えてポイントを使ったら減る。',
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを参照するコード。
どんなランクがあるのかドキドキですね。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_SERVICE_ID),
    UNIQUE (MEMBER_ID)
) COMMENT='会員サービス: 会員のサービス情報（ポイントサービスなど）。'
2016-08-01 10:40:54,068 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_WITHDRAWAL(
    MEMBER_ID INTEGER NOT NULL,
    WITHDRAWAL_REASON_CODE CHAR(3) COMMENT '退会理由コード: 退会した定型理由を参照するコード。
何も言わずに退会する会員もいるので必須項目ではない。',
    WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト: 会員がフリーテキストで入力できる退会理由。
もう言いたいこと言ってもらう感じ。',
    WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT '退会日時: 退会した瞬間の日時。
正式会員日時と違い、こっちはone-to-oneの別テーブルで。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員退会情報: 退会会員の退会に関する詳細な情報。
退会会員のみデータが存在する。'
2016-08-01 10:40:54,083 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE(
    PURCHASE_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入ID: 連番',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
購入を識別する自然キー（複合ユニーク制約）の筆頭要素。',
    PRODUCT_ID INTEGER NOT NULL COMMENT '商品ID: 商品を参照するID。',
    PURCHASE_DATETIME DATETIME NOT NULL COMMENT '購入日時: 購入した瞬間の日時。',
    PURCHASE_COUNT INTEGER NOT NULL COMMENT '購入数量: 購入した商品の（一回の購入における）数量。',
    PURCHASE_PRICE INTEGER NOT NULL COMMENT '購入価格: 購入によって実際に会員が支払った（支払う予定の）価格。
基本は商品の定価に購入数量を掛けたものになるが、
ポイント利用や割引があったりと必ずしもそうはならない。',
    PAYMENT_COMPLETE_FLG INTEGER NOT NULL COMMENT '支払完了フラグ: この購入に関しての支払いが完了しているか否か。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PURCHASE_ID),
    UNIQUE (MEMBER_ID, PRODUCT_ID, PURCHASE_DATETIME),
    KEY (MEMBER_ID),
    KEY (PRODUCT_ID)
) COMMENT='購入: 一つの商品に対する一回の購入を表現する。
一回の購入で一つの商品を複数個買うこともある。'
2016-08-01 10:40:54,102 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE_PAYMENT(
    PURCHASE_PAYMENT_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入支払ID: 連番',
    PURCHASE_ID BIGINT NOT NULL COMMENT '購入ID: 支払い対象の購入へのID',
    PAYMENT_AMOUNT DECIMAL(10,2) NOT NULL COMMENT '支払金額: 支払った金額。さて、小数点なのはなぜでしょう？',
    PAYMENT_DATETIME DATETIME NOT NULL COMMENT '支払日時: 支払ったときの日時',
    PAYMENT_METHOD_CODE CHAR(3) NOT NULL COMMENT '支払方法コード: 手渡しや銀行振込など',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (PURCHASE_PAYMENT_ID)
) COMMENT='購入支払: 購入に対する支払。
分割払いもできるのでmanyとなり、会員からの孫テーブルのテストができてうれしい。'
2016-08-01 10:40:54,116 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT(
    PRODUCT_ID INTEGER AUTO_INCREMENT NOT NULL,
    PRODUCT_NAME VARCHAR(50) NOT NULL COMMENT '商品名称',
    PRODUCT_HANDLE_CODE VARCHAR(100) NOT NULL COMMENT '商品ハンドルコード: 商品を識別する業務上のコード。',
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL,
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL,
    REGULAR_PRICE INTEGER NOT NULL COMMENT '定価',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PRODUCT_ID),
    UNIQUE (PRODUCT_HANDLE_CODE)
) COMMENT='商品'
2016-08-01 10:40:54,153 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_CATEGORY(
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL COMMENT '商品カテゴリコード',
    PRODUCT_CATEGORY_NAME VARCHAR(50) NOT NULL COMMENT '商品カテゴリ名称',
    PARENT_CATEGORY_CODE CHAR(3) COMMENT '親カテゴリコード: 最上位の場合はデータなし。',
    PRIMARY KEY (PRODUCT_CATEGORY_CODE)
) COMMENT='商品カテゴリ: 商品のカテゴリを表現するマスタ。
自己参照の階層になっている。'
2016-08-01 10:40:54,169 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_STATUS(
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL COMMENT '商品ステータスコード',
    PRODUCT_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '商品ステータス名称',
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (PRODUCT_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='商品ステータス'
2016-08-01 10:40:54,184 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table REGION(
    REGION_ID INTEGER NOT NULL COMMENT '地域ID',
    REGION_NAME VARCHAR(50) NOT NULL COMMENT '地域名称',
    PRIMARY KEY (REGION_ID)
) COMMENT='地域: 主に会員の住所に対応する地域。
かなりざっくりした感じではある。'
2016-08-01 10:40:54,202 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table SERVICE_RANK(
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを識別するコード。',
    SERVICE_RANK_NAME VARCHAR(50) NOT NULL COMMENT 'サービスランク名称: サービスランクの名称。
（ゴールドとかプラチナとか基本的には威厳のある名前）',
    SERVICE_POINT_INCIDENCE NUMERIC(5, 3) NOT NULL COMMENT 'サービスポイント発生率: 購入ごとのサービスポイントの発生率。
購入価格にこの値をかけた数が発生ポイント。',
    NEW_ACCEPTABLE_FLG INTEGER NOT NULL COMMENT '新規受け入れ可能フラグ: このランクへの新規受け入れができるかどうか。',
    DESCRIPTION VARCHAR(200) NOT NULL,
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (SERVICE_RANK_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='サービスランク: 会員のサービスレベルを表現するランク。
（ゴールドとかプラチナとか）'
2016-08-01 10:40:54,221 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_STATUS(
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード: 会員ステータスを識別するコード。',
    MEMBER_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '会員ステータス名称',
    DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明: 会員ステータスそれぞれの説明。
気の利いた説明があるとディベロッパーがとても助かる。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順: UI上のステータスの表示順を示すNO。
並べるときは、このカラムに対して昇順のソート条件にする。',
    PRIMARY KEY (MEMBER_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='会員ステータス'
2016-08-01 10:40:54,238 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table WITHDRAWAL_REASON(
    WITHDRAWAL_REASON_CODE CHAR(3) NOT NULL COMMENT '退会理由コード',
    WITHDRAWAL_REASON_TEXT TEXT NOT NULL COMMENT '退会理由テキスト: 退会理由の内容。テキスト形式なので目いっぱい書けるが、
そうするとUI側できれいに見せるのが大変でしょうね。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順',
    PRIMARY KEY (WITHDRAWAL_REASON_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='退会理由: 会員に選ばせる定型的な退会理由のマスタ。'
2016-08-01 10:40:54,253 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_FOLLOWING(
    MEMBER_FOLLOWING_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員フォローイングID: 連番',
    MY_MEMBER_ID INTEGER NOT NULL COMMENT 'わたし: 気になった人がいて...勇気を振り絞った会員のID。',
    YOUR_MEMBER_ID INTEGER NOT NULL COMMENT 'あなた: いきなりのアクションに...ちょっと心揺らいだ会員のID。',
    FOLLOW_DATETIME DATETIME NOT NULL COMMENT 'その瞬間: ふりかえるとちょっと恥ずかしい気持ちになる日時',
    PRIMARY KEY (MEMBER_FOLLOWING_ID),
    UNIQUE (MY_MEMBER_ID, YOUR_MEMBER_ID)
) COMMENT='会員フォローイング: とある会員が他の会員をフォローできる。すると、フォローした会員の購入履歴が閲覧できる。'
2016-08-01 10:40:54,271 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER add constraint FK_MEMBER_MEMBER_STATUS 
    foreign key (MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-08-01 10:40:54,296 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-08-01 10:40:54,325 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_REGION 
    foreign key (REGION_ID) references REGION (REGION_ID)
2016-08-01 10:40:54,353 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER_STATUS 
    foreign key (LOGIN_MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2016-08-01 10:40:54,376 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-08-01 10:40:54,404 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-08-01 10:40:54,428 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_SERVICE_RANK_CODE 
    foreign key (SERVICE_RANK_CODE) references SERVICE_RANK (SERVICE_RANK_CODE)
2016-08-01 10:40:54,458 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SECURITY add constraint FK_MEMBER_SECURITY_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-08-01 10:40:54,487 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-08-01 10:40:54,510 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON 
    foreign key (WITHDRAWAL_REASON_CODE) references WITHDRAWAL_REASON (WITHDRAWAL_REASON_CODE)
2016-08-01 10:40:54,538 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_MEMBER 
    foreign key (MEMBER_ID) references MEMBER (MEMBER_ID)
2016-08-01 10:40:54,564 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_PRODUCT 
    foreign key (PRODUCT_ID) references PRODUCT (PRODUCT_ID)
2016-08-01 10:40:54,591 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE_PAYMENT add constraint FK_PURCHASE_PAYMENT_PURCHASE 
    foreign key (PURCHASE_ID) references PURCHASE (PURCHASE_ID)
2016-08-01 10:40:54,616 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_CATEGORY 
    foreign key (PRODUCT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-08-01 10:40:54,653 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_STATUS 
    foreign key (PRODUCT_STATUS_CODE) references PRODUCT_STATUS (PRODUCT_STATUS_CODE)
2016-08-01 10:40:54,684 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT_CATEGORY add constraint FK_PRODUCT_CATEGORY_PARENT 
    foreign key (PARENT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2016-08-01 10:40:54,709 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_MY_MEMBER 
    foreign key (MY_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-08-01 10:40:54,734 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_FOLLOWING add constraint FK_MEMBER_FOLLOWING_YOUR_MEMBER 
    foreign key (YOUR_MEMBER_ID) references MEMBER (MEMBER_ID)
2016-08-01 10:40:54,762 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_UNIQUE_REVERSE on MEMBER_FOLLOWING(YOUR_MEMBER_ID, MY_MEMBER_ID)
2016-08-01 10:40:54,782 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FOLLOWING_FOLLOW_DATETIME on MEMBER_FOLLOWING(FOLLOW_DATETIME)
2016-08-01 10:40:54,801 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_MEMBER_NAME on MEMBER(MEMBER_NAME)
2016-08-01 10:40:54,820 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FORMALIZED_DATETIME on MEMBER(FORMALIZED_DATETIME)
2016-08-01 10:40:54,836 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_LOGIN_DATETIME on MEMBER_LOGIN(LOGIN_DATETIME)
2016-08-01 10:40:54,854 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_SERVICE_POINT_COUNT on MEMBER_SERVICE(SERVICE_POINT_COUNT)
2016-08-01 10:40:54,871 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRODUCT_DATETIME on PURCHASE(PRODUCT_ID, PURCHASE_DATETIME)
2016-08-01 10:40:54,888 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_DATETIME_MEMBER on PURCHASE(PURCHASE_DATETIME, MEMBER_ID)
2016-08-01 10:40:54,903 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRICE on PURCHASE(PURCHASE_PRICE)
2016-08-01 10:40:54,920 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PAYMENT_DATETIME on PURCHASE_PAYMENT(PAYMENT_DATETIME, PAYMENT_AMOUNT)
2016-08-01 10:40:54,937 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PRODUCT_PRODUCT_NAME on PRODUCT(PRODUCT_NAME)
2016-08-01 10:40:54,956 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=45 failure=0
2016-08-01 10:40:54,957 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: replace-schema-50-procedure.sql
2016-08-01 10:40:54,958 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_IN_OUT_PARAMETER(
	in v_in_varchar varchar(32)
	, out v_out_varchar varchar(32)
	, inout v_inout_varchar varchar(32)
)
begin
	set v_out_varchar = v_inout_varchar;
	set v_inout_varchar = v_in_varchar;
end;

2016-08-01 10:40:54,961 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create procedure SP_RETURN_RESULT_SET(in birthdateFrom DATE)
begin
  select MEMBER_NAME, BIRTHDATE, MEMBER_STATUS_CODE
    from MEMBER
   where BIRTHDATE >= birthdateFrom
   order by BIRTHDATE desc, MEMBER_ID asc;
  select MEMBER_STATUS_CODE, MEMBER_STATUS_NAME
    from MEMBER_STATUS
   order by DISPLAY_ORDER;
end;

2016-08-01 10:40:54,963 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2016-08-01 10:40:54,964 [main] INFO  (DfSqlFileFireMan#fire():89) - {Create Schema}: success=49 failure=0 (in 3 files)
2016-08-01 10:40:54,964 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():564) - ...Closing connections to change-users: [system]
2016-08-01 10:40:55,053 [main] INFO  (DfLoadDataProcess#execute():129) - 
2016-08-01 10:40:55,053 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2016-08-01 10:40:55,054 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2016-08-01 10:40:55,054 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2016-08-01 10:40:55,054 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2016-08-01 10:40:55,054 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2016-08-01 10:40:55,073 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-08-01 10:40:55,074 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/common/xls/10-master.xls)
2016-08-01 10:40:55,074 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-08-01 10:40:55,311 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2016-08-01 10:40:55,312 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2016-08-01 10:40:55,312 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2016-08-01 10:40:55,348 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{PRV, 仮会員, 入会直後のステータスで一部のサイトサービスが利用可能, 3}
2016-08-01 10:40:55,394 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{FML, 正式会員, 正式な会員としてサイトサービスが利用可能, 1}
2016-08-01 10:40:55,395 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_STATUS:{WDL, 退会会員, 退会が確定した会員でサイトサービスはダメ, 2}
2016-08-01 10:40:55,396 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():212) - ...Skipping the terminal garbage row
2016-08-01 10:40:55,402 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to MEMBER_STATUS
2016-08-01 10:40:55,404 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{1, アメリカ}
2016-08-01 10:40:55,404 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{2, カナダ}
2016-08-01 10:40:55,404 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{3, 中国}
2016-08-01 10:40:55,405 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - REGION:{4, 千葉}
2016-08-01 10:40:55,409 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to REGION
2016-08-01 10:40:55,411 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLT, PLATINUM, 12.3, 1, platinum rank, 1}
2016-08-01 10:40:55,465 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{GLD, GOLD, 9.2, 1, gold rank, 2}
2016-08-01 10:40:55,465 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{SIL, SILVER, 6.74, 1, silver rank, 3}
2016-08-01 10:40:55,466 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{BRZ, BRONZE, 2, 1, bronze rank, 4}
2016-08-01 10:40:55,466 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - SERVICE_RANK:{PLS, PLASTIC, 0.1, 0, plastic rank, 5}
2016-08-01 10:40:55,470 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to SERVICE_RANK
2016-08-01 10:40:55,471 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{SIT, サイトが使いにくいから, 1}
2016-08-01 10:40:55,471 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{OTH, その他理由, 4}
2016-08-01 10:40:55,472 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{FRT, フリテンだから, 3}
2016-08-01 10:40:55,472 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - WITHDRAWAL_REASON:{PRD, 商品に魅力がないから, 2}
2016-08-01 10:40:55,483 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to WITHDRAWAL_REASON
2016-08-01 10:40:55,484 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MSC, 音楽, null}
2016-08-01 10:40:55,485 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{FOD, 食品, null}
2016-08-01 10:40:55,485 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{MCD, 音楽CD, MSC}
2016-08-01 10:40:55,486 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{INS, 楽器, MSC}
2016-08-01 10:40:55,486 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_CATEGORY:{HEB, ハーブ, FOD}
2016-08-01 10:40:55,490 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 5 rows are loaded to PRODUCT_CATEGORY
2016-08-01 10:40:55,491 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{ONS, 生産販売可能, 1}
2016-08-01 10:40:55,491 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{PST, 生産中止, 2}
2016-08-01 10:40:55,492 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT_STATUS:{SST, 販売中止, 3}
2016-08-01 10:40:55,495 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 3 rows are loaded to PRODUCT_STATUS
2016-08-01 10:40:55,497 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-08-01 10:40:55,498 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/20-member.xls)
2016-08-01 10:40:55,498 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-08-01 10:40:55,574 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{1, Stojkovic, Pixy, FML, 2007/12/01 11:01:10, 1965/03/03, 2016-08-01 10:40:55.574, foo, 2016-08-01 10:40:55.574, foo, 0}
2016-08-01 10:40:55,581 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{2, Savicevic, Genius, PRV, null, 1966/09/15, 2016-08-01 10:40:55.581, foo, 2016-08-01 10:40:55.581, foo, 0}
2016-08-01 10:40:55,583 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{3, Mijatovic, Mijato, WDL, 2005/10/03 13:03:30, null, 2016-08-01 10:40:55.583, foo, 2016-08-01 10:40:55.583, foo, 0}
2016-08-01 10:40:55,584 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{4, Stankovic, Stanko, FML, 2006/09/04 14:04:40, 1978/09/11, 2016-08-01 10:40:55.584, foo, 2016-08-01 10:40:55.584, foo, 0}
2016-08-01 10:40:55,586 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{5, Milosevic, Milose, FML, 2007/08/05 15:05:50, null, 2016-08-01 10:40:55.586, foo, 2016-08-01 10:40:55.586, foo, 0}
2016-08-01 10:40:55,588 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{6, Mihajlovic, FreeKick, WDL, 2006/07/06 16:06:40, 1969/02/20, 2016-08-01 10:40:55.588, foo, 2016-08-01 10:40:55.588, foo, 0}
2016-08-01 10:40:55,590 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{7, アカギ, Akagi, FML, 2005/06/07 17:07:30, null, 2016-08-01 10:40:55.59, foo, 2016-08-01 10:40:55.59, foo, 0}
2016-08-01 10:40:55,591 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{8, Kezman, RedCard, FML, 2006/05/08 18:08:20, null, 2016-08-01 10:40:55.591, foo, 2016-08-01 10:40:55.591, foo, 0}
2016-08-01 10:40:55,592 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{9, Maslovar, JEFUnited, FML, 2007/12/31 00:00:00, 1967/02/20, 2016-08-01 10:40:55.592, foo, 2016-08-01 10:40:55.592, foo, 0}
2016-08-01 10:40:55,593 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{10, 諸葛亮孔明, ShokatsuGoGo, PRV, null, null, 2016-08-01 10:40:55.593, foo, 2016-08-01 10:40:55.593, foo, 0}
2016-08-01 10:40:55,594 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{11, Boban, Boban, FML, 2007/12/01 11:01:10, 1968/10/08, 2016-08-01 10:40:55.594, foo, 2016-08-01 10:40:55.594, foo, 0}
2016-08-01 10:40:55,596 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{12, Suker, Suker, PRV, null, 1968/01/01, 2016-08-01 10:40:55.596, foo, 2016-08-01 10:40:55.596, foo, 0}
2016-08-01 10:40:55,598 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{13, Jarni, Jarni, WDL, 2005/10/03 13:03:30, 1968/10/26, 2016-08-01 10:40:55.597, foo, 2016-08-01 10:40:55.597, foo, 0}
2016-08-01 10:40:55,599 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{14, Boksic, Boksic, FML, 2006/09/04 14:04:40, 1970/01/21, 2016-08-01 10:40:55.599, foo, 2016-08-01 10:40:55.599, foo, 0}
2016-08-01 10:40:55,601 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{15, Prosinecki, Prosinecki, FML, 2004/08/05 15:05:50, 1969/01/12, 2016-08-01 10:40:55.601, foo, 2016-08-01 10:40:55.601, foo, 0}
2016-08-01 10:40:55,602 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{16, RobeltKovac, RobeltKovac, WDL, 2006/07/06 16:06:40, null, 2016-08-01 10:40:55.602, foo, 2016-08-01 10:40:55.602, foo, 0}
2016-08-01 10:40:55,604 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{17, NikoKovac, NikoKovac, FML, 2005/06/07 17:07:30, null, 2016-08-01 10:40:55.604, foo, 2016-08-01 10:40:55.604, foo, 0}
2016-08-01 10:40:55,607 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{18, Jovanovic, Jovano, FML, 2006/05/08 18:08:20, 1981/04/18, 2016-08-01 10:40:55.607, foo, 2016-08-01 10:40:55.607, foo, 0}
2016-08-01 10:40:55,609 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{19, Milko, Milko, FML, 2005/12/31 12:34:56, 1974/09/10, 2016-08-01 10:40:55.609, foo, 2016-08-01 10:40:55.609, foo, 0}
2016-08-01 10:40:55,616 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER:{20, 諸葛瑾子瑜, ShokatsuKinKin, FML, 2001/12/31 23:59:59, null, 2016-08-01 10:40:55.616, foo, 2016-08-01 10:40:55.616, foo, 0}
2016-08-01 10:40:55,630 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER
2016-08-01 10:40:55,631 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{1, 1, 2007/03/24, 2015/12/31, Nagara, 4, 2016-08-01 10:40:55.631, foo, 2016-08-01 10:40:55.631, foo, 0}
2016-08-01 10:40:55,632 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{2, 1, 1949/01/01, 1997/03/31, New York, 1, 2016-08-01 10:40:55.632, foo, 2016-08-01 10:40:55.632, foo, 0}
2016-08-01 10:40:55,634 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{3, 1, 1997/04/01, 2000/09/30, Los Angels, 1, 2016-08-01 10:40:55.633, foo, 2016-08-01 10:40:55.633, foo, 0}
2016-08-01 10:40:55,636 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{4, 1, 2000/10/01, 2003/08/31, New York, 1, 2016-08-01 10:40:55.636, foo, 2016-08-01 10:40:55.636, foo, 0}
2016-08-01 10:40:55,637 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{5, 1, 2003/09/01, 2004/12/22, San Francisco Powell, 1, 2016-08-01 10:40:55.637, foo, 2016-08-01 10:40:55.637, foo, 0}
2016-08-01 10:40:55,638 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{6, 1, 2004/12/23, 2006/03/23, San Francisco Daly City, 1, 2016-08-01 10:40:55.638, foo, 2016-08-01 10:40:55.638, foo, 0}
2016-08-01 10:40:55,640 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{7, 1, 2016/01/01, 9999/12/31, Victoria, 2, 2016-08-01 10:40:55.639, foo, 2016-08-01 10:40:55.639, foo, 0}
2016-08-01 10:40:55,641 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{8, 2, 2004/12/24, 9999/12/31, Ichihara, 4, 2016-08-01 10:40:55.641, foo, 2016-08-01 10:40:55.641, foo, 0}
2016-08-01 10:40:55,647 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{9, 3, 2004/12/24, 2007/03/23, Mobara, 4, 2016-08-01 10:40:55.647, foo, 2016-08-01 10:40:55.647, foo, 0}
2016-08-01 10:40:55,649 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{10, 4, 2002/11/01, 9999/12/31, Sousa, 4, 2016-08-01 10:40:55.649, foo, 2016-08-01 10:40:55.649, foo, 0}
2016-08-01 10:40:55,652 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{11, 6, 2002/11/01, 9999/12/31, Yokoshiba, 4, 2016-08-01 10:40:55.652, foo, 2016-08-01 10:40:55.652, foo, 0}
2016-08-01 10:40:55,654 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{12, 9, 2010/11/01, 9999/12/31, Tateyama, 4, 2016-08-01 10:40:55.654, foo, 2016-08-01 10:40:55.654, foo, 0}
2016-08-01 10:40:55,655 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{13, 10, 1970/01/01, 9999/12/31, Shoku, 3, 2016-08-01 10:40:55.655, foo, 2016-08-01 10:40:55.655, foo, 0}
2016-08-01 10:40:55,657 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{14, 12, 2000/11/01, 2001/11/01, Oohara, 4, 2016-08-01 10:40:55.656, foo, 2016-08-01 10:40:55.656, foo, 0}
2016-08-01 10:40:55,658 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{15, 15, 2002/11/01, 2006/10/30, MinamiBousou, 4, 2016-08-01 10:40:55.658, foo, 2016-08-01 10:40:55.658, foo, 0}
2016-08-01 10:40:55,661 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{16, 15, 2007/11/01, 9999/12/31, Tomisato, 4, 2016-08-01 10:40:55.661, foo, 2016-08-01 10:40:55.661, foo, 0}
2016-08-01 10:40:55,662 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{17, 18, 2001/03/21, 2007/11/21, Katsuura, 4, 2016-08-01 10:40:55.662, foo, 2016-08-01 10:40:55.662, foo, 0}
2016-08-01 10:40:55,663 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{18, 18, 2007/11/22, 9999/12/31, Kamogawa, 4, 2016-08-01 10:40:55.663, foo, 2016-08-01 10:40:55.663, foo, 0}
2016-08-01 10:40:55,664 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{19, 19, 2000/11/01, 9999/12/31, Yotsukaido, 4, 2016-08-01 10:40:55.664, foo, 2016-08-01 10:40:55.664, foo, 0}
2016-08-01 10:40:55,665 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_ADDRESS:{20, 20, 1970/01/01, 9999/12/31, Go, 3, 2016-08-01 10:40:55.665, foo, 2016-08-01 10:40:55.665, foo, 0}
2016-08-01 10:40:55,679 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_ADDRESS
2016-08-01 10:40:55,680 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{1, 3, 2006/12/24 23:59:59, 0, FML}
2016-08-01 10:40:55,682 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{2, 6, 2007/11/11 16:16:16, 0, FML}
2016-08-01 10:40:55,684 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{3, 1, 2006/12/23 22:56:29, 0, FML}
2016-08-01 10:40:55,686 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{4, 6, 2007/11/01 02:13:00, 0, FML}
2016-08-01 10:40:55,688 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{5, 7, 2006/05/24 23:12:59, 0, FML}
2016-08-01 10:40:55,691 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{6, 6, 2005/11/11 16:32:01, 0, PRV}
2016-08-01 10:40:55,692 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{7, 6, 2006/01/28 23:59:59, 1, FML}
2016-08-01 10:40:55,692 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{8, 6, 2007/11/09 16:23:00, 0, FML}
2016-08-01 10:40:55,693 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{9, 8, 2006/12/22 23:59:59, 0, FML}
2016-08-01 10:40:55,693 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{10, 6, 2007/11/11 09:01:00, 0, FML}
2016-08-01 10:40:55,694 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{11, 1, 2006/12/23 23:59:59, 0, FML}
2016-08-01 10:40:55,694 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{12, 9, 2007/11/15 12:43:00, 0, FML}
2016-08-01 10:40:55,695 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{13, 10, 2006/12/24 23:59:59, 0, FML}
2016-08-01 10:40:55,695 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{14, 6, 2007/04/01 16:23:01, 0, FML}
2016-08-01 10:40:55,696 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{15, 7, 2006/12/24 23:59:20, 1, FML}
2016-08-01 10:40:55,696 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{16, 6, 2007/05/01 12:23:02, 0, FML}
2016-08-01 10:40:55,697 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{17, 7, 2006/12/24 23:59:21, 0, FML}
2016-08-01 10:40:55,697 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{18, 6, 2007/06/11 17:23:03, 0, FML}
2016-08-01 10:40:55,698 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{19, 4, 2006/12/24 23:59:22, 0, FML}
2016-08-01 10:40:55,698 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{20, 3, 2007/11/01 16:12:04, 0, FML}
2016-08-01 10:40:55,699 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{21, 11, 2006/12/24 23:59:23, 0, FML}
2016-08-01 10:40:55,700 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{22, 1, 2007/11/01 16:23:05, 0, PRV}
2016-08-01 10:40:55,700 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{23, 9, 2006/12/24 23:59:24, 1, FML}
2016-08-01 10:40:55,701 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{24, 8, 2007/11/01 16:23:06, 0, FML}
2016-08-01 10:40:55,701 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{25, 7, 2007/12/24 11:59:25, 1, FML}
2016-08-01 10:40:55,702 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{26, 6, 2007/06/21 01:23:57, 0, FML}
2016-08-01 10:40:55,703 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{27, 5, 2006/12/24 23:59:26, 0, FML}
2016-08-01 10:40:55,703 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{28, 3, 2007/11/01 16:23:08, 0, FML}
2016-08-01 10:40:55,704 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{29, 3, 2006/12/24 23:59:27, 0, FML}
2016-08-01 10:40:55,704 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{30, 10, 2007/11/01 16:23:09, 0, FML}
2016-08-01 10:40:55,705 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{31, 15, 2006/07/24 23:59:28, 0, FML}
2016-08-01 10:40:55,705 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{32, 14, 2007/11/01 17:23:10, 0, FML}
2016-08-01 10:40:55,706 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{33, 15, 2007/11/01 16:23:10, 0, FML}
2016-08-01 10:40:55,707 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{34, 18, 2006/07/24 23:59:29, 0, FML}
2016-08-01 10:40:55,707 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{35, 3, 2007/11/01 17:23:11, 0, PRV}
2016-08-01 10:40:55,708 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{36, 5, 2007/11/01 16:23:11, 1, FML}
2016-08-01 10:40:55,709 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{37, 11, 2006/07/24 23:59:30, 0, FML}
2016-08-01 10:40:55,711 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{38, 20, 2007/11/01 17:23:12, 1, FML}
2016-08-01 10:40:55,713 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{39, 19, 2007/11/01 16:23:12, 0, FML}
2016-08-01 10:40:55,716 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{40, 4, 2006/07/24 23:59:31, 0, FML}
2016-08-01 10:40:55,719 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{41, 4, 2007/11/01 17:23:13, 0, FML}
2016-08-01 10:40:55,719 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{42, 4, 2007/11/01 16:23:13, 0, FML}
2016-08-01 10:40:55,720 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{43, 4, 2006/07/24 23:52:32, 0, FML}
2016-08-01 10:40:55,721 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{44, 4, 2007/11/01 11:23:14, 0, FML}
2016-08-01 10:40:55,721 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{45, 4, 2007/11/21 06:23:14, 0, FML}
2016-08-01 10:40:55,722 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{46, 12, 2006/07/24 23:52:33, 0, PRV}
2016-08-01 10:40:55,723 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{47, 13, 2007/11/01 11:23:15, 1, FML}
2016-08-01 10:40:55,723 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{48, 14, 2007/11/21 06:23:15, 0, FML}
2016-08-01 10:40:55,724 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{49, 17, 2006/07/24 23:52:34, 1, FML}
2016-08-01 10:40:55,724 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{50, 18, 2007/11/01 11:23:16, 0, FML}
2016-08-01 10:40:55,725 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{51, 16, 2007/11/21 06:23:16, 0, FML}
2016-08-01 10:40:55,725 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{52, 4, 2006/07/24 23:52:35, 0, FML}
2016-08-01 10:40:55,726 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{53, 5, 2007/11/01 11:23:17, 0, FML}
2016-08-01 10:40:55,730 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{54, 5, 2007/11/21 06:23:17, 0, FML}
2016-08-01 10:40:55,731 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{55, 11, 2006/07/24 23:52:36, 0, FML}
2016-08-01 10:40:55,732 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_LOGIN:{56, 12, 2007/11/01 11:23:18, 0, FML}
2016-08-01 10:40:55,768 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 56 rows are loaded to MEMBER_LOGIN
2016-08-01 10:40:55,769 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{1, aaa, 30符3飜は？, 自分で数えろ, 1, 2016-08-01 10:40:55.769, foo, 2016-08-01 10:40:55.769, foo, 0}
2016-08-01 10:40:55,770 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{2, bbb, 50符2飜は？, 自分で数えろ, 2, 2016-08-01 10:40:55.77, foo, 2016-08-01 10:40:55.77, foo, 0}
2016-08-01 10:40:55,771 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{3, ccc, 110符2飜は？, 自分で数えろ, 3, 2016-08-01 10:40:55.771, foo, 2016-08-01 10:40:55.771, foo, 0}
2016-08-01 10:40:55,771 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{4, ddd, タンヤオ？, そう, 4, 2016-08-01 10:40:55.771, foo, 2016-08-01 10:40:55.771, foo, 0}
2016-08-01 10:40:55,772 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{5, eee2, ピンフ？, そう, 5, 2016-08-01 10:40:55.772, foo, 2016-08-01 10:40:55.772, foo, 0}
2016-08-01 10:40:55,772 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{6, fff, サンアンコウ？, そう, 6, 2016-08-01 10:40:55.772, foo, 2016-08-01 10:40:55.772, foo, 0}
2016-08-01 10:40:55,773 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{7, ggg3, イーペーコウ？, そう, 7, 2016-08-01 10:40:55.773, foo, 2016-08-01 10:40:55.773, foo, 0}
2016-08-01 10:40:55,774 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{8, hhh555, リャンペーコウ？, そう, 8, 2016-08-01 10:40:55.774, foo, 2016-08-01 10:40:55.774, foo, 0}
2016-08-01 10:40:55,778 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{9, iii, サンペーコウはないよね？, 当たり前だ, 9, 2016-08-01 10:40:55.777, foo, 2016-08-01 10:40:55.777, foo, 0}
2016-08-01 10:40:55,782 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{10, jjj, 私はイカサマしません, 実はする, 10, 2016-08-01 10:40:55.782, foo, 2016-08-01 10:40:55.782, foo, 0}
2016-08-01 10:40:55,785 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{11, qwe, 70符3飜は？, 自分で数えろ, 11, 2016-08-01 10:40:55.785, foo, 2016-08-01 10:40:55.785, foo, 0}
2016-08-01 10:40:55,786 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{12, sdf, 20符4飜は？, 自分で数えろ, 12, 2016-08-01 10:40:55.786, foo, 2016-08-01 10:40:55.786, foo, 0}
2016-08-01 10:40:55,787 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{13, dfgsf, 大三元は？, 役満だよ, 13, 2016-08-01 10:40:55.787, foo, 2016-08-01 10:40:55.787, foo, 0}
2016-08-01 10:40:55,788 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{14, ert, タンヤオ？, そう, 14, 2016-08-01 10:40:55.788, foo, 2016-08-01 10:40:55.788, foo, 0}
2016-08-01 10:40:55,789 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{15, fhgf, ピンフ？, そう, 15, 2016-08-01 10:40:55.789, foo, 2016-08-01 10:40:55.789, foo, 0}
2016-08-01 10:40:55,790 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{16, ghj, サンアンコウ？, そう, 16, 2016-08-01 10:40:55.789, foo, 2016-08-01 10:40:55.789, foo, 0}
2016-08-01 10:40:55,791 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{17, tyuffff, サンレンコウ？, そう, 17, 2016-08-01 10:40:55.791, foo, 2016-08-01 10:40:55.791, foo, 0}
2016-08-01 10:40:55,792 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{18, jkl, イーペーコウ？, そう, 18, 2016-08-01 10:40:55.792, foo, 2016-08-01 10:40:55.792, foo, 0}
2016-08-01 10:40:55,793 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{19, ghjfff, 左ハイは？, 痛い, 19, 2016-08-01 10:40:55.793, foo, 2016-08-01 10:40:55.793, foo, 0}
2016-08-01 10:40:55,793 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SECURITY:{20, cvb, 孫権は？, 呉, 20, 2016-08-01 10:40:55.793, foo, 2016-08-01 10:40:55.793, foo, 0}
2016-08-01 10:40:55,806 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SECURITY
2016-08-01 10:40:55,807 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{1, 1, 1234, PLT, 2016-08-01 10:40:55.807, foo, 2016-08-01 10:40:55.807, foo, 0}
2016-08-01 10:40:55,808 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{2, 2, 2345, GLD, 2016-08-01 10:40:55.808, foo, 2016-08-01 10:40:55.808, foo, 0}
2016-08-01 10:40:55,812 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{3, 3, 3456, GLD, 2016-08-01 10:40:55.811, foo, 2016-08-01 10:40:55.811, foo, 0}
2016-08-01 10:40:55,814 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{4, 4, 875, BRZ, 2016-08-01 10:40:55.814, foo, 2016-08-01 10:40:55.814, foo, 0}
2016-08-01 10:40:55,815 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{5, 5, 1111, BRZ, 2016-08-01 10:40:55.815, foo, 2016-08-01 10:40:55.815, foo, 0}
2016-08-01 10:40:55,817 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{6, 6, 5422, SIL, 2016-08-01 10:40:55.817, foo, 2016-08-01 10:40:55.817, foo, 0}
2016-08-01 10:40:55,819 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{7, 7, 24678, SIL, 2016-08-01 10:40:55.818, foo, 2016-08-01 10:40:55.818, foo, 0}
2016-08-01 10:40:55,819 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{8, 8, 234, SIL, 2016-08-01 10:40:55.819, foo, 2016-08-01 10:40:55.819, foo, 0}
2016-08-01 10:40:55,820 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{9, 9, 3, SIL, 2016-08-01 10:40:55.82, foo, 2016-08-01 10:40:55.82, foo, 0}
2016-08-01 10:40:55,821 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{10, 10, 98765, PLT, 2016-08-01 10:40:55.82, foo, 2016-08-01 10:40:55.82, foo, 0}
2016-08-01 10:40:55,821 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{11, 11, 34, GLD, 2016-08-01 10:40:55.821, foo, 2016-08-01 10:40:55.821, foo, 0}
2016-08-01 10:40:55,821 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{12, 12, 532, PLT, 2016-08-01 10:40:55.821, foo, 2016-08-01 10:40:55.821, foo, 0}
2016-08-01 10:40:55,822 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{13, 13, 23678, GLD, 2016-08-01 10:40:55.822, foo, 2016-08-01 10:40:55.822, foo, 0}
2016-08-01 10:40:55,822 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{14, 14, 432, GLD, 2016-08-01 10:40:55.822, foo, 2016-08-01 10:40:55.822, foo, 0}
2016-08-01 10:40:55,822 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{15, 15, 543, BRZ, 2016-08-01 10:40:55.822, foo, 2016-08-01 10:40:55.822, foo, 0}
2016-08-01 10:40:55,823 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{16, 16, 23545, PLT, 2016-08-01 10:40:55.823, foo, 2016-08-01 10:40:55.823, foo, 0}
2016-08-01 10:40:55,823 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{17, 17, 2345, GLD, 2016-08-01 10:40:55.823, foo, 2016-08-01 10:40:55.823, foo, 0}
2016-08-01 10:40:55,823 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{18, 18, 8763, SIL, 2016-08-01 10:40:55.823, foo, 2016-08-01 10:40:55.823, foo, 0}
2016-08-01 10:40:55,824 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{19, 19, 34567, SIL, 2016-08-01 10:40:55.824, foo, 2016-08-01 10:40:55.824, foo, 0}
2016-08-01 10:40:55,824 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_SERVICE:{20, 20, 43, GLD, 2016-08-01 10:40:55.824, foo, 2016-08-01 10:40:55.824, foo, 0}
2016-08-01 10:40:55,836 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to MEMBER_SERVICE
2016-08-01 10:40:55,837 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{3, null, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123, 2016-08-01 10:40:55.837, foo, 2016-08-01 10:40:55.837, foo}
2016-08-01 10:40:55,838 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{6, SIT, null, 2007/11/11 16:00:00.456, 2016-08-01 10:40:55.838, foo, 2016-08-01 10:40:55.838, foo}
2016-08-01 10:40:55,847 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{13, PRD, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789, 2016-08-01 10:40:55.847, foo, 2016-08-01 10:40:55.847, foo}
2016-08-01 10:40:55,849 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_WITHDRAWAL:{16, SIT, コバチが２人いるため, 2007/11/13 16:00:00.456, 2016-08-01 10:40:55.849, foo, 2016-08-01 10:40:55.849, foo}
2016-08-01 10:40:55,854 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 4 rows are loaded to MEMBER_WITHDRAWAL
2016-08-01 10:40:55,855 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{1, 1, 2, 2006/12/24 23:59:59}
2016-08-01 10:40:55,857 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{2, 1, 3, 2007/11/11 16:16:16}
2016-08-01 10:40:55,859 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{3, 1, 4, 2006/12/23 22:56:29}
2016-08-01 10:40:55,869 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{4, 1, 5, 2007/11/01 02:13:00}
2016-08-01 10:40:55,870 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{5, 1, 6, 2012/05/24 23:12:59}
2016-08-01 10:40:55,873 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{6, 1, 9, 2005/11/11 16:32:01}
2016-08-01 10:40:55,873 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{7, 1, 15, 2006/01/28 23:59:59}
2016-08-01 10:40:55,874 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{8, 1, 18, 2007/11/09 16:23:00}
2016-08-01 10:40:55,875 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{9, 2, 1, 2009/12/22 23:59:59}
2016-08-01 10:40:55,877 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{10, 2, 3, 2007/11/11 09:01:00}
2016-08-01 10:40:55,878 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{11, 2, 4, 2006/11/23 23:59:59}
2016-08-01 10:40:55,888 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{12, 2, 9, 2012/11/15 12:43:00}
2016-08-01 10:40:55,890 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{13, 2, 14, 2006/12/24 23:59:59}
2016-08-01 10:40:55,904 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{14, 2, 19, 2011/04/01 16:23:01}
2016-08-01 10:40:55,911 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{15, 3, 1, 2006/12/24 23:59:20}
2016-08-01 10:40:55,912 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{16, 3, 2, 2008/05/01 12:23:02}
2016-08-01 10:40:55,913 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{17, 3, 4, 2006/12/24 23:59:21}
2016-08-01 10:40:55,913 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{18, 3, 6, 2009/06/11 17:23:03}
2016-08-01 10:40:55,921 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{19, 3, 9, 2010/12/24 23:59:22}
2016-08-01 10:40:55,923 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{20, 3, 10, 2007/11/01 16:12:04}
2016-08-01 10:40:55,924 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{21, 4, 1, 2006/12/24 23:59:23}
2016-08-01 10:40:55,926 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{22, 4, 2, 2007/11/01 16:23:05}
2016-08-01 10:40:55,929 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{23, 4, 3, 2011/12/24 23:59:24}
2016-08-01 10:40:55,931 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{24, 4, 4, 2007/11/01 16:23:06}
2016-08-01 10:40:55,934 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{25, 4, 5, 2013/05/24 11:59:25}
2016-08-01 10:40:55,935 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{26, 4, 6, 2007/06/21 01:23:57}
2016-08-01 10:40:55,936 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{27, 4, 9, 2006/12/24 23:59:26}
2016-08-01 10:40:55,937 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{28, 4, 11, 2007/11/01 16:23:08}
2016-08-01 10:40:55,938 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{29, 4, 12, 2013/02/24 23:59:27}
2016-08-01 10:40:55,939 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{30, 4, 13, 2012/11/01 16:23:03}
2016-08-01 10:40:55,939 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{31, 4, 14, 2006/07/24 23:59:28}
2016-08-01 10:40:55,940 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{32, 4, 15, 2007/11/01 17:23:10}
2016-08-01 10:40:55,944 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{33, 4, 16, 2007/11/01 16:23:10}
2016-08-01 10:40:55,945 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{34, 4, 17, 2006/07/24 23:59:29}
2016-08-01 10:40:55,947 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{35, 4, 18, 2011/11/01 17:23:11}
2016-08-01 10:40:55,948 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{36, 4, 19, 2007/11/01 16:23:11}
2016-08-01 10:40:55,949 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{37, 5, 1, 2008/07/24 23:59:30}
2016-08-01 10:40:55,949 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{38, 5, 3, 2007/11/01 17:23:12}
2016-08-01 10:40:55,949 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{39, 5, 6, 2007/11/01 16:23:12}
2016-08-01 10:40:55,950 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{40, 6, 1, 2006/07/24 23:59:31}
2016-08-01 10:40:55,950 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{41, 6, 2, 2007/11/01 17:23:13}
2016-08-01 10:40:55,951 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{42, 6, 3, 2007/11/01 16:23:13}
2016-08-01 10:40:55,951 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{43, 6, 4, 2006/07/24 23:52:32}
2016-08-01 10:40:55,951 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{44, 6, 5, 2007/11/01 11:23:14}
2016-08-01 10:40:55,951 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{45, 6, 6, 2007/11/21 06:23:14}
2016-08-01 10:40:55,952 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{46, 8, 1, 2011/07/24 23:52:33}
2016-08-01 10:40:55,952 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{47, 8, 2, 2007/11/01 11:23:15}
2016-08-01 10:40:55,953 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{48, 8, 3, 2007/11/21 06:23:15}
2016-08-01 10:40:55,953 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{49, 9, 1, 2006/07/24 23:52:34}
2016-08-01 10:40:55,954 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{50, 9, 2, 208/11/01 11:23:16}
2016-08-01 10:40:55,955 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{51, 9, 3, 2007/11/21 06:23:16}
2016-08-01 10:40:55,955 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{52, 9, 10, 2006/07/24 23:52:35}
2016-08-01 10:40:55,955 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{53, 9, 20, 2009/11/01 11:23:17}
2016-08-01 10:40:55,956 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{54, 10, 1, 2007/11/21 06:23:17}
2016-08-01 10:40:55,956 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{55, 10, 2, 2006/07/24 23:52:36}
2016-08-01 10:40:55,957 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{56, 10, 3, 2010/11/01 11:23:18}
2016-08-01 10:40:55,957 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{57, 10, 4, 2006/12/21 23:59:59}
2016-08-01 10:40:55,957 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{58, 10, 5, 2007/11/1 16:16:16}
2016-08-01 10:40:55,958 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{59, 10, 6, 2006/08/23 22:56:29}
2016-08-01 10:40:55,958 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{60, 10, 9, 2007/11/01 02:11:00}
2016-08-01 10:40:55,976 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{61, 10, 11, 2012/05/24 23:12:59}
2016-08-01 10:40:55,978 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{62, 10, 12, 2005/11/10 16:32:01}
2016-08-01 10:40:55,980 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{63, 10, 13, 2006/01/28 23:59:59}
2016-08-01 10:40:55,981 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{64, 10, 14, 2007/10/09 16:23:00}
2016-08-01 10:40:55,983 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{65, 10, 15, 2009/12/22 23:59:59}
2016-08-01 10:40:55,984 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{66, 10, 16, 2007/11/01 09:01:00}
2016-08-01 10:40:55,985 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{67, 10, 17, 2006/11/23 23:59:59}
2016-08-01 10:40:55,986 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{68, 10, 18, 2011/11/15 12:43:00}
2016-08-01 10:40:55,986 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{69, 10, 19, 2006/07/24 23:59:59}
2016-08-01 10:40:55,987 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{70, 10, 20, 2011/08/01 16:23:01}
2016-08-01 10:40:55,987 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{71, 11, 12, 2006/09/24 23:59:20}
2016-08-01 10:40:55,988 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{72, 11, 13, 2008/01/01 12:23:02}
2016-08-01 10:40:55,988 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{73, 11, 14, 2006/12/24 23:59:21}
2016-08-01 10:40:55,989 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{74, 11, 15, 2009/02/11 17:23:03}
2016-08-01 10:40:55,989 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{75, 11, 16, 2010/03/24 23:59:22}
2016-08-01 10:40:55,990 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{76, 11, 17, 2007/09/01 16:12:04}
2016-08-01 10:40:55,990 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{77, 11, 19, 2006/12/24 23:59:23}
2016-08-01 10:40:55,990 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{78, 12, 1, 2007/11/01 16:23:05}
2016-08-01 10:40:55,991 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{79, 12, 11, 2011/05/24 23:59:24}
2016-08-01 10:40:55,991 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{80, 12, 13, 2007/11/01 16:23:06}
2016-08-01 10:40:55,991 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{81, 12, 14, 2013/06/24 11:59:25}
2016-08-01 10:40:55,992 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{82, 12, 15, 2007/06/21 01:23:57}
2016-08-01 10:40:55,992 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{83, 12, 19, 2006/12/24 23:59:26}
2016-08-01 10:40:55,992 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{84, 13, 11, 2007/08/01 16:23:08}
2016-08-01 10:40:55,993 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{85, 13, 12, 2013/02/24 23:59:27}
2016-08-01 10:40:55,993 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{86, 13, 14, 2012/11/01 16:23:03}
2016-08-01 10:40:56,000 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{87, 14, 1, 2006/07/24 23:59:28}
2016-08-01 10:40:56,001 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{88, 14, 10, 2012/05/24 23:12:59}
2016-08-01 10:40:56,001 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{89, 14, 11, 2005/11/10 16:32:01}
2016-08-01 10:40:56,002 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{90, 14, 20, 2006/01/28 23:59:59}
2016-08-01 10:40:56,002 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{91, 16, 17, 2007/10/09 16:23:00}
2016-08-01 10:40:56,003 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{92, 17, 16, 2009/12/22 23:59:59}
2016-08-01 10:40:56,004 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{93, 18, 1, 2007/11/01 09:01:00}
2016-08-01 10:40:56,005 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{94, 18, 2, 2006/11/23 23:59:59}
2016-08-01 10:40:56,005 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{95, 18, 3, 2011/11/15 12:43:00}
2016-08-01 10:40:56,006 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{96, 18, 4, 2006/07/24 23:59:59}
2016-08-01 10:40:56,007 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{97, 18, 5, 2011/08/01 16:23:01}
2016-08-01 10:40:56,007 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{98, 18, 6, 2006/09/24 23:59:20}
2016-08-01 10:40:56,008 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{99, 18, 9, 2008/01/01 12:23:02}
2016-08-01 10:40:56,009 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{100, 18, 11, 2006/12/24 23:59:21}
2016-08-01 10:40:56,011 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{101, 18, 12, 2009/02/11 17:23:03}
2016-08-01 10:40:56,014 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{102, 18, 13, 2010/03/24 23:59:22}
2016-08-01 10:40:56,015 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{103, 18, 14, 2007/09/01 16:12:04}
2016-08-01 10:40:56,017 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{104, 18, 15, 2006/12/24 23:59:23}
2016-08-01 10:40:56,020 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{105, 19, 1, 2007/11/01 16:23:05}
2016-08-01 10:40:56,020 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{106, 19, 10, 2011/05/24 23:59:24}
2016-08-01 10:40:56,021 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{107, 19, 11, 2007/11/01 16:23:06}
2016-08-01 10:40:56,022 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{108, 19, 12, 2013/06/24 11:59:25}
2016-08-01 10:40:56,023 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{109, 19, 20, 2013/06/24 11:59:25}
2016-08-01 10:40:56,023 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{110, 20, 10, 2013/06/24 11:59:25}
2016-08-01 10:40:56,024 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - MEMBER_FOLLOWING:{111, 20, 19, 2013/06/24 11:59:25}
2016-08-01 10:40:56,090 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 111 rows are loaded to MEMBER_FOLLOWING
2016-08-01 10:40:56,091 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2016-08-01 10:40:56,091 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():129) - writeData(playsql/data/ut/xls/30-product.xls)
2016-08-01 10:40:56,091 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():130) - = = = = = = =/
2016-08-01 10:40:56,145 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{1, Cold Spring Harbor, BILLYJOEL-01, MCD, PST, 1100, 2016-08-01 10:40:56.144, foo, 2016-08-01 10:40:56.144, foo, 0}
2016-08-01 10:40:56,146 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{2, Piano Man, BILLYJOEL-02, MCD, ONS, 1200, 2016-08-01 10:40:56.146, foo, 2016-08-01 10:40:56.146, foo, 0}
2016-08-01 10:40:56,147 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{3, Streetlife Serenade, BILLYJOEL-03, MCD, ONS, 1300, 2016-08-01 10:40:56.147, foo, 2016-08-01 10:40:56.147, foo, 0}
2016-08-01 10:40:56,147 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{4, Turnstiles, BILLYJOEL-04, MCD, ONS, 1400, 2016-08-01 10:40:56.147, foo, 2016-08-01 10:40:56.147, foo, 0}
2016-08-01 10:40:56,148 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{5, The Stranger, BILLYJOEL-05, MCD, ONS, 1500, 2016-08-01 10:40:56.148, foo, 2016-08-01 10:40:56.148, foo, 0}
2016-08-01 10:40:56,149 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{6, 52nd Street, BILLYJOEL-06, MCD, ONS, 1600, 2016-08-01 10:40:56.149, foo, 2016-08-01 10:40:56.149, foo, 0}
2016-08-01 10:40:56,149 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{7, Glass House, BILLYJOEL-07, MCD, ONS, 1700, 2016-08-01 10:40:56.149, foo, 2016-08-01 10:40:56.149, foo, 0}
2016-08-01 10:40:56,153 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{8, Nylon Curtain, BILLYJOEL-08, MCD, ONS, 1800, 2016-08-01 10:40:56.153, foo, 2016-08-01 10:40:56.153, foo, 0}
2016-08-01 10:40:56,154 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{9, Bridge, BILLYJOEL-09, MCD, ONS, 1900, 2016-08-01 10:40:56.154, foo, 2016-08-01 10:40:56.154, foo, 0}
2016-08-01 10:40:56,156 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{10, Storm Front, BILLYJOEL-10, MCD, ONS, 2000, 2016-08-01 10:40:56.156, foo, 2016-08-01 10:40:56.156, foo, 0}
2016-08-01 10:40:56,157 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{11, River of Dreams, BILLYJOEL-11, MCD, ONS, 2100, 2016-08-01 10:40:56.156, foo, 2016-08-01 10:40:56.156, foo, 0}
2016-08-01 10:40:56,157 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{12, Grand Piano, PIANO-01, INS, ONS, 1400000, 2016-08-01 10:40:56.157, foo, 2016-08-01 10:40:56.157, foo, 0}
2016-08-01 10:40:56,158 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{13, Upright Piano, PIANO-02, INS, ONS, 1100000, 2016-08-01 10:40:56.157, foo, 2016-08-01 10:40:56.157, foo, 0}
2016-08-01 10:40:56,158 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{14, Low Price Flute, FLUTE-01, INS, ONS, 50000, 2016-08-01 10:40:56.158, foo, 2016-08-01 10:40:56.158, foo, 0}
2016-08-01 10:40:56,158 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{15, Silver Flute, FLUTE-02, INS, ONS, 500000, 2016-08-01 10:40:56.158, foo, 2016-08-01 10:40:56.158, foo, 0}
2016-08-01 10:40:56,159 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{16, Gold Flute, FLUTE-03, INS, ONS, 4000000, 2016-08-01 10:40:56.159, foo, 2016-08-01 10:40:56.159, foo, 0}
2016-08-01 10:40:56,159 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{17, Rosemary (100g), HARB-100-01, HEB, ONS, 400, 2016-08-01 10:40:56.159, foo, 2016-08-01 10:40:56.159, foo, 0}
2016-08-01 10:40:56,159 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{18, Lemon Grass (100g), HARB-100-02, HEB, ONS, 380, 2016-08-01 10:40:56.159, foo, 2016-08-01 10:40:56.159, foo, 0}
2016-08-01 10:40:56,159 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{19, Camomile (100g), HARB-100-03, HEB, ONS, 380, 2016-08-01 10:40:56.159, foo, 2016-08-01 10:40:56.159, foo, 0}
2016-08-01 10:40:56,160 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PRODUCT:{20, Hatomugi (100g), HARB-100-04, HEB, ONS, 340, 2016-08-01 10:40:56.16, foo, 2016-08-01 10:40:56.16, foo, 0}
2016-08-01 10:40:56,170 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 20 rows are loaded to PRODUCT
2016-08-01 10:40:56,170 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{1, 5, 3, 2006/12/24 23:59:59, 1, 1800, 1, 2016-08-01 10:40:56.17, foo, 2016-08-01 10:40:56.17, foo, 0}
2016-08-01 10:40:56,172 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{2, 15, 7, 2007/11/11 16:16:16, 1, 1700, 1, 2016-08-01 10:40:56.171, foo, 2016-08-01 10:40:56.171, foo, 0}
2016-08-01 10:40:56,172 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{3, 13, 3, 2006/12/23 22:56:29.235, 1, 1800, 1, 2016-08-01 10:40:56.172, foo, 2016-08-01 10:40:56.172, foo, 0}
2016-08-01 10:40:56,175 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{4, 2, 5, 2007/11/01 02:13:00, 2, 1700, 1, 2016-08-01 10:40:56.175, foo, 2016-08-01 10:40:56.175, foo, 0}
2016-08-01 10:40:56,176 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{5, 9, 11, 2008/01/04 23:12:59, 5, 1800, 1, 2016-08-01 10:40:56.176, foo, 2016-08-01 10:40:56.176, foo, 0}
2016-08-01 10:40:56,177 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{6, 20, 2, 2002/01/01 16:32:01, 1, 2000, 1, 2016-08-01 10:40:56.177, foo, 2016-08-01 10:40:56.177, foo, 0}
2016-08-01 10:40:56,178 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{7, 19, 9, 2006/01/28 23:59:59.999, 1, 1000, 0, 2016-08-01 10:40:56.178, foo, 2016-08-01 10:40:56.178, foo, 0}
2016-08-01 10:40:56,179 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{8, 4, 7, 2007/11/09 16:23:00, 1, 1535, 1, 2016-08-01 10:40:56.179, foo, 2016-08-01 10:40:56.179, foo, 0}
2016-08-01 10:40:56,179 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{9, 4, 10, 2006/12/22 23:59:59, 20, 1700, 1, 2016-08-01 10:40:56.179, foo, 2016-08-01 10:40:56.179, foo, 0}
2016-08-01 10:40:56,180 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{10, 2, 10, 2007/11/01 02:13:00.345, 1, 1700, 0, 2016-08-01 10:40:56.18, foo, 2016-08-01 10:40:56.18, foo, 0}
2016-08-01 10:40:56,180 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{11, 5, 2, 2007/11/09 16:23:01, 1, 1800, 1, 2016-08-01 10:40:56.18, foo, 2016-08-01 10:40:56.18, foo, 0}
2016-08-01 10:40:56,181 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{12, 15, 2, 2006/12/22 23:59:12, 1, 1700, 1, 2016-08-01 10:40:56.181, foo, 2016-08-01 10:40:56.181, foo, 0}
2016-08-01 10:40:56,182 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{13, 13, 8, 2007/11/01 02:13:00.346, 1, 1800, 1, 2016-08-01 10:40:56.182, foo, 2016-08-01 10:40:56.182, foo, 0}
2016-08-01 10:40:56,182 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{14, 2, 4, 2007/11/09 16:23:02, 2, 1700, 1, 2016-08-01 10:40:56.182, foo, 2016-08-01 10:40:56.182, foo, 0}
2016-08-01 10:40:56,189 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{15, 9, 11, 2006/12/22 23:59:32, 5, 1800, 1, 2016-08-01 10:40:56.189, foo, 2016-08-01 10:40:56.189, foo, 0}
2016-08-01 10:40:56,190 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{16, 20, 1, 2007/11/01 02:13:00.347, 1, 2000, 1, 2016-08-01 10:40:56.19, foo, 2016-08-01 10:40:56.19, foo, 0}
2016-08-01 10:40:56,190 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{17, 19, 11, 2006/12/22 23:59:33, 2, 1000, 0, 2016-08-01 10:40:56.19, foo, 2016-08-01 10:40:56.19, foo, 0}
2016-08-01 10:40:56,191 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{18, 4, 10, 2007/11/01 02:13:00.348, 1, 1535, 1, 2016-08-01 10:40:56.191, foo, 2016-08-01 10:40:56.191, foo, 0}
2016-08-01 10:40:56,192 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{19, 4, 11, 2007/11/01 02:13:00.348, 4, 1700, 1, 2016-08-01 10:40:56.191, foo, 2016-08-01 10:40:56.191, foo, 0}
2016-08-01 10:40:56,192 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{20, 2, 11, 2006/12/22 23:59:35, 1, 1700, 0, 2016-08-01 10:40:56.192, foo, 2016-08-01 10:40:56.192, foo, 0}
2016-08-01 10:40:56,195 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{21, 2, 15, 2006/12/22 23:59:35, 1, 400000, 0, 2016-08-01 10:40:56.195, foo, 2016-08-01 10:40:56.195, foo, 0}
2016-08-01 10:40:56,196 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{22, 3, 6, 2007/11/01 02:13:00.350, 4, 1800, 1, 2016-08-01 10:40:56.196, foo, 2016-08-01 10:40:56.196, foo, 0}
2016-08-01 10:40:56,198 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{23, 15, 7, 2006/12/22 23:59:36, 1, 1700, 1, 2016-08-01 10:40:56.198, foo, 2016-08-01 10:40:56.198, foo, 0}
2016-08-01 10:40:56,200 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{24, 13, 3, 2007/09/11 12:13:00.351, 1, 1800, 1, 2016-08-01 10:40:56.2, foo, 2016-08-01 10:40:56.2, foo, 0}
2016-08-01 10:40:56,202 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{25, 16, 2, 2006/12/22 23:59:37, 2, 1700, 1, 2016-08-01 10:40:56.202, foo, 2016-08-01 10:40:56.202, foo, 0}
2016-08-01 10:40:56,203 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{26, 3, 4, 2005/12/21 12:13:00.352, 1, 1800, 1, 2016-08-01 10:40:56.203, foo, 2016-08-01 10:40:56.203, foo, 0}
2016-08-01 10:40:56,203 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{27, 2, 8, 2006/12/22 23:59:38, 1, 2000, 1, 2016-08-01 10:40:56.203, foo, 2016-08-01 10:40:56.203, foo, 0}
2016-08-01 10:40:56,204 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{28, 6, 17, 2007/11/01 02:13:00.353, 2, 600, 0, 2016-08-01 10:40:56.204, foo, 2016-08-01 10:40:56.204, foo, 0}
2016-08-01 10:40:56,204 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{29, 4, 4, 2006/12/22 23:59:39, 1, 1535, 1, 2016-08-01 10:40:56.204, foo, 2016-08-01 10:40:56.204, foo, 0}
2016-08-01 10:40:56,205 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{30, 4, 3, 2007/11/01 02:13:00.354, 4, 1700, 1, 2016-08-01 10:40:56.205, foo, 2016-08-01 10:40:56.205, foo, 0}
2016-08-01 10:40:56,205 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{31, 4, 10, 2006/12/22 23:59:40, 1, 1700, 0, 2016-08-01 10:40:56.205, foo, 2016-08-01 10:40:56.205, foo, 0}
2016-08-01 10:40:56,206 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{32, 13, 3, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-08-01 10:40:56.206, foo, 2016-08-01 10:40:56.206, foo, 0}
2016-08-01 10:40:56,206 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{33, 16, 2, 2006/12/22 23:59:41, 2, 1700, 1, 2016-08-01 10:40:56.206, foo, 2016-08-01 10:40:56.206, foo, 0}
2016-08-01 10:40:56,207 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{34, 3, 4, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-08-01 10:40:56.207, foo, 2016-08-01 10:40:56.207, foo, 0}
2016-08-01 10:40:56,208 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{35, 2, 8, 2006/12/12 23:59:42, 1, 2000, 1, 2016-08-01 10:40:56.208, foo, 2016-08-01 10:40:56.208, foo, 0}
2016-08-01 10:40:56,209 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{36, 6, 3, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-08-01 10:40:56.209, foo, 2016-08-01 10:40:56.209, foo, 0}
2016-08-01 10:40:56,210 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{37, 4, 4, 2006/12/12 23:59:43, 1, 1535, 1, 2016-08-01 10:40:56.21, foo, 2016-08-01 10:40:56.21, foo, 0}
2016-08-01 10:40:56,211 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{38, 4, 3, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-08-01 10:40:56.211, foo, 2016-08-01 10:40:56.211, foo, 0}
2016-08-01 10:40:56,211 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{39, 4, 10, 2006/12/12 23:59:44, 1, 1700, 0, 2016-08-01 10:40:56.211, foo, 2016-08-01 10:40:56.211, foo, 0}
2016-08-01 10:40:56,212 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{40, 4, 10, 2007/05/01 12:13:00.359, 1, 1700, 0, 2016-08-01 10:40:56.212, foo, 2016-08-01 10:40:56.212, foo, 0}
2016-08-01 10:40:56,213 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{41, 4, 11, 2007/11/01 02:13:01.354, 4, 1700, 1, 2016-08-01 10:40:56.213, foo, 2016-08-01 10:40:56.213, foo, 0}
2016-08-01 10:40:56,213 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{42, 10, 16, 2006/12/22 23:59:40, 1, 2800000, 1, 2016-08-01 10:40:56.213, foo, 2016-08-01 10:40:56.213, foo, 0}
2016-08-01 10:40:56,213 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{43, 13, 17, 2006/12/28 12:13:10.355, 1, 1800, 1, 2016-08-01 10:40:56.213, foo, 2016-08-01 10:40:56.213, foo, 0}
2016-08-01 10:40:56,214 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{44, 16, 14, 2006/12/22 23:59:41, 2, 1700, 1, 2016-08-01 10:40:56.214, foo, 2016-08-01 10:40:56.214, foo, 0}
2016-08-01 10:40:56,214 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{45, 3, 18, 2007/05/21 12:13:00.356, 1, 1800, 1, 2016-08-01 10:40:56.214, foo, 2016-08-01 10:40:56.214, foo, 0}
2016-08-01 10:40:56,214 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{46, 2, 7, 2006/12/12 23:59:42, 1, 2000, 1, 2016-08-01 10:40:56.214, foo, 2016-08-01 10:40:56.214, foo, 0}
2016-08-01 10:40:56,215 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{47, 6, 14, 2007/05/01 02:13:00.357, 2, 1000, 0, 2016-08-01 10:40:56.215, foo, 2016-08-01 10:40:56.215, foo, 0}
2016-08-01 10:40:56,216 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{48, 16, 12, 2006/12/12 23:59:43, 1, 100000, 1, 2016-08-01 10:40:56.216, foo, 2016-08-01 10:40:56.216, foo, 0}
2016-08-01 10:40:56,216 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{49, 4, 20, 2007/05/01 02:03:00.358, 4, 1700, 1, 2016-08-01 10:40:56.216, foo, 2016-08-01 10:40:56.216, foo, 0}
2016-08-01 10:40:56,217 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{50, 4, 19, 2006/12/12 23:59:44, 1, 1700, 0, 2016-08-01 10:40:56.217, foo, 2016-08-01 10:40:56.217, foo, 0}
2016-08-01 10:40:56,217 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{51, 4, 11, 2007/11/21 02:13:00.354, 4, 1700, 1, 2016-08-01 10:40:56.217, foo, 2016-08-01 10:40:56.217, foo, 0}
2016-08-01 10:40:56,218 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{52, 20, 17, 2006/12/23 23:59:40, 1, 400, 0, 2016-08-01 10:40:56.218, foo, 2016-08-01 10:40:56.218, foo, 0}
2016-08-01 10:40:56,218 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{53, 13, 16, 2007/12/28 12:13:10.355, 1, 600000, 1, 2016-08-01 10:40:56.218, foo, 2016-08-01 10:40:56.218, foo, 0}
2016-08-01 10:40:56,219 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{54, 16, 14, 2006/02/22 23:59:41, 2, 1700, 1, 2016-08-01 10:40:56.219, foo, 2016-08-01 10:40:56.219, foo, 0}
2016-08-01 10:40:56,221 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{55, 3, 3, 2007/07/21 12:13:00.356, 1, 1800, 1, 2016-08-01 10:40:56.221, foo, 2016-08-01 10:40:56.221, foo, 0}
2016-08-01 10:40:56,222 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{56, 2, 8, 2006/12/22 23:59:42, 1, 2000, 1, 2016-08-01 10:40:56.222, foo, 2016-08-01 10:40:56.222, foo, 0}
2016-08-01 10:40:56,222 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{57, 6, 19, 2007/02/01 02:13:00.357, 2, 1000, 0, 2016-08-01 10:40:56.222, foo, 2016-08-01 10:40:56.222, foo, 0}
2016-08-01 10:40:56,223 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{58, 2, 12, 2006/12/12 23:59:43, 1, 4000000, 1, 2016-08-01 10:40:56.223, foo, 2016-08-01 10:40:56.223, foo, 0}
2016-08-01 10:40:56,223 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{59, 4, 18, 2007/05/01 02:03:00.358, 1, 380, 1, 2016-08-01 10:40:56.223, foo, 2016-08-01 10:40:56.223, foo, 0}
2016-08-01 10:40:56,224 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{60, 4, 20, 2006/12/12 23:59:44, 2, 680, 0, 2016-08-01 10:40:56.224, foo, 2016-08-01 10:40:56.224, foo, 0}
2016-08-01 10:40:56,224 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{61, 1, 16, 2008-03-03 06:34:56.000, 3, 12000000, 1, 2016-08-01 10:40:56.224, foo, 2016-08-01 10:40:56.224, foo, 0}
2016-08-01 10:40:56,225 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{62, 1, 2, 2009-06-04 06:34:56.000, 12, 20000, 1, 2016-08-01 10:40:56.225, foo, 2016-08-01 10:40:56.225, foo, 0}
2016-08-01 10:40:56,226 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{63, 1, 6, 2010-09-26 06:34:56.000, 2, 2000, 1, 2016-08-01 10:40:56.226, foo, 2016-08-01 10:40:56.226, foo, 0}
2016-08-01 10:40:56,227 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{64, 1, 8, 2011-03-03 09:45:29.000, 1, 50, 1, 2016-08-01 10:40:56.227, foo, 2016-08-01 10:40:56.227, foo, 0}
2016-08-01 10:40:56,229 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{65, 1, 13, 2012-06-04 09:45:29.000, 1, 1000000, 1, 2016-08-01 10:40:56.228, foo, 2016-08-01 10:40:56.228, foo, 0}
2016-08-01 10:40:56,230 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{66, 1, 13, 2013-09-26 09:45:29.000, 1, 900000, 1, 2016-08-01 10:40:56.23, foo, 2016-08-01 10:40:56.23, foo, 0}
2016-08-01 10:40:56,231 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{67, 1, 5, 2014-03-03 21:02:12.000, 2, 3000, 1, 2016-08-01 10:40:56.231, foo, 2016-08-01 10:40:56.231, foo, 0}
2016-08-01 10:40:56,233 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{68, 1, 17, 2015-06-04 21:02:12.000, 30, 3000, 1, 2016-08-01 10:40:56.233, foo, 2016-08-01 10:40:56.233, foo, 0}
2016-08-01 10:40:56,234 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{69, 1, 17, 2016-09-26 21:02:12.000, 1, 1000, 1, 2016-08-01 10:40:56.234, foo, 2016-08-01 10:40:56.234, foo, 0}
2016-08-01 10:40:56,235 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE:{70, 1, 17, 2017-03-03 01:11:00.000, 1, 1200, 1, 2016-08-01 10:40:56.235, foo, 2016-08-01 10:40:56.235, foo, 0}
2016-08-01 10:40:56,264 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 70 rows are loaded to PURCHASE
2016-08-01 10:40:56,266 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{1, 1, 1800, 2006/12/25 23:59:59, BAK, 2016-08-01 10:40:56.265, foo, 2016-08-01 10:40:56.265, foo}
2016-08-01 10:40:56,267 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{2, 2, 1700, 2007/11/13 16:16:16, BAK, 2016-08-01 10:40:56.267, foo, 2016-08-01 10:40:56.267, foo}
2016-08-01 10:40:56,269 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{3, 3, 900, 2006/12/23 23:56:29, CRC, 2016-08-01 10:40:56.269, foo, 2016-08-01 10:40:56.269, foo}
2016-08-01 10:40:56,270 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{4, 3, 900, 2006/12/23 23:56:30, HAN, 2016-08-01 10:40:56.269, foo, 2016-08-01 10:40:56.269, foo}
2016-08-01 10:40:56,270 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{5, 4, 1700, 2007/12/01 02:13:00, HAN, 2016-08-01 10:40:56.27, foo, 2016-08-01 10:40:56.27, foo}
2016-08-01 10:40:56,271 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{6, 5, 800.20, 2008/04/04 23:12:59, HAN, 2016-08-01 10:40:56.271, foo, 2016-08-01 10:40:56.271, foo}
2016-08-01 10:40:56,272 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{7, 5, 1000.90, 2008/05/04 23:12:59, CRC, 2016-08-01 10:40:56.272, foo, 2016-08-01 10:40:56.272, foo}
2016-08-01 10:40:56,272 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{8, 6, 1000, 2002/01/01 16:32:01, CRC, 2016-08-01 10:40:56.272, foo, 2016-08-01 10:40:56.272, foo}
2016-08-01 10:40:56,273 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{9, 6, 400.8, 2002/01/01 16:32:01, CRC, 2016-08-01 10:40:56.273, foo, 2016-08-01 10:40:56.273, foo}
2016-08-01 10:40:56,274 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{10, 6, 599.2, 2002/01/01 16:32:01, HAN, 2016-08-01 10:40:56.274, foo, 2016-08-01 10:40:56.274, foo}
2016-08-01 10:40:56,275 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{11, 7, 300, 2006/01/28 23:59:59, CRC, 2016-08-01 10:40:56.275, foo, 2016-08-01 10:40:56.275, foo}
2016-08-01 10:40:56,276 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{12, 8, 535.5, 2007/11/09 16:23:00, BAK, 2016-08-01 10:40:56.276, foo, 2016-08-01 10:40:56.276, foo}
2016-08-01 10:40:56,277 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{13, 8, 999.5, 2014/11/09 16:23:05, BAK, 2016-08-01 10:40:56.277, foo, 2016-08-01 10:40:56.277, foo}
2016-08-01 10:40:56,278 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{14, 9, 1700, 2006/12/22 23:59:59, BAK, 2016-08-01 10:40:56.278, foo, 2016-08-01 10:40:56.278, foo}
2016-08-01 10:40:56,278 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{15, 11, 1799.2, 2014/11/09 16:23:01, CRC, 2016-08-01 10:40:56.278, foo, 2016-08-01 10:40:56.278, foo}
2016-08-01 10:40:56,279 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{16, 11, 0.8, 2014/11/09 16:23:01, HAN, 2016-08-01 10:40:56.279, foo, 2016-08-01 10:40:56.279, foo}
2016-08-01 10:40:56,279 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{17, 12, 1690, 2011/12/22 23:59:12, HAN, 2016-08-01 10:40:56.279, foo, 2016-08-01 10:40:56.279, foo}
2016-08-01 10:40:56,280 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{18, 12, 10, 2011/12/22 23:59:12, CRC, 2016-08-01 10:40:56.28, foo, 2016-08-01 10:40:56.28, foo}
2016-08-01 10:40:56,280 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{19, 13, 1800.7, 2007/11/01 02:13:00, CRC, 2016-08-01 10:40:56.28, foo, 2016-08-01 10:40:56.28, foo}
2016-08-01 10:40:56,281 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{20, 14, 1700, 2008/11/09 16:23:02, BAK, 2016-08-01 10:40:56.281, foo, 2016-08-01 10:40:56.281, foo}
2016-08-01 10:40:56,281 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{21, 15, 300, 2006/12/22 23:59:32, HAN, 2016-08-01 10:40:56.281, foo, 2016-08-01 10:40:56.281, foo}
2016-08-01 10:40:56,282 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{22, 15, 600, 2007/12/22 23:59:32, BAK, 2016-08-01 10:40:56.282, foo, 2016-08-01 10:40:56.282, foo}
2016-08-01 10:40:56,283 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{23, 15, 900, 2008/12/22 23:59:32, HAN, 2016-08-01 10:40:56.283, foo, 2016-08-01 10:40:56.283, foo}
2016-08-01 10:40:56,284 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{24, 16, 2000, 2012/11/01 02:13:00, BAK, 2016-08-01 10:40:56.284, foo, 2016-08-01 10:40:56.284, foo}
2016-08-01 10:40:56,285 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{25, 18, 1535, 2013/11/01 02:13:00, HAN, 2016-08-01 10:40:56.285, foo, 2016-08-01 10:40:56.285, foo}
2016-08-01 10:40:56,285 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{26, 19, 1700, 2007/11/01 02:13:00, HAN, 2016-08-01 10:40:56.285, foo, 2016-08-01 10:40:56.285, foo}
2016-08-01 10:40:56,285 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{27, 20, 5, 2006/12/22 23:59:35, HAN, 2016-08-01 10:40:56.285, foo, 2016-08-01 10:40:56.285, foo}
2016-08-01 10:40:56,286 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{28, 21, 399999, 2006/12/22 23:59:35, BAK, 2016-08-01 10:40:56.286, foo, 2016-08-01 10:40:56.286, foo}
2016-08-01 10:40:56,289 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{29, 22, 1800, 2007/11/01 02:13:00, BAK, 2016-08-01 10:40:56.289, foo, 2016-08-01 10:40:56.289, foo}
2016-08-01 10:40:56,289 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{30, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-08-01 10:40:56.289, foo, 2016-08-01 10:40:56.289, foo}
2016-08-01 10:40:56,290 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{31, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-08-01 10:40:56.29, foo, 2016-08-01 10:40:56.29, foo}
2016-08-01 10:40:56,290 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{32, 23, 1700, 2006/12/22 23:59:36, HAN, 2016-08-01 10:40:56.29, foo, 2016-08-01 10:40:56.29, foo}
2016-08-01 10:40:56,291 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{33, 24, 1000, 2012/09/11 12:13:00, BAK, 2016-08-01 10:40:56.291, foo, 2016-08-01 10:40:56.291, foo}
2016-08-01 10:40:56,291 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{34, 24, 800, 2015/09/11 12:13:00, BAK, 2016-08-01 10:40:56.291, foo, 2016-08-01 10:40:56.291, foo}
2016-08-01 10:40:56,292 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{35, 25, 1700, 2013/12/22 23:59:37, BAK, 2016-08-01 10:40:56.292, foo, 2016-08-01 10:40:56.292, foo}
2016-08-01 10:40:56,292 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{36, 26, 1800, 2005/12/21 12:13:00, BAK, 2016-08-01 10:40:56.292, foo, 2016-08-01 10:40:56.292, foo}
2016-08-01 10:40:56,293 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{37, 27, 2000, 2006/12/22 23:59:38, HAN, 2016-08-01 10:40:56.293, foo, 2016-08-01 10:40:56.293, foo}
2016-08-01 10:40:56,294 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{38, 28, 600, 2007/11/01 02:13:00, BAK, 2016-08-01 10:40:56.294, foo, 2016-08-01 10:40:56.294, foo}
2016-08-01 10:40:56,295 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{39, 29, 1535, 2006/12/22 23:59:39, BAK, 2016-08-01 10:40:56.295, foo, 2016-08-01 10:40:56.295, foo}
2016-08-01 10:40:56,295 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{40, 30, 100, 2010/09/01 02:13:00, HAN, 2016-08-01 10:40:56.295, foo, 2016-08-01 10:40:56.295, foo}
2016-08-01 10:40:56,297 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{41, 30, 200, 2011/10/31 02:13:00, CRC, 2016-08-01 10:40:56.296, foo, 2016-08-01 10:40:56.296, foo}
2016-08-01 10:40:56,298 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{42, 30, 300.75, 2012/11/01 02:13:00, CRC, 2016-08-01 10:40:56.298, foo, 2016-08-01 10:40:56.298, foo}
2016-08-01 10:40:56,299 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{43, 30, 400.25, 2013/12/01 02:13:00, HAN, 2016-08-01 10:40:56.299, foo, 2016-08-01 10:40:56.299, foo}
2016-08-01 10:40:56,301 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{44, 30, 300, 2014/09/01 02:13:00, HAN, 2016-08-01 10:40:56.301, foo, 2016-08-01 10:40:56.301, foo}
2016-08-01 10:40:56,303 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{45, 30, 700, 2014/10/01 02:13:00, HAN, 2016-08-01 10:40:56.302, foo, 2016-08-01 10:40:56.302, foo}
2016-08-01 10:40:56,303 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{46, 31, 1700.85, 2006/12/22 23:59:40, HAN, 2016-08-01 10:40:56.303, foo, 2016-08-01 10:40:56.303, foo}
2016-08-01 10:40:56,304 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{47, 32, 1800, 2009/12/28 12:13:10, HAN, 2016-08-01 10:40:56.304, foo, 2016-08-01 10:40:56.304, foo}
2016-08-01 10:40:56,304 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{48, 33, 1700, 2006/12/22 23:59:41, CRC, 2016-08-01 10:40:56.304, foo, 2016-08-01 10:40:56.304, foo}
2016-08-01 10:40:56,305 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{49, 34, 1800, 2007/05/21 12:13:00, BAK, 2016-08-01 10:40:56.305, foo, 2016-08-01 10:40:56.305, foo}
2016-08-01 10:40:56,305 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{50, 35, 2000, 2006/12/12 23:59:42, CRC, 2016-08-01 10:40:56.305, foo, 2016-08-01 10:40:56.305, foo}
2016-08-01 10:40:56,306 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{51, 36, 300.1, 2012/05/01 02:13:00, CRC, 2016-08-01 10:40:56.306, foo, 2016-08-01 10:40:56.306, foo}
2016-08-01 10:40:56,307 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{52, 36, 300.8, 2013/05/01 02:13:00, HAN, 2016-08-01 10:40:56.307, foo, 2016-08-01 10:40:56.307, foo}
2016-08-01 10:40:56,308 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{53, 36, 300.25, 2014/05/01 02:13:00, HAN, 2016-08-01 10:40:56.308, foo, 2016-08-01 10:40:56.308, foo}
2016-08-01 10:40:56,309 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{54, 37, 1535, 2006/12/12 23:59:43, HAN, 2016-08-01 10:40:56.309, foo, 2016-08-01 10:40:56.309, foo}
2016-08-01 10:40:56,310 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{55, 38, 1700, 2007/05/01 02:03:00, HAN, 2016-08-01 10:40:56.31, foo, 2016-08-01 10:40:56.31, foo}
2016-08-01 10:40:56,310 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{56, 40, 128, 2007/05/01 12:13:00, BAK, 2016-08-01 10:40:56.31, foo, 2016-08-01 10:40:56.31, foo}
2016-08-01 10:40:56,311 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{57, 40, 256, 2013/05/01 12:13:00, BAK, 2016-08-01 10:40:56.311, foo, 2016-08-01 10:40:56.311, foo}
2016-08-01 10:40:56,311 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{58, 40, 512, 2009/05/01 12:13:00, CRC, 2016-08-01 10:40:56.311, foo, 2016-08-01 10:40:56.311, foo}
2016-08-01 10:40:56,312 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{59, 41, 1700, 2007/11/01 02:13:00, HAN, 2016-08-01 10:40:56.312, foo, 2016-08-01 10:40:56.312, foo}
2016-08-01 10:40:56,312 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{60, 42, 30000000, 2014/03/22 21:59:40, HAN, 2016-08-01 10:40:56.312, foo, 2016-08-01 10:40:56.312, foo}
2016-08-01 10:40:56,312 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{61, 43, 1800, 2006/12/28 12:13:10, BAK, 2016-08-01 10:40:56.312, foo, 2016-08-01 10:40:56.312, foo}
2016-08-01 10:40:56,312 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{62, 44, 1700, 2006/12/22 23:59:41, BAK, 2016-08-01 10:40:56.312, foo, 2016-08-01 10:40:56.312, foo}
2016-08-01 10:40:56,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{63, 45, 1800, 2007/05/21 12:13:00, CRC, 2016-08-01 10:40:56.313, foo, 2016-08-01 10:40:56.313, foo}
2016-08-01 10:40:56,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{64, 46, 2000, 2010/12/12 23:59:42, BAK, 2016-08-01 10:40:56.313, foo, 2016-08-01 10:40:56.313, foo}
2016-08-01 10:40:56,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{65, 48, 90000, 2006/12/12 23:59:43, HAN, 2016-08-01 10:40:56.313, foo, 2016-08-01 10:40:56.313, foo}
2016-08-01 10:40:56,314 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{66, 48, 10000, 2006/12/12 23:59:43, BAK, 2016-08-01 10:40:56.314, foo, 2016-08-01 10:40:56.314, foo}
2016-08-01 10:40:56,314 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{67, 49, 1700.66, 2007/05/01 02:03:00, HAN, 2016-08-01 10:40:56.314, foo, 2016-08-01 10:40:56.314, foo}
2016-08-01 10:40:56,315 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{68, 51, 1700, 2007/11/21 02:13:00, BAK, 2016-08-01 10:40:56.315, foo, 2016-08-01 10:40:56.315, foo}
2016-08-01 10:40:56,315 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{69, 52, 100, 2006/12/23 23:59:40, BAK, 2016-08-01 10:40:56.315, foo, 2016-08-01 10:40:56.315, foo}
2016-08-01 10:40:56,315 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{70, 52, 40, 2007/12/23 23:59:40, HAN, 2016-08-01 10:40:56.315, foo, 2016-08-01 10:40:56.315, foo}
2016-08-01 10:40:56,316 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{71, 52, 40, 2008/12/23 23:59:40, HAN, 2016-08-01 10:40:56.316, foo, 2016-08-01 10:40:56.316, foo}
2016-08-01 10:40:56,316 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{72, 52, 40, 2009/12/23 23:59:40, HAN, 2016-08-01 10:40:56.316, foo, 2016-08-01 10:40:56.316, foo}
2016-08-01 10:40:56,316 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{73, 52, 40, 2010/12/23 23:59:40, BAK, 2016-08-01 10:40:56.316, foo, 2016-08-01 10:40:56.316, foo}
2016-08-01 10:40:56,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{74, 52, 40, 2011/12/23 23:59:40, CRC, 2016-08-01 10:40:56.317, foo, 2016-08-01 10:40:56.317, foo}
2016-08-01 10:40:56,320 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{75, 52, 40, 2012/12/23 23:59:40, BAK, 2016-08-01 10:40:56.32, foo, 2016-08-01 10:40:56.32, foo}
2016-08-01 10:40:56,321 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{76, 52, 40, 2013/12/23 23:59:40, HAN, 2016-08-01 10:40:56.321, foo, 2016-08-01 10:40:56.321, foo}
2016-08-01 10:40:56,322 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{77, 52, 40, 2014/12/23 23:59:40, HAN, 2016-08-01 10:40:56.321, foo, 2016-08-01 10:40:56.321, foo}
2016-08-01 10:40:56,322 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{78, 52, 40, 2015/12/23 23:59:40, HAN, 2016-08-01 10:40:56.322, foo, 2016-08-01 10:40:56.322, foo}
2016-08-01 10:40:56,323 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{79, 53, 600000, 2007/12/28 12:13:10, BAK, 2016-08-01 10:40:56.323, foo, 2016-08-01 10:40:56.323, foo}
2016-08-01 10:40:56,323 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{80, 54, 1700.42, 2008/02/22 23:59:41, CRC, 2016-08-01 10:40:56.323, foo, 2016-08-01 10:40:56.323, foo}
2016-08-01 10:40:56,324 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{81, 55, 1600, 2012/07/21 12:13:00, HAN, 2016-08-01 10:40:56.324, foo, 2016-08-01 10:40:56.324, foo}
2016-08-01 10:40:56,324 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{82, 55, 200, 2008/07/21 12:13:00, CRC, 2016-08-01 10:40:56.324, foo, 2016-08-01 10:40:56.324, foo}
2016-08-01 10:40:56,325 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{83, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-08-01 10:40:56.325, foo, 2016-08-01 10:40:56.325, foo}
2016-08-01 10:40:56,326 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{84, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-08-01 10:40:56.326, foo, 2016-08-01 10:40:56.326, foo}
2016-08-01 10:40:56,327 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{85, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-08-01 10:40:56.327, foo, 2016-08-01 10:40:56.327, foo}
2016-08-01 10:40:56,328 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{86, 56, 2000, 2009/12/22 23:59:42, HAN, 2016-08-01 10:40:56.328, foo, 2016-08-01 10:40:56.328, foo}
2016-08-01 10:40:56,329 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{87, 57, 999, 2014/02/01 02:13:00, HAN, 2016-08-01 10:40:56.329, foo, 2016-08-01 10:40:56.329, foo}
2016-08-01 10:40:56,329 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{88, 58, 4000000, 2006/12/12 23:59:43, HAN, 2016-08-01 10:40:56.329, foo, 2016-08-01 10:40:56.329, foo}
2016-08-01 10:40:56,330 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{89, 59, 380.77, 2013/05/01 02:03:00, CRC, 2016-08-01 10:40:56.33, foo, 2016-08-01 10:40:56.33, foo}
2016-08-01 10:40:56,331 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{90, 60, 675.88, 2006/12/12 23:59:44, BAK, 2016-08-01 10:40:56.331, foo, 2016-08-01 10:40:56.331, foo}
2016-08-01 10:40:56,332 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{91, 61, 12000000, 2008/03/03 06:34:56, HAN, 2016-08-01 10:40:56.332, foo, 2016-08-01 10:40:56.332, foo}
2016-08-01 10:40:56,334 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{92, 62, 20000, 2009/06/04 06:34:56, HAN, 2016-08-01 10:40:56.334, foo, 2016-08-01 10:40:56.334, foo}
2016-08-01 10:40:56,335 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{93, 63, 2000, 2010/09/26 06:34:56, HAN, 2016-08-01 10:40:56.335, foo, 2016-08-01 10:40:56.335, foo}
2016-08-01 10:40:56,336 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{94, 64, 50, 2011/03/03 09:45:29, BAK, 2016-08-01 10:40:56.335, foo, 2016-08-01 10:40:56.335, foo}
2016-08-01 10:40:56,336 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{95, 65, 1000000, 2012/06/04 09:45:29, BAK, 2016-08-01 10:40:56.336, foo, 2016-08-01 10:40:56.336, foo}
2016-08-01 10:40:56,336 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{96, 66, 900000, 2013/09/26 09:45:29, BAK, 2016-08-01 10:40:56.336, foo, 2016-08-01 10:40:56.336, foo}
2016-08-01 10:40:56,337 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{97, 67, 3000, 2014/03/03 21:02:12, CRC, 2016-08-01 10:40:56.337, foo, 2016-08-01 10:40:56.337, foo}
2016-08-01 10:40:56,337 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{98, 68, 3000, 2015/06/04 21:02:12, CRC, 2016-08-01 10:40:56.337, foo, 2016-08-01 10:40:56.337, foo}
2016-08-01 10:40:56,337 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{99, 69, 1000, 2016/09/26 21:02:12, CRC, 2016-08-01 10:40:56.337, foo, 2016-08-01 10:40:56.337, foo}
2016-08-01 10:40:56,338 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1081) - PURCHASE_PAYMENT:{100, 70, 1200, 2017/03/03 01:11:00, HAN, 2016-08-01 10:40:56.338, foo, 2016-08-01 10:40:56.338, foo}
2016-08-01 10:40:56,377 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1097) -  -> 100 rows are loaded to PURCHASE_PAYMENT
2016-08-01 10:40:56,378 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():378) - ...Checking implicit set of classification
2016-08-01 10:40:56,388 [main] INFO  (DfDatabaseProperties#createMainSchemaConnection():981) - ...Creating connection to main schema: {maihamadb.$$NoNameSchema$$ as main}
2016-08-01 10:40:56,395 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for MemberStatus classification
select MEMBER_STATUS_CODE as cls_code, MEMBER_STATUS_NAME as cls_name
     , MEMBER_STATUS_NAME as cls_alias, DESCRIPTION as cls_comment, DISPLAY_ORDER as cls_displayOrder
  from MEMBER_STATUS order by DISPLAY_ORDER
2016-08-01 10:40:56,401 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ServiceRank classification
select SERVICE_RANK_CODE as cls_code, SERVICE_RANK_NAME as cls_name
     , SERVICE_RANK_NAME as cls_alias, DESCRIPTION as cls_comment
  from SERVICE_RANK order by DISPLAY_ORDER
2016-08-01 10:40:56,403 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for Region classification
select REGION_ID as cls_code, REGION_NAME as cls_name
     , REGION_NAME as cls_alias, null as cls_comment
  from REGION order by REGION_ID
2016-08-01 10:40:56,405 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for WithdrawalReason classification
select WITHDRAWAL_REASON_CODE as cls_code, WITHDRAWAL_REASON_CODE as cls_name
     , WITHDRAWAL_REASON_CODE as cls_alias, WITHDRAWAL_REASON_TEXT as cls_comment
  from WITHDRAWAL_REASON order by DISPLAY_ORDER
2016-08-01 10:40:56,407 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductCategory classification
select loc.PRODUCT_CATEGORY_CODE as cls_code, loc.PRODUCT_CATEGORY_NAME as cls_name
     , loc.PRODUCT_CATEGORY_NAME as cls_alias, 'of ' || rel.PRODUCT_CATEGORY_NAME as cls_comment
  from PRODUCT_CATEGORY loc left outer join PRODUCT_CATEGORY rel on loc.PARENT_CATEGORY_CODE = rel.PRODUCT_CATEGORY_CODE
 order by loc.PARENT_CATEGORY_CODE is not null, loc.PARENT_CATEGORY_CODE
2016-08-01 10:40:56,409 [main] INFO  (DfClassificationProperties#setupTableClassification():673) - ...Selecting for ProductStatus classification
select PRODUCT_STATUS_CODE as cls_code, PRODUCT_STATUS_NAME as cls_name
     , PRODUCT_STATUS_NAME as cls_alias, null as cls_comment
  from PRODUCT_STATUS
2016-08-01 10:40:56,418 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-08-01 10:40:56,422 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct NEW_ACCEPTABLE_FLG from SERVICE_RANK where NEW_ACCEPTABLE_FLG not in (1, 0)
2016-08-01 10:40:56,424 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct MOBILE_LOGIN_FLG from MEMBER_LOGIN where MOBILE_LOGIN_FLG not in (1, 0)
2016-08-01 10:40:56,427 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_COMPLETE_FLG from PURCHASE where PAYMENT_COMPLETE_FLG not in (1, 0)
2016-08-01 10:40:56,429 [main] INFO  (DfImplicitClassificationChecker#check():69) - select distinct PAYMENT_METHOD_CODE from PURCHASE_PAYMENT where PAYMENT_METHOD_CODE not in ('HAN', 'BAK', 'CRC')
2016-08-01 10:40:56,436 [main] INFO  (DfTakeFinallyProcess#takeFinally():219) - 
2016-08-01 10:40:56,437 [main] INFO  (DfTakeFinallyProcess#takeFinally():220) - * * * * * * * **
2016-08-01 10:40:56,437 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - *              *
2016-08-01 10:40:56,437 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * Take Finally *
2016-08-01 10:40:56,437 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2016-08-01 10:40:56,438 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * * * * * * * **
2016-08-01 10:40:56,448 [main] INFO  (DfSqlFileFireMan#fire():64) - ...Firing: take-finally.sql
2016-08-01 10:40:56,450 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Member addresses should be only one at any time.
-- - - - - - - - - - -/
select adr.MEMBER_ADDRESS_ID, adr.MEMBER_ID
     , adr.VALID_BEGIN_DATE, adr.VALID_END_DATE
     , adr.ADDRESS
  from MEMBER_ADDRESS adr
 where exists (select subadr.MEMBER_ADDRESS_ID
                 from MEMBER_ADDRESS subadr
                where subadr.MEMBER_ID = adr.MEMBER_ID
                  and subadr.VALID_BEGIN_DATE > adr.VALID_BEGIN_DATE
                  -- 有効期間が一日だけ重複しているパターンも検出
                  and subadr.VALID_BEGIN_DATE <= adr.VALID_END_DATE
       )
2016-08-01 10:40:56,455 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 正式会員日時を持ってる仮会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'PRV'
   and mem.FORMALIZED_DATETIME is not NULL
2016-08-01 10:40:56,456 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- まだ生まれていない会員がいないこと
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.BIRTHDATE > now()
2016-08-01 10:40:56,457 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:assertListZero#
-- /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 退会会員が退会情報を持っていることをアサート
-- - - - - - - - - - -/
select *
  from MEMBER mem
 where mem.MEMBER_STATUS_CODE = 'WDL'
   and not exists (select wdl.MEMBER_ID
                     from MEMBER_WITHDRAWAL wdl
                    where wdl.MEMBER_ID = mem.MEMBER_ID
       )
2016-08-01 10:40:56,458 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=4 failure=0
2016-08-01 10:40:56,458 [main] INFO  (DfSqlFileFireMan#fire():89) - {Take Finally}: success=4 failure=0 (in 1 files)
2016-08-01 10:40:56,459 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2016-08-01 10:40:56,465 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s224ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 5.7.13)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/maihamadb
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = root
    props  = {user=root, password=Hy19920423}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=49 failure=0 (in 3 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql
  o replace-schema-50-procedure.sql

 {Load Data}: loaded-files=3
  (common)
  o 10-master.xls
  (ut)
  o 20-member.xls
  o 30-product.xls

 {Take Finally}: success=4 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
